<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="444px" preserveAspectRatio="none" style="width:1001px;height:444px;background:#FFFFFF;" version="1.1" viewBox="0 0 1001 444" width="1001px" zoomAndPan="magnify"><defs/><g><!--MD5=[ef898c7ffd8cfeca43621137229babdc]
class elki.math.linearalgebra.ConstrainedQuadraticProblemSolver--><a href="ConstrainedQuadraticProblemSolver.html" target="_top" title="ConstrainedQuadraticProblemSolver.html" xlink:actuate="onRequest" xlink:href="ConstrainedQuadraticProblemSolver.html" xlink:show="new" xlink:title="ConstrainedQuadraticProblemSolver.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver"><rect codeLine="6" fill="#F1F1F1" height="314.6875" id="elki.math.linearalgebra.ConstrainedQuadraticProblemSolver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="987" x="7" y="7"/><ellipse cx="371.75" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M374.7188,31.6094 Q374.1406,31.9063 373.5,32.0469 Q372.8594,32.2031 372.1563,32.2031 Q369.6563,32.2031 368.3281,30.5625 Q367.0156,28.9063 367.0156,25.7813 Q367.0156,22.6563 368.3281,21 Q369.6563,19.3438 372.1563,19.3438 Q372.8594,19.3438 373.5,19.5 Q374.1563,19.6563 374.7188,19.9531 L374.7188,22.6719 Q374.0938,22.0938 373.5,21.8281 Q372.9063,21.5469 372.2813,21.5469 Q370.9375,21.5469 370.25,22.625 Q369.5625,23.6875 369.5625,25.7813 Q369.5625,27.875 370.25,28.9531 Q370.9375,30.0156 372.2813,30.0156 Q372.9063,30.0156 373.5,29.75 Q374.0938,29.4688 374.7188,28.8906 L374.7188,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="392.25" y="24.9951">ConstrainedQuadraticProblemSolver</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="109" x="462.25" y="37.5791">elki.math.linearalgebra</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="993" y1="44.9375" y2="44.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="55.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="27" y="61.9326">cache: ProblemData[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="993" y1="69.2344" y2="69.2344"/><ellipse cx="18" cy="82.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="27" y="86.2295">ConstrainedQuadraticProblemSolver(int)</text><ellipse cx="18" cy="99.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="27" y="102.5264">solve(double[], double[], double, double[], double[], double[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="112.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="537" x="27" y="118.8232">findLimitedDimensionWithDerivative(double[], double[], double[], double[]): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="128.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="602" x="27" y="135.1201">calculateLinearDerivativeLimits(double[], double[], double[], double[], int, double[]): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="145.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="636" x="27" y="151.417">computeMaximumPossibleFuncValue(double[], double[], double, double[], double[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="161.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="961" x="27" y="167.7139">evaluateConstrainedQuadraticFunction(double[], double[], double, double[], double[], DimensionState[], boolean, double[], double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="177.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="749" x="27" y="184.0107">evaluateConstrainedQuadraticFunction1D(double, double, double, double, double, double[], double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="193.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="923" x="27" y="200.3076">startReducedProblem(double[], double[], double, double[], double[], DimensionState[], int, DimensionState, double[], double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="210.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="27" y="216.6045">expandNewSolution(double[], double[], int, double): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="27" y="232.9014">reduceSolution(double[], int): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="242.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="712" x="27" y="249.1982">reduceConstraints(double[], double[], double[], double[], DimensionState[], DimensionState[], int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="259.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="570" x="27" y="265.4951">reduceEquation(double[], double[], double, double[], double[], int, double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="275.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="419" x="27" y="281.792">findMaximumWithFunctionValue(double[], double[]): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="291.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="492" x="27" y="298.0889">evaluateQuadraticFormula(double[], double[], double, double[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="308.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="324" x="27" y="314.3857">contains(double[], double[], double[]): boolean</text></g></a><!--MD5=[8ff3762ef8dc19668a92d50f2aae968d]
class elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState--><a href="ConstrainedQuadraticProblemSolver.DimensionState.html" target="_top" title="ConstrainedQuadraticProblemSolver.DimensionState.html" xlink:actuate="onRequest" xlink:href="ConstrainedQuadraticProblemSolver.DimensionState.html" xlink:show="new" xlink:title="ConstrainedQuadraticProblemSolver.DimensionState.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState"><rect codeLine="24" fill="#F1F1F1" height="37.9375" id="elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="395" x="93" y="382"/><ellipse cx="108" cy="400.9688" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M112.1094,406.9688 L104.3906,406.9688 L104.3906,394.5781 L112.1094,394.5781 L112.1094,396.7344 L106.8438,396.7344 L106.8438,399.4063 L111.6094,399.4063 L111.6094,401.5625 L106.8438,401.5625 L106.8438,404.8125 L112.1094,404.8125 L112.1094,406.9688 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="122" y="399.9951">ConstrainedQuadraticProblemSolver.DimensionState</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="109" x="249" y="412.5791">elki.math.linearalgebra</text></g></a><!--MD5=[abec90d7900fd9ffd02772d58804ac21]
class elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData--><a href="ConstrainedQuadraticProblemSolver.ProblemData.html" target="_top" title="ConstrainedQuadraticProblemSolver.ProblemData.html" xlink:actuate="onRequest" xlink:href="ConstrainedQuadraticProblemSolver.ProblemData.html" xlink:show="new" xlink:title="ConstrainedQuadraticProblemSolver.ProblemData.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData"><rect codeLine="25" fill="#F1F1F1" height="37.9375" id="elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="374" x="523.5" y="382"/><ellipse cx="538.5" cy="400.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M541.4688,406.6094 Q540.8906,406.9063 540.25,407.0469 Q539.6094,407.2031 538.9063,407.2031 Q536.4063,407.2031 535.0781,405.5625 Q533.7656,403.9063 533.7656,400.7813 Q533.7656,397.6563 535.0781,396 Q536.4063,394.3438 538.9063,394.3438 Q539.6094,394.3438 540.25,394.5 Q540.9063,394.6563 541.4688,394.9531 L541.4688,397.6719 Q540.8438,397.0938 540.25,396.8281 Q539.6563,396.5469 539.0313,396.5469 Q537.6875,396.5469 537,397.625 Q536.3125,398.6875 536.3125,400.7813 Q536.3125,402.875 537,403.9531 Q537.6875,405.0156 539.0313,405.0156 Q539.6563,405.0156 540.25,404.75 Q540.8438,404.4688 541.4688,403.8906 L541.4688,406.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="342" x="552.5" y="399.9951">ConstrainedQuadraticProblemSolver.ProblemData</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="109" x="669" y="412.5791">elki.math.linearalgebra</text></g></a><!--MD5=[fb378127e33fe614d7dbb29708d870c2]
reverse link elki.math.linearalgebra.ConstrainedQuadraticProblemSolver to elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState--><g id="link_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState"><path codeLine="27" d="M350.02,333.53 C332.7,352.87 317.43,369.93 306.69,381.92 " fill="none" id="elki.math.linearalgebra.ConstrainedQuadraticProblemSolver-backto-elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="354.8001" cy="328.1969" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="349.4602" x2="360.14" y1="334.1539" y2="322.24"/><line style="stroke:#181818;stroke-width:1.0;" x1="348.8431" x2="360.757" y1="322.857" y2="333.5369"/></g><!--MD5=[1f1a55b207d9322a876eff8911e2342c]
reverse link elki.math.linearalgebra.ConstrainedQuadraticProblemSolver to elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData--><g id="link_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver_elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData"><path codeLine="28" d="M650.98,333.53 C668.3,352.87 683.57,369.93 694.31,381.92 " fill="none" id="elki.math.linearalgebra.ConstrainedQuadraticProblemSolver-backto-elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="646.1999" cy="328.1969" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="651.5398" x2="640.86" y1="334.1539" y2="322.24"/><line style="stroke:#181818;stroke-width:1.0;" x1="640.243" x2="652.1569" y1="333.5369" y2="322.857"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="400.5" y="424.9375"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="400.5" y="434.2197">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[1e63aa74d046928a9f96568046fb9354]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>ConstrainedQuadraticProblemSolver\n<size:10>elki.math.linearalgebra" as elki.math.linearalgebra.ConstrainedQuadraticProblemSolver [[ConstrainedQuadraticProblemSolver.html]] {
        -cache: ProblemData[]
        +ConstrainedQuadraticProblemSolver(int)
        +solve(double[], double[], double, double[], double[], double[]): double
        -findLimitedDimensionWithDerivative(double[], double[], double[], double[]): int
        -calculateLinearDerivativeLimits(double[], double[], double[], double[], int, double[]): void
        -computeMaximumPossibleFuncValue(double[], double[], double, double[], double[]): double
        -evaluateConstrainedQuadraticFunction(double[], double[], double, double[], double[], DimensionState[], boolean, double[], double): double
        -evaluateConstrainedQuadraticFunction1D(double, double, double, double, double, double[], double): double
        -startReducedProblem(double[], double[], double, double[], double[], DimensionState[], int, DimensionState, double[], double): double
        -expandNewSolution(double[], double[], int, double): void
        -reduceSolution(double[], int): double[]
        {static} -reduceConstraints(double[], double[], double[], double[], DimensionState[], DimensionState[], int): void
        {static} -reduceEquation(double[], double[], double, double[], double[], int, double): double
        -findMaximumWithFunctionValue(double[], double[]): double[]
        {static} -evaluateQuadraticFormula(double[], double[], double, double[]): double
        {static} -contains(double[], double[], double[]): boolean
    }
    enum "<size:14>ConstrainedQuadraticProblemSolver.DimensionState\n<size:10>elki.math.linearalgebra" as elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState [[ConstrainedQuadraticProblemSolver.DimensionState.html]]
    class "<size:14>ConstrainedQuadraticProblemSolver.ProblemData\n<size:10>elki.math.linearalgebra" as elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData [[ConstrainedQuadraticProblemSolver.ProblemData.html]]

    elki.math.linearalgebra.ConstrainedQuadraticProblemSolver +- - elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.DimensionState
    elki.math.linearalgebra.ConstrainedQuadraticProblemSolver +- - elki.math.linearalgebra.ConstrainedQuadraticProblemSolver.ProblemData

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>