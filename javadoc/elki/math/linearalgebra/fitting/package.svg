<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="787px" preserveAspectRatio="none" style="width:1048px;height:787px;background:#FFFFFF;" version="1.1" viewBox="0 0 1048 787" width="1048px" zoomAndPan="magnify"><defs/><g><!--MD5=[cbbbc429b4f1fb682c6f916f0ff6d011]
cluster elki.math.linearalgebra.fitting--><g id="cluster_elki.math.linearalgebra.fitting"><path d="M8.5,6 L239.5,6 A3.75,3.75 0 0 1 242,8.5 L249,28.2969 L1038.5,28.2969 A2.5,2.5 0 0 1 1041,30.7969 L1041,759.5 A2.5,2.5 0 0 1 1038.5,762 L8.5,762 A2.5,2.5 0 0 1 6,759.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="249" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="230" x="10" y="20.9951">elki.math.linearalgebra.fitting</text></g><!--MD5=[3b42388e7c33f01f42692d1cecc2788a]
class elki.math.linearalgebra.fitting.FittingFunction--><a href="FittingFunction.html" target="_top" title="FittingFunction.html" xlink:actuate="onRequest" xlink:href="FittingFunction.html" xlink:show="new" xlink:title="FittingFunction.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.fitting.FittingFunction"><rect codeLine="4" fill="#F1F1F1" height="64.2969" id="elki.math.linearalgebra.fitting.FittingFunction" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="340" x="519" y="557"/><ellipse cx="632.25" cy="573" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M628.1719,568.7656 L628.1719,566.6094 L635.5625,566.6094 L635.5625,568.7656 L633.0938,568.7656 L633.0938,576.8438 L635.5625,576.8438 L635.5625,579 L628.1719,579 L628.1719,576.8438 L630.6406,576.8438 L630.6406,568.7656 L628.1719,568.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="652.75" y="577.8467">FittingFunction</text><line style="stroke:#181818;stroke-width:0.5;" x1="520" x2="858" y1="589" y2="589"/><line style="stroke:#181818;stroke-width:0.5;" x1="520" x2="858" y1="597" y2="597"/><ellipse cx="530" cy="610.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="314" x="539" y="613.9951">eval(double, double[]): FittingFunctionResult</text></g></a><!--MD5=[f0f726315fe216d52838d27d434477e5]
class elki.math.linearalgebra.fitting.LevenbergMarquardtMethod--><a href="LevenbergMarquardtMethod.html" target="_top" title="LevenbergMarquardtMethod.html" xlink:actuate="onRequest" xlink:href="LevenbergMarquardtMethod.html" xlink:show="new" xlink:title="LevenbergMarquardtMethod.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.fitting.LevenbergMarquardtMethod"><rect codeLine="8" fill="#F1F1F1" height="439.125" id="elki.math.linearalgebra.fitting.LevenbergMarquardtMethod" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="672" x="353" y="41"/><ellipse cx="586.75" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M589.7188,62.6406 Q589.1406,62.9375 588.5,63.0781 Q587.8594,63.2344 587.1563,63.2344 Q584.6563,63.2344 583.3281,61.5938 Q582.0156,59.9375 582.0156,56.8125 Q582.0156,53.6875 583.3281,52.0313 Q584.6563,50.375 587.1563,50.375 Q587.8594,50.375 588.5,50.5313 Q589.1563,50.6875 589.7188,50.9844 L589.7188,53.7031 Q589.0938,53.125 588.5,52.8594 Q587.9063,52.5781 587.2813,52.5781 Q585.9375,52.5781 585.25,53.6563 Q584.5625,54.7188 584.5625,56.8125 Q584.5625,58.9063 585.25,59.9844 Q585.9375,61.0469 587.2813,61.0469 Q587.9063,61.0469 588.5,60.7813 Q589.0938,60.5 589.7188,59.9219 L589.7188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="607.25" y="61.8467">LevenbergMarquardtMethod</text><line style="stroke:#181818;stroke-width:0.5;" x1="354" x2="1024" y1="73" y2="73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="83.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="373" y="89.9951">x: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="99.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="373" y="106.292">y: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="116.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="373" y="122.5889">s: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="132.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="373" y="138.8857">numparams: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="148.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="373" y="155.1826">params: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="165.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="373" y="171.4795">chisq: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="181.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="373" y="187.7764">numfit: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="197.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="373" y="204.0732">dofit: boolean[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="214.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="373" y="220.3701">covmat: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="230.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="373" y="236.667">alpha: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="246.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="373" y="252.9639">lambda: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="262.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="373" y="269.2607">paramstry: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="279.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="373" y="285.5576">beta: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="295.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="373" y="301.8545">deltaparams: double[]</text><ellipse cx="364" cy="314.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="373" y="318.1514">maxruns: int</text><ellipse cx="364" cy="331.1016" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="373" y="334.4482">maxsmall: int</text><ellipse cx="364" cy="347.3984" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="373" y="350.7451">small: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="354" x2="1024" y1="358.0469" y2="358.0469"/><ellipse cx="364" cy="371.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="646" x="373" y="375.042">LevenbergMarquardtMethod(FittingFunction, double[], boolean[], double[], double[], double[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="361" y="384.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="373" y="391.3389">simulateParameters(double[]): double</text><ellipse cx="364" cy="404.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="373" y="407.6357">iterate(): void</text><ellipse cx="364" cy="420.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="373" y="423.9326">getCovmat(): double[]</text><ellipse cx="364" cy="436.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="373" y="440.2295">getParams(): double[]</text><ellipse cx="364" cy="453.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="373" y="456.5264">getChiSq(): double</text><ellipse cx="364" cy="469.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="373" y="472.8232">run(): void</text></g></a><!--MD5=[a7a2adf9ad8c9488df131102ce56473b]
class elki.math.linearalgebra.fitting.FittingFunctionResult--><a href="FittingFunctionResult.html" target="_top" title="FittingFunctionResult.html" xlink:actuate="onRequest" xlink:href="FittingFunctionResult.html" xlink:show="new" xlink:title="FittingFunctionResult.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.fitting.FittingFunctionResult"><rect codeLine="35" fill="#F1F1F1" height="96.8906" id="elki.math.linearalgebra.fitting.FittingFunctionResult" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="296" x="22" y="212"/><ellipse cx="92.75" cy="228" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M95.7188,233.6406 Q95.1406,233.9375 94.5,234.0781 Q93.8594,234.2344 93.1563,234.2344 Q90.6563,234.2344 89.3281,232.5938 Q88.0156,230.9375 88.0156,227.8125 Q88.0156,224.6875 89.3281,223.0313 Q90.6563,221.375 93.1563,221.375 Q93.8594,221.375 94.5,221.5313 Q95.1563,221.6875 95.7188,221.9844 L95.7188,224.7031 Q95.0938,224.125 94.5,223.8594 Q93.9063,223.5781 93.2813,223.5781 Q91.9375,223.5781 91.25,224.6563 Q90.5625,225.7188 90.5625,227.8125 Q90.5625,229.9063 91.25,230.9844 Q91.9375,232.0469 93.2813,232.0469 Q93.9063,232.0469 94.5,231.7813 Q95.0938,231.5 95.7188,230.9219 L95.7188,233.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="113.25" y="232.8467">FittingFunctionResult</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="317" y1="244" y2="244"/><ellipse cx="33" cy="257.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="42" y="260.9951">y: double</text><ellipse cx="33" cy="273.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="42" y="277.292">gradients: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="317" y1="284.5938" y2="284.5938"/><ellipse cx="33" cy="298.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="42" y="301.5889">FittingFunctionResult(double, double[])</text></g></a><!--MD5=[1d403e715ac786e5173dce31304c27e5]
class elki.math.linearalgebra.fitting.GaussianFittingFunction--><a href="GaussianFittingFunction.html" target="_top" title="GaussianFittingFunction.html" xlink:actuate="onRequest" xlink:href="GaussianFittingFunction.html" xlink:show="new" xlink:title="GaussianFittingFunction.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.fitting.GaussianFittingFunction"><rect codeLine="41" fill="#F1F1F1" height="64.2969" id="elki.math.linearalgebra.fitting.GaussianFittingFunction" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="332" x="523" y="682"/><ellipse cx="601.75" cy="698" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M604.7188,703.6406 Q604.1406,703.9375 603.5,704.0781 Q602.8594,704.2344 602.1563,704.2344 Q599.6563,704.2344 598.3281,702.5938 Q597.0156,700.9375 597.0156,697.8125 Q597.0156,694.6875 598.3281,693.0313 Q599.6563,691.375 602.1563,691.375 Q602.8594,691.375 603.5,691.5313 Q604.1563,691.6875 604.7188,691.9844 L604.7188,694.7031 Q604.0938,694.125 603.5,693.8594 Q602.9063,693.5781 602.2813,693.5781 Q600.9375,693.5781 600.25,694.6563 Q599.5625,695.7188 599.5625,697.8125 Q599.5625,699.9063 600.25,700.9844 Q600.9375,702.0469 602.2813,702.0469 Q602.9063,702.0469 603.5,701.7813 Q604.0938,701.5 604.7188,700.9219 L604.7188,703.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="622.25" y="702.8467">GaussianFittingFunction</text><line style="stroke:#181818;stroke-width:0.5;" x1="524" x2="854" y1="714" y2="714"/><line style="stroke:#181818;stroke-width:0.5;" x1="524" x2="854" y1="722" y2="722"/><ellipse cx="534" cy="735.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="543" y="738.9951">eval(double, double[]): FittingFunctionResult</text></g></a><!--MD5=[f11c16bbc90da59c57e3045928dd9c88]
link elki.math.linearalgebra.fitting.LevenbergMarquardtMethod to elki.math.linearalgebra.fitting.FittingFunction--><g id="link_elki.math.linearalgebra.fitting.LevenbergMarquardtMethod_elki.math.linearalgebra.fitting.FittingFunction"><path codeLine="45" d="M689,480.19 C689,507.58 689,532.61 689,551.65 " fill="none" id="elki.math.linearalgebra.fitting.LevenbergMarquardtMethod-to-elki.math.linearalgebra.fitting.FittingFunction" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="689,556.85,693,547.85,689,551.85,685,547.85,689,556.85" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="690" y="523.0669">func</text></g><!--MD5=[764d4bbc9025e7493a05abdade61095e]
reverse link elki.math.linearalgebra.fitting.FittingFunction to elki.math.linearalgebra.fitting.GaussianFittingFunction--><g id="link_elki.math.linearalgebra.fitting.FittingFunction_elki.math.linearalgebra.fitting.GaussianFittingFunction"><path codeLine="46" d="M689,641.14 C689,655.01 689,669.59 689,681.97 " fill="none" id="elki.math.linearalgebra.fitting.FittingFunction-backto-elki.math.linearalgebra.fitting.GaussianFittingFunction" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="682,641.04,689,621.04,696,641.04,682,641.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[64a32ed5fae99445aebbd44173242d34]
link elki.math.linearalgebra.fitting.GaussianFittingFunction to elki.math.linearalgebra.fitting.GaussianFittingFunction--><g id="link_elki.math.linearalgebra.fitting.GaussianFittingFunction_elki.math.linearalgebra.fitting.GaussianFittingFunction"><path codeLine="47" d="M855.36,703.88 C876.25,705.66 890,709.04 890,714 C890,718.54 878.51,721.75 860.58,723.63 " fill="none" id="elki.math.linearalgebra.fitting.GaussianFittingFunction-to-elki.math.linearalgebra.fitting.GaussianFittingFunction" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="855.36,724.12,864.6974,727.2525,860.3377,723.648,863.9422,719.2882,855.36,724.12" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="44" x="896" y="718.5669">STATIC</text></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="424" y="768"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="424" y="777.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[1ab2eaa55c853df34a086da2c4f4017e]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.math.linearalgebra.fitting {

        interface FittingFunction [[FittingFunction.html]] {
            {abstract} +eval(double, double[]): FittingFunctionResult
        }

        class LevenbergMarquardtMethod [[LevenbergMarquardtMethod.html]] {
            -x: double[]
            -y: double[]
            -s: double[]
            -numparams: int
            -params: double[]
            -chisq: double
            -numfit: int
            -dofit: boolean[]
            -covmat: double[]
            -alpha: double[]
            -lambda: double
            -paramstry: double[]
            -beta: double[]
            -deltaparams: double[]
            +maxruns: int
            +maxsmall: int
            +small: double
            +LevenbergMarquardtMethod(FittingFunction, double[], boolean[], double[], double[], double[])
            -simulateParameters(double[]): double
            +iterate(): void
            +getCovmat(): double[]
            +getParams(): double[]
            +getChiSq(): double
            +run(): void
        }

        class FittingFunctionResult [[FittingFunctionResult.html]] {
            +y: double
            +gradients: double[]
            +FittingFunctionResult(double, double[])
        }

        class GaussianFittingFunction [[GaussianFittingFunction.html]] {
            +eval(double, double[]): FittingFunctionResult
        }

        LevenbergMarquardtMethod - -> FittingFunction: func
        FittingFunction <|.. GaussianFittingFunction
        GaussianFittingFunction - -> GaussianFittingFunction: STATIC
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>