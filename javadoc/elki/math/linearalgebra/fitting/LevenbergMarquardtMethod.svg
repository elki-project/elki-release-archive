<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="495px" preserveAspectRatio="none" style="width:693px;height:495px;background:#FFFFFF;" version="1.1" viewBox="0 0 693 495" width="693px" zoomAndPan="magnify"><defs/><g><!--MD5=[f0f726315fe216d52838d27d434477e5]
class elki.math.linearalgebra.fitting.LevenbergMarquardtMethod--><a href="LevenbergMarquardtMethod.html" target="_top" title="LevenbergMarquardtMethod.html" xlink:actuate="onRequest" xlink:href="LevenbergMarquardtMethod.html" xlink:show="new" xlink:title="LevenbergMarquardtMethod.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.fitting.LevenbergMarquardtMethod"><rect codeLine="6" fill="#F1F1F1" height="461.3594" id="elki.math.linearalgebra.fitting.LevenbergMarquardtMethod" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="672" x="7" y="7"/><ellipse cx="240.75" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M243.7188,31.6094 Q243.1406,31.9063 242.5,32.0469 Q241.8594,32.2031 241.1563,32.2031 Q238.6563,32.2031 237.3281,30.5625 Q236.0156,28.9063 236.0156,25.7813 Q236.0156,22.6563 237.3281,21 Q238.6563,19.3438 241.1563,19.3438 Q241.8594,19.3438 242.5,19.5 Q243.1563,19.6563 243.7188,19.9531 L243.7188,22.6719 Q243.0938,22.0938 242.5,21.8281 Q241.9063,21.5469 241.2813,21.5469 Q239.9375,21.5469 239.25,22.625 Q238.5625,23.6875 238.5625,25.7813 Q238.5625,27.875 239.25,28.9531 Q239.9375,30.0156 241.2813,30.0156 Q241.9063,30.0156 242.5,29.75 Q243.0938,29.4688 243.7188,28.8906 L243.7188,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="261.25" y="24.9951">LevenbergMarquardtMethod</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="140" x="289.25" y="37.5791">elki.math.linearalgebra.fitting</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="678" y1="44.9375" y2="44.9375"/><ellipse cx="18" cy="58.5859" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="27" y="61.9326">func: FittingFunction</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="71.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="27" y="78.2295">x: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="88.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="27" y="94.5264">y: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="104.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="27" y="110.8232">s: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="120.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="27" y="127.1201">numparams: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="137.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="27" y="143.417">params: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="153.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="27" y="159.7139">chisq: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="169.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="27" y="176.0107">numfit: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="185.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="27" y="192.3076">dofit: boolean[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="202.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="27" y="208.6045">covmat: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="218.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="27" y="224.9014">alpha: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="234.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="241.1982">lambda: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="251.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="27" y="257.4951">paramstry: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="267.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="27" y="273.792">beta: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="283.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="27" y="290.0889">deltaparams: double[]</text><ellipse cx="18" cy="303.0391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="27" y="306.3857">maxruns: int</text><ellipse cx="18" cy="319.3359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="27" y="322.6826">maxsmall: int</text><ellipse cx="18" cy="335.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="27" y="338.9795">small: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="678" y1="346.2813" y2="346.2813"/><ellipse cx="18" cy="359.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="646" x="27" y="363.2764">LevenbergMarquardtMethod(FittingFunction, double[], boolean[], double[], double[], double[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="373.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="27" y="379.5732">simulateParameters(double[]): double</text><ellipse cx="18" cy="392.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="27" y="395.8701">iterate(): void</text><ellipse cx="18" cy="408.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="27" y="412.167">getCovmat(): double[]</text><ellipse cx="18" cy="425.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="27" y="428.4639">getParams(): double[]</text><ellipse cx="18" cy="441.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="27" y="444.7607">getChiSq(): double</text><ellipse cx="18" cy="457.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="27" y="461.0576">run(): void</text></g></a><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="249.5" y="475.3594"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="249.5" y="484.6416">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[c303c87e9a322eaa0be6fc8e7a5cf82c]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>LevenbergMarquardtMethod\n<size:10>elki.math.linearalgebra.fitting" as elki.math.linearalgebra.fitting.LevenbergMarquardtMethod [[LevenbergMarquardtMethod.html]] {
        +func: FittingFunction
        -x: double[]
        -y: double[]
        -s: double[]
        -numparams: int
        -params: double[]
        -chisq: double
        -numfit: int
        -dofit: boolean[]
        -covmat: double[]
        -alpha: double[]
        -lambda: double
        -paramstry: double[]
        -beta: double[]
        -deltaparams: double[]
        +maxruns: int
        +maxsmall: int
        +small: double
        +LevenbergMarquardtMethod(FittingFunction, double[], boolean[], double[], double[], double[])
        -simulateParameters(double[]): double
        +iterate(): void
        +getCovmat(): double[]
        +getParams(): double[]
        +getChiSq(): double
        +run(): void
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>