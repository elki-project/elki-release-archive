<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="397px" preserveAspectRatio="none" style="width:376px;height:397px;background:#FFFFFF;" version="1.1" viewBox="0 0 376 397" width="376px" zoomAndPan="magnify"><defs/><g><!--MD5=[6a4f5003096291d71fa8f9d4bba3926c]
class elki.math.linearalgebra.SingularValueDecomposition--><a href="SingularValueDecomposition.html" target="_top" title="SingularValueDecomposition.html" xlink:actuate="onRequest" xlink:href="SingularValueDecomposition.html" xlink:show="new" xlink:title="SingularValueDecomposition.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.SingularValueDecomposition"><rect codeLine="6" fill="#F1F1F1" height="363.5781" id="elki.math.linearalgebra.SingularValueDecomposition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="355" x="7" y="7"/><ellipse cx="81.25" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M84.2188,31.6094 Q83.6406,31.9063 83,32.0469 Q82.3594,32.2031 81.6563,32.2031 Q79.1563,32.2031 77.8281,30.5625 Q76.5156,28.9063 76.5156,25.7813 Q76.5156,22.6563 77.8281,21 Q79.1563,19.3438 81.6563,19.3438 Q82.3594,19.3438 83,19.5 Q83.6563,19.6563 84.2188,19.9531 L84.2188,22.6719 Q83.5938,22.0938 83,21.8281 Q82.4063,21.5469 81.7813,21.5469 Q80.4375,21.5469 79.75,22.625 Q79.0625,23.6875 79.0625,25.7813 Q79.0625,27.875 79.75,28.9531 Q80.4375,30.0156 81.7813,30.0156 Q82.4063,30.0156 83,29.75 Q83.5938,29.4688 84.2188,28.8906 L84.2188,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="101.75" y="24.9951">SingularValueDecomposition</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="109" x="146.25" y="37.5791">elki.math.linearalgebra</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="361" y1="44.9375" y2="44.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="55.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="27" y="61.9326">U: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="71.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="27" y="78.2295">V: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="88.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="27" y="94.5264">s: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="104.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="27" y="110.8232">m: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="120.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="27" y="127.1201">n: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="361" y1="134.4219" y2="134.4219"/><ellipse cx="18" cy="148.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="27" y="151.417">SingularValueDecomposition(double[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="161.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="27" y="167.7139">generateU(int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="177.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="27" y="184.0107">generateV(int, double[], int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="193.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="27" y="200.3076">deflate(double[], int, int, boolean): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="210.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="27" y="216.6045">split(double[], int, int, boolean): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="27" y="232.9014">qrStep(double[], int, int, boolean, boolean): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="242.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="27" y="249.1982">convergence(int, int, boolean, boolean): int</text><ellipse cx="18" cy="262.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="27" y="265.4951">getU(): double[]</text><ellipse cx="18" cy="278.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="27" y="281.792">getV(): double[]</text><ellipse cx="18" cy="294.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="27" y="298.0889">getSingularValues(): double[]</text><ellipse cx="18" cy="311.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="27" y="314.3857">getS(): double[]</text><ellipse cx="18" cy="327.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="27" y="330.6826">norm2(): double</text><ellipse cx="18" cy="343.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="27" y="346.9795">cond(): double</text><ellipse cx="18" cy="359.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="27" y="363.2764">rank(): int</text></g></a><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="91" y="377.5781"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="91" y="386.8604">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[9cf89a185f6c1218bdac59ff7fecaaaa]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>SingularValueDecomposition\n<size:10>elki.math.linearalgebra" as elki.math.linearalgebra.SingularValueDecomposition [[SingularValueDecomposition.html]] {
        -U: double[]
        -V: double[]
        -s: double[]
        -m: int
        -n: int
        +SingularValueDecomposition(double[])
        -generateU(int, int): void
        -generateV(int, double[], int): void
        -deflate(double[], int, int, boolean): void
        -split(double[], int, int, boolean): void
        -qrStep(double[], int, int, boolean, boolean): void
        -convergence(int, int, boolean, boolean): int
        +getU(): double[]
        +getV(): double[]
        +getSingularValues(): double[]
        +getS(): double[]
        +norm2(): double
        +cond(): double
        +rank(): int
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>