<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="462px" preserveAspectRatio="none" style="width:450px;height:462px;background:#FFFFFF;" version="1.1" viewBox="0 0 450 462" width="450px" zoomAndPan="magnify"><defs/><g><!--MD5=[93cb49c102d2082378127f248552ff1f]
class elki.math.linearalgebra.AffineTransformation--><a href="AffineTransformation.html" target="_top" title="AffineTransformation.html" xlink:actuate="onRequest" xlink:href="AffineTransformation.html" xlink:show="new" xlink:title="AffineTransformation.html" xlink:type="simple"><g id="elem_elki.math.linearalgebra.AffineTransformation"><rect codeLine="6" fill="#F1F1F1" height="428.7656" id="elki.math.linearalgebra.AffineTransformation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="429" x="7" y="7"/><ellipse cx="146.25" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M149.2188,31.6094 Q148.6406,31.9063 148,32.0469 Q147.3594,32.2031 146.6563,32.2031 Q144.1563,32.2031 142.8281,30.5625 Q141.5156,28.9063 141.5156,25.7813 Q141.5156,22.6563 142.8281,21 Q144.1563,19.3438 146.6563,19.3438 Q147.3594,19.3438 148,19.5 Q148.6563,19.6563 149.2188,19.9531 L149.2188,22.6719 Q148.5938,22.0938 148,21.8281 Q147.4063,21.5469 146.7813,21.5469 Q145.4375,21.5469 144.75,22.625 Q144.0625,23.6875 144.0625,25.7813 Q144.0625,27.875 144.75,28.9531 Q145.4375,30.0156 146.7813,30.0156 Q147.4063,30.0156 148,29.75 Q148.5938,29.4688 149.2188,28.8906 L149.2188,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="166.75" y="24.9951">AffineTransformation</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="109" x="183.25" y="37.5791">elki.math.linearalgebra</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="435" y1="44.9375" y2="44.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="55.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="27" y="61.9326">dim: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="71.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="27" y="78.2295">trans: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="88.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="27" y="94.5264">inv: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="435" y1="101.8281" y2="101.8281"/><ellipse cx="18" cy="115.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="27" y="118.8232">AffineTransformation(int)</text><ellipse cx="18" cy="131.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="27" y="135.1201">AffineTransformation(int, double[], double[])</text><ellipse cx="18" cy="148.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="403" x="27" y="151.417">reorderAxesTransformation(int, int...): AffineTransformation</text><ellipse cx="18" cy="164.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="27" y="167.7139">getDimensionality(): int</text><ellipse cx="18" cy="180.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="27" y="184.0107">addTranslation(double[]): void</text><ellipse cx="18" cy="196.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="27" y="200.3076">addMatrix(double[]): void</text><ellipse cx="18" cy="213.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="27" y="216.6045">addRotation(int, int, double): void</text><ellipse cx="18" cy="229.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="27" y="232.9014">addAxisReflection(int): void</text><ellipse cx="18" cy="245.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="27" y="249.1982">addScaling(double): void</text><ellipse cx="18" cy="262.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="27" y="265.4951">getTransformation(): double[]</text><ellipse cx="18" cy="278.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="27" y="281.792">getInverse(): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="291.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="27" y="298.0889">updateInverse(): void</text><ellipse cx="18" cy="311.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="27" y="314.3857">homogeneVector(double[]): double[]</text><ellipse cx="18" cy="327.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="27" y="330.6826">homogeneRelativeVector(double[]): double[]</text><ellipse cx="18" cy="343.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="27" y="346.9795">unhomogeneVector(double[]): double[]</text><ellipse cx="18" cy="359.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="27" y="363.2764">unhomogeneRelativeVector(double[]): double[]</text><ellipse cx="18" cy="376.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="27" y="379.5732">apply(double[]): double[]</text><ellipse cx="18" cy="392.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="27" y="395.8701">applyInverse(double[]): double[]</text><ellipse cx="18" cy="408.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="27" y="412.167">applyRelative(double[]): double[]</text><ellipse cx="18" cy="425.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="27" y="428.4639">applyRelativeInverse(double[]): double[]</text></g></a><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="128" y="442.7656"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="128" y="452.0479">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[c334cb1be2452a218a875d5e66f2ce4c]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>AffineTransformation\n<size:10>elki.math.linearalgebra" as elki.math.linearalgebra.AffineTransformation [[AffineTransformation.html]] {
        -dim: int
        -trans: double[]
        -inv: double[]
        +AffineTransformation(int)
        +AffineTransformation(int, double[], double[])
        {static} +reorderAxesTransformation(int, int...): AffineTransformation
        +getDimensionality(): int
        +addTranslation(double[]): void
        +addMatrix(double[]): void
        +addRotation(int, int, double): void
        +addAxisReflection(int): void
        +addScaling(double): void
        +getTransformation(): double[]
        +getInverse(): double[]
        -updateInverse(): void
        +homogeneVector(double[]): double[]
        +homogeneRelativeVector(double[]): double[]
        +unhomogeneVector(double[]): double[]
        +unhomogeneRelativeVector(double[]): double[]
        +apply(double[]): double[]
        +applyInverse(double[]): double[]
        +applyRelative(double[]): double[]
        +applyRelativeInverse(double[]): double[]
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>