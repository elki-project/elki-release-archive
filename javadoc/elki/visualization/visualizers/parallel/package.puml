@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.visualization.visualizers.parallel {

        abstract class AbstractParallelVisualization<NV> [[AbstractParallelVisualization.html]] {
            #proj: ProjectionParallel
            #relation: Relation<NV>
            ~margins: double[]
            #axsep: double
            ~size: double[]
            +AbstractParallelVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            +setupCanvas(SVGPlot, ProjectionParallel, double, double): Element
            #getSizeX(): double
            #getSizeY(): double
            #getMarginLeft(): double
            #getMarginTop(): double
            #getAxisSep(): double
            -recalcAxisPositions(): void
            #getVisibleAxisX(double): double
            +visualizationChanged(VisualizationItem): void
        }

        class ParallelAxisVisualization [[ParallelAxisVisualization.html]] {
            {static} -LOG: Logging
            {static} -NAME: String
            +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +processNewResult(VisualizerContext, Object): void
            +allowThumbnails(VisualizationTask): boolean
        }

        class elki.visualization.visualizers.parallel.ParallelAxisVisualization.Instance [[ParallelAxisVisualization.Instance.html]] {
            {static} +AXIS_LABEL: String
            {static} +INVERTEDAXIS: String
            +Instance(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            -addCSSClasses(SVGPlot): void
            -addEventListener(Element, int): void
        }

        class AxisReorderVisualization [[AxisReorderVisualization.html]] {
            {static} -NAME: String
            +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +processNewResult(VisualizerContext, Object): void
        }

        class elki.visualization.visualizers.parallel.AxisReorderVisualization.Instance [[AxisReorderVisualization.Instance.html]] {
            {static} +SELECTDIMENSIONORDER: String
            {static} +SDO_BUTTON: String
            {static} +SDO_BORDER: String
            {static} +SDO_ARROW: String
            -selecteddim: int
            +Instance(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            -addEventListener(Element, int, Direction): void
            -addCSSClasses(SVGPlot): void
        }

        class BoundingBoxVisualization [[BoundingBoxVisualization.html]] {
            {static} +NAME: String
            +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +processNewResult(VisualizerContext, Object): void
        }

        class elki.visualization.visualizers.parallel.BoundingBoxVisualization.Instance [[BoundingBoxVisualization.Instance.html]] {
            {static} +DATALINE: String
            -sample: SamplingResult
            +Instance(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            -drawLine(DBIDRef): Element
        }

        class AxisVisibilityVisualization [[AxisVisibilityVisualization.html]] {
            {static} -NAME: String
            +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +processNewResult(VisualizerContext, Object): void
        }

        class elki.visualization.visualizers.parallel.AxisVisibilityVisualization.Instance [[AxisVisibilityVisualization.Instance.html]] {
            {static} +SELECTAXISVISIBILITY: String
            {static} +SAV_BUTTON: String
            {static} +SAV_BORDER: String
            {static} +SAV_CROSS: String
            ~controlsize: double
            ~buttonsize: double
            ~ypos: double
            +Instance(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            #makeButtonForVisible(int, int): void
            -makeButtonsForHidden(int, int, int, int): void
            -addEventListener(Element, int): void
            -addCSSClasses(SVGPlot): void
        }

        class LineVisualization [[LineVisualization.html]] {
            {static} +NAME: String
            +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +processNewResult(VisualizerContext, Object): void
        }

        class elki.visualization.visualizers.parallel.LineVisualization.Instance [[LineVisualization.Instance.html]] {
            {static} +DATALINE: String
            -sample: SamplingResult
            +Instance(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection)
            +fullRedraw(): void
            -drawLine(DBIDRef): Element
        }

        elki.visualization.visualizers.AbstractVisualization <|-- AbstractParallelVisualization
        elki.visualization.visualizers.VisFactory <|.. ParallelAxisVisualization
        AbstractParallelVisualization <|-- elki.visualization.visualizers.parallel.ParallelAxisVisualization.Instance
        ParallelAxisVisualization +-- elki.visualization.visualizers.parallel.ParallelAxisVisualization.Instance
        elki.visualization.visualizers.VisFactory <|.. AxisReorderVisualization
        AbstractParallelVisualization <|-- elki.visualization.visualizers.parallel.AxisReorderVisualization.Instance
        AxisReorderVisualization +-- elki.visualization.visualizers.parallel.AxisReorderVisualization.Instance
        elki.visualization.visualizers.VisFactory <|.. BoundingBoxVisualization
        AbstractParallelVisualization <|-- elki.visualization.visualizers.parallel.BoundingBoxVisualization.Instance
        elki.database.datastore.DataStoreListener <|.. elki.visualization.visualizers.parallel.BoundingBoxVisualization.Instance
        BoundingBoxVisualization +-- elki.visualization.visualizers.parallel.BoundingBoxVisualization.Instance
        elki.visualization.visualizers.VisFactory <|.. AxisVisibilityVisualization
        AbstractParallelVisualization <|-- elki.visualization.visualizers.parallel.AxisVisibilityVisualization.Instance
        AxisVisibilityVisualization +-- elki.visualization.visualizers.parallel.AxisVisibilityVisualization.Instance
        elki.visualization.visualizers.VisFactory <|.. LineVisualization
        AbstractParallelVisualization <|-- elki.visualization.visualizers.parallel.LineVisualization.Instance
        elki.database.datastore.DataStoreListener <|.. elki.visualization.visualizers.parallel.LineVisualization.Instance
        LineVisualization +-- elki.visualization.visualizers.parallel.LineVisualization.Instance
    }

    namespace elki.visualization.visualizers {
        abstract class AbstractVisualization [[../AbstractVisualization.html]] {
            #task: VisualizationTask
            #context: VisualizerContext
            #svgp: VisualizationPlot
            #layer: Element
            -width: double
            -height: double
            {abstract} +fullRedraw(): void
        }
        interface VisFactory [[../VisFactory.html]] {
            {abstract} +processNewResult(VisualizerContext, Object): void
            {abstract} +makeVisualization(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection): Visualization
            +allowThumbnails(VisualizationTask): boolean
            +makeVisualizationOrThumbnail(VisualizerContext, VisualizationTask, VisualizationPlot, double, double, Projection, int): Visualization
        }
    }

    namespace elki.database.datastore {
        interface DataStoreListener [[../../../database/datastore/DataStoreListener.html]] {
            {abstract} +contentChanged(DataStoreEvent): void
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml
