<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="388px" preserveAspectRatio="none" style="width:674px;height:388px;background:#FFFFFF;" version="1.1" viewBox="0 0 674 388" width="674px" zoomAndPan="magnify"><defs/><g><!--MD5=[12cfc9d7e4eaf0c44f279f6d3e6a31e6]
class elki.utilities.scaling.outlier.SigmoidOutlierScaling--><a href="SigmoidOutlierScaling.html" target="_top" title="SigmoidOutlierScaling.html" xlink:actuate="onRequest" xlink:href="SigmoidOutlierScaling.html" xlink:show="new" xlink:title="SigmoidOutlierScaling.html" xlink:type="simple"><g id="elem_elki.utilities.scaling.outlier.SigmoidOutlierScaling"><rect codeLine="6" fill="#F1F1F1" height="216.9063" id="elki.utilities.scaling.outlier.SigmoidOutlierScaling" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="658" x="9" y="146"/><ellipse cx="259.25" cy="164.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M262.2188,170.6094 Q261.6406,170.9063 261,171.0469 Q260.3594,171.2031 259.6563,171.2031 Q257.1563,171.2031 255.8281,169.5625 Q254.5156,167.9063 254.5156,164.7813 Q254.5156,161.6563 255.8281,160 Q257.1563,158.3438 259.6563,158.3438 Q260.3594,158.3438 261,158.5 Q261.6563,158.6563 262.2188,158.9531 L262.2188,161.6719 Q261.5938,161.0938 261,160.8281 Q260.4063,160.5469 259.7813,160.5469 Q258.4375,160.5469 257.75,161.625 Q257.0625,162.6875 257.0625,164.7813 Q257.0625,166.875 257.75,167.9531 Q258.4375,169.0156 259.7813,169.0156 Q260.4063,169.0156 261,168.75 Q261.5938,168.4688 262.2188,167.8906 L262.2188,170.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="279.75" y="163.9951">SigmoidOutlierScaling</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="119" x="294.75" y="176.5791">elki.utilities.scaling.outlier</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="666" y1="183.9375" y2="183.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="194.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="29" y="200.9326">LOG: Logging</text><polygon fill="none" points="20,209.8828,16,215.8828,24,215.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="29" y="217.2295">Afinal: double</text><polygon fill="none" points="20,226.1797,16,232.1797,24,232.1797" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="29" y="233.5264">Bfinal: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="666" y1="240.8281" y2="240.8281"/><ellipse cx="20" cy="254.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="29" y="257.8232">prepare(OutlierResult): void</text><ellipse cx="20" cy="270.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="29" y="274.1201">prepare(A, NumberArrayAdapter&lt;?, A&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="284.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="615" x="29" y="290.417">MStepLevenbergMarquardt(double, double, ArrayDBIDs, long[], DoubleRelation): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="300.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="632" x="29" y="306.7139">MStepLevenbergMarquardt(double, double, long[], A, NumberArrayAdapter&lt;?, A&gt;): double[]</text><ellipse cx="20" cy="319.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="29" y="323.0107">getMax(): double</text><ellipse cx="20" cy="335.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="29" y="339.3076">getMin(): double</text><ellipse cx="20" cy="352.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="29" y="355.6045">getScaled(double): double</text></g></a><!--MD5=[e6c8dcff37b9bd9602250d8bd6fbf89e]
class elki.utilities.scaling.outlier.OutlierScaling--><a href="OutlierScaling.html" target="_top" title="OutlierScaling.html" xlink:actuate="onRequest" xlink:href="OutlierScaling.html" xlink:show="new" xlink:title="OutlierScaling.html" xlink:type="simple"><g id="elem_elki.utilities.scaling.outlier.OutlierScaling"><rect codeLine="19" fill="#F1F1F1" height="78.5313" id="elki.utilities.scaling.outlier.OutlierScaling" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="164.5" y="7"/><ellipse cx="268.25" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M264.1719,21.7344 L264.1719,19.5781 L271.5625,19.5781 L271.5625,21.7344 L269.0938,21.7344 L269.0938,29.8125 L271.5625,29.8125 L271.5625,31.9688 L264.1719,31.9688 L264.1719,29.8125 L266.6406,29.8125 L266.6406,21.7344 L264.1719,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="99" x="304.75" y="24.9951">OutlierScaling</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="131" x="288.75" y="37.5791">elki.utilities.scaling.outlier</text><line style="stroke:#181818;stroke-width:0.5;" x1="165.5" x2="510.5" y1="44.9375" y2="44.9375"/><ellipse cx="175.5" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="195" x="184.5" y="61.9326">prepare(OutlierResult): void</text><ellipse cx="175.5" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="321" x="184.5" y="78.2295">prepare(A, NumberArrayAdapter&lt;?, A&gt;): void</text></g></a><!--MD5=[64f0ed2a658249a0c7028a67921dc01c]
reverse link elki.utilities.scaling.outlier.OutlierScaling to elki.utilities.scaling.outlier.SigmoidOutlierScaling--><g id="link_elki.utilities.scaling.outlier.OutlierScaling_elki.utilities.scaling.outlier.SigmoidOutlierScaling"><path codeLine="24" d="M338,106.53 C338,118.9 338,132.3 338,145.81 " fill="none" id="elki.utilities.scaling.outlier.OutlierScaling-backto-elki.utilities.scaling.outlier.SigmoidOutlierScaling" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="331,106.25,338,86.25,345,106.25,331,106.25" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="237" y="368.9063"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="237" y="378.1885">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[7aded2e60b62f61747c6e0d2405b1268]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>SigmoidOutlierScaling\n<size:10>elki.utilities.scaling.outlier" as elki.utilities.scaling.outlier.SigmoidOutlierScaling [[SigmoidOutlierScaling.html]] {
        {static} -LOG: Logging
        ~Afinal: double
        ~Bfinal: double
        +prepare(OutlierResult): void
        +prepare(A, NumberArrayAdapter<?, A>): void
        -MStepLevenbergMarquardt(double, double, ArrayDBIDs, long[], DoubleRelation): double[]
        -MStepLevenbergMarquardt(double, double, long[], A, NumberArrayAdapter<?, A>): double[]
        +getMax(): double
        +getMin(): double
        +getScaled(double): double
    }

    interface "<size:14>OutlierScaling\n<size:10>elki.utilities.scaling.outlier" as elki.utilities.scaling.outlier.OutlierScaling [[OutlierScaling.html]] {
        {abstract} +prepare(OutlierResult): void
        {abstract} +prepare(A, NumberArrayAdapter<?, A>): void
    }

    elki.utilities.scaling.outlier.OutlierScaling <|.. elki.utilities.scaling.outlier.SigmoidOutlierScaling

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>