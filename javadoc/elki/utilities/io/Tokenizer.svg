<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="665px" preserveAspectRatio="none" style="width:294px;height:665px;background:#FFFFFF;" version="1.1" viewBox="0 0 294 665" width="294px" zoomAndPan="magnify"><defs/><g><!--MD5=[ae6719cd2d2d7566b900db69a195cc40]
class elki.utilities.io.Tokenizer--><a href="Tokenizer.html" target="_top" title="Tokenizer.html" xlink:actuate="onRequest" xlink:href="Tokenizer.html" xlink:show="new" xlink:title="Tokenizer.html" xlink:type="simple"><g id="elem_elki.utilities.io.Tokenizer"><rect codeLine="6" fill="#F1F1F1" height="493.9531" id="elki.utilities.io.Tokenizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="280" x="7" y="146"/><ellipse cx="108.25" cy="164.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M111.2188,170.6094 Q110.6406,170.9063 110,171.0469 Q109.3594,171.2031 108.6563,171.2031 Q106.1563,171.2031 104.8281,169.5625 Q103.5156,167.9063 103.5156,164.7813 Q103.5156,161.6563 104.8281,160 Q106.1563,158.3438 108.6563,158.3438 Q109.3594,158.3438 110,158.5 Q110.6563,158.6563 111.2188,158.9531 L111.2188,161.6719 Q110.5938,161.0938 110,160.8281 Q109.4063,160.5469 108.7813,160.5469 Q107.4375,160.5469 106.75,161.625 Q106.0625,162.6875 106.0625,164.7813 Q106.0625,166.875 106.75,167.9531 Q107.4375,169.0156 108.7813,169.0156 Q109.4063,169.0156 110,168.75 Q110.5938,168.4688 111.2188,167.8906 L111.2188,170.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="128.75" y="163.9951">Tokenizer</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="62" x="132.25" y="176.5791">elki.utilities.io</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="286" y1="183.9375" y2="183.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="194.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="27" y="200.9326">LOG: Logging</text><ellipse cx="18" cy="213.8828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="145" x="27" y="217.2295">QUOTE_CHAR: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="227.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="27" y="233.5264">quoteChars: char[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="243.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="27" y="249.8232">matcher: Matcher</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="259.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="27" y="266.1201">input: CharSequence</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="276.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="27" y="282.417">send: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="292.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="27" y="298.7139">start: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="308.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="27" y="315.0107">end: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="324.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="27" y="331.3076">index: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="341.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="27" y="347.6045">quoted: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="286" y1="354.9063" y2="354.9063"/><ellipse cx="18" cy="368.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="27" y="371.9014">Tokenizer(Pattern, String)</text><ellipse cx="18" cy="384.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="27" y="388.1982">initialize(CharSequence, int, int): void</text><ellipse cx="18" cy="401.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="27" y="404.4951">valid(): boolean</text><ellipse cx="18" cy="417.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="27" y="420.792">advance(): Tokenizer</text><ellipse cx="18" cy="433.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="27" y="437.0889">getSubstring(): String</text><ellipse cx="18" cy="450.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="27" y="453.3857">getStrippedSubstring(): String</text><ellipse cx="18" cy="466.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="27" y="469.6826">getDouble(): double</text><ellipse cx="18" cy="482.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="485.9795">getIntBase10(): int</text><ellipse cx="18" cy="498.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="27" y="502.2764">getLongBase10(): long</text><ellipse cx="18" cy="515.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="518.5732">isEmpty(): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="528.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="27" y="534.8701">isQuote(int): char</text><ellipse cx="18" cy="547.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="27" y="551.167">isQuoted(): boolean</text><ellipse cx="18" cy="564.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="27" y="567.4639">getStart(): int</text><ellipse cx="18" cy="580.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="27" y="583.7607">getEnd(): int</text><ellipse cx="18" cy="596.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="27" y="600.0576">getLength(): int</text><ellipse cx="18" cy="613.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="27" y="616.3545">getChar(int): char</text><ellipse cx="18" cy="629.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="27" y="632.6514">cleanup(): void</text></g></a><!--MD5=[bed797726050ad470b869cc67ea665a3]
class elki.utilities.datastructures.iterator.Iter--><a href="../datastructures/iterator/Iter.html" target="_top" title="../datastructures/iterator/Iter.html" xlink:actuate="onRequest" xlink:href="../datastructures/iterator/Iter.html" xlink:show="new" xlink:title="../datastructures/iterator/Iter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.iterator.Iter"><rect codeLine="36" fill="#F1F1F1" height="78.5313" id="elki.utilities.datastructures.iterator.Iter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="205" x="44.5" y="7"/><ellipse cx="59.5" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M55.4219,21.7344 L55.4219,19.5781 L62.8125,19.5781 L62.8125,21.7344 L60.3438,21.7344 L60.3438,29.8125 L62.8125,29.8125 L62.8125,31.9688 L55.4219,31.9688 L55.4219,29.8125 L57.8906,29.8125 L57.8906,21.7344 L55.4219,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="23" x="148.5" y="24.9951">Iter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="173" x="73.5" y="37.5791">elki.utilities.datastructures.iterator</text><line style="stroke:#181818;stroke-width:0.5;" x1="45.5" x2="248.5" y1="44.9375" y2="44.9375"/><ellipse cx="55.5" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="64.5" y="61.9326">valid(): boolean</text><ellipse cx="55.5" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="64.5" y="78.2295">advance(): Iter</text></g></a><!--MD5=[760b03470906fbce5f09751d00082ffa]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.io.Tokenizer--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.io.Tokenizer"><path codeLine="41" d="M147,106.15 C147,118.2 147,131.59 147,145.81 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.io.Tokenizer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="140,106.02,147,86.02,154,106.02,140,106.02" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="47" y="645.9531"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="47" y="655.2354">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[944f46f1d7e3b848ac118bf517d09631]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>Tokenizer\n<size:10>elki.utilities.io" as elki.utilities.io.Tokenizer [[Tokenizer.html]] {
        {static} -LOG: Logging
        {static} +QUOTE_CHAR: String
        -quoteChars: char[]
        -matcher: Matcher
        -input: CharSequence
        -send: int
        -start: int
        -end: int
        -index: int
        -quoted: boolean
        +Tokenizer(Pattern, String)
        +initialize(CharSequence, int, int): void
        +valid(): boolean
        +advance(): Tokenizer
        +getSubstring(): String
        +getStrippedSubstring(): String
        +getDouble(): double
        +getIntBase10(): int
        +getLongBase10(): long
        +isEmpty(): boolean
        -isQuote(int): char
        +isQuoted(): boolean
        +getStart(): int
        +getEnd(): int
        +getLength(): int
        +getChar(int): char
        +cleanup(): void
    }

    interface "<size:14>Iter\n<size:10>elki.utilities.datastructures.iterator" as elki.utilities.datastructures.iterator.Iter [[../datastructures/iterator/Iter.html]] {
        {abstract} +valid(): boolean
        {abstract} +advance(): Iter
    }

    elki.utilities.datastructures.iterator.Iter <|.. elki.utilities.io.Tokenizer

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>