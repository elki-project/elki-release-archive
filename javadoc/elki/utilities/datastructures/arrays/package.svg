<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="662px" preserveAspectRatio="none" style="width:832px;height:662px;background:#FFFFFF;" version="1.1" viewBox="0 0 832 662" width="832px" zoomAndPan="magnify"><defs/><g><!--MD5=[a913f40cff8ea06bbf19036f57b8764a]
cluster elki.utilities.datastructures.arrays--><g id="cluster_elki.utilities.datastructures.arrays"><path d="M8.5,6 L275.5,6 A3.75,3.75 0 0 1 278,8.5 L285,28.2969 L822.5,28.2969 A2.5,2.5 0 0 1 825,30.7969 L825,634.5 A2.5,2.5 0 0 1 822.5,637 L8.5,637 A2.5,2.5 0 0 1 6,634.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="285" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="266" x="10" y="20.9951">elki.utilities.datastructures.arrays</text></g><!--MD5=[20b919219232f177e83aca7219ca5575]
class elki.utilities.datastructures.arrays.DoubleIntegerArrayQuickSort--><a href="DoubleIntegerArrayQuickSort.html" target="_top" title="DoubleIntegerArrayQuickSort.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerArrayQuickSort.html" xlink:show="new" xlink:title="DoubleIntegerArrayQuickSort.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arrays.DoubleIntegerArrayQuickSort"><rect codeLine="4" fill="#F1F1F1" height="243.5625" id="elki.utilities.datastructures.arrays.DoubleIntegerArrayQuickSort" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="384" x="22" y="41"/><ellipse cx="109.75" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M112.7188,62.6406 Q112.1406,62.9375 111.5,63.0781 Q110.8594,63.2344 110.1563,63.2344 Q107.6563,63.2344 106.3281,61.5938 Q105.0156,59.9375 105.0156,56.8125 Q105.0156,53.6875 106.3281,52.0313 Q107.6563,50.375 110.1563,50.375 Q110.8594,50.375 111.5,50.5313 Q112.1563,50.6875 112.7188,50.9844 L112.7188,53.7031 Q112.0938,53.125 111.5,52.8594 Q110.9063,52.5781 110.2813,52.5781 Q108.9375,52.5781 108.25,53.6563 Q107.5625,54.7188 107.5625,56.8125 Q107.5625,58.9063 108.25,59.9844 Q108.9375,61.0469 110.2813,61.0469 Q110.9063,61.0469 111.5,60.7813 Q112.0938,60.5 112.7188,59.9219 L112.7188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="130.25" y="61.8467">DoubleIntegerArrayQuickSort</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="405" y1="73" y2="73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="83.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="42" y="89.9951">INSERTION_THRESHOLD: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="405" y1="97.2969" y2="97.2969"/><ellipse cx="33" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="42" y="114.292">sort(double[], int[], int): void</text><ellipse cx="33" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="217" x="42" y="130.5889">sort(double[], int[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="140.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="255" x="42" y="146.8857">quickSort(double[], int[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="156.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="301" x="42" y="163.1826">sort5(double[], int[], int, int, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="173.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="278" x="42" y="179.4795">insertionSort(double[], int[], int, int): void</text><ellipse cx="33" cy="192.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="249" x="42" y="195.7764">sortReverse(double[], int[], int): void</text><ellipse cx="33" cy="208.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="274" x="42" y="212.0732">sortReverse(double[], int[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="222.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="312" x="42" y="228.3701">quickSortReverse(double[], int[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="238.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="358" x="42" y="244.667">sortReverse5(double[], int[], int, int, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="254.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="335" x="42" y="260.9639">insertionSortReverse(double[], int[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="270.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="226" x="42" y="277.2607">swap(double[], int[], int, int): void</text></g></a><!--MD5=[ccc08c84ea46da827fea42c72d137dd9]
class elki.utilities.datastructures.arrays.IntegerArrayQuickSort--><a href="IntegerArrayQuickSort.html" target="_top" title="IntegerArrayQuickSort.html" xlink:actuate="onRequest" xlink:href="IntegerArrayQuickSort.html" xlink:show="new" xlink:title="IntegerArrayQuickSort.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arrays.IntegerArrayQuickSort"><rect codeLine="19" fill="#F1F1F1" height="145.7813" id="elki.utilities.datastructures.arrays.IntegerArrayQuickSort" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="367" x="441.5" y="90"/><ellipse cx="545.75" cy="106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M548.7188,111.6406 Q548.1406,111.9375 547.5,112.0781 Q546.8594,112.2344 546.1563,112.2344 Q543.6563,112.2344 542.3281,110.5938 Q541.0156,108.9375 541.0156,105.8125 Q541.0156,102.6875 542.3281,101.0313 Q543.6563,99.375 546.1563,99.375 Q546.8594,99.375 547.5,99.5313 Q548.1563,99.6875 548.7188,99.9844 L548.7188,102.7031 Q548.0938,102.125 547.5,101.8594 Q546.9063,101.5781 546.2813,101.5781 Q544.9375,101.5781 544.25,102.6563 Q543.5625,103.7188 543.5625,105.8125 Q543.5625,107.9063 544.25,108.9844 Q544.9375,110.0469 546.2813,110.0469 Q546.9063,110.0469 547.5,109.7813 Q548.0938,109.5 548.7188,108.9219 L548.7188,111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="566.25" y="110.8467">IntegerArrayQuickSort</text><line style="stroke:#181818;stroke-width:0.5;" x1="442.5" x2="807.5" y1="122" y2="122"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="449.5" y="132.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="461.5" y="138.9951">INSERTION_THRESHOLD: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="442.5" x2="807.5" y1="146.2969" y2="146.2969"/><ellipse cx="452.5" cy="159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="207" x="461.5" y="163.292">sort(int[], IntComparator): void</text><ellipse cx="452.5" cy="176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="257" x="461.5" y="179.5889">sort(int[], int, int, IntComparator): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="449.5" y="189.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="295" x="461.5" y="195.8857">quickSort(int[], int, int, IntComparator): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="449.5" y="205.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="318" x="461.5" y="212.1826">insertionSort(int[], int, int, IntComparator): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="449.5" y="222.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="341" x="461.5" y="228.4795">sort5(int[], int, int, int, int, int, IntComparator): void</text></g></a><!--MD5=[84895609dcd960e1099054f2d43b66e1]
class elki.utilities.datastructures.arrays.ArrayUtil--><a href="ArrayUtil.html" target="_top" title="ArrayUtil.html" xlink:actuate="onRequest" xlink:href="ArrayUtil.html" xlink:show="new" xlink:title="ArrayUtil.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arrays.ArrayUtil"><rect codeLine="28" fill="#F1F1F1" height="276.1563" id="elki.utilities.datastructures.arrays.ArrayUtil" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="354" x="37" y="345"/><ellipse cx="182.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M185.2188,366.6406 Q184.6406,366.9375 184,367.0781 Q183.3594,367.2344 182.6563,367.2344 Q180.1563,367.2344 178.8281,365.5938 Q177.5156,363.9375 177.5156,360.8125 Q177.5156,357.6875 178.8281,356.0313 Q180.1563,354.375 182.6563,354.375 Q183.3594,354.375 184,354.5313 Q184.6563,354.6875 185.2188,354.9844 L185.2188,357.7031 Q184.5938,357.125 184,356.8594 Q183.4063,356.5781 182.7813,356.5781 Q181.4375,356.5781 180.75,357.6563 Q180.0625,358.7188 180.0625,360.8125 Q180.0625,362.9063 180.75,363.9844 Q181.4375,365.0469 182.7813,365.0469 Q183.4063,365.0469 184,364.7813 Q184.5938,364.5 185.2188,363.9219 L185.2188,366.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="202.75" y="365.8467">ArrayUtil</text><line style="stroke:#181818;stroke-width:0.5;" x1="38" x2="390" y1="377" y2="377"/><line style="stroke:#181818;stroke-width:0.5;" x1="38" x2="390" y1="385" y2="385"/><ellipse cx="48" cy="398.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="223" x="57" y="401.9951">swap(ArrayList&lt;T&gt;, int, int): void</text><ellipse cx="48" cy="414.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="152" x="57" y="418.292">swap(T[], int, int): void</text><ellipse cx="48" cy="431.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="57" y="434.5889">swap(int[], int, int): void</text><ellipse cx="48" cy="447.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="179" x="57" y="450.8857">swap(short[], int, int): void</text><ellipse cx="48" cy="463.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="57" y="467.1826">swap(byte[], int, int): void</text><ellipse cx="48" cy="480.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="191" x="57" y="483.4795">swap(double[], int, int): void</text><ellipse cx="48" cy="496.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="172" x="57" y="499.7764">swap(float[], int, int): void</text><ellipse cx="48" cy="512.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="265" x="57" y="516.0732">randomShuffle(int[], Random, int): void</text><ellipse cx="48" cy="529.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="284" x="57" y="532.3701">randomShuffle(short[], Random, int): void</text><ellipse cx="48" cy="545.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="278" x="57" y="548.667">randomShuffle(byte[], Random, int): void</text><ellipse cx="48" cy="561.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="296" x="57" y="564.9639">randomShuffle(double[], Random, int): void</text><ellipse cx="48" cy="577.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="277" x="57" y="581.2607">randomShuffle(float[], Random, int): void</text><ellipse cx="48" cy="594.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="257" x="57" y="597.5576">randomShuffle(T[], Random, int): void</text><ellipse cx="48" cy="610.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="57" y="613.8545">randomShuffle(ArrayList&lt;T&gt;, Random, int): void</text></g></a><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="316" y="643"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="316" y="652.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[399af51d51266ae23d3d73e961a6653b]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.utilities.datastructures.arrays {

        class DoubleIntegerArrayQuickSort [[DoubleIntegerArrayQuickSort.html]] {
            {static} -INSERTION_THRESHOLD: int
            {static} +sort(double[], int[], int): void
            {static} +sort(double[], int[], int, int): void
            {static} -quickSort(double[], int[], int, int): void
            {static} -sort5(double[], int[], int, int, int, int, int): void
            {static} -insertionSort(double[], int[], int, int): void
            {static} +sortReverse(double[], int[], int): void
            {static} +sortReverse(double[], int[], int, int): void
            {static} -quickSortReverse(double[], int[], int, int): void
            {static} -sortReverse5(double[], int[], int, int, int, int, int): void
            {static} -insertionSortReverse(double[], int[], int, int): void
            {static} -swap(double[], int[], int, int): void
        }

        class IntegerArrayQuickSort [[IntegerArrayQuickSort.html]] {
            {static} -INSERTION_THRESHOLD: int
            {static} +sort(int[], IntComparator): void
            {static} +sort(int[], int, int, IntComparator): void
            {static} -quickSort(int[], int, int, IntComparator): void
            {static} -insertionSort(int[], int, int, IntComparator): void
            {static} -sort5(int[], int, int, int, int, int, IntComparator): void
        }

        class ArrayUtil [[ArrayUtil.html]] {
            {static} +swap(ArrayList<T>, int, int): void
            {static} +swap(T[], int, int): void
            {static} +swap(int[], int, int): void
            {static} +swap(short[], int, int): void
            {static} +swap(byte[], int, int): void
            {static} +swap(double[], int, int): void
            {static} +swap(float[], int, int): void
            {static} +randomShuffle(int[], Random, int): void
            {static} +randomShuffle(short[], Random, int): void
            {static} +randomShuffle(byte[], Random, int): void
            {static} +randomShuffle(double[], Random, int): void
            {static} +randomShuffle(float[], Random, int): void
            {static} +randomShuffle(T[], Random, int): void
            {static} +randomShuffle(ArrayList<T>, Random, int): void
        }

    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>