<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="623px" preserveAspectRatio="none" style="width:546px;height:623px;background:#FFFFFF;" version="1.1" viewBox="0 0 546 623" width="546px" zoomAndPan="magnify"><defs/><g><!--MD5=[a57d9d9cb6294733df90f080c15135c4]
class elki.utilities.datastructures.QuickSelect--><a href="QuickSelect.html" target="_top" title="QuickSelect.html" xlink:actuate="onRequest" xlink:href="QuickSelect.html" xlink:show="new" xlink:title="QuickSelect.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.QuickSelect"><rect codeLine="6" fill="#F1F1F1" height="493.9531" id="elki.utilities.datastructures.QuickSelect" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="532" x="7" y="7"/><ellipse cx="206.25" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M209.2188,31.6094 Q208.6406,31.9063 208,32.0469 Q207.3594,32.2031 206.6563,32.2031 Q204.1563,32.2031 202.8281,30.5625 Q201.5156,28.9063 201.5156,25.7813 Q201.5156,22.6563 202.8281,21 Q204.1563,19.3438 206.6563,19.3438 Q207.3594,19.3438 208,19.5 Q208.6563,19.6563 209.2188,19.9531 L209.2188,22.6719 Q208.5938,22.0938 208,21.8281 Q207.4063,21.5469 206.7813,21.5469 Q205.4375,21.5469 204.75,22.625 Q204.0625,23.6875 204.0625,25.7813 Q204.0625,27.875 204.75,28.9531 Q205.4375,30.0156 206.7813,30.0156 Q207.4063,30.0156 208,29.75 Q208.5938,29.4688 209.2188,28.8906 L209.2188,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="248.25" y="24.9951">QuickSelect</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="125" x="226.75" y="37.5791">elki.utilities.datastructures</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="538" y1="44.9375" y2="44.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="55.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="27" y="61.9326">SMALL: int</text><ellipse cx="18" cy="74.8828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="276" x="27" y="78.2295">DOUBLE_ADAPTER: Adapter&lt;double[]&gt;</text><ellipse cx="18" cy="91.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="248" x="27" y="94.5264">INTEGER_ADAPTER: Adapter&lt;int[]&gt;</text><ellipse cx="18" cy="107.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="243" x="27" y="110.8232">FLOAT_ADAPTER: Adapter&lt;float[]&gt;</text><ellipse cx="18" cy="123.7734" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="255" x="27" y="127.1201">SHORT_ADAPTER: Adapter&lt;short[]&gt;</text><ellipse cx="18" cy="140.0703" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="239" x="27" y="143.417">LONG_ADAPTER: Adapter&lt;long[]&gt;</text><ellipse cx="18" cy="156.3672" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="237" x="27" y="159.7139">BYTE_ADAPTER: Adapter&lt;byte[]&gt;</text><ellipse cx="18" cy="172.6641" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="239" x="27" y="176.0107">CHAR_ADAPTER: Adapter&lt;char[]&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="538" y1="183.3125" y2="183.3125"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="193.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="242" x="27" y="200.3076">bestPivot(int, int, int, int, int, int): int</text><ellipse cx="18" cy="213.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="306" x="27" y="216.6045">quickSelect(T, Adapter&lt;T&gt;, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="289" x="27" y="232.9014">insertionSort(T, Adapter&lt;T&gt;, int, int): void</text><ellipse cx="18" cy="245.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="27" y="249.1982">quickSelect(double[], int): double</text><ellipse cx="18" cy="262.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="176" x="27" y="265.4951">median(double[]): double</text><ellipse cx="18" cy="278.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="226" x="27" y="281.792">median(double[], int, int): double</text><ellipse cx="18" cy="294.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="236" x="27" y="298.0889">quantile(double[], double): double</text><ellipse cx="18" cy="311.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="286" x="27" y="314.3857">quantile(double[], int, int, double): double</text><ellipse cx="18" cy="327.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="280" x="27" y="330.6826">quickSelect(double[], int, int, int): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="340.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="243" x="27" y="346.9795">insertionSort(double[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="356.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="191" x="27" y="363.2764">swap(double[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="373.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="189" x="27" y="379.5732">swap(List&lt;T&gt;, int, int): void</text><ellipse cx="18" cy="392.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="437" x="27" y="395.8701">quickSelect(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int): T</text><ellipse cx="18" cy="408.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="383" x="27" y="412.167">median(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;): T</text><ellipse cx="18" cy="425.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="433" x="27" y="428.4639">median(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int): T</text><ellipse cx="18" cy="441.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="443" x="27" y="444.7607">quantile(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, double): T</text><ellipse cx="18" cy="457.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="493" x="27" y="461.0576">quantile(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int, double): T</text><ellipse cx="18" cy="474.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="506" x="27" y="477.3545">quickSelect(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="487.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="418" x="27" y="493.6514">insertionSort(List&lt;T&gt;, Comparator&lt;? super T&gt;, int, int): void</text></g></a><!--MD5=[0d9b2c262d06f3e4afceacee59204ec9]
class elki.utilities.datastructures.QuickSelect.Adapter--><a href="QuickSelect.Adapter.html" target="_top" title="QuickSelect.Adapter.html" xlink:actuate="onRequest" xlink:href="QuickSelect.Adapter.html" xlink:show="new" xlink:title="QuickSelect.Adapter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.QuickSelect.Adapter"><rect codeLine="35" fill="#F1F1F1" height="37.9375" id="elki.utilities.datastructures.QuickSelect.Adapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="179.5" y="561"/><ellipse cx="194.5" cy="579.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M190.4219,575.7344 L190.4219,573.5781 L197.8125,573.5781 L197.8125,575.7344 L195.3438,575.7344 L195.3438,583.8125 L197.8125,583.8125 L197.8125,585.9688 L190.4219,585.9688 L190.4219,583.8125 L192.8906,583.8125 L192.8906,575.7344 L190.4219,575.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="208.5" y="578.9951">QuickSelect.Adapter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="133" x="214" y="591.5791">elki.utilities.datastructures</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="360.5" y="558"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="361.5" y="570.1387">T</text></g></a><!--MD5=[a33dc8e08ec759cff67966e79cb229da]
reverse link elki.utilities.datastructures.QuickSelect to elki.utilities.datastructures.QuickSelect.Adapter--><g id="link_elki.utilities.datastructures.QuickSelect_elki.utilities.datastructures.QuickSelect.Adapter"><path codeLine="37" d="M273,516.65 C273,534.54 273,549.78 273,560.72 " fill="none" id="elki.utilities.datastructures.QuickSelect-backto-elki.utilities.datastructures.QuickSelect.Adapter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="273" cy="509.39" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="273" x2="273" y1="517.39" y2="501.39"/><line style="stroke:#181818;stroke-width:1.0;" x1="265" x2="281" y1="509.39" y2="509.39"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="173" y="603.9375"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="173" y="613.2197">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[f3ffbd490677011acbb2b0506cfc61f0]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>QuickSelect\n<size:10>elki.utilities.datastructures" as elki.utilities.datastructures.QuickSelect [[QuickSelect.html]] {
        {static} -SMALL: int
        {static} +DOUBLE_ADAPTER: Adapter<double[]>
        {static} +INTEGER_ADAPTER: Adapter<int[]>
        {static} +FLOAT_ADAPTER: Adapter<float[]>
        {static} +SHORT_ADAPTER: Adapter<short[]>
        {static} +LONG_ADAPTER: Adapter<long[]>
        {static} +BYTE_ADAPTER: Adapter<byte[]>
        {static} +CHAR_ADAPTER: Adapter<char[]>
        {static} -bestPivot(int, int, int, int, int, int): int
        {static} +quickSelect(T, Adapter<T>, int, int, int): void
        {static} -insertionSort(T, Adapter<T>, int, int): void
        {static} +quickSelect(double[], int): double
        {static} +median(double[]): double
        {static} +median(double[], int, int): double
        {static} +quantile(double[], double): double
        {static} +quantile(double[], int, int, double): double
        {static} +quickSelect(double[], int, int, int): double
        {static} -insertionSort(double[], int, int): void
        {static} -swap(double[], int, int): void
        {static} -swap(List<T>, int, int): void
        {static} +quickSelect(List<? extends T>, Comparator<? super T>, int): T
        {static} +median(List<? extends T>, Comparator<? super T>): T
        {static} +median(List<? extends T>, Comparator<? super T>, int, int): T
        {static} +quantile(List<? extends T>, Comparator<? super T>, double): T
        {static} +quantile(List<? extends T>, Comparator<? super T>, int, int, double): T
        {static} +quickSelect(List<? extends T>, Comparator<? super T>, int, int, int): void
        {static} -insertionSort(List<T>, Comparator<? super T>, int, int): void
    }
    interface "<size:14>QuickSelect.Adapter\n<size:10>elki.utilities.datastructures" as elki.utilities.datastructures.QuickSelect.Adapter<T> [[QuickSelect.Adapter.html]]

    elki.utilities.datastructures.QuickSelect +- - elki.utilities.datastructures.QuickSelect.Adapter

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>