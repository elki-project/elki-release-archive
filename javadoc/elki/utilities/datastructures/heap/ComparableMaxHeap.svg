<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="700px" preserveAspectRatio="none" style="width:1012px;height:700px;background:#FFFFFF;" version="1.1" viewBox="0 0 1012 700" width="1012px" zoomAndPan="magnify"><defs/><g><!--MD5=[c9fa0eb460bba6fef5d060cb7e7f0fcb]
class elki.utilities.datastructures.heap.ComparableMaxHeap--><a href="ComparableMaxHeap.html" target="_top" title="ComparableMaxHeap.html" xlink:actuate="onRequest" xlink:href="ComparableMaxHeap.html" xlink:show="new" xlink:title="ComparableMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMaxHeap"><rect codeLine="6" fill="#F1F1F1" height="314.6875" id="elki.utilities.datastructures.heap.ComparableMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="992" x="9" y="263"/><ellipse cx="317.75" cy="281.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M320.7188,287.6094 Q320.1406,287.9063 319.5,288.0469 Q318.8594,288.2031 318.1563,288.2031 Q315.6563,288.2031 314.3281,286.5625 Q313.0156,284.9063 313.0156,281.7813 Q313.0156,278.6563 314.3281,277 Q315.6563,275.3438 318.1563,275.3438 Q318.8594,275.3438 319.5,275.5 Q320.1563,275.6563 320.7188,275.9531 L320.7188,278.6719 Q320.0938,278.0938 319.5,277.8281 Q318.9063,277.5469 318.2813,277.5469 Q316.9375,277.5469 316.25,278.625 Q315.5625,279.6875 315.5625,281.7813 Q315.5625,283.875 316.25,284.9531 Q316.9375,286.0156 318.2813,286.0156 Q318.9063,286.0156 319.5,285.75 Q320.0938,285.4688 320.7188,284.8906 L320.7188,287.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="341.25" y="280.9951">ComparableMaxHeap</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="152" x="338.25" y="293.5791">elki.utilities.datastructures.heap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="212" x="792" y="260"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="210" x="793" y="272.1387">K extends Comparable&lt;? super K&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1000" y1="300.9375" y2="300.9375"/><polygon fill="none" points="20,309.5859,24,313.5859,20,317.5859,16,313.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="29" y="317.9326">twoheap: Comparable&lt;Object&gt;[]</text><polygon fill="none" points="20,325.8828,24,329.8828,20,333.8828,16,329.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="29" y="334.2295">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="344.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="29" y="350.5264">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1000" y1="357.8281" y2="357.8281"/><ellipse cx="20" cy="371.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="29" y="374.8232">ComparableMaxHeap()</text><ellipse cx="20" cy="387.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="29" y="391.1201">ComparableMaxHeap(int)</text><ellipse cx="20" cy="404.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="29" y="407.417">clear(): void</text><ellipse cx="20" cy="420.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="29" y="423.7139">size(): int</text><ellipse cx="20" cy="436.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="29" y="440.0107">isEmpty(): boolean</text><ellipse cx="20" cy="452.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="479" x="29" y="456.3076">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): void</text><ellipse cx="20" cy="469.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="29" y="472.6045">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;, int): void</text><ellipse cx="20" cy="485.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="966" x="29" y="488.9014">replaceTopElement(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="498.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="29" y="505.1982">heapifyUp(int, Comparable&lt;Object&gt;): void</text><ellipse cx="20" cy="518.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="29" y="521.4951">poll(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="531.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="29" y="537.792">heapifyDown(Comparable&lt;Object&gt;): void</text><ellipse cx="20" cy="550.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="29" y="554.0889">peek(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><ellipse cx="20" cy="567.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="29" y="570.3857">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[605b8b8f703af438bd096f397893d33f]
class elki.utilities.datastructures.heap.ObjectHeap--><a href="ObjectHeap.html" target="_top" title="ObjectHeap.html" xlink:actuate="onRequest" xlink:href="ObjectHeap.html" xlink:show="new" xlink:title="ObjectHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ObjectHeap"><rect codeLine="25" fill="#F1F1F1" height="192.6094" id="elki.utilities.datastructures.heap.ObjectHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="678" x="166" y="10"/><ellipse cx="313.75" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M309.6719,24.7344 L309.6719,22.5781 L317.0625,22.5781 L317.0625,24.7344 L314.5938,24.7344 L314.5938,32.8125 L317.0625,32.8125 L317.0625,34.9688 L309.6719,34.9688 L309.6719,32.8125 L312.1406,32.8125 L312.1406,24.7344 L309.6719,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="372.25" y="27.9951">ObjectHeap</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="160" x="334.25" y="40.5791">elki.utilities.datastructures.heap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="212" x="635" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="210" x="636" y="19.1387">K extends Comparable&lt;? super K&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="167" x2="843" y1="47.9375" y2="47.9375"/><ellipse cx="177" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="323" x="186" y="64.9326">add(K extends Comparable&lt;? super K&gt;): void</text><ellipse cx="177" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="349" x="186" y="81.2295">add(K extends Comparable&lt;? super K&gt;, int): void</text><ellipse cx="177" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="652" x="186" y="97.5264">replaceTopElement(K extends Comparable&lt;? super K&gt;): K extends Comparable&lt;? super K&gt;</text><ellipse cx="177" cy="110.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="301" x="186" y="113.8232">peek(): K extends Comparable&lt;? super K&gt;</text><ellipse cx="177" cy="126.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="292" x="186" y="130.1201">poll(): K extends Comparable&lt;? super K&gt;</text><ellipse cx="177" cy="143.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="186" y="146.417">clear(): void</text><ellipse cx="177" cy="159.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="186" y="162.7139">size(): int</text><ellipse cx="177" cy="175.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="186" y="179.0107">isEmpty(): boolean</text><ellipse cx="177" cy="191.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="223" x="186" y="195.3076">unsortedIter(): UnsortedIter&lt;K&gt;</text></g></a><!--MD5=[d6450cc86e60d2a7d9899df17ac4474a]
class elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter--><a href="ComparableMaxHeap.UnsortedIter.html" target="_top" title="ComparableMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ComparableMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="ComparableMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter"><rect codeLine="36" fill="#F1F1F1" height="37.9375" id="elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="371" y="638"/><ellipse cx="386" cy="656.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M388.9688,662.6094 Q388.3906,662.9063 387.75,663.0469 Q387.1094,663.2031 386.4063,663.2031 Q383.9063,663.2031 382.5781,661.5625 Q381.2656,659.9063 381.2656,656.7813 Q381.2656,653.6563 382.5781,652 Q383.9063,650.3438 386.4063,650.3438 Q387.1094,650.3438 387.75,650.5 Q388.4063,650.6563 388.9688,650.9531 L388.9688,653.6719 Q388.3438,653.0938 387.75,652.8281 Q387.1563,652.5469 386.5313,652.5469 Q385.1875,652.5469 384.5,653.625 Q383.8125,654.6875 383.8125,656.7813 Q383.8125,658.875 384.5,659.9531 Q385.1875,661.0156 386.5313,661.0156 Q387.1563,661.0156 387.75,660.75 Q388.3438,660.4688 388.9688,659.8906 L388.9688,662.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="400" y="655.9951">ComparableMaxHeap.UnsortedIter</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="152" x="442" y="668.5791">elki.utilities.datastructures.heap</text></g></a><!--MD5=[36bd2f3aeb2ad29559ed25ba6b0c4a76]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ComparableMaxHeap--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ComparableMaxHeap"><path codeLine="38" d="M505,223.62 C505,236.4 505,249.56 505,262.73 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ComparableMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="498,223.23,505,203.23,512,223.23,498,223.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[86b2bda9ad26b32b3334a45d36873b5e]
reverse link elki.utilities.datastructures.heap.ComparableMaxHeap to elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ComparableMaxHeap_elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter"><path codeLine="39" d="M505,593.28 C505,611.07 505,626.71 505,637.92 " fill="none" id="elki.utilities.datastructures.heap.ComparableMaxHeap-backto-elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="505" cy="586.24" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="505" x2="505" y1="594.24" y2="578.24"/><line style="stroke:#181818;stroke-width:1.0;" x1="497" x2="513" y1="586.24" y2="586.24"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="406" y="680.9375"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="406" y="690.2197">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[74634784e5771966f18cfb9c24b8876c]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>ComparableMaxHeap\n<size:10>elki.utilities.datastructures.heap" as elki.utilities.datastructures.heap.ComparableMaxHeap<K extends Comparable<? super K>> [[ComparableMaxHeap.html]] {
        #twoheap: Comparable<Object>[]
        #size: int
        {static} -TWO_HEAP_INITIAL_SIZE: int
        +ComparableMaxHeap()
        +ComparableMaxHeap(int)
        +clear(): void
        +size(): int
        +isEmpty(): boolean
        +add(K extends Comparable<? super Comparable<? super K>>): void
        +add(K extends Comparable<? super Comparable<? super K>>, int): void
        +replaceTopElement(K extends Comparable<? super Comparable<? super K>>): K extends Comparable<? super Comparable<? super K>>
        -heapifyUp(int, Comparable<Object>): void
        +poll(): K extends Comparable<? super Comparable<? super K>>
        -heapifyDown(Comparable<Object>): void
        +peek(): K extends Comparable<? super Comparable<? super K>>
        +unsortedIter(): UnsortedIter
    }

    interface "<size:14>ObjectHeap\n<size:10>elki.utilities.datastructures.heap" as elki.utilities.datastructures.heap.ObjectHeap<K extends Comparable<? super K>> [[ObjectHeap.html]] {
        {abstract} +add(K extends Comparable<? super K>): void
        {abstract} +add(K extends Comparable<? super K>, int): void
        {abstract} +replaceTopElement(K extends Comparable<? super K>): K extends Comparable<? super K>
        {abstract} +peek(): K extends Comparable<? super K>
        {abstract} +poll(): K extends Comparable<? super K>
        {abstract} +clear(): void
        {abstract} +size(): int
        {abstract} +isEmpty(): boolean
        {abstract} +unsortedIter(): UnsortedIter<K>
    }
    class "<size:14>ComparableMaxHeap.UnsortedIter\n<size:10>elki.utilities.datastructures.heap" as elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter [[ComparableMaxHeap.UnsortedIter.html]]

    elki.utilities.datastructures.heap.ObjectHeap <|.. elki.utilities.datastructures.heap.ComparableMaxHeap
    elki.utilities.datastructures.heap.ComparableMaxHeap +- - elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>