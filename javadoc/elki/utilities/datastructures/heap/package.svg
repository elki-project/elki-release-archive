<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1095px" preserveAspectRatio="none" style="width:9321px;height:1095px;background:#FFFFFF;" version="1.1" viewBox="0 0 9321 1095" width="9321px" zoomAndPan="magnify"><defs/><g><!--MD5=[a01fb9a8e49424b7a139b17108385cc1]
cluster elki.utilities.datastructures.heap--><g id="cluster_elki.utilities.datastructures.heap"><path d="M8.5,6 L264.5,6 A3.75,3.75 0 0 1 267,8.5 L274,28.2969 L8996.5,28.2969 A2.5,2.5 0 0 1 8999,30.7969 L8999,1067.5 A2.5,2.5 0 0 1 8996.5,1070 L8.5,1070 A2.5,2.5 0 0 1 6,1067.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="274" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="255" x="10" y="20.9951">elki.utilities.datastructures.heap</text></g><!--MD5=[dd33a18e1691acdd9e81e22ef3a5bb87]
cluster elki.utilities.datastructures.iterator--><g id="cluster_elki.utilities.datastructures.iterator"><path d="M9025.5,160.5 L9301.5,160.5 A3.75,3.75 0 0 1 9304,163 L9311,182.7969 L9311.5,182.7969 A2.5,2.5 0 0 1 9314,185.2969 L9314,290 A2.5,2.5 0 0 1 9311.5,292.5 L9025.5,292.5 A2.5,2.5 0 0 1 9023,290 L9023,163 A2.5,2.5 0 0 1 9025.5,160.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="9023" x2="9311" y1="182.7969" y2="182.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="275" x="9027" y="175.4951">elki.utilities.datastructures.iterator</text></g><!--MD5=[160dade82c3adae63c6cf28528f0b0d9]
class elki.utilities.datastructures.heap.DoubleMaxHeap--><a href="DoubleMaxHeap.html" target="_top" title="DoubleMaxHeap.html" xlink:actuate="onRequest" xlink:href="DoubleMaxHeap.html" xlink:show="new" xlink:title="DoubleMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleMaxHeap"><rect codeLine="4" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.DoubleMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="276" x="1262" y="523.5"/><ellipse cx="1339.25" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1342.2188,545.1406 Q1341.6406,545.4375 1341,545.5781 Q1340.3594,545.7344 1339.6563,545.7344 Q1337.1563,545.7344 1335.8281,544.0938 Q1334.5156,542.4375 1334.5156,539.3125 Q1334.5156,536.1875 1335.8281,534.5313 Q1337.1563,532.875 1339.6563,532.875 Q1340.3594,532.875 1341,533.0313 Q1341.6563,533.1875 1342.2188,533.4844 L1342.2188,536.2031 Q1341.5938,535.625 1341,535.3594 Q1340.4063,535.0781 1339.7813,535.0781 Q1338.4375,535.0781 1337.75,536.1563 Q1337.0625,537.2188 1337.0625,539.3125 Q1337.0625,541.4063 1337.75,542.4844 Q1338.4375,543.5469 1339.7813,543.5469 Q1340.4063,543.5469 1341,543.2813 Q1341.5938,543 1342.2188,542.4219 L1342.2188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1359.75" y="544.3467">DoubleMaxHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="1263" x2="1537" y1="555.5" y2="555.5"/><polygon fill="none" points="1273,564.1484,1277,568.1484,1273,572.1484,1269,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1282" y="572.4951">twoheap: double[]</text><polygon fill="none" points="1273,580.4453,1277,584.4453,1273,588.4453,1269,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1282" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="1282" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1263" x2="1537" y1="612.3906" y2="612.3906"/><ellipse cx="1273" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="1282" y="629.3857">DoubleMaxHeap()</text><ellipse cx="1273" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1282" y="645.6826">DoubleMaxHeap(int)</text><ellipse cx="1273" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1282" y="661.9795">clear(): void</text><ellipse cx="1273" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="1282" y="678.2764">size(): int</text><ellipse cx="1273" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1282" y="694.5732">isEmpty(): boolean</text><ellipse cx="1273" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="1282" y="710.8701">add(double): void</text><ellipse cx="1273" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1282" y="727.167">add(double, int): void</text><ellipse cx="1273" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="1282" y="743.4639">replaceTopElement(double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1282" y="759.7607">heapifyUp(int, double): void</text><ellipse cx="1273" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="1282" y="776.0576">poll(): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="1282" y="792.3545">heapifyDown(double): void</text><ellipse cx="1273" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1282" y="808.6514">peek(): double</text><ellipse cx="1273" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="1282" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[84276ec0f40588a54f644422ea5599e2]
class elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter--><a href="DoubleMaxHeap.UnsortedIter.html" target="_top" title="DoubleMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter"><rect codeLine="23" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="235" x="1421.5" y="933"/><ellipse cx="1436.5" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1439.4688,954.6406 Q1438.8906,954.9375 1438.25,955.0781 Q1437.6094,955.2344 1436.9063,955.2344 Q1434.4063,955.2344 1433.0781,953.5938 Q1431.7656,951.9375 1431.7656,948.8125 Q1431.7656,945.6875 1433.0781,944.0313 Q1434.4063,942.375 1436.9063,942.375 Q1437.6094,942.375 1438.25,942.5313 Q1438.9063,942.6875 1439.4688,942.9844 L1439.4688,945.7031 Q1438.8438,945.125 1438.25,944.8594 Q1437.6563,944.5781 1437.0313,944.5781 Q1435.6875,944.5781 1435,945.6563 Q1434.3125,946.7188 1434.3125,948.8125 Q1434.3125,950.9063 1435,951.9844 Q1435.6875,953.0469 1437.0313,953.0469 Q1437.6563,953.0469 1438.25,952.7813 Q1438.8438,952.5 1439.4688,951.9219 L1439.4688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="1450.5" y="953.8467">DoubleMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1422.5" x2="1655.5" y1="965" y2="965"/><polygon fill="none" points="1432.5,973.6484,1436.5,977.6484,1432.5,981.6484,1428.5,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="1441.5" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1422.5" x2="1655.5" y1="989.2969" y2="989.2969"/><ellipse cx="1432.5" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1441.5" y="1006.292">valid(): boolean</text><ellipse cx="1432.5" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1441.5" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="1432.5" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1441.5" y="1038.8857">get(): double</text></g></a><!--MD5=[18fdcf5fecc394be1daf6d9898157a9b]
class elki.utilities.datastructures.heap.ComparatorMinHeap--><a href="ComparatorMinHeap.html" target="_top" title="ComparatorMinHeap.html" xlink:actuate="onRequest" xlink:href="ComparatorMinHeap.html" xlink:show="new" xlink:title="ComparatorMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparatorMinHeap"><rect codeLine="30" fill="#F1F1F1" height="325.0469" id="elki.utilities.datastructures.heap.ComparatorMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="371" x="7691.5" y="515.5"/><ellipse cx="7796.25" cy="531.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7799.2188,537.1406 Q7798.6406,537.4375 7798,537.5781 Q7797.3594,537.7344 7796.6563,537.7344 Q7794.1563,537.7344 7792.8281,536.0938 Q7791.5156,534.4375 7791.5156,531.3125 Q7791.5156,528.1875 7792.8281,526.5313 Q7794.1563,524.875 7796.6563,524.875 Q7797.3594,524.875 7798,525.0313 Q7798.6563,525.1875 7799.2188,525.4844 L7799.2188,528.2031 Q7798.5938,527.625 7798,527.3594 Q7797.4063,527.0781 7796.7813,527.0781 Q7795.4375,527.0781 7794.75,528.1563 Q7794.0625,529.2188 7794.0625,531.3125 Q7794.0625,533.4063 7794.75,534.4844 Q7795.4375,535.5469 7796.7813,535.5469 Q7797.4063,535.5469 7798,535.2813 Q7798.5938,535 7799.2188,534.4219 L7799.2188,537.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="7816.75" y="536.3467">ComparatorMinHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="8055.5" y="512.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="8056.5" y="524.6387">K</text><line style="stroke:#181818;stroke-width:0.5;" x1="7692.5" x2="8061.5" y1="547.5" y2="547.5"/><polygon fill="none" points="7702.5,556.1484,7706.5,560.1484,7702.5,564.1484,7698.5,560.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="7711.5" y="564.4951">twoheap: Object[]</text><polygon fill="none" points="7702.5,572.4453,7706.5,576.4453,7702.5,580.4453,7698.5,576.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="7711.5" y="580.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7699.5" y="590.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="7711.5" y="597.0889">TWO_HEAP_INITIAL_SIZE: int</text><polygon fill="none" points="7702.5,605.0391,7706.5,609.0391,7702.5,613.0391,7698.5,609.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="7711.5" y="613.3857">comparator: Comparator&lt;Object&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="7692.5" x2="8061.5" y1="620.6875" y2="620.6875"/><ellipse cx="7702.5" cy="634.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="7711.5" y="637.6826">ComparatorMinHeap(Comparator&lt;? super K&gt;)</text><ellipse cx="7702.5" cy="650.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="7711.5" y="653.9795">ComparatorMinHeap(int, Comparator&lt;? super K&gt;)</text><ellipse cx="7702.5" cy="666.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="7711.5" y="670.2764">clear(): void</text><ellipse cx="7702.5" cy="683.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="7711.5" y="686.5732">size(): int</text><ellipse cx="7702.5" cy="699.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="7711.5" y="702.8701">isEmpty(): boolean</text><ellipse cx="7702.5" cy="715.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="7711.5" y="719.167">add(K): void</text><ellipse cx="7702.5" cy="732.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="7711.5" y="735.4639">add(K, int): void</text><ellipse cx="7702.5" cy="748.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="7711.5" y="751.7607">replaceTopElement(K): K</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7699.5" y="761.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="7711.5" y="768.0576">heapifyUp(int, Object): void</text><ellipse cx="7702.5" cy="781.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="7711.5" y="784.3545">poll(): K</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7699.5" y="794.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="7711.5" y="800.6514">heapifyDown(Object): void</text><ellipse cx="7702.5" cy="813.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="7711.5" y="816.9482">peek(): K</text><ellipse cx="7702.5" cy="829.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="7711.5" y="833.2451">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[fa540da4121149d9aa5d222a1f774870]
class elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter--><a href="ComparatorMinHeap.UnsortedIter.html" target="_top" title="ComparatorMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ComparatorMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="ComparatorMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter"><rect codeLine="50" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="7580.5" y="933"/><ellipse cx="7595.5" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7598.4688,954.6406 Q7597.8906,954.9375 7597.25,955.0781 Q7596.6094,955.2344 7595.9063,955.2344 Q7593.4063,955.2344 7592.0781,953.5938 Q7590.7656,951.9375 7590.7656,948.8125 Q7590.7656,945.6875 7592.0781,944.0313 Q7593.4063,942.375 7595.9063,942.375 Q7596.6094,942.375 7597.25,942.5313 Q7597.9063,942.6875 7598.4688,942.9844 L7598.4688,945.7031 Q7597.8438,945.125 7597.25,944.8594 Q7596.6563,944.5781 7596.0313,944.5781 Q7594.6875,944.5781 7594,945.6563 Q7593.3125,946.7188 7593.3125,948.8125 Q7593.3125,950.9063 7594,951.9844 Q7594.6875,953.0469 7596.0313,953.0469 Q7596.6563,953.0469 7597.25,952.7813 Q7597.8438,952.5 7598.4688,951.9219 L7598.4688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="7609.5" y="953.8467">ComparatorMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="7581.5" x2="7842.5" y1="965" y2="965"/><polygon fill="none" points="7591.5,973.6484,7595.5,977.6484,7591.5,981.6484,7587.5,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="7600.5" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="7581.5" x2="7842.5" y1="989.2969" y2="989.2969"/><ellipse cx="7591.5" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="7600.5" y="1006.292">valid(): boolean</text><ellipse cx="7591.5" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="7600.5" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="7591.5" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="7600.5" y="1038.8857">get(): K</text></g></a><!--MD5=[1f0b93e8245a9f0623a7490c038495c5]
class elki.utilities.datastructures.heap.DoubleObjectHeap--><a href="DoubleObjectHeap.html" target="_top" title="DoubleObjectHeap.html" xlink:actuate="onRequest" xlink:href="DoubleObjectHeap.html" xlink:show="new" xlink:title="DoubleObjectHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectHeap"><rect codeLine="57" fill="#F1F1F1" height="243.5625" id="elki.utilities.datastructures.heap.DoubleObjectHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="281" x="8401.5" y="114"/><ellipse cx="8464.25" cy="130" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8460.1719,125.7656 L8460.1719,123.6094 L8467.5625,123.6094 L8467.5625,125.7656 L8465.0938,125.7656 L8465.0938,133.8438 L8467.5625,133.8438 L8467.5625,136 L8460.1719,136 L8460.1719,133.8438 L8462.6406,133.8438 L8462.6406,125.7656 L8460.1719,125.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="8484.75" y="134.8467">DoubleObjectHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="8675.5" y="111"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="8676.5" y="123.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="8402.5" x2="8681.5" y1="146" y2="146"/><line style="stroke:#181818;stroke-width:0.5;" x1="8402.5" x2="8681.5" y1="154" y2="154"/><ellipse cx="8412.5" cy="167.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="143" x="8421.5" y="170.9951">add(double, V): void</text><ellipse cx="8412.5" cy="183.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="169" x="8421.5" y="187.292">add(double, V, int): void</text><ellipse cx="8412.5" cy="200.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="8421.5" y="203.5889">replaceTopElement(double, V): void</text><ellipse cx="8412.5" cy="216.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="129" x="8421.5" y="219.8857">peekKey(): double</text><ellipse cx="8412.5" cy="232.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="8421.5" y="236.1826">peekValue(): V</text><ellipse cx="8412.5" cy="249.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="212" x="8421.5" y="252.4795">containsKey(double): boolean</text><ellipse cx="8412.5" cy="265.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="188" x="8421.5" y="268.7764">containsValue(V): boolean</text><ellipse cx="8412.5" cy="281.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="75" x="8421.5" y="285.0732">poll(): void</text><ellipse cx="8412.5" cy="298.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="8421.5" y="301.3701">clear(): void</text><ellipse cx="8412.5" cy="314.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="8421.5" y="317.667">size(): int</text><ellipse cx="8412.5" cy="330.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="8421.5" y="333.9639">isEmpty(): boolean</text><ellipse cx="8412.5" cy="346.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="224" x="8421.5" y="350.2607">unsortedIter(): UnsortedIter&lt;V&gt;</text></g></a><!--MD5=[6359a5e9c108e1967fc5d4a4a87bec61]
class elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter--><a href="DoubleObjectHeap.UnsortedIter.html" target="_top" title="DoubleObjectHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleObjectHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleObjectHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter"><rect codeLine="72" fill="#F1F1F1" height="80.5938" id="elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="8713.5" y="637.5"/><ellipse cx="8728.5" cy="653.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8724.4219,649.2656 L8724.4219,647.1094 L8731.8125,647.1094 L8731.8125,649.2656 L8729.3438,649.2656 L8729.3438,657.3438 L8731.8125,657.3438 L8731.8125,659.5 L8724.4219,659.5 L8724.4219,657.3438 L8726.8906,657.3438 L8726.8906,649.2656 L8724.4219,649.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="225" x="8742.5" y="658.3467">DoubleObjectHeap.UnsortedIter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="8975.5" y="634.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="8976.5" y="646.6387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="8714.5" x2="8981.5" y1="669.5" y2="669.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8714.5" x2="8981.5" y1="677.5" y2="677.5"/><ellipse cx="8724.5" cy="691.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="117" x="8733.5" y="694.4951">getKey(): double</text><ellipse cx="8724.5" cy="707.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="8733.5" y="710.792">getValue(): V</text></g></a><!--MD5=[28d24fe4d25273318fc514d01b8714bf]
class elki.utilities.datastructures.heap.DoubleObjectMinHeap--><a href="DoubleObjectMinHeap.html" target="_top" title="DoubleObjectMinHeap.html" xlink:actuate="onRequest" xlink:href="DoubleObjectMinHeap.html" xlink:show="new" xlink:title="DoubleObjectMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectMinHeap"><rect codeLine="77" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleObjectMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="273" x="8097.5" y="491"/><ellipse cx="8146.25" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8149.2188,512.6406 Q8148.6406,512.9375 8148,513.0781 Q8147.3594,513.2344 8146.6563,513.2344 Q8144.1563,513.2344 8142.8281,511.5938 Q8141.5156,509.9375 8141.5156,506.8125 Q8141.5156,503.6875 8142.8281,502.0313 Q8144.1563,500.375 8146.6563,500.375 Q8147.3594,500.375 8148,500.5313 Q8148.6563,500.6875 8149.2188,500.9844 L8149.2188,503.7031 Q8148.5938,503.125 8148,502.8594 Q8147.4063,502.5781 8146.7813,502.5781 Q8145.4375,502.5781 8144.75,503.6563 Q8144.0625,504.7188 8144.0625,506.8125 Q8144.0625,508.9063 8144.75,509.9844 Q8145.4375,511.0469 8146.7813,511.0469 Q8147.4063,511.0469 8148,510.7813 Q8148.5938,510.5 8149.2188,509.9219 L8149.2188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="8166.75" y="511.8467">DoubleObjectMinHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="8363.5" y="488"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="8364.5" y="500.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="8098.5" x2="8369.5" y1="523" y2="523"/><polygon fill="none" points="8108.5,531.6484,8112.5,535.6484,8108.5,539.6484,8104.5,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="8117.5" y="539.9951">twoheap: double[]</text><polygon fill="none" points="8108.5,547.9453,8112.5,551.9453,8108.5,555.9453,8104.5,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="8117.5" y="556.292">twovals: Object[]</text><polygon fill="none" points="8108.5,564.2422,8112.5,568.2422,8108.5,572.2422,8104.5,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="8117.5" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8105.5" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="8117.5" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="8098.5" x2="8369.5" y1="596.1875" y2="596.1875"/><ellipse cx="8108.5" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="8117.5" y="613.1826">DoubleObjectMinHeap()</text><ellipse cx="8108.5" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="8117.5" y="629.4795">DoubleObjectMinHeap(int)</text><ellipse cx="8108.5" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="8117.5" y="645.7764">clear(): void</text><ellipse cx="8108.5" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="8117.5" y="662.0732">size(): int</text><ellipse cx="8108.5" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="8117.5" y="678.3701">isEmpty(): boolean</text><ellipse cx="8108.5" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="8117.5" y="694.667">add(double, V): void</text><ellipse cx="8108.5" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="8117.5" y="710.9639">add(double, V, int): void</text><ellipse cx="8108.5" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="8117.5" y="727.2607">replaceTopElement(double, V): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8105.5" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="8117.5" y="743.5576">heapifyUp(int, double, Object): void</text><ellipse cx="8108.5" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="8117.5" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8105.5" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="8117.5" y="776.1514">heapifyDown(double, Object): void</text><ellipse cx="8108.5" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="8117.5" y="792.4482">peekKey(): double</text><ellipse cx="8108.5" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="8117.5" y="808.7451">peekValue(): V</text><ellipse cx="8108.5" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="8117.5" y="825.042">containsKey(double): boolean</text><ellipse cx="8108.5" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="8117.5" y="841.3389">containsValue(V): boolean</text><ellipse cx="8108.5" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="8117.5" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[87a78c8b2c95ffdb6a3ab86d3ace29c6]
class elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter--><a href="DoubleObjectMinHeap.UnsortedIter.html" target="_top" title="DoubleObjectMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleObjectMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleObjectMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter"><rect codeLine="100" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="277" x="8169.5" y="925"/><ellipse cx="8184.5" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8187.4688,946.6406 Q8186.8906,946.9375 8186.25,947.0781 Q8185.6094,947.2344 8184.9063,947.2344 Q8182.4063,947.2344 8181.0781,945.5938 Q8179.7656,943.9375 8179.7656,940.8125 Q8179.7656,937.6875 8181.0781,936.0313 Q8182.4063,934.375 8184.9063,934.375 Q8185.6094,934.375 8186.25,934.5313 Q8186.9063,934.6875 8187.4688,934.9844 L8187.4688,937.7031 Q8186.8438,937.125 8186.25,936.8594 Q8185.6563,936.5781 8185.0313,936.5781 Q8183.6875,936.5781 8183,937.6563 Q8182.3125,938.7188 8182.3125,940.8125 Q8182.3125,942.9063 8183,943.9844 Q8183.6875,945.0469 8185.0313,945.0469 Q8185.6563,945.0469 8186.25,944.7813 Q8186.8438,944.5 8187.4688,943.9219 L8187.4688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="8198.5" y="945.8467">DoubleObjectMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="8170.5" x2="8445.5" y1="957" y2="957"/><polygon fill="none" points="8180.5,965.6484,8184.5,969.6484,8180.5,973.6484,8176.5,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="8189.5" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="8170.5" x2="8445.5" y1="981.2969" y2="981.2969"/><ellipse cx="8180.5" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="8189.5" y="998.292">valid(): boolean</text><ellipse cx="8180.5" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="8189.5" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="8180.5" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="8189.5" y="1030.8857">getKey(): double</text><ellipse cx="8180.5" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="8189.5" y="1047.1826">getValue(): V</text></g></a><!--MD5=[605b8b8f703af438bd096f397893d33f]
class elki.utilities.datastructures.heap.ObjectHeap--><a href="ObjectHeap.html" target="_top" title="ObjectHeap.html" xlink:actuate="onRequest" xlink:href="ObjectHeap.html" xlink:show="new" xlink:title="ObjectHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ObjectHeap"><rect codeLine="108" fill="#F1F1F1" height="194.6719" id="elki.utilities.datastructures.heap.ObjectHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="6547.5" y="138.5"/><ellipse cx="6619.75" cy="154.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6615.6719,150.2656 L6615.6719,148.1094 L6623.0625,148.1094 L6623.0625,150.2656 L6620.5938,150.2656 L6620.5938,158.3438 L6623.0625,158.3438 L6623.0625,160.5 L6615.6719,160.5 L6615.6719,158.3438 L6618.1406,158.3438 L6618.1406,150.2656 L6615.6719,150.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="6640.25" y="159.3467">ObjectHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="6789.5" y="135.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="6790.5" y="147.6387">K</text><line style="stroke:#181818;stroke-width:0.5;" x1="6548.5" x2="6795.5" y1="170.5" y2="170.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="6548.5" x2="6795.5" y1="178.5" y2="178.5"/><ellipse cx="6558.5" cy="192.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="85" x="6567.5" y="195.4951">add(K): void</text><ellipse cx="6558.5" cy="208.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="6567.5" y="211.792">add(K, int): void</text><ellipse cx="6558.5" cy="224.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="6567.5" y="228.0889">replaceTopElement(K): K</text><ellipse cx="6558.5" cy="241.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="63" x="6567.5" y="244.3857">peek(): K</text><ellipse cx="6558.5" cy="257.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="6567.5" y="260.6826">poll(): K</text><ellipse cx="6558.5" cy="273.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="6567.5" y="276.9795">clear(): void</text><ellipse cx="6558.5" cy="289.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="6567.5" y="293.2764">size(): int</text><ellipse cx="6558.5" cy="306.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="6567.5" y="309.5732">isEmpty(): boolean</text><ellipse cx="6558.5" cy="322.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="223" x="6567.5" y="325.8701">unsortedIter(): UnsortedIter&lt;K&gt;</text></g></a><!--MD5=[21acbd897d676317deedd87382ae0e7c]
class elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter--><a href="ObjectHeap.UnsortedIter.html" target="_top" title="ObjectHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ObjectHeap.UnsortedIter.html" xlink:show="new" xlink:title="ObjectHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter"><rect codeLine="120" fill="#F1F1F1" height="64.2969" id="elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="7438" y="646"/><ellipse cx="7453" cy="662" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7448.9219,657.7656 L7448.9219,655.6094 L7456.3125,655.6094 L7456.3125,657.7656 L7453.8438,657.7656 L7453.8438,665.8438 L7456.3125,665.8438 L7456.3125,668 L7448.9219,668 L7448.9219,665.8438 L7451.3906,665.8438 L7451.3906,657.7656 L7448.9219,657.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="174" x="7467" y="666.8467">ObjectHeap.UnsortedIter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="7649" y="643"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="7650" y="655.1387">K</text><line style="stroke:#181818;stroke-width:0.5;" x1="7439" x2="7655" y1="678" y2="678"/><line style="stroke:#181818;stroke-width:0.5;" x1="7439" x2="7655" y1="686" y2="686"/><ellipse cx="7449" cy="699.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="51" x="7458" y="702.9951">get(): K</text></g></a><!--MD5=[3a1d97dfbc5a950f495d9cfb9bb8a019]
class elki.utilities.datastructures.heap.DoubleObjectMaxHeap--><a href="DoubleObjectMaxHeap.html" target="_top" title="DoubleObjectMaxHeap.html" xlink:actuate="onRequest" xlink:href="DoubleObjectMaxHeap.html" xlink:show="new" xlink:title="DoubleObjectMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectMaxHeap"><rect codeLine="124" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleObjectMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="273" x="8405.5" y="491"/><ellipse cx="8452.75" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8455.7188,512.6406 Q8455.1406,512.9375 8454.5,513.0781 Q8453.8594,513.2344 8453.1563,513.2344 Q8450.6563,513.2344 8449.3281,511.5938 Q8448.0156,509.9375 8448.0156,506.8125 Q8448.0156,503.6875 8449.3281,502.0313 Q8450.6563,500.375 8453.1563,500.375 Q8453.8594,500.375 8454.5,500.5313 Q8455.1563,500.6875 8455.7188,500.9844 L8455.7188,503.7031 Q8455.0938,503.125 8454.5,502.8594 Q8453.9063,502.5781 8453.2813,502.5781 Q8451.9375,502.5781 8451.25,503.6563 Q8450.5625,504.7188 8450.5625,506.8125 Q8450.5625,508.9063 8451.25,509.9844 Q8451.9375,511.0469 8453.2813,511.0469 Q8453.9063,511.0469 8454.5,510.7813 Q8455.0938,510.5 8455.7188,509.9219 L8455.7188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="8473.25" y="511.8467">DoubleObjectMaxHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="8671.5" y="488"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="8672.5" y="500.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="8406.5" x2="8677.5" y1="523" y2="523"/><polygon fill="none" points="8416.5,531.6484,8420.5,535.6484,8416.5,539.6484,8412.5,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="8425.5" y="539.9951">twoheap: double[]</text><polygon fill="none" points="8416.5,547.9453,8420.5,551.9453,8416.5,555.9453,8412.5,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="8425.5" y="556.292">twovals: Object[]</text><polygon fill="none" points="8416.5,564.2422,8420.5,568.2422,8416.5,572.2422,8412.5,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="8425.5" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8413.5" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="8425.5" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="8406.5" x2="8677.5" y1="596.1875" y2="596.1875"/><ellipse cx="8416.5" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="8425.5" y="613.1826">DoubleObjectMaxHeap()</text><ellipse cx="8416.5" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="8425.5" y="629.4795">DoubleObjectMaxHeap(int)</text><ellipse cx="8416.5" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="8425.5" y="645.7764">clear(): void</text><ellipse cx="8416.5" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="8425.5" y="662.0732">size(): int</text><ellipse cx="8416.5" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="8425.5" y="678.3701">isEmpty(): boolean</text><ellipse cx="8416.5" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="8425.5" y="694.667">add(double, V): void</text><ellipse cx="8416.5" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="8425.5" y="710.9639">add(double, V, int): void</text><ellipse cx="8416.5" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="8425.5" y="727.2607">replaceTopElement(double, V): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8413.5" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="8425.5" y="743.5576">heapifyUp(int, double, Object): void</text><ellipse cx="8416.5" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="8425.5" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8413.5" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="8425.5" y="776.1514">heapifyDown(double, Object): void</text><ellipse cx="8416.5" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="8425.5" y="792.4482">peekKey(): double</text><ellipse cx="8416.5" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="8425.5" y="808.7451">peekValue(): V</text><ellipse cx="8416.5" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="8425.5" y="825.042">containsKey(double): boolean</text><ellipse cx="8416.5" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="8425.5" y="841.3389">containsValue(V): boolean</text><ellipse cx="8416.5" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="8425.5" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[15a8940d1c9a4f82e03554eaaf96ec31]
class elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter--><a href="DoubleObjectMaxHeap.UnsortedIter.html" target="_top" title="DoubleObjectMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleObjectMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleObjectMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter"><rect codeLine="147" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="280" x="8629" y="925"/><ellipse cx="8644" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8646.9688,946.6406 Q8646.3906,946.9375 8645.75,947.0781 Q8645.1094,947.2344 8644.4063,947.2344 Q8641.9063,947.2344 8640.5781,945.5938 Q8639.2656,943.9375 8639.2656,940.8125 Q8639.2656,937.6875 8640.5781,936.0313 Q8641.9063,934.375 8644.4063,934.375 Q8645.1094,934.375 8645.75,934.5313 Q8646.4063,934.6875 8646.9688,934.9844 L8646.9688,937.7031 Q8646.3438,937.125 8645.75,936.8594 Q8645.1563,936.5781 8644.5313,936.5781 Q8643.1875,936.5781 8642.5,937.6563 Q8641.8125,938.7188 8641.8125,940.8125 Q8641.8125,942.9063 8642.5,943.9844 Q8643.1875,945.0469 8644.5313,945.0469 Q8645.1563,945.0469 8645.75,944.7813 Q8646.3438,944.5 8646.9688,943.9219 L8646.9688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="8658" y="945.8467">DoubleObjectMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="8630" x2="8908" y1="957" y2="957"/><polygon fill="none" points="8640,965.6484,8644,969.6484,8640,973.6484,8636,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="8649" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="8630" x2="8908" y1="981.2969" y2="981.2969"/><ellipse cx="8640" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="8649" y="998.292">valid(): boolean</text><ellipse cx="8640" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="8649" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="8640" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="8649" y="1030.8857">getKey(): double</text><ellipse cx="8640" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="8649" y="1047.1826">getValue(): V</text></g></a><!--MD5=[d23ef3913050dee98a99d89a0ebf6877]
class elki.utilities.datastructures.heap.IntegerMinHeap--><a href="IntegerMinHeap.html" target="_top" title="IntegerMinHeap.html" xlink:actuate="onRequest" xlink:href="IntegerMinHeap.html" xlink:show="new" xlink:title="IntegerMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerMinHeap"><rect codeLine="155" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.IntegerMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="1820" y="523.5"/><ellipse cx="1870.25" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1873.2188,545.1406 Q1872.6406,545.4375 1872,545.5781 Q1871.3594,545.7344 1870.6563,545.7344 Q1868.1563,545.7344 1866.8281,544.0938 Q1865.5156,542.4375 1865.5156,539.3125 Q1865.5156,536.1875 1866.8281,534.5313 Q1868.1563,532.875 1870.6563,532.875 Q1871.3594,532.875 1872,533.0313 Q1872.6563,533.1875 1873.2188,533.4844 L1873.2188,536.2031 Q1872.5938,535.625 1872,535.3594 Q1871.4063,535.0781 1870.7813,535.0781 Q1869.4375,535.0781 1868.75,536.1563 Q1868.0625,537.2188 1868.0625,539.3125 Q1868.0625,541.4063 1868.75,542.4844 Q1869.4375,543.5469 1870.7813,543.5469 Q1871.4063,543.5469 1872,543.2813 Q1872.5938,543 1873.2188,542.4219 L1873.2188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="1890.75" y="544.3467">IntegerMinHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="1821" x2="2037" y1="555.5" y2="555.5"/><polygon fill="none" points="1831,564.1484,1835,568.1484,1831,572.1484,1827,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1840" y="572.4951">twoheap: int[]</text><polygon fill="none" points="1831,580.4453,1835,584.4453,1831,588.4453,1827,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1840" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1828" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="1840" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1821" x2="2037" y1="612.3906" y2="612.3906"/><ellipse cx="1831" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="1840" y="629.3857">IntegerMinHeap()</text><ellipse cx="1831" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="1840" y="645.6826">IntegerMinHeap(int)</text><ellipse cx="1831" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1840" y="661.9795">clear(): void</text><ellipse cx="1831" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="1840" y="678.2764">size(): int</text><ellipse cx="1831" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1840" y="694.5732">isEmpty(): boolean</text><ellipse cx="1831" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1840" y="710.8701">add(int): void</text><ellipse cx="1831" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1840" y="727.167">add(int, int): void</text><ellipse cx="1831" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1840" y="743.4639">replaceTopElement(int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1828" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="1840" y="759.7607">heapifyUp(int, int): void</text><ellipse cx="1831" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1840" y="776.0576">poll(): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1828" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1840" y="792.3545">heapifyDown(int): void</text><ellipse cx="1831" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1840" y="808.6514">peek(): int</text><ellipse cx="1831" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="1840" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[75ba7f6db7bf96a722d8f439153b7756]
class elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter--><a href="IntegerMinHeap.UnsortedIter.html" target="_top" title="IntegerMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter"><rect codeLine="174" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="231" x="1878.5" y="933"/><ellipse cx="1893.5" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1896.4688,954.6406 Q1895.8906,954.9375 1895.25,955.0781 Q1894.6094,955.2344 1893.9063,955.2344 Q1891.4063,955.2344 1890.0781,953.5938 Q1888.7656,951.9375 1888.7656,948.8125 Q1888.7656,945.6875 1890.0781,944.0313 Q1891.4063,942.375 1893.9063,942.375 Q1894.6094,942.375 1895.25,942.5313 Q1895.9063,942.6875 1896.4688,942.9844 L1896.4688,945.7031 Q1895.8438,945.125 1895.25,944.8594 Q1894.6563,944.5781 1894.0313,944.5781 Q1892.6875,944.5781 1892,945.6563 Q1891.3125,946.7188 1891.3125,948.8125 Q1891.3125,950.9063 1892,951.9844 Q1892.6875,953.0469 1894.0313,953.0469 Q1894.6563,953.0469 1895.25,952.7813 Q1895.8438,952.5 1896.4688,951.9219 L1896.4688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="1907.5" y="953.8467">IntegerMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1879.5" x2="2108.5" y1="965" y2="965"/><polygon fill="none" points="1889.5,973.6484,1893.5,977.6484,1889.5,981.6484,1885.5,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="1898.5" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1879.5" x2="2108.5" y1="989.2969" y2="989.2969"/><ellipse cx="1889.5" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1898.5" y="1006.292">valid(): boolean</text><ellipse cx="1889.5" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1898.5" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="1889.5" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="1898.5" y="1038.8857">get(): int</text></g></a><!--MD5=[401b66b155c9b6611b7668c6e2f8eb90]
class elki.utilities.datastructures.heap.DoubleMinHeap--><a href="DoubleMinHeap.html" target="_top" title="DoubleMinHeap.html" xlink:actuate="onRequest" xlink:href="DoubleMinHeap.html" xlink:show="new" xlink:title="DoubleMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleMinHeap"><rect codeLine="181" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.DoubleMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="276" x="951" y="523.5"/><ellipse cx="1029.75" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1032.7188,545.1406 Q1032.1406,545.4375 1031.5,545.5781 Q1030.8594,545.7344 1030.1563,545.7344 Q1027.6563,545.7344 1026.3281,544.0938 Q1025.0156,542.4375 1025.0156,539.3125 Q1025.0156,536.1875 1026.3281,534.5313 Q1027.6563,532.875 1030.1563,532.875 Q1030.8594,532.875 1031.5,533.0313 Q1032.1563,533.1875 1032.7188,533.4844 L1032.7188,536.2031 Q1032.0938,535.625 1031.5,535.3594 Q1030.9063,535.0781 1030.2813,535.0781 Q1028.9375,535.0781 1028.25,536.1563 Q1027.5625,537.2188 1027.5625,539.3125 Q1027.5625,541.4063 1028.25,542.4844 Q1028.9375,543.5469 1030.2813,543.5469 Q1030.9063,543.5469 1031.5,543.2813 Q1032.0938,543 1032.7188,542.4219 L1032.7188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="1050.25" y="544.3467">DoubleMinHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="952" x2="1226" y1="555.5" y2="555.5"/><polygon fill="none" points="962,564.1484,966,568.1484,962,572.1484,958,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="971" y="572.4951">twoheap: double[]</text><polygon fill="none" points="962,580.4453,966,584.4453,962,588.4453,958,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="971" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="959" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="971" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="952" x2="1226" y1="612.3906" y2="612.3906"/><ellipse cx="962" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="971" y="629.3857">DoubleMinHeap()</text><ellipse cx="962" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="971" y="645.6826">DoubleMinHeap(int)</text><ellipse cx="962" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="971" y="661.9795">clear(): void</text><ellipse cx="962" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="971" y="678.2764">size(): int</text><ellipse cx="962" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="971" y="694.5732">isEmpty(): boolean</text><ellipse cx="962" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="971" y="710.8701">add(double): void</text><ellipse cx="962" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="971" y="727.167">add(double, int): void</text><ellipse cx="962" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="971" y="743.4639">replaceTopElement(double): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="959" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="971" y="759.7607">heapifyUp(int, double): void</text><ellipse cx="962" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="971" y="776.0576">poll(): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="959" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="971" y="792.3545">heapifyDown(double): void</text><ellipse cx="962" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="971" y="808.6514">peek(): double</text><ellipse cx="962" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="971" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[630a77dca36811bc782453e870d3d9a6]
class elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter--><a href="DoubleMinHeap.UnsortedIter.html" target="_top" title="DoubleMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter"><rect codeLine="200" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="232" x="994" y="933"/><ellipse cx="1009" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1011.9688,954.6406 Q1011.3906,954.9375 1010.75,955.0781 Q1010.1094,955.2344 1009.4063,955.2344 Q1006.9063,955.2344 1005.5781,953.5938 Q1004.2656,951.9375 1004.2656,948.8125 Q1004.2656,945.6875 1005.5781,944.0313 Q1006.9063,942.375 1009.4063,942.375 Q1010.1094,942.375 1010.75,942.5313 Q1011.4063,942.6875 1011.9688,942.9844 L1011.9688,945.7031 Q1011.3438,945.125 1010.75,944.8594 Q1010.1563,944.5781 1009.5313,944.5781 Q1008.1875,944.5781 1007.5,945.6563 Q1006.8125,946.7188 1006.8125,948.8125 Q1006.8125,950.9063 1007.5,951.9844 Q1008.1875,953.0469 1009.5313,953.0469 Q1010.1563,953.0469 1010.75,952.7813 Q1011.3438,952.5 1011.9688,951.9219 L1011.9688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="1023" y="953.8467">DoubleMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="995" x2="1225" y1="965" y2="965"/><polygon fill="none" points="1005,973.6484,1009,977.6484,1005,981.6484,1001,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="1014" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="995" x2="1225" y1="989.2969" y2="989.2969"/><ellipse cx="1005" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1014" y="1006.292">valid(): boolean</text><ellipse cx="1005" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1014" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="1005" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1014" y="1038.8857">get(): double</text></g></a><!--MD5=[f2ea20f8f25d3664d3c149c4a23d3789]
class elki.utilities.datastructures.heap.ComparatorMaxHeap--><a href="ComparatorMaxHeap.html" target="_top" title="ComparatorMaxHeap.html" xlink:actuate="onRequest" xlink:href="ComparatorMaxHeap.html" xlink:show="new" xlink:title="ComparatorMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparatorMaxHeap"><rect codeLine="207" fill="#F1F1F1" height="325.0469" id="elki.utilities.datastructures.heap.ComparatorMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="374" x="5767" y="515.5"/><ellipse cx="5871.75" cy="531.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5874.7188,537.1406 Q5874.1406,537.4375 5873.5,537.5781 Q5872.8594,537.7344 5872.1563,537.7344 Q5869.6563,537.7344 5868.3281,536.0938 Q5867.0156,534.4375 5867.0156,531.3125 Q5867.0156,528.1875 5868.3281,526.5313 Q5869.6563,524.875 5872.1563,524.875 Q5872.8594,524.875 5873.5,525.0313 Q5874.1563,525.1875 5874.7188,525.4844 L5874.7188,528.2031 Q5874.0938,527.625 5873.5,527.3594 Q5872.9063,527.0781 5872.2813,527.0781 Q5870.9375,527.0781 5870.25,528.1563 Q5869.5625,529.2188 5869.5625,531.3125 Q5869.5625,533.4063 5870.25,534.4844 Q5870.9375,535.5469 5872.2813,535.5469 Q5872.9063,535.5469 5873.5,535.2813 Q5874.0938,535 5874.7188,534.4219 L5874.7188,537.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="5892.25" y="536.3467">ComparatorMaxHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="6134" y="512.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="6135" y="524.6387">K</text><line style="stroke:#181818;stroke-width:0.5;" x1="5768" x2="6140" y1="547.5" y2="547.5"/><polygon fill="none" points="5778,556.1484,5782,560.1484,5778,564.1484,5774,560.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="5787" y="564.4951">twoheap: Object[]</text><polygon fill="none" points="5778,572.4453,5782,576.4453,5778,580.4453,5774,576.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="5787" y="580.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5775" y="590.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="5787" y="597.0889">TWO_HEAP_INITIAL_SIZE: int</text><polygon fill="none" points="5778,605.0391,5782,609.0391,5778,613.0391,5774,609.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="5787" y="613.3857">comparator: Comparator&lt;Object&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5768" x2="6140" y1="620.6875" y2="620.6875"/><ellipse cx="5778" cy="634.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="5787" y="637.6826">ComparatorMaxHeap(Comparator&lt;? super K&gt;)</text><ellipse cx="5778" cy="650.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="5787" y="653.9795">ComparatorMaxHeap(int, Comparator&lt;? super K&gt;)</text><ellipse cx="5778" cy="666.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5787" y="670.2764">clear(): void</text><ellipse cx="5778" cy="683.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="5787" y="686.5732">size(): int</text><ellipse cx="5778" cy="699.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="5787" y="702.8701">isEmpty(): boolean</text><ellipse cx="5778" cy="715.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="5787" y="719.167">add(K): void</text><ellipse cx="5778" cy="732.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="5787" y="735.4639">add(K, int): void</text><ellipse cx="5778" cy="748.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="5787" y="751.7607">replaceTopElement(K): K</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5775" y="761.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="5787" y="768.0576">heapifyUp(int, Object): void</text><ellipse cx="5778" cy="781.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="5787" y="784.3545">poll(): K</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5775" y="794.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="5787" y="800.6514">heapifyDown(Object): void</text><ellipse cx="5778" cy="813.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="5787" y="816.9482">peek(): K</text><ellipse cx="5778" cy="829.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="5787" y="833.2451">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[a80fe192eff238113ec2289cb038b12c]
class elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter--><a href="ComparatorMaxHeap.UnsortedIter.html" target="_top" title="ComparatorMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ComparatorMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="ComparatorMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter"><rect codeLine="227" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="6095" y="933"/><ellipse cx="6110" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6112.9688,954.6406 Q6112.3906,954.9375 6111.75,955.0781 Q6111.1094,955.2344 6110.4063,955.2344 Q6107.9063,955.2344 6106.5781,953.5938 Q6105.2656,951.9375 6105.2656,948.8125 Q6105.2656,945.6875 6106.5781,944.0313 Q6107.9063,942.375 6110.4063,942.375 Q6111.1094,942.375 6111.75,942.5313 Q6112.4063,942.6875 6112.9688,942.9844 L6112.9688,945.7031 Q6112.3438,945.125 6111.75,944.8594 Q6111.1563,944.5781 6110.5313,944.5781 Q6109.1875,944.5781 6108.5,945.6563 Q6107.8125,946.7188 6107.8125,948.8125 Q6107.8125,950.9063 6108.5,951.9844 Q6109.1875,953.0469 6110.5313,953.0469 Q6111.1563,953.0469 6111.75,952.7813 Q6112.3438,952.5 6112.9688,951.9219 L6112.9688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="6124" y="953.8467">ComparatorMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="6096" x2="6360" y1="965" y2="965"/><polygon fill="none" points="6106,973.6484,6110,977.6484,6106,981.6484,6102,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="6115" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6096" x2="6360" y1="989.2969" y2="989.2969"/><ellipse cx="6106" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="6115" y="1006.292">valid(): boolean</text><ellipse cx="6106" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="6115" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="6106" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="6115" y="1038.8857">get(): K</text></g></a><!--MD5=[a4dbb7f07bf52f5f7fbb9893efd18e8e]
class elki.utilities.datastructures.heap.IntegerObjectHeap--><a href="IntegerObjectHeap.html" target="_top" title="IntegerObjectHeap.html" xlink:actuate="onRequest" xlink:href="IntegerObjectHeap.html" xlink:show="new" xlink:title="IntegerObjectHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectHeap"><rect codeLine="234" fill="#F1F1F1" height="243.5625" id="elki.utilities.datastructures.heap.IntegerObjectHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="250" x="3783" y="114"/><ellipse cx="3830.75" cy="130" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3826.6719,125.7656 L3826.6719,123.6094 L3834.0625,123.6094 L3834.0625,125.7656 L3831.5938,125.7656 L3831.5938,133.8438 L3834.0625,133.8438 L3834.0625,136 L3826.6719,136 L3826.6719,133.8438 L3829.1406,133.8438 L3829.1406,125.7656 L3826.6719,125.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="134" x="3851.25" y="134.8467">IntegerObjectHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="4026" y="111"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="4027" y="123.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="3784" x2="4032" y1="146" y2="146"/><line style="stroke:#181818;stroke-width:0.5;" x1="3784" x2="4032" y1="154" y2="154"/><ellipse cx="3794" cy="167.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="3803" y="170.9951">add(int, V): void</text><ellipse cx="3794" cy="183.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="138" x="3803" y="187.292">add(int, V, int): void</text><ellipse cx="3794" cy="200.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="224" x="3803" y="203.5889">replaceTopElement(int, V): void</text><ellipse cx="3794" cy="216.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="3803" y="219.8857">peekKey(): int</text><ellipse cx="3794" cy="232.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="3803" y="236.1826">peekValue(): V</text><ellipse cx="3794" cy="249.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="181" x="3803" y="252.4795">containsKey(int): boolean</text><ellipse cx="3794" cy="265.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="188" x="3803" y="268.7764">containsValue(V): boolean</text><ellipse cx="3794" cy="281.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="75" x="3803" y="285.0732">poll(): void</text><ellipse cx="3794" cy="298.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="3803" y="301.3701">clear(): void</text><ellipse cx="3794" cy="314.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="3803" y="317.667">size(): int</text><ellipse cx="3794" cy="330.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="3803" y="333.9639">isEmpty(): boolean</text><ellipse cx="3794" cy="346.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="224" x="3803" y="350.2607">unsortedIter(): UnsortedIter&lt;V&gt;</text></g></a><!--MD5=[fc11fedc37611d07b213d7c4da002f29]
class elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter--><a href="IntegerObjectHeap.UnsortedIter.html" target="_top" title="IntegerObjectHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerObjectHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerObjectHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter"><rect codeLine="249" fill="#F1F1F1" height="80.5938" id="elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="4437" y="637.5"/><ellipse cx="4452" cy="653.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4447.9219,649.2656 L4447.9219,647.1094 L4455.3125,647.1094 L4455.3125,649.2656 L4452.8438,649.2656 L4452.8438,657.3438 L4455.3125,657.3438 L4455.3125,659.5 L4447.9219,659.5 L4447.9219,657.3438 L4450.3906,657.3438 L4450.3906,649.2656 L4447.9219,649.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="224" x="4466" y="658.3467">IntegerObjectHeap.UnsortedIter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="4698" y="634.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="4699" y="646.6387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="4438" x2="4704" y1="669.5" y2="669.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4438" x2="4704" y1="677.5" y2="677.5"/><ellipse cx="4448" cy="691.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="4457" y="694.4951">getKey(): int</text><ellipse cx="4448" cy="707.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="4457" y="710.792">getValue(): V</text></g></a><!--MD5=[21b745710c5adb2c65185b92b16b56d6]
class elki.utilities.datastructures.heap.DoubleIntegerMinHeap--><a href="DoubleIntegerMinHeap.html" target="_top" title="DoubleIntegerMinHeap.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerMinHeap.html" xlink:show="new" xlink:title="DoubleIntegerMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerMinHeap"><rect codeLine="254" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleIntegerMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="281" x="22.5" y="491"/><ellipse cx="79.25" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M82.2188,512.6406 Q81.6406,512.9375 81,513.0781 Q80.3594,513.2344 79.6563,513.2344 Q77.1563,513.2344 75.8281,511.5938 Q74.5156,509.9375 74.5156,506.8125 Q74.5156,503.6875 75.8281,502.0313 Q77.1563,500.375 79.6563,500.375 Q80.3594,500.375 81,500.5313 Q81.6563,500.6875 82.2188,500.9844 L82.2188,503.7031 Q81.5938,503.125 81,502.8594 Q80.4063,502.5781 79.7813,502.5781 Q78.4375,502.5781 77.75,503.6563 Q77.0625,504.7188 77.0625,506.8125 Q77.0625,508.9063 77.75,509.9844 Q78.4375,511.0469 79.7813,511.0469 Q80.4063,511.0469 81,510.7813 Q81.5938,510.5 82.2188,509.9219 L82.2188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="99.75" y="511.8467">DoubleIntegerMinHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="302.5" y1="523" y2="523"/><polygon fill="none" points="33.5,531.6484,37.5,535.6484,33.5,539.6484,29.5,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="42.5" y="539.9951">twoheap: double[]</text><polygon fill="none" points="33.5,547.9453,37.5,551.9453,33.5,555.9453,29.5,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="42.5" y="556.292">twovals: int[]</text><polygon fill="none" points="33.5,564.2422,37.5,568.2422,33.5,572.2422,29.5,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="42.5" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="42.5" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="302.5" y1="596.1875" y2="596.1875"/><ellipse cx="33.5" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="42.5" y="613.1826">DoubleIntegerMinHeap()</text><ellipse cx="33.5" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="42.5" y="629.4795">DoubleIntegerMinHeap(int)</text><ellipse cx="33.5" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="42.5" y="645.7764">clear(): void</text><ellipse cx="33.5" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="42.5" y="662.0732">size(): int</text><ellipse cx="33.5" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="42.5" y="678.3701">isEmpty(): boolean</text><ellipse cx="33.5" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="42.5" y="694.667">add(double, int): void</text><ellipse cx="33.5" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="42.5" y="710.9639">add(double, int, int): void</text><ellipse cx="33.5" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="42.5" y="727.2607">replaceTopElement(double, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="42.5" y="743.5576">heapifyUp(int, double, int): void</text><ellipse cx="33.5" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="42.5" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="42.5" y="776.1514">heapifyDown(double, int): void</text><ellipse cx="33.5" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="42.5" y="792.4482">peekKey(): double</text><ellipse cx="33.5" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="42.5" y="808.7451">peekValue(): int</text><ellipse cx="33.5" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="42.5" y="825.042">containsKey(double): boolean</text><ellipse cx="33.5" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="42.5" y="841.3389">containsValue(int): boolean</text><ellipse cx="33.5" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="42.5" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[70e9edd0791a44dbbee2ab05a083b58f]
class elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter--><a href="DoubleIntegerMinHeap.UnsortedIter.html" target="_top" title="DoubleIntegerMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleIntegerMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter"><rect codeLine="277" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="281" x="98.5" y="925"/><ellipse cx="113.5" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M116.4688,946.6406 Q115.8906,946.9375 115.25,947.0781 Q114.6094,947.2344 113.9063,947.2344 Q111.4063,947.2344 110.0781,945.5938 Q108.7656,943.9375 108.7656,940.8125 Q108.7656,937.6875 110.0781,936.0313 Q111.4063,934.375 113.9063,934.375 Q114.6094,934.375 115.25,934.5313 Q115.9063,934.6875 116.4688,934.9844 L116.4688,937.7031 Q115.8438,937.125 115.25,936.8594 Q114.6563,936.5781 114.0313,936.5781 Q112.6875,936.5781 112,937.6563 Q111.3125,938.7188 111.3125,940.8125 Q111.3125,942.9063 112,943.9844 Q112.6875,945.0469 114.0313,945.0469 Q114.6563,945.0469 115.25,944.7813 Q115.8438,944.5 116.4688,943.9219 L116.4688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="127.5" y="945.8467">DoubleIntegerMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="99.5" x2="378.5" y1="957" y2="957"/><polygon fill="none" points="109.5,965.6484,113.5,969.6484,109.5,973.6484,105.5,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="118.5" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="99.5" x2="378.5" y1="981.2969" y2="981.2969"/><ellipse cx="109.5" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="118.5" y="998.292">valid(): boolean</text><ellipse cx="109.5" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="118.5" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="109.5" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="118.5" y="1030.8857">getKey(): double</text><ellipse cx="109.5" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="118.5" y="1047.1826">getValue(): int</text></g></a><!--MD5=[ca37929bf5f29f30090c385524df4cbb]
class elki.utilities.datastructures.heap.DoubleLongMinHeap--><a href="DoubleLongMinHeap.html" target="_top" title="DoubleLongMinHeap.html" xlink:actuate="onRequest" xlink:href="DoubleLongMinHeap.html" xlink:show="new" xlink:title="DoubleLongMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongMinHeap"><rect codeLine="285" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleLongMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="2900" y="491"/><ellipse cx="2970.75" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2973.7188,512.6406 Q2973.1406,512.9375 2972.5,513.0781 Q2971.8594,513.2344 2971.1563,513.2344 Q2968.6563,513.2344 2967.3281,511.5938 Q2966.0156,509.9375 2966.0156,506.8125 Q2966.0156,503.6875 2967.3281,502.0313 Q2968.6563,500.375 2971.1563,500.375 Q2971.8594,500.375 2972.5,500.5313 Q2973.1563,500.6875 2973.7188,500.9844 L2973.7188,503.7031 Q2973.0938,503.125 2972.5,502.8594 Q2971.9063,502.5781 2971.2813,502.5781 Q2969.9375,502.5781 2969.25,503.6563 Q2968.5625,504.7188 2968.5625,506.8125 Q2968.5625,508.9063 2969.25,509.9844 Q2969.9375,511.0469 2971.2813,511.0469 Q2971.9063,511.0469 2972.5,510.7813 Q2973.0938,510.5 2973.7188,509.9219 L2973.7188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="2991.25" y="511.8467">DoubleLongMinHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2901" x2="3193" y1="523" y2="523"/><polygon fill="none" points="2911,531.6484,2915,535.6484,2911,539.6484,2907,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="2920" y="539.9951">twoheap: double[]</text><polygon fill="none" points="2911,547.9453,2915,551.9453,2911,555.9453,2907,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2920" y="556.292">twovals: long[]</text><polygon fill="none" points="2911,564.2422,2915,568.2422,2911,572.2422,2907,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="2920" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2908" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="2920" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2901" x2="3193" y1="596.1875" y2="596.1875"/><ellipse cx="2911" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="2920" y="613.1826">DoubleLongMinHeap()</text><ellipse cx="2911" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="2920" y="629.4795">DoubleLongMinHeap(int)</text><ellipse cx="2911" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2920" y="645.7764">clear(): void</text><ellipse cx="2911" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="2920" y="662.0732">size(): int</text><ellipse cx="2911" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2920" y="678.3701">isEmpty(): boolean</text><ellipse cx="2911" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2920" y="694.667">add(double, long): void</text><ellipse cx="2911" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="2920" y="710.9639">add(double, long, int): void</text><ellipse cx="2911" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="2920" y="727.2607">replaceTopElement(double, long): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2908" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="2920" y="743.5576">heapifyUp(int, double, long): void</text><ellipse cx="2911" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="2920" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2908" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="2920" y="776.1514">heapifyDown(double, long): void</text><ellipse cx="2911" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="2920" y="792.4482">peekKey(): double</text><ellipse cx="2911" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2920" y="808.7451">peekValue(): long</text><ellipse cx="2911" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="2920" y="825.042">containsKey(double): boolean</text><ellipse cx="2911" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="2920" y="841.3389">containsValue(long): boolean</text><ellipse cx="2911" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="2920" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[d057bc86348b792addda65766c4a28f9]
class elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter--><a href="DoubleLongMinHeap.UnsortedIter.html" target="_top" title="DoubleLongMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleLongMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleLongMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter"><rect codeLine="308" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="3066" y="925"/><ellipse cx="3081" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3083.9688,946.6406 Q3083.3906,946.9375 3082.75,947.0781 Q3082.1094,947.2344 3081.4063,947.2344 Q3078.9063,947.2344 3077.5781,945.5938 Q3076.2656,943.9375 3076.2656,940.8125 Q3076.2656,937.6875 3077.5781,936.0313 Q3078.9063,934.375 3081.4063,934.375 Q3082.1094,934.375 3082.75,934.5313 Q3083.4063,934.6875 3083.9688,934.9844 L3083.9688,937.7031 Q3083.3438,937.125 3082.75,936.8594 Q3082.1563,936.5781 3081.5313,936.5781 Q3080.1875,936.5781 3079.5,937.6563 Q3078.8125,938.7188 3078.8125,940.8125 Q3078.8125,942.9063 3079.5,943.9844 Q3080.1875,945.0469 3081.5313,945.0469 Q3082.1563,945.0469 3082.75,944.7813 Q3083.3438,944.5 3083.9688,943.9219 L3083.9688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="3095" y="945.8467">DoubleLongMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="3067" x2="3331" y1="957" y2="957"/><polygon fill="none" points="3077,965.6484,3081,969.6484,3077,973.6484,3073,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="3086" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3067" x2="3331" y1="981.2969" y2="981.2969"/><ellipse cx="3077" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="3086" y="998.292">valid(): boolean</text><ellipse cx="3077" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="3086" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="3077" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="3086" y="1030.8857">getKey(): double</text><ellipse cx="3077" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="3086" y="1047.1826">getValue(): long</text></g></a><!--MD5=[1b9c46fe067a8ce3037d3b2c45b7a422]
class elki.utilities.datastructures.heap.IntegerMaxHeap--><a href="IntegerMaxHeap.html" target="_top" title="IntegerMaxHeap.html" xlink:actuate="onRequest" xlink:href="IntegerMaxHeap.html" xlink:show="new" xlink:title="IntegerMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerMaxHeap"><rect codeLine="316" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.IntegerMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="2073" y="523.5"/><ellipse cx="2121.75" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2124.7188,545.1406 Q2124.1406,545.4375 2123.5,545.5781 Q2122.8594,545.7344 2122.1563,545.7344 Q2119.6563,545.7344 2118.3281,544.0938 Q2117.0156,542.4375 2117.0156,539.3125 Q2117.0156,536.1875 2118.3281,534.5313 Q2119.6563,532.875 2122.1563,532.875 Q2122.8594,532.875 2123.5,533.0313 Q2124.1563,533.1875 2124.7188,533.4844 L2124.7188,536.2031 Q2124.0938,535.625 2123.5,535.3594 Q2122.9063,535.0781 2122.2813,535.0781 Q2120.9375,535.0781 2120.25,536.1563 Q2119.5625,537.2188 2119.5625,539.3125 Q2119.5625,541.4063 2120.25,542.4844 Q2120.9375,543.5469 2122.2813,543.5469 Q2122.9063,543.5469 2123.5,543.2813 Q2124.0938,543 2124.7188,542.4219 L2124.7188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="2142.25" y="544.3467">IntegerMaxHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2074" x2="2290" y1="555.5" y2="555.5"/><polygon fill="none" points="2084,564.1484,2088,568.1484,2084,572.1484,2080,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="2093" y="572.4951">twoheap: int[]</text><polygon fill="none" points="2084,580.4453,2088,584.4453,2084,588.4453,2080,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="2093" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2081" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="2093" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2074" x2="2290" y1="612.3906" y2="612.3906"/><ellipse cx="2084" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2093" y="629.3857">IntegerMaxHeap()</text><ellipse cx="2084" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="2093" y="645.6826">IntegerMaxHeap(int)</text><ellipse cx="2084" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2093" y="661.9795">clear(): void</text><ellipse cx="2084" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="2093" y="678.2764">size(): int</text><ellipse cx="2084" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2093" y="694.5732">isEmpty(): boolean</text><ellipse cx="2084" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="2093" y="710.8701">add(int): void</text><ellipse cx="2084" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2093" y="727.167">add(int, int): void</text><ellipse cx="2084" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2093" y="743.4639">replaceTopElement(int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2081" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2093" y="759.7607">heapifyUp(int, int): void</text><ellipse cx="2084" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="2093" y="776.0576">poll(): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2081" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="2093" y="792.3545">heapifyDown(int): void</text><ellipse cx="2084" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="2093" y="808.6514">peek(): int</text><ellipse cx="2084" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="2093" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[43766f0f5ba8cffaf2e8ee82d11bf3eb]
class elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter--><a href="IntegerMaxHeap.UnsortedIter.html" target="_top" title="IntegerMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter"><rect codeLine="335" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="2210" y="933"/><ellipse cx="2225" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2227.9688,954.6406 Q2227.3906,954.9375 2226.75,955.0781 Q2226.1094,955.2344 2225.4063,955.2344 Q2222.9063,955.2344 2221.5781,953.5938 Q2220.2656,951.9375 2220.2656,948.8125 Q2220.2656,945.6875 2221.5781,944.0313 Q2222.9063,942.375 2225.4063,942.375 Q2226.1094,942.375 2226.75,942.5313 Q2227.4063,942.6875 2227.9688,942.9844 L2227.9688,945.7031 Q2227.3438,945.125 2226.75,944.8594 Q2226.1563,944.5781 2225.5313,944.5781 Q2224.1875,944.5781 2223.5,945.6563 Q2222.8125,946.7188 2222.8125,948.8125 Q2222.8125,950.9063 2223.5,951.9844 Q2224.1875,953.0469 2225.5313,953.0469 Q2226.1563,953.0469 2226.75,952.7813 Q2227.3438,952.5 2227.9688,951.9219 L2227.9688,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="2239" y="953.8467">IntegerMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="2211" x2="2443" y1="965" y2="965"/><polygon fill="none" points="2221,973.6484,2225,977.6484,2221,981.6484,2217,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="2230" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2211" x2="2443" y1="989.2969" y2="989.2969"/><ellipse cx="2221" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="2230" y="1006.292">valid(): boolean</text><ellipse cx="2221" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2230" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="2221" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="2230" y="1038.8857">get(): int</text></g></a><!--MD5=[30ebade47fedc2a4b0a7446ddb9989a8]
class elki.utilities.datastructures.heap.Heap--><a href="Heap.html" target="_top" title="Heap.html" xlink:actuate="onRequest" xlink:href="Heap.html" xlink:show="new" xlink:title="Heap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.Heap"><rect codeLine="342" fill="#F1F1F1" height="390.2344" id="elki.utilities.datastructures.heap.Heap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="5173" y="41"/><ellipse cx="5277.75" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5280.7188,62.6406 Q5280.1406,62.9375 5279.5,63.0781 Q5278.8594,63.2344 5278.1563,63.2344 Q5275.6563,63.2344 5274.3281,61.5938 Q5273.0156,59.9375 5273.0156,56.8125 Q5273.0156,53.6875 5274.3281,52.0313 Q5275.6563,50.375 5278.1563,50.375 Q5278.8594,50.375 5279.5,50.5313 Q5280.1563,50.6875 5280.7188,50.9844 L5280.7188,53.7031 Q5280.0938,53.125 5279.5,52.8594 Q5278.9063,52.5781 5278.2813,52.5781 Q5276.9375,52.5781 5276.25,53.6563 Q5275.5625,54.7188 5275.5625,56.8125 Q5275.5625,58.9063 5276.25,59.9844 Q5276.9375,61.0469 5278.2813,61.0469 Q5278.9063,61.0469 5279.5,60.7813 Q5280.0938,60.5 5280.7188,59.9219 L5280.7188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="5298.25" y="61.8467">Heap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="5432" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="5433" y="50.1387">E</text><line style="stroke:#181818;stroke-width:0.5;" x1="5174" x2="5438" y1="73" y2="73"/><polygon fill="none" points="5184,81.6484,5188,85.6484,5184,89.6484,5180,85.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="5193" y="89.9951">queue: Object[]</text><polygon fill="none" points="5184,97.9453,5188,101.9453,5184,105.9453,5180,101.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="5193" y="106.292">size: int</text><polygon fill="none" points="5184,114.2422,5188,118.2422,5184,122.2422,5180,118.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="5193" y="122.5889">comparator: Comparator&lt;Object&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5181" y="132.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="5193" y="138.8857">modCount: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5181" y="148.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="215" x="5193" y="155.1826">DEFAULT_INITIAL_CAPACITY: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="5174" x2="5438" y1="162.4844" y2="162.4844"/><ellipse cx="5184" cy="176.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="46" x="5193" y="179.4795">Heap()</text><ellipse cx="5184" cy="192.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="5193" y="195.7764">Heap(int)</text><ellipse cx="5184" cy="208.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="5193" y="212.0732">Heap(Comparator&lt;? super E&gt;)</text><ellipse cx="5184" cy="225.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="5193" y="228.3701">Heap(int, Comparator&lt;? super E&gt;)</text><ellipse cx="5184" cy="241.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="5193" y="244.667">add(E): void</text><ellipse cx="5184" cy="257.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="5193" y="260.9639">add(E, int): void</text><ellipse cx="5184" cy="273.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="5193" y="277.2607">peek(): E</text><ellipse cx="5184" cy="290.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="5193" y="293.5576">poll(): E</text><polygon fill="#FFFF44" points="5184,301.5078,5188,305.5078,5184,309.5078,5180,305.5078" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="5193" y="309.8545">heapifyUp(int, E): void</text><polygon fill="#FFFF44" points="5184,317.8047,5188,321.8047,5184,325.8047,5180,321.8047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="5193" y="326.1514">heapifyDown(int, Object): boolean</text><ellipse cx="5184" cy="339.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="5193" y="342.4482">size(): int</text><ellipse cx="5184" cy="355.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="5193" y="358.7451">isEmpty(): boolean</text><ellipse cx="5184" cy="371.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5193" y="375.042">clear(): void</text><polygon fill="#FFFF44" points="5184,382.9922,5188,386.9922,5184,390.9922,5180,386.9922" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5193" y="391.3389">heapModified(): void</text><ellipse cx="5184" cy="404.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="5193" y="407.6357">unorderedIter(): UnorderedIter</text><polygon fill="#FFFF44" points="5184,415.5859,5188,419.5859,5184,423.5859,5180,419.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="5193" y="423.9326">checkHeap(): String</text></g></a><!--MD5=[6ddc29f43175e77a7dbe066de2197f19]
class elki.utilities.datastructures.heap.Heap.UnorderedIter--><a href="Heap.UnorderedIter.html" target="_top" title="Heap.UnorderedIter.html" xlink:actuate="onRequest" xlink:href="Heap.UnorderedIter.html" xlink:show="new" xlink:title="Heap.UnorderedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.Heap.UnorderedIter"><rect codeLine="366" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.Heap.UnorderedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="7203.5" y="621.5"/><ellipse cx="7232.45" cy="637.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7235.4188,643.1406 Q7234.8406,643.4375 7234.2,643.5781 Q7233.5594,643.7344 7232.8563,643.7344 Q7230.3563,643.7344 7229.0281,642.0938 Q7227.7156,640.4375 7227.7156,637.3125 Q7227.7156,634.1875 7229.0281,632.5313 Q7230.3563,630.875 7232.8563,630.875 Q7233.5594,630.875 7234.2,631.0313 Q7234.8563,631.1875 7235.4188,631.4844 L7235.4188,634.2031 Q7234.7938,633.625 7234.2,633.3594 Q7233.6063,633.0781 7232.9813,633.0781 Q7231.6375,633.0781 7230.95,634.1563 Q7230.2625,635.2188 7230.2625,637.3125 Q7230.2625,639.4063 7230.95,640.4844 Q7231.6375,641.5469 7232.9813,641.5469 Q7233.6063,641.5469 7234.2,641.2813 Q7234.7938,641 7235.4188,640.4219 L7235.4188,643.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="7249.55" y="642.3467">Heap.UnorderedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="7204.5" x2="7401.5" y1="653.5" y2="653.5"/><polygon fill="none" points="7214.5,663.1484,7210.5,669.1484,7218.5,669.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="7223.5" y="670.4951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="7204.5" x2="7401.5" y1="677.7969" y2="677.7969"/><ellipse cx="7214.5" cy="691.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="7223.5" y="694.792">valid(): boolean</text><ellipse cx="7214.5" cy="707.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="7223.5" y="711.0889">advance(): UnorderedIter</text><ellipse cx="7214.5" cy="724.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="7223.5" y="727.3857">get(): E</text></g></a><!--MD5=[c9fa0eb460bba6fef5d060cb7e7f0fcb]
class elki.utilities.datastructures.heap.ComparableMaxHeap--><a href="ComparableMaxHeap.html" target="_top" title="ComparableMaxHeap.html" xlink:actuate="onRequest" xlink:href="ComparableMaxHeap.html" xlink:show="new" xlink:title="ComparableMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMaxHeap"><rect codeLine="373" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.ComparableMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="992" x="6176" y="523.5"/><ellipse cx="6487.75" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6490.7188,545.1406 Q6490.1406,545.4375 6489.5,545.5781 Q6488.8594,545.7344 6488.1563,545.7344 Q6485.6563,545.7344 6484.3281,544.0938 Q6483.0156,542.4375 6483.0156,539.3125 Q6483.0156,536.1875 6484.3281,534.5313 Q6485.6563,532.875 6488.1563,532.875 Q6488.8594,532.875 6489.5,533.0313 Q6490.1563,533.1875 6490.7188,533.4844 L6490.7188,536.2031 Q6490.0938,535.625 6489.5,535.3594 Q6488.9063,535.0781 6488.2813,535.0781 Q6486.9375,535.0781 6486.25,536.1563 Q6485.5625,537.2188 6485.5625,539.3125 Q6485.5625,541.4063 6486.25,542.4844 Q6486.9375,543.5469 6488.2813,543.5469 Q6488.9063,543.5469 6489.5,543.2813 Q6490.0938,543 6490.7188,542.4219 L6490.7188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="6508.25" y="544.3467">ComparableMaxHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="212" x="6959" y="520.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="210" x="6960" y="532.6387">K extends Comparable&lt;? super K&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6177" x2="7167" y1="555.5" y2="555.5"/><polygon fill="none" points="6187,564.1484,6191,568.1484,6187,572.1484,6183,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="6196" y="572.4951">twoheap: Comparable&lt;Object&gt;[]</text><polygon fill="none" points="6187,580.4453,6191,584.4453,6187,588.4453,6183,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="6196" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6184" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="6196" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6177" x2="7167" y1="612.3906" y2="612.3906"/><ellipse cx="6187" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="6196" y="629.3857">ComparableMaxHeap()</text><ellipse cx="6187" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="6196" y="645.6826">ComparableMaxHeap(int)</text><ellipse cx="6187" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="6196" y="661.9795">clear(): void</text><ellipse cx="6187" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6196" y="678.2764">size(): int</text><ellipse cx="6187" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="6196" y="694.5732">isEmpty(): boolean</text><ellipse cx="6187" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="479" x="6196" y="710.8701">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): void</text><ellipse cx="6187" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="6196" y="727.167">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;, int): void</text><ellipse cx="6187" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="966" x="6196" y="743.4639">replaceTopElement(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6184" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="6196" y="759.7607">heapifyUp(int, Comparable&lt;Object&gt;): void</text><ellipse cx="6187" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="6196" y="776.0576">poll(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6184" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="6196" y="792.3545">heapifyDown(Comparable&lt;Object&gt;): void</text><ellipse cx="6187" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="6196" y="808.6514">peek(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><ellipse cx="6187" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="6196" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[d6450cc86e60d2a7d9899df17ac4474a]
class elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter--><a href="ComparableMaxHeap.UnsortedIter.html" target="_top" title="ComparableMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ComparableMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="ComparableMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter"><rect codeLine="392" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="474" x="6670" y="933"/><ellipse cx="6784.75" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6787.7188,954.6406 Q6787.1406,954.9375 6786.5,955.0781 Q6785.8594,955.2344 6785.1563,955.2344 Q6782.6563,955.2344 6781.3281,953.5938 Q6780.0156,951.9375 6780.0156,948.8125 Q6780.0156,945.6875 6781.3281,944.0313 Q6782.6563,942.375 6785.1563,942.375 Q6785.8594,942.375 6786.5,942.5313 Q6787.1563,942.6875 6787.7188,942.9844 L6787.7188,945.7031 Q6787.0938,945.125 6786.5,944.8594 Q6785.9063,944.5781 6785.2813,944.5781 Q6783.9375,944.5781 6783.25,945.6563 Q6782.5625,946.7188 6782.5625,948.8125 Q6782.5625,950.9063 6783.25,951.9844 Q6783.9375,953.0469 6785.2813,953.0469 Q6785.9063,953.0469 6786.5,952.7813 Q6787.0938,952.5 6787.7188,951.9219 L6787.7188,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="6805.25" y="953.8467">ComparableMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="6671" x2="7143" y1="965" y2="965"/><polygon fill="none" points="6681,973.6484,6685,977.6484,6681,981.6484,6677,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="6690" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6671" x2="7143" y1="989.2969" y2="989.2969"/><ellipse cx="6681" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="6690" y="1006.292">valid(): boolean</text><ellipse cx="6681" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="6690" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="6681" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="6690" y="1038.8857">get(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text></g></a><!--MD5=[580c80fa0322b948890bb160d1e049a7]
class elki.utilities.datastructures.heap.IntegerObjectMaxHeap--><a href="IntegerObjectMaxHeap.html" target="_top" title="IntegerObjectMaxHeap.html" xlink:actuate="onRequest" xlink:href="IntegerObjectMaxHeap.html" xlink:show="new" xlink:title="IntegerObjectMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectMaxHeap"><rect codeLine="399" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.IntegerObjectMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="242" x="3510" y="491"/><ellipse cx="3543.45" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3546.4188,512.6406 Q3545.8406,512.9375 3545.2,513.0781 Q3544.5594,513.2344 3543.8563,513.2344 Q3541.3563,513.2344 3540.0281,511.5938 Q3538.7156,509.9375 3538.7156,506.8125 Q3538.7156,503.6875 3540.0281,502.0313 Q3541.3563,500.375 3543.8563,500.375 Q3544.5594,500.375 3545.2,500.5313 Q3545.8563,500.6875 3546.4188,500.9844 L3546.4188,503.7031 Q3545.7938,503.125 3545.2,502.8594 Q3544.6063,502.5781 3543.9813,502.5781 Q3542.6375,502.5781 3541.95,503.6563 Q3541.2625,504.7188 3541.2625,506.8125 Q3541.2625,508.9063 3541.95,509.9844 Q3542.6375,511.0469 3543.9813,511.0469 Q3544.6063,511.0469 3545.2,510.7813 Q3545.7938,510.5 3546.4188,509.9219 L3546.4188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="3561.55" y="511.8467">IntegerObjectMaxHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3745" y="488"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3746" y="500.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="3511" x2="3751" y1="523" y2="523"/><polygon fill="none" points="3521,531.6484,3525,535.6484,3521,539.6484,3517,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="3530" y="539.9951">twoheap: int[]</text><polygon fill="none" points="3521,547.9453,3525,551.9453,3521,555.9453,3517,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="3530" y="556.292">twovals: Object[]</text><polygon fill="none" points="3521,564.2422,3525,568.2422,3521,572.2422,3517,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="3530" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3518" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="3530" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3511" x2="3751" y1="596.1875" y2="596.1875"/><ellipse cx="3521" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="3530" y="613.1826">IntegerObjectMaxHeap()</text><ellipse cx="3521" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="3530" y="629.4795">IntegerObjectMaxHeap(int)</text><ellipse cx="3521" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3530" y="645.7764">clear(): void</text><ellipse cx="3521" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="3530" y="662.0732">size(): int</text><ellipse cx="3521" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="3530" y="678.3701">isEmpty(): boolean</text><ellipse cx="3521" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3530" y="694.667">add(int, V): void</text><ellipse cx="3521" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="3530" y="710.9639">add(int, V, int): void</text><ellipse cx="3521" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="3530" y="727.2607">replaceTopElement(int, V): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3518" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="3530" y="743.5576">heapifyUp(int, int, Object): void</text><ellipse cx="3521" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="3530" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3518" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="3530" y="776.1514">heapifyDown(int, Object): void</text><ellipse cx="3521" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="3530" y="792.4482">peekKey(): int</text><ellipse cx="3521" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="3530" y="808.7451">peekValue(): V</text><ellipse cx="3521" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="3530" y="825.042">containsKey(int): boolean</text><ellipse cx="3521" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="3530" y="841.3389">containsValue(V): boolean</text><ellipse cx="3521" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="3530" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[ab5e2ef8ddac97a8a56cd90b07e0a643]
class elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter--><a href="IntegerObjectMaxHeap.UnsortedIter.html" target="_top" title="IntegerObjectMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerObjectMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerObjectMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter"><rect codeLine="422" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="279" x="3648.5" y="925"/><ellipse cx="3663.5" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3666.4688,946.6406 Q3665.8906,946.9375 3665.25,947.0781 Q3664.6094,947.2344 3663.9063,947.2344 Q3661.4063,947.2344 3660.0781,945.5938 Q3658.7656,943.9375 3658.7656,940.8125 Q3658.7656,937.6875 3660.0781,936.0313 Q3661.4063,934.375 3663.9063,934.375 Q3664.6094,934.375 3665.25,934.5313 Q3665.9063,934.6875 3666.4688,934.9844 L3666.4688,937.7031 Q3665.8438,937.125 3665.25,936.8594 Q3664.6563,936.5781 3664.0313,936.5781 Q3662.6875,936.5781 3662,937.6563 Q3661.3125,938.7188 3661.3125,940.8125 Q3661.3125,942.9063 3662,943.9844 Q3662.6875,945.0469 3664.0313,945.0469 Q3664.6563,945.0469 3665.25,944.7813 Q3665.8438,944.5 3666.4688,943.9219 L3666.4688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="3677.5" y="945.8467">IntegerObjectMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="3649.5" x2="3926.5" y1="957" y2="957"/><polygon fill="none" points="3659.5,965.6484,3663.5,969.6484,3659.5,973.6484,3655.5,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="3668.5" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3649.5" x2="3926.5" y1="981.2969" y2="981.2969"/><ellipse cx="3659.5" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="3668.5" y="998.292">valid(): boolean</text><ellipse cx="3659.5" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="3668.5" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="3659.5" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="3668.5" y="1030.8857">getKey(): int</text><ellipse cx="3659.5" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="3668.5" y="1047.1826">getValue(): V</text></g></a><!--MD5=[7d6e24dc628e9eca15257b347a8b72de]
class elki.utilities.datastructures.heap.DoubleLongHeap--><a href="DoubleLongHeap.html" target="_top" title="DoubleLongHeap.html" xlink:actuate="onRequest" xlink:href="DoubleLongHeap.html" xlink:show="new" xlink:title="DoubleLongHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongHeap"><rect codeLine="430" fill="#F1F1F1" height="243.5625" id="elki.utilities.datastructures.heap.DoubleLongHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="302" x="2896" y="114"/><ellipse cx="2980.75" cy="130" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2976.6719,125.7656 L2976.6719,123.6094 L2984.0625,123.6094 L2984.0625,125.7656 L2981.5938,125.7656 L2981.5938,133.8438 L2984.0625,133.8438 L2984.0625,136 L2976.6719,136 L2976.6719,133.8438 L2979.1406,133.8438 L2979.1406,125.7656 L2976.6719,125.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="124" x="3001.25" y="134.8467">DoubleLongHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2897" x2="3197" y1="146" y2="146"/><line style="stroke:#181818;stroke-width:0.5;" x1="2897" x2="3197" y1="154" y2="154"/><ellipse cx="2907" cy="167.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="164" x="2916" y="170.9951">add(double, long): void</text><ellipse cx="2907" cy="183.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="2916" y="187.292">add(double, long, int): void</text><ellipse cx="2907" cy="200.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="276" x="2916" y="203.5889">replaceTopElement(double, long): void</text><ellipse cx="2907" cy="216.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="129" x="2916" y="219.8857">peekKey(): double</text><ellipse cx="2907" cy="232.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="2916" y="236.1826">peekValue(): long</text><ellipse cx="2907" cy="249.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="212" x="2916" y="252.4795">containsKey(double): boolean</text><ellipse cx="2907" cy="265.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="209" x="2916" y="268.7764">containsValue(long): boolean</text><ellipse cx="2907" cy="281.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="75" x="2916" y="285.0732">poll(): void</text><ellipse cx="2907" cy="298.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="2916" y="301.3701">clear(): void</text><ellipse cx="2907" cy="314.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="2916" y="317.667">size(): int</text><ellipse cx="2907" cy="330.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="2916" y="333.9639">isEmpty(): boolean</text><ellipse cx="2907" cy="346.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="2916" y="350.2607">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[ed0307c95dfd08c7e46c67bf592583bb]
class elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter--><a href="DoubleLongHeap.UnsortedIter.html" target="_top" title="DoubleLongHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleLongHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleLongHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter"><rect codeLine="445" fill="#F1F1F1" height="80.5938" id="elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="3229" y="637.5"/><ellipse cx="3244" cy="653.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3239.9219,649.2656 L3239.9219,647.1094 L3247.3125,647.1094 L3247.3125,649.2656 L3244.8438,649.2656 L3244.8438,657.3438 L3247.3125,657.3438 L3247.3125,659.5 L3239.9219,659.5 L3239.9219,657.3438 L3242.3906,657.3438 L3242.3906,649.2656 L3239.9219,649.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="214" x="3258" y="658.3467">DoubleLongHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="3230" x2="3474" y1="669.5" y2="669.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3230" x2="3474" y1="677.5" y2="677.5"/><ellipse cx="3240" cy="691.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="117" x="3249" y="694.4951">getKey(): double</text><ellipse cx="3240" cy="707.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="3249" y="710.792">getValue(): long</text></g></a><!--MD5=[c276157b8d89d02523e7b6cbf6c8f754]
class elki.utilities.datastructures.heap.IntegerHeap--><a href="IntegerHeap.html" target="_top" title="IntegerHeap.html" xlink:actuate="onRequest" xlink:href="IntegerHeap.html" xlink:show="new" xlink:title="IntegerHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerHeap"><rect codeLine="450" fill="#F1F1F1" height="194.6719" id="elki.utilities.datastructures.heap.IntegerHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="220" x="2072" y="138.5"/><ellipse cx="2133.75" cy="154.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2129.6719,150.2656 L2129.6719,148.1094 L2137.0625,148.1094 L2137.0625,150.2656 L2134.5938,150.2656 L2134.5938,158.3438 L2137.0625,158.3438 L2137.0625,160.5 L2129.6719,160.5 L2129.6719,158.3438 L2132.1406,158.3438 L2132.1406,150.2656 L2129.6719,150.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="88" x="2154.25" y="159.3467">IntegerHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2073" x2="2291" y1="170.5" y2="170.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="2073" x2="2291" y1="178.5" y2="178.5"/><ellipse cx="2083" cy="192.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="94" x="2092" y="195.4951">add(int): void</text><ellipse cx="2083" cy="208.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="120" x="2092" y="211.792">add(int, int): void</text><ellipse cx="2083" cy="224.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="194" x="2092" y="228.0889">replaceTopElement(int): int</text><ellipse cx="2083" cy="241.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="72" x="2092" y="244.3857">peek(): int</text><ellipse cx="2083" cy="257.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="63" x="2092" y="260.6826">poll(): int</text><ellipse cx="2083" cy="273.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="2092" y="276.9795">clear(): void</text><ellipse cx="2083" cy="289.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="2092" y="293.2764">size(): int</text><ellipse cx="2083" cy="306.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="2092" y="309.5732">isEmpty(): boolean</text><ellipse cx="2083" cy="322.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="2092" y="325.8701">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[6e9df8bc0272fa123add6dd53241aad7]
class elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter--><a href="IntegerHeap.UnsortedIter.html" target="_top" title="IntegerHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter"><rect codeLine="462" fill="#F1F1F1" height="64.2969" id="elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="2326" y="646"/><ellipse cx="2341" cy="662" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2336.9219,657.7656 L2336.9219,655.6094 L2344.3125,655.6094 L2344.3125,657.7656 L2341.8438,657.7656 L2341.8438,665.8438 L2344.3125,665.8438 L2344.3125,668 L2336.9219,668 L2336.9219,665.8438 L2339.3906,665.8438 L2339.3906,657.7656 L2336.9219,657.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="178" x="2355" y="666.8467">IntegerHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="2327" x2="2535" y1="678" y2="678"/><line style="stroke:#181818;stroke-width:0.5;" x1="2327" x2="2535" y1="686" y2="686"/><ellipse cx="2337" cy="699.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="2346" y="702.9951">get(): int</text></g></a><!--MD5=[da718609d38696094807965e8e10535c]
class elki.utilities.datastructures.heap.HeapUtil--><a href="HeapUtil.html" target="_top" title="HeapUtil.html" xlink:actuate="onRequest" xlink:href="HeapUtil.html" xlink:show="new" xlink:title="HeapUtil.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.HeapUtil"><rect codeLine="466" fill="#F1F1F1" height="96.8906" id="elki.utilities.datastructures.heap.HeapUtil" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="1719" y="187.5"/><ellipse cx="1774.25" cy="203.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1777.2188,209.1406 Q1776.6406,209.4375 1776,209.5781 Q1775.3594,209.7344 1774.6563,209.7344 Q1772.1563,209.7344 1770.8281,208.0938 Q1769.5156,206.4375 1769.5156,203.3125 Q1769.5156,200.1875 1770.8281,198.5313 Q1772.1563,196.875 1774.6563,196.875 Q1775.3594,196.875 1776,197.0313 Q1776.6563,197.1875 1777.2188,197.4844 L1777.2188,200.2031 Q1776.5938,199.625 1776,199.3594 Q1775.4063,199.0781 1774.7813,199.0781 Q1773.4375,199.0781 1772.75,200.1563 Q1772.0625,201.2188 1772.0625,203.3125 Q1772.0625,205.4063 1772.75,206.4844 Q1773.4375,207.5469 1774.7813,207.5469 Q1775.4063,207.5469 1776,207.2813 Q1776.5938,207 1777.2188,206.4219 L1777.2188,209.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="1794.75" y="208.3467">HeapUtil</text><line style="stroke:#181818;stroke-width:0.5;" x1="1720" x2="1894" y1="219.5" y2="219.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1727" y="230.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="1739" y="236.4951">MAX_ARRAY_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1720" x2="1894" y1="243.7969" y2="243.7969"/><ellipse cx="1730" cy="257.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="1739" y="260.792">nextPow2Int(int): int</text><ellipse cx="1730" cy="273.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="112" x="1739" y="277.0889">nextSize(int): int</text></g></a><!--MD5=[8a3feb20a08991a21b89a415517933a0]
class elki.utilities.datastructures.heap.DoubleIntegerMaxHeap--><a href="DoubleIntegerMaxHeap.html" target="_top" title="DoubleIntegerMaxHeap.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerMaxHeap.html" xlink:show="new" xlink:title="DoubleIntegerMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap"><rect codeLine="472" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleIntegerMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="281" x="338.5" y="491"/><ellipse cx="393.75" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M396.7188,512.6406 Q396.1406,512.9375 395.5,513.0781 Q394.8594,513.2344 394.1563,513.2344 Q391.6563,513.2344 390.3281,511.5938 Q389.0156,509.9375 389.0156,506.8125 Q389.0156,503.6875 390.3281,502.0313 Q391.6563,500.375 394.1563,500.375 Q394.8594,500.375 395.5,500.5313 Q396.1563,500.6875 396.7188,500.9844 L396.7188,503.7031 Q396.0938,503.125 395.5,502.8594 Q394.9063,502.5781 394.2813,502.5781 Q392.9375,502.5781 392.25,503.6563 Q391.5625,504.7188 391.5625,506.8125 Q391.5625,508.9063 392.25,509.9844 Q392.9375,511.0469 394.2813,511.0469 Q394.9063,511.0469 395.5,510.7813 Q396.0938,510.5 396.7188,509.9219 L396.7188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="414.25" y="511.8467">DoubleIntegerMaxHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="339.5" x2="618.5" y1="523" y2="523"/><polygon fill="none" points="349.5,531.6484,353.5,535.6484,349.5,539.6484,345.5,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="358.5" y="539.9951">twoheap: double[]</text><polygon fill="none" points="349.5,547.9453,353.5,551.9453,349.5,555.9453,345.5,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="358.5" y="556.292">twovals: int[]</text><polygon fill="none" points="349.5,564.2422,353.5,568.2422,349.5,572.2422,345.5,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="358.5" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346.5" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="358.5" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="339.5" x2="618.5" y1="596.1875" y2="596.1875"/><ellipse cx="349.5" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="358.5" y="613.1826">DoubleIntegerMaxHeap()</text><ellipse cx="349.5" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="358.5" y="629.4795">DoubleIntegerMaxHeap(int)</text><ellipse cx="349.5" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="358.5" y="645.7764">clear(): void</text><ellipse cx="349.5" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="358.5" y="662.0732">size(): int</text><ellipse cx="349.5" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="358.5" y="678.3701">isEmpty(): boolean</text><ellipse cx="349.5" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="358.5" y="694.667">add(double, int): void</text><ellipse cx="349.5" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="358.5" y="710.9639">add(double, int, int): void</text><ellipse cx="349.5" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="358.5" y="727.2607">replaceTopElement(double, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346.5" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="358.5" y="743.5576">heapifyUp(int, double, int): void</text><ellipse cx="349.5" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="358.5" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346.5" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="358.5" y="776.1514">heapifyDown(double, int): void</text><ellipse cx="349.5" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="358.5" y="792.4482">peekKey(): double</text><ellipse cx="349.5" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="358.5" y="808.7451">peekValue(): int</text><ellipse cx="349.5" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="358.5" y="825.042">containsKey(double): boolean</text><ellipse cx="349.5" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="358.5" y="841.3389">containsValue(int): boolean</text><ellipse cx="349.5" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="358.5" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[4285f33223018b14259142846f3d6794]
class elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter--><a href="DoubleIntegerMaxHeap.UnsortedIter.html" target="_top" title="DoubleIntegerMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleIntegerMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter"><rect codeLine="495" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="491" y="925"/><ellipse cx="506" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M508.9688,946.6406 Q508.3906,946.9375 507.75,947.0781 Q507.1094,947.2344 506.4063,947.2344 Q503.9063,947.2344 502.5781,945.5938 Q501.2656,943.9375 501.2656,940.8125 Q501.2656,937.6875 502.5781,936.0313 Q503.9063,934.375 506.4063,934.375 Q507.1094,934.375 507.75,934.5313 Q508.4063,934.6875 508.9688,934.9844 L508.9688,937.7031 Q508.3438,937.125 507.75,936.8594 Q507.1563,936.5781 506.5313,936.5781 Q505.1875,936.5781 504.5,937.6563 Q503.8125,938.7188 503.8125,940.8125 Q503.8125,942.9063 504.5,943.9844 Q505.1875,945.0469 506.5313,945.0469 Q507.1563,945.0469 507.75,944.7813 Q508.3438,944.5 508.9688,943.9219 L508.9688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="520" y="945.8467">DoubleIntegerMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="492" x2="774" y1="957" y2="957"/><polygon fill="none" points="502,965.6484,506,969.6484,502,973.6484,498,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="511" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="492" x2="774" y1="981.2969" y2="981.2969"/><ellipse cx="502" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="511" y="998.292">valid(): boolean</text><ellipse cx="502" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="511" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="502" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="511" y="1030.8857">getKey(): double</text><ellipse cx="502" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="511" y="1047.1826">getValue(): int</text></g></a><!--MD5=[6f120f237edec5dae816b0653248aa44]
class elki.utilities.datastructures.heap.ComparableMinHeap--><a href="ComparableMinHeap.html" target="_top" title="ComparableMinHeap.html" xlink:actuate="onRequest" xlink:href="ComparableMinHeap.html" xlink:show="new" xlink:title="ComparableMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMinHeap"><rect codeLine="503" fill="#F1F1F1" height="308.75" id="elki.utilities.datastructures.heap.ComparableMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="992" x="4740" y="523.5"/><ellipse cx="5053.25" cy="539.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5056.2188,545.1406 Q5055.6406,545.4375 5055,545.5781 Q5054.3594,545.7344 5053.6563,545.7344 Q5051.1563,545.7344 5049.8281,544.0938 Q5048.5156,542.4375 5048.5156,539.3125 Q5048.5156,536.1875 5049.8281,534.5313 Q5051.1563,532.875 5053.6563,532.875 Q5054.3594,532.875 5055,533.0313 Q5055.6563,533.1875 5056.2188,533.4844 L5056.2188,536.2031 Q5055.5938,535.625 5055,535.3594 Q5054.4063,535.0781 5053.7813,535.0781 Q5052.4375,535.0781 5051.75,536.1563 Q5051.0625,537.2188 5051.0625,539.3125 Q5051.0625,541.4063 5051.75,542.4844 Q5052.4375,543.5469 5053.7813,543.5469 Q5054.4063,543.5469 5055,543.2813 Q5055.5938,543 5056.2188,542.4219 L5056.2188,545.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="5073.75" y="544.3467">ComparableMinHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="212" x="5523" y="520.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="210" x="5524" y="532.6387">K extends Comparable&lt;? super K&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4741" x2="5731" y1="555.5" y2="555.5"/><polygon fill="none" points="4751,564.1484,4755,568.1484,4751,572.1484,4747,568.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="4760" y="572.4951">twoheap: Comparable&lt;Object&gt;[]</text><polygon fill="none" points="4751,580.4453,4755,584.4453,4751,588.4453,4747,584.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="4760" y="588.792">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4748" y="598.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="4760" y="605.0889">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="4741" x2="5731" y1="612.3906" y2="612.3906"/><ellipse cx="4751" cy="626.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="4760" y="629.3857">ComparableMinHeap()</text><ellipse cx="4751" cy="642.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="4760" y="645.6826">ComparableMinHeap(int)</text><ellipse cx="4751" cy="658.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4760" y="661.9795">clear(): void</text><ellipse cx="4751" cy="674.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="4760" y="678.2764">size(): int</text><ellipse cx="4751" cy="691.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4760" y="694.5732">isEmpty(): boolean</text><ellipse cx="4751" cy="707.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="479" x="4760" y="710.8701">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): void</text><ellipse cx="4751" cy="723.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="4760" y="727.167">add(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;, int): void</text><ellipse cx="4751" cy="740.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="966" x="4760" y="743.4639">replaceTopElement(K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4748" y="753.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="4760" y="759.7607">heapifyUp(int, Comparable&lt;Object&gt;): void</text><ellipse cx="4751" cy="772.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="4760" y="776.0576">poll(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4748" y="786.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="4760" y="792.3545">heapifyDown(Comparable&lt;Object&gt;): void</text><ellipse cx="4751" cy="805.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="4760" y="808.6514">peek(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text><ellipse cx="4751" cy="821.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="4760" y="824.9482">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[82956073b8a9ec6110d72fde288ca880]
class elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter--><a href="ComparableMinHeap.UnsortedIter.html" target="_top" title="ComparableMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="ComparableMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="ComparableMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter"><rect codeLine="522" fill="#F1F1F1" height="113.1875" id="elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="474" x="5155" y="933"/><ellipse cx="5271.25" cy="949" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5274.2188,954.6406 Q5273.6406,954.9375 5273,955.0781 Q5272.3594,955.2344 5271.6563,955.2344 Q5269.1563,955.2344 5267.8281,953.5938 Q5266.5156,951.9375 5266.5156,948.8125 Q5266.5156,945.6875 5267.8281,944.0313 Q5269.1563,942.375 5271.6563,942.375 Q5272.3594,942.375 5273,942.5313 Q5273.6563,942.6875 5274.2188,942.9844 L5274.2188,945.7031 Q5273.5938,945.125 5273,944.8594 Q5272.4063,944.5781 5271.7813,944.5781 Q5270.4375,944.5781 5269.75,945.6563 Q5269.0625,946.7188 5269.0625,948.8125 Q5269.0625,950.9063 5269.75,951.9844 Q5270.4375,953.0469 5271.7813,953.0469 Q5272.4063,953.0469 5273,952.7813 Q5273.5938,952.5 5274.2188,951.9219 L5274.2188,954.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="5291.75" y="953.8467">ComparableMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="5156" x2="5628" y1="965" y2="965"/><polygon fill="none" points="5166,973.6484,5170,977.6484,5166,981.6484,5162,977.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="5175" y="981.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="5156" x2="5628" y1="989.2969" y2="989.2969"/><ellipse cx="5166" cy="1002.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="5175" y="1006.292">valid(): boolean</text><ellipse cx="5166" cy="1019.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="5175" y="1022.5889">advance(): UnsortedIter</text><ellipse cx="5166" cy="1035.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="5175" y="1038.8857">get(): K extends Comparable&lt;? super Comparable&lt;? super K&gt;&gt;</text></g></a><!--MD5=[444ba806aecc45546ad958b9b0470522]
class elki.utilities.datastructures.heap.DoubleLongMaxHeap--><a href="DoubleLongMaxHeap.html" target="_top" title="DoubleLongMaxHeap.html" xlink:actuate="onRequest" xlink:href="DoubleLongMaxHeap.html" xlink:show="new" xlink:title="DoubleLongMaxHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongMaxHeap"><rect codeLine="529" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.DoubleLongMaxHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="2571" y="491"/><ellipse cx="2640.25" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2643.2188,512.6406 Q2642.6406,512.9375 2642,513.0781 Q2641.3594,513.2344 2640.6563,513.2344 Q2638.1563,513.2344 2636.8281,511.5938 Q2635.5156,509.9375 2635.5156,506.8125 Q2635.5156,503.6875 2636.8281,502.0313 Q2638.1563,500.375 2640.6563,500.375 Q2641.3594,500.375 2642,500.5313 Q2642.6563,500.6875 2643.2188,500.9844 L2643.2188,503.7031 Q2642.5938,503.125 2642,502.8594 Q2641.4063,502.5781 2640.7813,502.5781 Q2639.4375,502.5781 2638.75,503.6563 Q2638.0625,504.7188 2638.0625,506.8125 Q2638.0625,508.9063 2638.75,509.9844 Q2639.4375,511.0469 2640.7813,511.0469 Q2641.4063,511.0469 2642,510.7813 Q2642.5938,510.5 2643.2188,509.9219 L2643.2188,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="2660.75" y="511.8467">DoubleLongMaxHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2572" x2="2864" y1="523" y2="523"/><polygon fill="none" points="2582,531.6484,2586,535.6484,2582,539.6484,2578,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="2591" y="539.9951">twoheap: double[]</text><polygon fill="none" points="2582,547.9453,2586,551.9453,2582,555.9453,2578,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2591" y="556.292">twovals: long[]</text><polygon fill="none" points="2582,564.2422,2586,568.2422,2582,572.2422,2578,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="2591" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2579" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="2591" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2572" x2="2864" y1="596.1875" y2="596.1875"/><ellipse cx="2582" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2591" y="613.1826">DoubleLongMaxHeap()</text><ellipse cx="2582" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="2591" y="629.4795">DoubleLongMaxHeap(int)</text><ellipse cx="2582" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2591" y="645.7764">clear(): void</text><ellipse cx="2582" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="2591" y="662.0732">size(): int</text><ellipse cx="2582" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2591" y="678.3701">isEmpty(): boolean</text><ellipse cx="2582" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2591" y="694.667">add(double, long): void</text><ellipse cx="2582" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="2591" y="710.9639">add(double, long, int): void</text><ellipse cx="2582" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="2591" y="727.2607">replaceTopElement(double, long): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2579" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="2591" y="743.5576">heapifyUp(int, double, long): void</text><ellipse cx="2582" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="2591" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2579" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="2591" y="776.1514">heapifyDown(double, long): void</text><ellipse cx="2582" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="2591" y="792.4482">peekKey(): double</text><ellipse cx="2582" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2591" y="808.7451">peekValue(): long</text><ellipse cx="2582" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="2591" y="825.042">containsKey(double): boolean</text><ellipse cx="2582" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="2591" y="841.3389">containsValue(long): boolean</text><ellipse cx="2582" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="2591" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[5bc1925081a1aae60e1a672dd9598e5b]
class elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter--><a href="DoubleLongMaxHeap.UnsortedIter.html" target="_top" title="DoubleLongMaxHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleLongMaxHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleLongMaxHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter"><rect codeLine="552" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="2596.5" y="925"/><ellipse cx="2611.5" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2614.4688,946.6406 Q2613.8906,946.9375 2613.25,947.0781 Q2612.6094,947.2344 2611.9063,947.2344 Q2609.4063,947.2344 2608.0781,945.5938 Q2606.7656,943.9375 2606.7656,940.8125 Q2606.7656,937.6875 2608.0781,936.0313 Q2609.4063,934.375 2611.9063,934.375 Q2612.6094,934.375 2613.25,934.5313 Q2613.9063,934.6875 2614.4688,934.9844 L2614.4688,937.7031 Q2613.8438,937.125 2613.25,936.8594 Q2612.6563,936.5781 2612.0313,936.5781 Q2610.6875,936.5781 2610,937.6563 Q2609.3125,938.7188 2609.3125,940.8125 Q2609.3125,942.9063 2610,943.9844 Q2610.6875,945.0469 2612.0313,945.0469 Q2612.6563,945.0469 2613.25,944.7813 Q2613.8438,944.5 2614.4688,943.9219 L2614.4688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="2625.5" y="945.8467">DoubleLongMaxHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="2597.5" x2="2864.5" y1="957" y2="957"/><polygon fill="none" points="2607.5,965.6484,2611.5,969.6484,2607.5,973.6484,2603.5,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="2616.5" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2597.5" x2="2864.5" y1="981.2969" y2="981.2969"/><ellipse cx="2607.5" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="2616.5" y="998.292">valid(): boolean</text><ellipse cx="2607.5" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2616.5" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="2607.5" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2616.5" y="1030.8857">getKey(): double</text><ellipse cx="2607.5" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="2616.5" y="1047.1826">getValue(): long</text></g></a><!--MD5=[c0faea3324c4a57e5c118720697dc6c6]
class elki.utilities.datastructures.heap.IntegerObjectMinHeap--><a href="IntegerObjectMinHeap.html" target="_top" title="IntegerObjectMinHeap.html" xlink:actuate="onRequest" xlink:href="IntegerObjectMinHeap.html" xlink:show="new" xlink:title="IntegerObjectMinHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectMinHeap"><rect codeLine="560" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.heap.IntegerObjectMinHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="242" x="3787" y="491"/><ellipse cx="3821.8" cy="507" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3824.7688,512.6406 Q3824.1906,512.9375 3823.55,513.0781 Q3822.9094,513.2344 3822.2063,513.2344 Q3819.7063,513.2344 3818.3781,511.5938 Q3817.0656,509.9375 3817.0656,506.8125 Q3817.0656,503.6875 3818.3781,502.0313 Q3819.7063,500.375 3822.2063,500.375 Q3822.9094,500.375 3823.55,500.5313 Q3824.2063,500.6875 3824.7688,500.9844 L3824.7688,503.7031 Q3824.1438,503.125 3823.55,502.8594 Q3822.9563,502.5781 3822.3313,502.5781 Q3820.9875,502.5781 3820.3,503.6563 Q3819.6125,504.7188 3819.6125,506.8125 Q3819.6125,508.9063 3820.3,509.9844 Q3820.9875,511.0469 3822.3313,511.0469 Q3822.9563,511.0469 3823.55,510.7813 Q3824.1438,510.5 3824.7688,509.9219 L3824.7688,512.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="3840.2" y="511.8467">IntegerObjectMinHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="4022" y="488"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="4023" y="500.1387">V</text><line style="stroke:#181818;stroke-width:0.5;" x1="3788" x2="4028" y1="523" y2="523"/><polygon fill="none" points="3798,531.6484,3802,535.6484,3798,539.6484,3794,535.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="3807" y="539.9951">twoheap: int[]</text><polygon fill="none" points="3798,547.9453,3802,551.9453,3798,555.9453,3794,551.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="3807" y="556.292">twovals: Object[]</text><polygon fill="none" points="3798,564.2422,3802,568.2422,3798,572.2422,3794,568.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="3807" y="572.5889">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3795" y="582.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="3807" y="588.8857">TWO_HEAP_INITIAL_SIZE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3788" x2="4028" y1="596.1875" y2="596.1875"/><ellipse cx="3798" cy="609.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="3807" y="613.1826">IntegerObjectMinHeap()</text><ellipse cx="3798" cy="626.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="3807" y="629.4795">IntegerObjectMinHeap(int)</text><ellipse cx="3798" cy="642.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3807" y="645.7764">clear(): void</text><ellipse cx="3798" cy="658.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="3807" y="662.0732">size(): int</text><ellipse cx="3798" cy="675.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="3807" y="678.3701">isEmpty(): boolean</text><ellipse cx="3798" cy="691.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3807" y="694.667">add(int, V): void</text><ellipse cx="3798" cy="707.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="3807" y="710.9639">add(int, V, int): void</text><ellipse cx="3798" cy="723.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="3807" y="727.2607">replaceTopElement(int, V): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3795" y="737.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="3807" y="743.5576">heapifyUp(int, int, Object): void</text><ellipse cx="3798" cy="756.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="3807" y="759.8545">poll(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3795" y="769.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="3807" y="776.1514">heapifyDown(int, Object): void</text><ellipse cx="3798" cy="789.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="3807" y="792.4482">peekKey(): int</text><ellipse cx="3798" cy="805.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="3807" y="808.7451">peekValue(): V</text><ellipse cx="3798" cy="821.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="3807" y="825.042">containsKey(int): boolean</text><ellipse cx="3798" cy="837.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="3807" y="841.3389">containsValue(V): boolean</text><ellipse cx="3798" cy="854.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="3807" y="857.6357">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[7604c4817c89c2594dd801065ed13475]
class elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter--><a href="IntegerObjectMinHeap.UnsortedIter.html" target="_top" title="IntegerObjectMinHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="IntegerObjectMinHeap.UnsortedIter.html" xlink:show="new" xlink:title="IntegerObjectMinHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter"><rect codeLine="583" fill="#F1F1F1" height="129.4844" id="elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="276" x="4120" y="925"/><ellipse cx="4135" cy="941" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4137.9688,946.6406 Q4137.3906,946.9375 4136.75,947.0781 Q4136.1094,947.2344 4135.4063,947.2344 Q4132.9063,947.2344 4131.5781,945.5938 Q4130.2656,943.9375 4130.2656,940.8125 Q4130.2656,937.6875 4131.5781,936.0313 Q4132.9063,934.375 4135.4063,934.375 Q4136.1094,934.375 4136.75,934.5313 Q4137.4063,934.6875 4137.9688,934.9844 L4137.9688,937.7031 Q4137.3438,937.125 4136.75,936.8594 Q4136.1563,936.5781 4135.5313,936.5781 Q4134.1875,936.5781 4133.5,937.6563 Q4132.8125,938.7188 4132.8125,940.8125 Q4132.8125,942.9063 4133.5,943.9844 Q4134.1875,945.0469 4135.5313,945.0469 Q4136.1563,945.0469 4136.75,944.7813 Q4137.3438,944.5 4137.9688,943.9219 L4137.9688,946.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="4149" y="945.8467">IntegerObjectMinHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="4121" x2="4395" y1="957" y2="957"/><polygon fill="none" points="4131,965.6484,4135,969.6484,4131,973.6484,4127,969.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="4140" y="973.9951">pos: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="4121" x2="4395" y1="981.2969" y2="981.2969"/><ellipse cx="4131" cy="994.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="4140" y="998.292">valid(): boolean</text><ellipse cx="4131" cy="1011.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="4140" y="1014.5889">advance(): UnsortedIter</text><ellipse cx="4131" cy="1027.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="4140" y="1030.8857">getKey(): int</text><ellipse cx="4131" cy="1043.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="4140" y="1047.1826">getValue(): V</text></g></a><!--MD5=[5fdfb3442c8631d9fefa31e17e336235]
class elki.utilities.datastructures.heap.DoubleHeap--><a href="DoubleHeap.html" target="_top" title="DoubleHeap.html" xlink:actuate="onRequest" xlink:href="DoubleHeap.html" xlink:show="new" xlink:title="DoubleHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleHeap"><rect codeLine="591" fill="#F1F1F1" height="194.6719" id="elki.utilities.datastructures.heap.DoubleHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="282" x="1259" y="138.5"/><ellipse cx="1351.25" cy="154.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1347.1719,150.2656 L1347.1719,148.1094 L1354.5625,148.1094 L1354.5625,150.2656 L1352.0938,150.2656 L1352.0938,158.3438 L1354.5625,158.3438 L1354.5625,160.5 L1347.1719,160.5 L1347.1719,158.3438 L1349.6406,158.3438 L1349.6406,150.2656 L1347.1719,150.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="89" x="1371.75" y="159.3467">DoubleHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="1260" x2="1540" y1="170.5" y2="170.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1260" x2="1540" y1="178.5" y2="178.5"/><ellipse cx="1270" cy="192.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="125" x="1279" y="195.4951">add(double): void</text><ellipse cx="1270" cy="208.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="151" x="1279" y="211.792">add(double, int): void</text><ellipse cx="1270" cy="224.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="256" x="1279" y="228.0889">replaceTopElement(double): double</text><ellipse cx="1270" cy="241.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="1279" y="244.3857">peek(): double</text><ellipse cx="1270" cy="257.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="94" x="1279" y="260.6826">poll(): double</text><ellipse cx="1270" cy="273.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="1279" y="276.9795">clear(): void</text><ellipse cx="1270" cy="289.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="1279" y="293.2764">size(): int</text><ellipse cx="1270" cy="306.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="1279" y="309.5732">isEmpty(): boolean</text><ellipse cx="1270" cy="322.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="1279" y="325.8701">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[494e9eb1d1166e22c10ba1682755c024]
class elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter--><a href="DoubleHeap.UnsortedIter.html" target="_top" title="DoubleHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter"><rect codeLine="603" fill="#F1F1F1" height="64.2969" id="elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="1573.5" y="646"/><ellipse cx="1588.5" cy="662" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1584.4219,657.7656 L1584.4219,655.6094 L1591.8125,655.6094 L1591.8125,657.7656 L1589.3438,657.7656 L1589.3438,665.8438 L1591.8125,665.8438 L1591.8125,668 L1584.4219,668 L1584.4219,665.8438 L1586.8906,665.8438 L1586.8906,657.7656 L1584.4219,657.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="179" x="1602.5" y="666.8467">DoubleHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1574.5" x2="1783.5" y1="678" y2="678"/><line style="stroke:#181818;stroke-width:0.5;" x1="1574.5" x2="1783.5" y1="686" y2="686"/><ellipse cx="1584.5" cy="699.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="1593.5" y="702.9951">get(): double</text></g></a><!--MD5=[5b215c67fbc0e5b94b4b1700d3e0d3dc]
class elki.utilities.datastructures.heap.DoubleIntegerHeap--><a href="DoubleIntegerHeap.html" target="_top" title="DoubleIntegerHeap.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerHeap.html" xlink:show="new" xlink:title="DoubleIntegerHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerHeap"><rect codeLine="607" fill="#F1F1F1" height="243.5625" id="elki.utilities.datastructures.heap.DoubleIntegerHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="289" x="334.5" y="114"/><ellipse cx="405.25" cy="130" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M401.1719,125.7656 L401.1719,123.6094 L408.5625,123.6094 L408.5625,125.7656 L406.0938,125.7656 L406.0938,133.8438 L408.5625,133.8438 L408.5625,136 L401.1719,136 L401.1719,133.8438 L403.6406,133.8438 L403.6406,125.7656 L401.1719,125.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="139" x="425.75" y="134.8467">DoubleIntegerHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="335.5" x2="622.5" y1="146" y2="146"/><line style="stroke:#181818;stroke-width:0.5;" x1="335.5" x2="622.5" y1="154" y2="154"/><ellipse cx="345.5" cy="167.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="151" x="354.5" y="170.9951">add(double, int): void</text><ellipse cx="345.5" cy="183.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="354.5" y="187.292">add(double, int, int): void</text><ellipse cx="345.5" cy="200.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="263" x="354.5" y="203.5889">replaceTopElement(double, int): void</text><ellipse cx="345.5" cy="216.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="129" x="354.5" y="219.8857">peekKey(): double</text><ellipse cx="345.5" cy="232.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="354.5" y="236.1826">peekValue(): int</text><ellipse cx="345.5" cy="249.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="212" x="354.5" y="252.4795">containsKey(double): boolean</text><ellipse cx="345.5" cy="265.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="196" x="354.5" y="268.7764">containsValue(int): boolean</text><ellipse cx="345.5" cy="281.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="75" x="354.5" y="285.0732">poll(): void</text><ellipse cx="345.5" cy="298.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="354.5" y="301.3701">clear(): void</text><ellipse cx="345.5" cy="314.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="354.5" y="317.667">size(): int</text><ellipse cx="345.5" cy="330.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="354.5" y="333.9639">isEmpty(): boolean</text><ellipse cx="345.5" cy="346.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="354.5" y="350.2607">unsortedIter(): UnsortedIter</text></g></a><!--MD5=[a5bc05e39bd767125bd3896ba06032c2]
class elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter--><a href="DoubleIntegerHeap.UnsortedIter.html" target="_top" title="DoubleIntegerHeap.UnsortedIter.html" xlink:actuate="onRequest" xlink:href="DoubleIntegerHeap.UnsortedIter.html" xlink:show="new" xlink:title="DoubleIntegerHeap.UnsortedIter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter"><rect codeLine="622" fill="#F1F1F1" height="80.5938" id="elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="261" x="654.5" y="637.5"/><ellipse cx="669.5" cy="653.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M665.4219,649.2656 L665.4219,647.1094 L672.8125,647.1094 L672.8125,649.2656 L670.3438,649.2656 L670.3438,657.3438 L672.8125,657.3438 L672.8125,659.5 L665.4219,659.5 L665.4219,657.3438 L667.8906,657.3438 L667.8906,649.2656 L665.4219,649.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="229" x="683.5" y="658.3467">DoubleIntegerHeap.UnsortedIter</text><line style="stroke:#181818;stroke-width:0.5;" x1="655.5" x2="914.5" y1="669.5" y2="669.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="655.5" x2="914.5" y1="677.5" y2="677.5"/><ellipse cx="665.5" cy="691.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="117" x="674.5" y="694.4951">getKey(): double</text><ellipse cx="665.5" cy="707.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="101" x="674.5" y="710.792">getValue(): int</text></g></a><!--MD5=[2cfbf3ab52d86c48cd8c54305f3b0636]
class elki.utilities.datastructures.heap.UpdatableHeap--><a href="UpdatableHeap.html" target="_top" title="UpdatableHeap.html" xlink:actuate="onRequest" xlink:href="UpdatableHeap.html" xlink:show="new" xlink:title="UpdatableHeap.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.heap.UpdatableHeap"><rect codeLine="627" fill="#F1F1F1" height="259.8594" id="elki.utilities.datastructures.heap.UpdatableHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="4064" y="548"/><ellipse cx="4169.75" cy="564" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4172.7188,569.6406 Q4172.1406,569.9375 4171.5,570.0781 Q4170.8594,570.2344 4170.1563,570.2344 Q4167.6563,570.2344 4166.3281,568.5938 Q4165.0156,566.9375 4165.0156,563.8125 Q4165.0156,560.6875 4166.3281,559.0313 Q4167.6563,557.375 4170.1563,557.375 Q4170.8594,557.375 4171.5,557.5313 Q4172.1563,557.6875 4172.7188,557.9844 L4172.7188,560.7031 Q4172.0938,560.125 4171.5,559.8594 Q4170.9063,559.5781 4170.2813,559.5781 Q4168.9375,559.5781 4168.25,560.6563 Q4167.5625,561.7188 4167.5625,563.8125 Q4167.5625,565.9063 4168.25,566.9844 Q4168.9375,568.0469 4170.2813,568.0469 Q4170.9063,568.0469 4171.5,567.7813 Q4172.0938,567.5 4172.7188,566.9219 L4172.7188,569.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4190.25" y="568.8467">UpdatableHeap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="4395" y="545"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="4396" y="557.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="4065" x2="4401" y1="580" y2="580"/><polygon fill="none" points="4075,588.6484,4079,592.6484,4075,596.6484,4071,592.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="98" x="4084" y="596.9951">NO_VALUE: int</text><polygon fill="none" points="4075,604.9453,4079,608.9453,4075,612.9453,4071,608.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="4084" y="613.292">IN_TIES: int</text><polygon fill="none" points="4075,621.2422,4079,625.2422,4075,629.2422,4071,625.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="4084" y="629.5889">index: Object2IntOpenHashMap&lt;Object&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4065" x2="4401" y1="636.8906" y2="636.8906"/><ellipse cx="4075" cy="650.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="4084" y="653.8857">UpdatableHeap()</text><ellipse cx="4075" cy="666.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="4084" y="670.1826">UpdatableHeap(int)</text><ellipse cx="4075" cy="683.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="4084" y="686.4795">UpdatableHeap(Comparator&lt;? super O&gt;)</text><ellipse cx="4075" cy="699.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="4084" y="702.7764">UpdatableHeap(int, Comparator&lt;? super O&gt;)</text><ellipse cx="4075" cy="715.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4084" y="719.0732">clear(): void</text><ellipse cx="4075" cy="732.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="4084" y="735.3701">add(O): void</text><polygon fill="#FFFF44" points="4075,743.3203,4079,747.3203,4075,751.3203,4071,747.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="4084" y="751.667">offerAt(int, O): void</text><ellipse cx="4075" cy="764.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="4084" y="767.9639">poll(): O</text><polygon fill="#FFFF44" points="4075,775.9141,4079,779.9141,4075,783.9141,4071,779.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="4084" y="784.2607">heapifyUp(int, Object): void</text><polygon fill="#FFFF44" points="4075,792.2109,4079,796.2109,4075,800.2109,4071,796.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="4084" y="800.5576">heapifyDown(int, Object): boolean</text></g></a><!--MD5=[bed797726050ad470b869cc67ea665a3]
class elki.utilities.datastructures.iterator.Iter--><a href="../iterator/Iter.html" target="_top" title="../iterator/Iter.html" xlink:actuate="onRequest" xlink:href="../iterator/Iter.html" xlink:show="new" xlink:title="../iterator/Iter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.iterator.Iter"><rect codeLine="711" fill="#F1F1F1" height="80.5938" id="elki.utilities.datastructures.iterator.Iter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="9039.5" y="195.5"/><ellipse cx="9092.25" cy="211.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9088.1719,207.2656 L9088.1719,205.1094 L9095.5625,205.1094 L9095.5625,207.2656 L9093.0938,207.2656 L9093.0938,215.3438 L9095.5625,215.3438 L9095.5625,217.5 L9088.1719,217.5 L9088.1719,215.3438 L9090.6406,215.3438 L9090.6406,207.2656 L9088.1719,207.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="23" x="9112.75" y="216.3467">Iter</text><line style="stroke:#181818;stroke-width:0.5;" x1="9040.5" x2="9175.5" y1="227.5" y2="227.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9040.5" x2="9175.5" y1="235.5" y2="235.5"/><ellipse cx="9050.5" cy="249.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="9059.5" y="252.4951">valid(): boolean</text><ellipse cx="9050.5" cy="265.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="9059.5" y="268.792">advance(): Iter</text></g></a><!--MD5=[4cdd51db936c7223117f18b52b24067c]
reverse link elki.utilities.datastructures.heap.DoubleHeap to elki.utilities.datastructures.heap.DoubleMaxHeap--><g id="link_elki.utilities.datastructures.heap.DoubleHeap_elki.utilities.datastructures.heap.DoubleMaxHeap"><path codeLine="643" d="M1400,353.68 C1400,405.63 1400,467.51 1400,523.17 " fill="none" id="elki.utilities.datastructures.heap.DoubleHeap-backto-elki.utilities.datastructures.heap.DoubleMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1393,353.56,1400,333.56,1407,353.56,1393,353.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d5a13bdb84d499554c58275d868cf17b]
reverse link elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter"><path codeLine="644" d="M1656.55,728.63 C1631.3,784.45 1590.4,874.88 1564.11,933 " fill="none" id="elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1650.31,725.43,1664.94,710.09,1663.07,731.2,1650.31,725.43" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d069e2a592b99b7c82fb7574f609e15c]
reverse link elki.utilities.datastructures.heap.DoubleMaxHeap to elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleMaxHeap_elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter"><path codeLine="645" d="M1475.31,846.68 C1489.27,877.77 1502.92,908.16 1513.98,932.78 " fill="none" id="elki.utilities.datastructures.heap.DoubleMaxHeap-backto-elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1472.3659" cy="840.1385" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1475.6419" x2="1469.09" y1="847.437" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="1465.0674" x2="1479.6645" y1="843.4145" y2="836.8626"/></g><!--MD5=[b6095c535f2dac60fec66499c0a39737]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ComparatorMinHeap--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ComparatorMinHeap"><path codeLine="646" d="M6816.57,251.17 C7018.87,275.83 7393.12,339.38 7674,491 C7687.35,498.21 7700.52,506.49 7713.34,515.47 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ComparatorMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6815.68,258.11,6796.64,248.8,6817.33,244.21,6815.68,258.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d77eb665630fe2a46fdc30a695a8a294]
reverse link elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter"><path codeLine="647" d="M7573.07,727.9 C7602.79,783.65 7651.29,874.62 7682.41,933 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7566.81,731.03,7563.58,710.09,7579.16,724.45,7566.81,731.03" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c773c32562246beffe840b60f47fb91a]
reverse link elki.utilities.datastructures.heap.ComparatorMinHeap to elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ComparatorMinHeap_elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter"><path codeLine="648" d="M7783.62,854.16 C7768.41,882.68 7753.71,910.26 7741.62,932.94 " fill="none" id="elki.utilities.datastructures.heap.ComparatorMinHeap-backto-elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="7787.1204" cy="847.6116" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="7783.3609" x2="7790.88" y1="854.6731" y2="840.55"/><line style="stroke:#181818;stroke-width:1.0;" x1="7780.0589" x2="7794.182" y1="843.852" y2="851.3711"/></g><!--MD5=[919e0c65d05b51301bf33a17bb0f115e]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter"><path codeLine="649" d="M9076.6,294.25 C9055.12,333.05 9025.8,385.38 8999,431 C8955.84,504.45 8903.42,588.83 8873.06,637.23 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9070.52,290.77,9086.31,276.64,9082.78,297.53,9070.52,290.77" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[944efd9efe3e72d95d7e81b83f452e4b]
reverse link elki.utilities.datastructures.heap.DoubleObjectHeap to elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleObjectHeap_elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter"><path codeLine="650" d="M8634.91,370.6 C8698.71,462.34 8779.09,577.91 8820.51,637.48 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectHeap-backto-elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="8630.7903" cy="364.676" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="8635.3606" x2="8626.22" y1="371.242" y2="358.11"/><line style="stroke:#181818;stroke-width:1.0;" x1="8624.2243" x2="8637.3563" y1="369.2463" y2="360.1057"/></g><!--MD5=[898200ab66538edf0cc75375cf0d3334]
reverse link elki.utilities.datastructures.heap.DoubleObjectHeap to elki.utilities.datastructures.heap.DoubleObjectMinHeap--><g id="link_elki.utilities.datastructures.heap.DoubleObjectHeap_elki.utilities.datastructures.heap.DoubleObjectMinHeap"><path codeLine="651" d="M8445.6,374.71 C8419.89,411.44 8391.68,451.75 8364.47,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectHeap-backto-elki.utilities.datastructures.heap.DoubleObjectMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8440.02,370.48,8457.23,358.11,8451.49,378.5,8440.02,370.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ba1c0fc4d44390223ee64f9ea11123ee]
reverse link elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter"><path codeLine="652" d="M8814.48,735.6 C8787.33,776.9 8745.54,831.34 8696,865 C8621.45,915.66 8524.92,946.49 8446.79,964.68 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8808.72,731.62,8825.37,718.52,8820.52,739.15,8808.72,731.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d14b1b6bc4acf91cb6ea1d88797b4f6a]
reverse link elki.utilities.datastructures.heap.DoubleObjectMinHeap to elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleObjectMinHeap_elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter"><path codeLine="653" d="M8282.08,880.07 C8285.88,895.97 8289.51,911.16 8292.78,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectMinHeap-backto-elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="8280.3995" cy="873.0709" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="8282.259" x2="8278.54" y1="880.8518" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="8272.6186" x2="8288.1804" y1="874.9304" y2="871.2114"/></g><!--MD5=[16fbe09a57e2b4f099a38a366bfcccb7]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter"><path codeLine="654" d="M9092.05,295.76 C9076.37,341.14 9047.57,401.08 8999,431 C8748.04,585.58 7931.46,347.5 7674,491 C7612.86,525.08 7575.13,602.44 7557.96,645.89 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.39,293.62,9098.17,276.72,9098.72,297.9,9085.39,293.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0e29992f8d6598ed914f4fa9eaf766f6]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter"><path codeLine="655" d="M6811.82,257.09 C6972.23,285.94 7236.69,351.79 7420,491 C7474.65,532.5 7514.06,604.52 7533.44,645.7 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6804.5089" cy="255.8068" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6812.3878" x2="6796.63" y1="257.1936" y2="254.42"/><line style="stroke:#181818;stroke-width:1.0;" x1="6803.1221" x2="6805.8957" y1="263.6857" y2="247.9279"/></g><!--MD5=[980af00aedc48e079d77467ebd8fbb68]
reverse link elki.utilities.datastructures.heap.DoubleObjectHeap to elki.utilities.datastructures.heap.DoubleObjectMaxHeap--><g id="link_elki.utilities.datastructures.heap.DoubleObjectHeap_elki.utilities.datastructures.heap.DoubleObjectMaxHeap"><path codeLine="656" d="M8542,378.2 C8542,413.98 8542,452.97 8542,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectHeap-backto-elki.utilities.datastructures.heap.DoubleObjectMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8535,378.11,8542,358.11,8549,378.11,8535,378.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0bf9bc52e115a3b92ca3a892ba3b365d]
reverse link elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter"><path codeLine="657" d="M8832.94,738 C8819.3,791.43 8799.26,869.94 8785.26,924.78 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8826.19,736.16,8837.91,718.51,8839.75,739.62,8826.19,736.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[82acae8bd6e3a38ae9ed298366e2ca4d]
reverse link elki.utilities.datastructures.heap.DoubleObjectMaxHeap to elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleObjectMaxHeap_elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter"><path codeLine="658" d="M8687.69,877.63 C8700,894.42 8711.76,910.46 8722.32,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleObjectMaxHeap-backto-elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="8683.3602" cy="871.7417" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="8688.0905" x2="8678.63" y1="878.1934" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="8676.9085" x2="8689.812" y1="876.472" y2="867.0115"/></g><!--MD5=[618b0c50aa34ea23866ba795f17748a7]
reverse link elki.utilities.datastructures.heap.IntegerHeap to elki.utilities.datastructures.heap.IntegerMinHeap--><g id="link_elki.utilities.datastructures.heap.IntegerHeap_elki.utilities.datastructures.heap.IntegerMinHeap"><path codeLine="659" d="M2116.49,350.93 C2086.3,403.43 2050.02,466.53 2017.45,523.17 " fill="none" id="elki.utilities.datastructures.heap.IntegerHeap-backto-elki.utilities.datastructures.heap.IntegerMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2110.44,347.41,2126.48,333.56,2122.58,354.39,2110.44,347.41" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6d1f56470c1466183c7c5271717ef2fc]
reverse link elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter to elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter_elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter"><path codeLine="660" d="M2409.14,728.59 C2388.62,770.08 2354.29,828.23 2309,865 C2277.08,890.92 2185.86,925.42 2109.75,951.37 " fill="none" id="elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2402.94,725.34,2417.85,710.29,2415.58,731.35,2402.94,725.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1236936cbcd2975f1abf18852aee25cf]
reverse link elki.utilities.datastructures.heap.IntegerMinHeap to elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerMinHeap_elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter"><path codeLine="661" d="M1964.48,847.93 C1970.92,878.58 1977.2,908.49 1982.3,932.78 " fill="none" id="elki.utilities.datastructures.heap.IntegerMinHeap-backto-elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1962.955" cy="840.669" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1964.6" x2="1961.31" y1="848.4981" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="1955.126" x2="1970.7841" y1="842.3141" y2="839.024"/></g><!--MD5=[f84e3e8697b6eeb616365a67fc294535]
reverse link elki.utilities.datastructures.heap.DoubleHeap to elki.utilities.datastructures.heap.DoubleMinHeap--><g id="link_elki.utilities.datastructures.heap.DoubleHeap_elki.utilities.datastructures.heap.DoubleMinHeap"><path codeLine="662" d="M1320.19,349.91 C1282.94,402.61 1238.03,466.16 1197.73,523.17 " fill="none" id="elki.utilities.datastructures.heap.DoubleHeap-backto-elki.utilities.datastructures.heap.DoubleMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1314.49,345.85,1331.75,333.56,1325.92,353.93,1314.49,345.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d169458a92e4b50500a181dfe6b057b3]
reverse link elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter"><path codeLine="663" d="M1658.45,728.43 C1638.37,770.77 1603.83,830.25 1556,865 C1503.55,903.11 1340,942.24 1226.26,965.97 " fill="none" id="elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1652.14,725.38,1666.77,710.05,1664.9,731.16,1652.14,725.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e449755cb13ec5306dd11a47c16af246]
reverse link elki.utilities.datastructures.heap.DoubleMinHeap to elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleMinHeap_elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter"><path codeLine="664" d="M1100.46,847.93 C1102.54,878.58 1104.57,908.49 1106.22,932.78 " fill="none" id="elki.utilities.datastructures.heap.DoubleMinHeap-backto-elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1099.9813" cy="840.8217" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1100.5225" x2="1099.44" y1="848.8033" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="1091.9996" x2="1107.9629" y1="841.3629" y2="840.2804"/></g><!--MD5=[6146c2c7157a8846bd93bbd5f58abe15]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ComparatorMaxHeap--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ComparatorMaxHeap"><path codeLine="665" d="M6528.58,295.18 C6422.33,341.28 6276.27,411.07 6159,491 C6147.78,498.65 6136.54,506.87 6125.43,515.45 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ComparatorMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6526.13,288.62,6547.27,287.14,6531.67,301.48,6526.13,288.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[10646cb6c3a11dc53f2d8ac766c88d6e]
reverse link elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter"><path codeLine="666" d="M7527.84,728.71 C7508.01,772.74 7472.5,834.6 7420,865 C7272.05,950.67 6822.87,905.69 6653,925 C6554.97,936.14 6444.8,952.72 6361.2,966.14 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7521.45,725.85,7535.74,710.2,7534.32,731.34,7521.45,725.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9ededbf9a2b30153a1389c9a0b09a976]
reverse link elki.utilities.datastructures.heap.ComparatorMaxHeap to elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ComparatorMaxHeap_elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter"><path codeLine="667" d="M6107.01,851.83 C6132.99,881.18 6158.19,909.65 6178.81,932.94 " fill="none" id="elki.utilities.datastructures.heap.ComparatorMaxHeap-backto-elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6102.3235" cy="846.5394" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6107.6271" x2="6097.02" y1="852.5287" y2="840.55"/><line style="stroke:#181818;stroke-width:1.0;" x1="6096.3342" x2="6108.3129" y1="851.8429" y2="841.2358"/></g><!--MD5=[7d2d30f87adefd146b06fe31aa584459]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter"><path codeLine="668" d="M9092.44,295.77 C9076.93,341.43 9048.17,401.76 8999,431 C8794.8,552.43 4936.94,387.7 4723,491 C4659.72,521.55 4613.89,592.47 4589.96,637.37 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.79,293.58,9098.47,276.61,9099.14,297.79,9085.79,293.58" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[238f732268b979e874731b17ba3d2ed0]
reverse link elki.utilities.datastructures.heap.IntegerObjectHeap to elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerObjectHeap_elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter"><path codeLine="669" d="M4047.21,287.07 C4155.8,330.41 4306.7,400.37 4420,491 C4472.62,533.09 4519.11,596.39 4546.16,637.21 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectHeap-backto-elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4040.6193" cy="284.4722" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4048.0586" x2="4033.18" y1="287.4144" y2="281.53"/><line style="stroke:#181818;stroke-width:1.0;" x1="4037.6771" x2="4043.5615" y1="291.9115" y2="277.0329"/></g><!--MD5=[e5aa28cc3ad0efd4cdd6fddba2e56c43]
reverse link elki.utilities.datastructures.heap.DoubleIntegerHeap to elki.utilities.datastructures.heap.DoubleIntegerMinHeap--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerHeap_elki.utilities.datastructures.heap.DoubleIntegerMinHeap"><path codeLine="670" d="M380.1,374.71 C353.72,411.44 324.77,451.75 296.86,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerHeap-backto-elki.utilities.datastructures.heap.DoubleIntegerMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="374.67,370.27,392.02,358.11,386.04,378.43,374.67,370.27" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[13d17b67ea29eaf10dc84eb8adfd4d4c]
reverse link elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter"><path codeLine="671" d="M752.76,735.72 C726.53,777.09 685.92,831.55 637,865 C614.89,880.12 485.11,919.09 379.67,949.25 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="746.84,731.99,763.27,718.61,758.77,739.32,746.84,731.99" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1afd7bcb32fb7a2ae9508e541865935c]
reverse link elki.utilities.datastructures.heap.DoubleIntegerMinHeap to elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerMinHeap_elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter"><path codeLine="672" d="M212.37,880.07 C216.28,895.97 220.01,911.16 223.37,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerMinHeap-backto-elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="210.6516" cy="873.0583" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="212.5632" x2="208.74" y1="880.8265" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="202.8833" x2="218.4199" y1="874.9699" y2="871.1467"/></g><!--MD5=[c670737447fa38ff65cc704297a0d8c0]
reverse link elki.utilities.datastructures.heap.DoubleLongHeap to elki.utilities.datastructures.heap.DoubleLongMinHeap--><g id="link_elki.utilities.datastructures.heap.DoubleLongHeap_elki.utilities.datastructures.heap.DoubleLongMinHeap"><path codeLine="673" d="M3047,378.2 C3047,413.98 3047,452.97 3047,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongHeap-backto-elki.utilities.datastructures.heap.DoubleLongMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3040,378.11,3047,358.11,3054,378.11,3040,378.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e55135aa19681ee43c0d2e1a691051a0]
reverse link elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter"><path codeLine="674" d="M3323.53,736.59 C3297.11,790.04 3257.85,869.46 3230.5,924.78 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3317.33,733.34,3332.47,718.51,3329.88,739.54,3317.33,733.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[46f4c46aa622dcf53c0142e77710b0a3]
reverse link elki.utilities.datastructures.heap.DoubleLongMinHeap to elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleLongMinHeap_elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter"><path codeLine="675" d="M3145.27,879.1 C3153.25,895.35 3160.88,910.88 3167.75,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongMinHeap-backto-elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3142.0188" cy="872.4696" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3145.5477" x2="3138.49" y1="879.6493" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="3134.8392" x2="3149.1985" y1="875.9985" y2="868.9408"/></g><!--MD5=[219dd78aed2530e04d2a7df7f373c8d7]
reverse link elki.utilities.datastructures.heap.IntegerHeap to elki.utilities.datastructures.heap.IntegerMaxHeap--><g id="link_elki.utilities.datastructures.heap.IntegerHeap_elki.utilities.datastructures.heap.IntegerMaxHeap"><path codeLine="676" d="M2182,353.68 C2182,405.63 2182,467.51 2182,523.17 " fill="none" id="elki.utilities.datastructures.heap.IntegerHeap-backto-elki.utilities.datastructures.heap.IntegerMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2175,353.56,2182,333.56,2189,353.56,2175,353.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[42fc4dba8b2f176fe6e250e5eece3233]
reverse link elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter to elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter_elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter"><path codeLine="677" d="M2414.08,729.36 C2395.3,785.24 2365.09,875.13 2345.65,933 " fill="none" id="elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2407.55,726.82,2420.55,710.09,2420.82,731.28,2407.55,726.82" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d19bd32fbf7361880f446966840006ce]
reverse link elki.utilities.datastructures.heap.IntegerMaxHeap to elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerMaxHeap_elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter"><path codeLine="678" d="M2260.56,846.68 C2275.12,877.77 2289.36,908.16 2300.9,932.78 " fill="none" id="elki.utilities.datastructures.heap.IntegerMaxHeap-backto-elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2257.4706" cy="840.086" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2260.8612" x2="2254.08" y1="847.3319" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="2250.2246" x2="2264.7165" y1="843.4765" y2="836.6954"/></g><!--MD5=[4f4daf5a91eb4275fcc884a177de341f]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.Heap.UnorderedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.Heap.UnorderedIter"><path codeLine="679" d="M9092.11,295.86 C9076.46,341.29 9047.68,401.26 8999,431 C8849.27,522.48 7573.12,403.55 7421,491 C7371.77,519.3 7339.95,577.36 7321.9,621.12 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.Heap.UnorderedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="9085.45,293.7,9098.22,276.79,9098.78,297.97,9085.45,293.7" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[58884a95635b6c30636fbd657a2eeb35]
reverse link elki.utilities.datastructures.heap.Heap to elki.utilities.datastructures.heap.Heap.UnorderedIter--><g id="link_elki.utilities.datastructures.heap.Heap_elki.utilities.datastructures.heap.Heap.UnorderedIter"><path codeLine="680" d="M5453.96,263.69 C5683.64,304.38 6140.12,382.33 6530,431 C6675.26,449.13 7061.22,414.45 7186,491 C7234.13,520.52 7265.71,578.08 7283.8,621.38 " fill="none" id="elki.utilities.datastructures.heap.Heap-backto-elki.utilities.datastructures.heap.Heap.UnorderedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5447.0476" cy="262.4542" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5454.9252" x2="5439.17" y1="263.8484" y2="261.06"/><line style="stroke:#181818;stroke-width:1.0;" x1="5445.6534" x2="5448.4418" y1="270.3318" y2="254.5766"/></g><!--MD5=[36bd2f3aeb2ad29559ed25ba6b0c4a76]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ComparableMaxHeap--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ComparableMaxHeap"><path codeLine="681" d="M6672,353.68 C6672,405.63 6672,467.51 6672,523.17 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ComparableMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6665,353.56,6672,333.56,6679,353.56,6665,353.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d2ed56ce4290881e775c31addb0757ca]
reverse link elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter"><path codeLine="682" d="M7525.8,728.55 C7505.01,771.18 7469.26,831.01 7420,865 C7339.32,920.67 7236.47,951.38 7144.06,968.26 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7519.5,725.5,7534.3,710.33,7532.19,731.42,7519.5,725.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[86b2bda9ad26b32b3334a45d36873b5e]
reverse link elki.utilities.datastructures.heap.ComparableMaxHeap to elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ComparableMaxHeap_elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter"><path codeLine="683" d="M6798.04,845 C6822.09,876.68 6845.66,907.72 6864.69,932.78 " fill="none" id="elki.utilities.datastructures.heap.ComparableMaxHeap-backto-elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6793.6489" cy="839.2106" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6798.4879" x2="6788.81" y1="845.5812" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="6787.2783" x2="6800.0195" y1="844.0495" y2="834.3717"/></g><!--MD5=[1a8ee4555092b519a4fe370151463be4]
reverse link elki.utilities.datastructures.heap.IntegerObjectHeap to elki.utilities.datastructures.heap.IntegerObjectMaxHeap--><g id="link_elki.utilities.datastructures.heap.IntegerObjectHeap_elki.utilities.datastructures.heap.IntegerObjectMaxHeap"><path codeLine="684" d="M3820.99,375.21 C3797.95,411.8 3772.7,451.92 3748.34,490.62 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectHeap-backto-elki.utilities.datastructures.heap.IntegerObjectMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3815.18,371.3,3831.76,358.11,3827.03,378.76,3815.18,371.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0aa47f1b9c42242c38e23ffe86b437b3]
reverse link elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter"><path codeLine="685" d="M4539.8,735.93 C4513.5,778.34 4471.88,834.04 4420,865 C4296.86,938.47 4243.73,897.5 4103,925 C4045.65,936.21 3982.49,948.88 3927.88,959.93 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4533.84,732.25,4550.12,718.68,4545.86,739.44,4533.84,732.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3381d1b658d31351f7d990958cbf9f6e]
reverse link elki.utilities.datastructures.heap.IntegerObjectMaxHeap to elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerObjectMaxHeap_elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter"><path codeLine="686" d="M3732.5,879.1 C3740.75,895.35 3748.62,910.88 3755.72,924.86 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectMaxHeap-backto-elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3729.1173" cy="872.4255" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3732.7345" x2="3725.5" y1="879.561" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="3721.9817" x2="3736.2528" y1="876.0428" y2="868.8083"/></g><!--MD5=[7301463612693bea327808352910a874]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter"><path codeLine="687" d="M9092.46,295.81 C9076.97,341.5 9048.22,401.84 8999,431 C8735.82,586.94 3766.22,353.41 3493,491 C3432.02,521.71 3390.23,592.57 3368.78,637.43 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.81,293.62,9098.49,276.64,9099.17,297.82,9085.81,293.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[91e6800446a4ac1a87376c1be5ffae1a]
reverse link elki.utilities.datastructures.heap.DoubleLongHeap to elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleLongHeap_elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter"><path codeLine="688" d="M3139.61,370.6 C3203.2,462.34 3283.31,577.91 3324.6,637.48 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongHeap-backto-elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3135.5065" cy="364.6856" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3140.0629" x2="3130.95" y1="371.2612" y2="358.11"/><line style="stroke:#181818;stroke-width:1.0;" x1="3128.9308" x2="3142.0821" y1="369.2421" y2="360.1292"/></g><!--MD5=[0b5f11bfd0e20e673fb4fb62ae8487bf]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter"><path codeLine="689" d="M9092.47,295.83 C9076.99,341.53 9048.24,401.88 8999,431 C8844.9,522.14 2711.3,405.49 2554,491 C2492.95,524.19 2457.04,602.28 2441.03,645.99 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.83,293.63,9098.5,276.65,9099.18,297.83,9085.83,293.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a4b34f7243354d5e1084921f16bf4c3d]
reverse link elki.utilities.datastructures.heap.IntegerHeap to elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerHeap_elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter"><path codeLine="690" d="M2244.2,346.91 C2300.06,445.63 2378.47,584.18 2413.22,645.59 " fill="none" id="elki.utilities.datastructures.heap.IntegerHeap-backto-elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2240.5787" cy="340.5232" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2244.5174" x2="2236.64" y1="347.4865" y2="333.56"/><line style="stroke:#181818;stroke-width:1.0;" x1="2233.6155" x2="2247.5419" y1="344.4619" y2="336.5845"/></g><!--MD5=[be340b69a0c55b32cc2dc0f1d4709f7d]
reverse link elki.utilities.datastructures.heap.DoubleIntegerHeap to elki.utilities.datastructures.heap.DoubleIntegerMaxHeap--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerHeap_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap"><path codeLine="691" d="M479,378.2 C479,413.98 479,452.97 479,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerHeap-backto-elki.utilities.datastructures.heap.DoubleIntegerMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="472,378.11,479,358.11,486,378.11,472,378.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[625bbe05d6d5fc9f2cfcbd8b0cd8f435]
reverse link elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter"><path codeLine="692" d="M756.71,736.59 C730.46,790.04 691.46,869.46 664.29,924.78 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="750.5,733.38,765.59,718.51,763.06,739.55,750.5,733.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[24f12d32f0f2aa61eaac64ffb51fa198]
reverse link elki.utilities.datastructures.heap.DoubleIntegerMaxHeap to elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap_elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter"><path codeLine="693" d="M578.56,879.1 C586.65,895.35 594.38,910.88 601.33,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerMaxHeap-backto-elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="575.2525" cy="872.453" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="578.815" x2="571.69" y1="879.616" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="568.0895" x2="582.4155" y1="876.0155" y2="868.8905"/></g><!--MD5=[13b05bcd62466bdb0f34cd8b0836b900]
reverse link elki.utilities.datastructures.heap.ObjectHeap to elki.utilities.datastructures.heap.ComparableMinHeap--><g id="link_elki.utilities.datastructures.heap.ObjectHeap_elki.utilities.datastructures.heap.ComparableMinHeap"><path codeLine="694" d="M6527.68,273.02 C6345.31,319.39 6022.35,404.35 5750,491 C5717.9,501.21 5684.81,512.17 5651.64,523.47 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap-backto-elki.utilities.datastructures.heap.ComparableMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6526.21,266.17,6547.31,268.04,6529.65,279.74,6526.21,266.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[18cf72156ae48cfe126a1478815e539e]
reverse link elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter"><path codeLine="695" d="M7528.24,728.75 C7508.6,773.08 7473.14,835.4 7420,865 C7289.6,937.63 6226.91,914.79 6078,925 C5928.54,935.25 5761.12,950.67 5629.09,963.75 " fill="none" id="elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7521.86,725.86,7536.04,710.12,7534.77,731.27,7521.86,725.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d56940ee5f955de1630964a17c8176fb]
reverse link elki.utilities.datastructures.heap.ComparableMinHeap to elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.ComparableMinHeap_elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter"><path codeLine="696" d="M5320.3,846.26 C5336.05,877.5 5351.45,908.05 5363.92,932.78 " fill="none" id="elki.utilities.datastructures.heap.ComparableMinHeap-backto-elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5317.1451" cy="839.9816" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5320.7502" x2="5313.54" y1="847.1233" y2="832.84"/><line style="stroke:#181818;stroke-width:1.0;" x1="5310.0035" x2="5324.2868" y1="843.5868" y2="836.3765"/></g><!--MD5=[fc33ebb8149c3ad956d5ce3a63fea8c2]
reverse link elki.utilities.datastructures.heap.DoubleLongHeap to elki.utilities.datastructures.heap.DoubleLongMaxHeap--><g id="link_elki.utilities.datastructures.heap.DoubleLongHeap_elki.utilities.datastructures.heap.DoubleLongMaxHeap"><path codeLine="697" d="M2944.4,374.22 C2916.84,411.08 2886.56,451.57 2857.36,490.62 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongHeap-backto-elki.utilities.datastructures.heap.DoubleLongMaxHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2938.86,369.93,2956.45,358.11,2950.08,378.31,2938.86,369.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6da4cbad68133fd0ba8ce3cc8b5a5119]
reverse link elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter to elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter_elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter"><path codeLine="698" d="M3322.72,736.34 C3298.51,778.09 3260.32,832.76 3212,865 C3155.66,902.6 2987.28,940.57 2865.62,964.29 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3316.67,732.81,3332.53,718.77,3328.89,739.64,3316.67,732.81" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[936737962ae5b57abad9d251e0651b0a]
reverse link elki.utilities.datastructures.heap.DoubleLongMaxHeap to elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleLongMaxHeap_elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter"><path codeLine="699" d="M2726.47,880.56 C2727.13,896.28 2727.76,911.3 2728.33,924.86 " fill="none" id="elki.utilities.datastructures.heap.DoubleLongMaxHeap-backto-elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2726.1629" cy="873.2826" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2726.5057" x2="2725.82" y1="881.2753" y2="865.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="2718.1702" x2="2734.1555" y1="873.6255" y2="872.9398"/></g><!--MD5=[9345a25e504a8c6d31cefae93c153b1b]
reverse link elki.utilities.datastructures.heap.IntegerObjectHeap to elki.utilities.datastructures.heap.IntegerObjectMinHeap--><g id="link_elki.utilities.datastructures.heap.IntegerObjectHeap_elki.utilities.datastructures.heap.IntegerObjectMinHeap"><path codeLine="700" d="M3908,378.2 C3908,413.98 3908,452.97 3908,490.62 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectHeap-backto-elki.utilities.datastructures.heap.IntegerObjectMinHeap" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3901,378.11,3908,358.11,3915,378.11,3901,378.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[aa664c11fd7d7cb4ed1ecee1d9e13a74]
reverse link elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter to elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter_elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter"><path codeLine="701" d="M4531.18,734.87 C4502.42,773.42 4461.48,824.77 4420,865 C4398.42,885.93 4373.31,906.58 4349.4,924.82 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter-backto-elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4525.61,730.62,4543.11,718.67,4536.88,738.93,4525.61,730.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0a85a5ed54915f607bae316425768cc0]
reverse link elki.utilities.datastructures.heap.IntegerObjectMinHeap to elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.IntegerObjectMinHeap_elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter"><path codeLine="702" d="M4040,858.57 C4042.32,860.76 4044.65,862.9 4047,865 C4071.92,887.27 4101.48,907.53 4130.46,924.9 " fill="none" id="elki.utilities.datastructures.heap.IntegerObjectMinHeap-backto-elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4034.9774" cy="853.6656" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4040.6949" x2="4029.26" y1="859.2612" y2="848.07"/><line style="stroke:#181818;stroke-width:1.0;" x1="4029.3818" x2="4040.5731" y1="859.3831" y2="847.9482"/></g><!--MD5=[a87f4c3dbce57dec85a8d4720ec36bd7]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter"><path codeLine="703" d="M9092.48,295.84 C9077,341.55 9048.26,401.9 8999,431 C8826.9,532.68 1978.85,395.94 1803,491 C1741.72,524.13 1705.41,602.24 1689.18,645.97 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.83,293.64,9098.51,276.66,9099.19,297.84,9085.83,293.64" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[92ddbb9421eec64af44aa40c88d25f3a]
reverse link elki.utilities.datastructures.heap.DoubleHeap to elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleHeap_elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter"><path codeLine="704" d="M1469.31,346.3 C1531.93,445.06 1620.07,584.06 1659.08,645.59 " fill="none" id="elki.utilities.datastructures.heap.DoubleHeap-backto-elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1465.5151" cy="340.3156" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1469.8003" x2="1461.23" y1="347.0711" y2="333.56"/><line style="stroke:#181818;stroke-width:1.0;" x1="1458.7596" x2="1472.2707" y1="344.6007" y2="336.0304"/></g><!--MD5=[2e4fd61ee94231e253f2d9e3da77825c]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter"><path codeLine="705" d="M9092.49,295.85 C9077.01,341.57 9048.27,401.92 8999,431 C8806.06,544.87 1135.59,393.27 934,491 C871.27,521.41 826.56,592.37 803.33,637.32 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9085.84,293.65,9098.51,276.67,9099.2,297.85,9085.84,293.65" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c2bdab79d7bf5c7d55817d4f0b584d2e]
reverse link elki.utilities.datastructures.heap.DoubleIntegerHeap to elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter--><g id="link_elki.utilities.datastructures.heap.DoubleIntegerHeap_elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter"><path codeLine="706" d="M571.91,370.6 C635.71,462.34 716.09,577.91 757.51,637.48 " fill="none" id="elki.utilities.datastructures.heap.DoubleIntegerHeap-backto-elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="567.7903" cy="364.676" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="572.3606" x2="563.22" y1="371.242" y2="358.11"/><line style="stroke:#181818;stroke-width:1.0;" x1="561.2243" x2="574.3563" y1="369.2463" y2="360.1057"/></g><!--MD5=[134f89a48dbbae20c777e46aa87634d3]
reverse link elki.utilities.datastructures.heap.Heap to elki.utilities.datastructures.heap.UpdatableHeap--><g id="link_elki.utilities.datastructures.heap.Heap_elki.utilities.datastructures.heap.UpdatableHeap"><path codeLine="707" d="M5152.92,257.06 C4968.64,286.38 4654.7,353.19 4420,491 C4393.54,506.53 4368.13,526.68 4345.02,547.95 " fill="none" id="elki.utilities.datastructures.heap.Heap-backto-elki.utilities.datastructures.heap.UpdatableHeap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5151.97,250.12,5172.81,253.96,5154.13,263.95,5151.97,250.12" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="4560.5" y="1076"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="4560.5" y="1085.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[350313176fc79e1f1d97994c9055884a]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.utilities.datastructures.heap {

        class DoubleMaxHeap [[DoubleMaxHeap.html]] {
            #twoheap: double[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleMaxHeap()
            +DoubleMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double): void
            +add(double, int): void
            +replaceTopElement(double): double
            -heapifyUp(int, double): void
            +poll(): double
            -heapifyDown(double): void
            +peek(): double
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter [[DoubleMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): double
        }

        class ComparatorMinHeap<K> [[ComparatorMinHeap.html]] {
            #twoheap: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            #comparator: Comparator<Object>
            +ComparatorMinHeap(Comparator<? super K>)
            +ComparatorMinHeap(int, Comparator<? super K>)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(K): void
            +add(K, int): void
            +replaceTopElement(K): K
            -heapifyUp(int, Object): void
            +poll(): K
            -heapifyDown(Object): void
            +peek(): K
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter [[ComparatorMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): K
        }

        interface DoubleObjectHeap<V> [[DoubleObjectHeap.html]] {
            {abstract} +add(double, V): void
            {abstract} +add(double, V, int): void
            {abstract} +replaceTopElement(double, V): void
            {abstract} +peekKey(): double
            {abstract} +peekValue(): V
            {abstract} +containsKey(double): boolean
            {abstract} +containsValue(V): boolean
            {abstract} +poll(): void
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter<V>
        }

        interface elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter<V> [[DoubleObjectHeap.UnsortedIter.html]] {
            {abstract} +getKey(): double
            {abstract} +getValue(): V
        }

        class DoubleObjectMinHeap<V> [[DoubleObjectMinHeap.html]] {
            #twoheap: double[]
            #twovals: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleObjectMinHeap()
            +DoubleObjectMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, V): void
            +add(double, V, int): void
            +replaceTopElement(double, V): void
            -heapifyUp(int, double, Object): void
            +poll(): void
            -heapifyDown(double, Object): void
            +peekKey(): double
            +peekValue(): V
            +containsKey(double): boolean
            +containsValue(V): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter [[DoubleObjectMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): V
        }

        interface ObjectHeap<K> [[ObjectHeap.html]] {
            {abstract} +add(K): void
            {abstract} +add(K, int): void
            {abstract} +replaceTopElement(K): K
            {abstract} +peek(): K
            {abstract} +poll(): K
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter<K>
        }

        interface elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter<K> [[ObjectHeap.UnsortedIter.html]] {
            {abstract} +get(): K
        }

        class DoubleObjectMaxHeap<V> [[DoubleObjectMaxHeap.html]] {
            #twoheap: double[]
            #twovals: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleObjectMaxHeap()
            +DoubleObjectMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, V): void
            +add(double, V, int): void
            +replaceTopElement(double, V): void
            -heapifyUp(int, double, Object): void
            +poll(): void
            -heapifyDown(double, Object): void
            +peekKey(): double
            +peekValue(): V
            +containsKey(double): boolean
            +containsValue(V): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter [[DoubleObjectMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): V
        }

        class IntegerMinHeap [[IntegerMinHeap.html]] {
            #twoheap: int[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +IntegerMinHeap()
            +IntegerMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(int): void
            +add(int, int): void
            +replaceTopElement(int): int
            -heapifyUp(int, int): void
            +poll(): int
            -heapifyDown(int): void
            +peek(): int
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter [[IntegerMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): int
        }

        class DoubleMinHeap [[DoubleMinHeap.html]] {
            #twoheap: double[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleMinHeap()
            +DoubleMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double): void
            +add(double, int): void
            +replaceTopElement(double): double
            -heapifyUp(int, double): void
            +poll(): double
            -heapifyDown(double): void
            +peek(): double
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter [[DoubleMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): double
        }

        class ComparatorMaxHeap<K> [[ComparatorMaxHeap.html]] {
            #twoheap: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            #comparator: Comparator<Object>
            +ComparatorMaxHeap(Comparator<? super K>)
            +ComparatorMaxHeap(int, Comparator<? super K>)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(K): void
            +add(K, int): void
            +replaceTopElement(K): K
            -heapifyUp(int, Object): void
            +poll(): K
            -heapifyDown(Object): void
            +peek(): K
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter [[ComparatorMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): K
        }

        interface IntegerObjectHeap<V> [[IntegerObjectHeap.html]] {
            {abstract} +add(int, V): void
            {abstract} +add(int, V, int): void
            {abstract} +replaceTopElement(int, V): void
            {abstract} +peekKey(): int
            {abstract} +peekValue(): V
            {abstract} +containsKey(int): boolean
            {abstract} +containsValue(V): boolean
            {abstract} +poll(): void
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter<V>
        }

        interface elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter<V> [[IntegerObjectHeap.UnsortedIter.html]] {
            {abstract} +getKey(): int
            {abstract} +getValue(): V
        }

        class DoubleIntegerMinHeap [[DoubleIntegerMinHeap.html]] {
            #twoheap: double[]
            #twovals: int[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleIntegerMinHeap()
            +DoubleIntegerMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, int): void
            +add(double, int, int): void
            +replaceTopElement(double, int): void
            -heapifyUp(int, double, int): void
            +poll(): void
            -heapifyDown(double, int): void
            +peekKey(): double
            +peekValue(): int
            +containsKey(double): boolean
            +containsValue(int): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter [[DoubleIntegerMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): int
        }

        class DoubleLongMinHeap [[DoubleLongMinHeap.html]] {
            #twoheap: double[]
            #twovals: long[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleLongMinHeap()
            +DoubleLongMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, long): void
            +add(double, long, int): void
            +replaceTopElement(double, long): void
            -heapifyUp(int, double, long): void
            +poll(): void
            -heapifyDown(double, long): void
            +peekKey(): double
            +peekValue(): long
            +containsKey(double): boolean
            +containsValue(long): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter [[DoubleLongMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): long
        }

        class IntegerMaxHeap [[IntegerMaxHeap.html]] {
            #twoheap: int[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +IntegerMaxHeap()
            +IntegerMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(int): void
            +add(int, int): void
            +replaceTopElement(int): int
            -heapifyUp(int, int): void
            +poll(): int
            -heapifyDown(int): void
            +peek(): int
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter [[IntegerMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): int
        }

        class Heap<E> [[Heap.html]] {
            #queue: Object[]
            #size: int
            #comparator: Comparator<Object>
            -modCount: int
            {static} -DEFAULT_INITIAL_CAPACITY: int
            +Heap()
            +Heap(int)
            +Heap(Comparator<? super E>)
            +Heap(int, Comparator<? super E>)
            +add(E): void
            +add(E, int): void
            +peek(): E
            +poll(): E
            #heapifyUp(int, E): void
            #heapifyDown(int, Object): boolean
            +size(): int
            +isEmpty(): boolean
            +clear(): void
            #heapModified(): void
            +unorderedIter(): UnorderedIter
            #checkHeap(): String
        }

        class elki.utilities.datastructures.heap.Heap.UnorderedIter [[Heap.UnorderedIter.html]] {
            ~pos: int
            +valid(): boolean
            +advance(): UnorderedIter
            +get(): E
        }

        class ComparableMaxHeap<K extends Comparable<? super K>> [[ComparableMaxHeap.html]] {
            #twoheap: Comparable<Object>[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +ComparableMaxHeap()
            +ComparableMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(K extends Comparable<? super Comparable<? super K>>): void
            +add(K extends Comparable<? super Comparable<? super K>>, int): void
            +replaceTopElement(K extends Comparable<? super Comparable<? super K>>): K extends Comparable<? super Comparable<? super K>>
            -heapifyUp(int, Comparable<Object>): void
            +poll(): K extends Comparable<? super Comparable<? super K>>
            -heapifyDown(Comparable<Object>): void
            +peek(): K extends Comparable<? super Comparable<? super K>>
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter [[ComparableMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): K extends Comparable<? super Comparable<? super K>>
        }

        class IntegerObjectMaxHeap<V> [[IntegerObjectMaxHeap.html]] {
            #twoheap: int[]
            #twovals: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +IntegerObjectMaxHeap()
            +IntegerObjectMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(int, V): void
            +add(int, V, int): void
            +replaceTopElement(int, V): void
            -heapifyUp(int, int, Object): void
            +poll(): void
            -heapifyDown(int, Object): void
            +peekKey(): int
            +peekValue(): V
            +containsKey(int): boolean
            +containsValue(V): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter [[IntegerObjectMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): int
            +getValue(): V
        }

        interface DoubleLongHeap [[DoubleLongHeap.html]] {
            {abstract} +add(double, long): void
            {abstract} +add(double, long, int): void
            {abstract} +replaceTopElement(double, long): void
            {abstract} +peekKey(): double
            {abstract} +peekValue(): long
            {abstract} +containsKey(double): boolean
            {abstract} +containsValue(long): boolean
            {abstract} +poll(): void
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter
        }

        interface elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter [[DoubleLongHeap.UnsortedIter.html]] {
            {abstract} +getKey(): double
            {abstract} +getValue(): long
        }

        interface IntegerHeap [[IntegerHeap.html]] {
            {abstract} +add(int): void
            {abstract} +add(int, int): void
            {abstract} +replaceTopElement(int): int
            {abstract} +peek(): int
            {abstract} +poll(): int
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter
        }

        interface elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter [[IntegerHeap.UnsortedIter.html]] {
            {abstract} +get(): int
        }

        class HeapUtil [[HeapUtil.html]] {
            {static} -MAX_ARRAY_SIZE: int
            {static} +nextPow2Int(int): int
            {static} +nextSize(int): int
        }

        class DoubleIntegerMaxHeap [[DoubleIntegerMaxHeap.html]] {
            #twoheap: double[]
            #twovals: int[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleIntegerMaxHeap()
            +DoubleIntegerMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, int): void
            +add(double, int, int): void
            +replaceTopElement(double, int): void
            -heapifyUp(int, double, int): void
            +poll(): void
            -heapifyDown(double, int): void
            +peekKey(): double
            +peekValue(): int
            +containsKey(double): boolean
            +containsValue(int): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter [[DoubleIntegerMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): int
        }

        class ComparableMinHeap<K extends Comparable<? super K>> [[ComparableMinHeap.html]] {
            #twoheap: Comparable<Object>[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +ComparableMinHeap()
            +ComparableMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(K extends Comparable<? super Comparable<? super K>>): void
            +add(K extends Comparable<? super Comparable<? super K>>, int): void
            +replaceTopElement(K extends Comparable<? super Comparable<? super K>>): K extends Comparable<? super Comparable<? super K>>
            -heapifyUp(int, Comparable<Object>): void
            +poll(): K extends Comparable<? super Comparable<? super K>>
            -heapifyDown(Comparable<Object>): void
            +peek(): K extends Comparable<? super Comparable<? super K>>
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter [[ComparableMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +get(): K extends Comparable<? super Comparable<? super K>>
        }

        class DoubleLongMaxHeap [[DoubleLongMaxHeap.html]] {
            #twoheap: double[]
            #twovals: long[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +DoubleLongMaxHeap()
            +DoubleLongMaxHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(double, long): void
            +add(double, long, int): void
            +replaceTopElement(double, long): void
            -heapifyUp(int, double, long): void
            +poll(): void
            -heapifyDown(double, long): void
            +peekKey(): double
            +peekValue(): long
            +containsKey(double): boolean
            +containsValue(long): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter [[DoubleLongMaxHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): double
            +getValue(): long
        }

        class IntegerObjectMinHeap<V> [[IntegerObjectMinHeap.html]] {
            #twoheap: int[]
            #twovals: Object[]
            #size: int
            {static} -TWO_HEAP_INITIAL_SIZE: int
            +IntegerObjectMinHeap()
            +IntegerObjectMinHeap(int)
            +clear(): void
            +size(): int
            +isEmpty(): boolean
            +add(int, V): void
            +add(int, V, int): void
            +replaceTopElement(int, V): void
            -heapifyUp(int, int, Object): void
            +poll(): void
            -heapifyDown(int, Object): void
            +peekKey(): int
            +peekValue(): V
            +containsKey(int): boolean
            +containsValue(V): boolean
            +unsortedIter(): UnsortedIter
        }

        class elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter [[IntegerObjectMinHeap.UnsortedIter.html]] {
            #pos: int
            +valid(): boolean
            +advance(): UnsortedIter
            +getKey(): int
            +getValue(): V
        }

        interface DoubleHeap [[DoubleHeap.html]] {
            {abstract} +add(double): void
            {abstract} +add(double, int): void
            {abstract} +replaceTopElement(double): double
            {abstract} +peek(): double
            {abstract} +poll(): double
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter
        }

        interface elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter [[DoubleHeap.UnsortedIter.html]] {
            {abstract} +get(): double
        }

        interface DoubleIntegerHeap [[DoubleIntegerHeap.html]] {
            {abstract} +add(double, int): void
            {abstract} +add(double, int, int): void
            {abstract} +replaceTopElement(double, int): void
            {abstract} +peekKey(): double
            {abstract} +peekValue(): int
            {abstract} +containsKey(double): boolean
            {abstract} +containsValue(int): boolean
            {abstract} +poll(): void
            {abstract} +clear(): void
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +unsortedIter(): UnsortedIter
        }

        interface elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter [[DoubleIntegerHeap.UnsortedIter.html]] {
            {abstract} +getKey(): double
            {abstract} +getValue(): int
        }

        class UpdatableHeap<O> [[UpdatableHeap.html]] {
            {static} #NO_VALUE: int
            {static} #IN_TIES: int
            #index: Object2IntOpenHashMap<Object>
            +UpdatableHeap()
            +UpdatableHeap(int)
            +UpdatableHeap(Comparator<? super O>)
            +UpdatableHeap(int, Comparator<? super O>)
            +clear(): void
            +add(O): void
            #offerAt(int, O): void
            +poll(): O
            #heapifyUp(int, Object): void
            #heapifyDown(int, Object): boolean
        }

        DoubleHeap <|.. DoubleMaxHeap
        elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter
        DoubleMaxHeap +- - elki.utilities.datastructures.heap.DoubleMaxHeap.UnsortedIter
        ObjectHeap <|.. ComparatorMinHeap
        elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter
        ComparatorMinHeap +- - elki.utilities.datastructures.heap.ComparatorMinHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter
        DoubleObjectHeap +- - elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter
        DoubleObjectHeap <|.. DoubleObjectMinHeap
        elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter
        DoubleObjectMinHeap +- - elki.utilities.datastructures.heap.DoubleObjectMinHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter
        ObjectHeap +- - elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter
        DoubleObjectHeap <|.. DoubleObjectMaxHeap
        elki.utilities.datastructures.heap.DoubleObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter
        DoubleObjectMaxHeap +- - elki.utilities.datastructures.heap.DoubleObjectMaxHeap.UnsortedIter
        IntegerHeap <|.. IntegerMinHeap
        elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter
        IntegerMinHeap +- - elki.utilities.datastructures.heap.IntegerMinHeap.UnsortedIter
        DoubleHeap <|.. DoubleMinHeap
        elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter
        DoubleMinHeap +- - elki.utilities.datastructures.heap.DoubleMinHeap.UnsortedIter
        ObjectHeap <|.. ComparatorMaxHeap
        elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter
        ComparatorMaxHeap +- - elki.utilities.datastructures.heap.ComparatorMaxHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter
        IntegerObjectHeap +- - elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter
        DoubleIntegerHeap <|.. DoubleIntegerMinHeap
        elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter
        DoubleIntegerMinHeap +- - elki.utilities.datastructures.heap.DoubleIntegerMinHeap.UnsortedIter
        DoubleLongHeap <|.. DoubleLongMinHeap
        elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter
        DoubleLongMinHeap +- - elki.utilities.datastructures.heap.DoubleLongMinHeap.UnsortedIter
        IntegerHeap <|.. IntegerMaxHeap
        elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter
        IntegerMaxHeap +- - elki.utilities.datastructures.heap.IntegerMaxHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|.. elki.utilities.datastructures.heap.Heap.UnorderedIter
        Heap +- - elki.utilities.datastructures.heap.Heap.UnorderedIter
        ObjectHeap <|.. ComparableMaxHeap
        elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter
        ComparableMaxHeap +- - elki.utilities.datastructures.heap.ComparableMaxHeap.UnsortedIter
        IntegerObjectHeap <|.. IntegerObjectMaxHeap
        elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter
        IntegerObjectMaxHeap +- - elki.utilities.datastructures.heap.IntegerObjectMaxHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter
        DoubleLongHeap +- - elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter
        IntegerHeap +- - elki.utilities.datastructures.heap.IntegerHeap.UnsortedIter
        DoubleIntegerHeap <|.. DoubleIntegerMaxHeap
        elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter
        DoubleIntegerMaxHeap +- - elki.utilities.datastructures.heap.DoubleIntegerMaxHeap.UnsortedIter
        ObjectHeap <|.. ComparableMinHeap
        elki.utilities.datastructures.heap.ObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter
        ComparableMinHeap +- - elki.utilities.datastructures.heap.ComparableMinHeap.UnsortedIter
        DoubleLongHeap <|.. DoubleLongMaxHeap
        elki.utilities.datastructures.heap.DoubleLongHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter
        DoubleLongMaxHeap +- - elki.utilities.datastructures.heap.DoubleLongMaxHeap.UnsortedIter
        IntegerObjectHeap <|.. IntegerObjectMinHeap
        elki.utilities.datastructures.heap.IntegerObjectHeap.UnsortedIter <|.. elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter
        IntegerObjectMinHeap +- - elki.utilities.datastructures.heap.IntegerObjectMinHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter
        DoubleHeap +- - elki.utilities.datastructures.heap.DoubleHeap.UnsortedIter
        elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter
        DoubleIntegerHeap +- - elki.utilities.datastructures.heap.DoubleIntegerHeap.UnsortedIter
        Heap <|- - UpdatableHeap
    }

    namespace elki.utilities.datastructures.iterator {
        interface Iter [[../iterator/Iter.html]] {
            {abstract} +valid(): boolean
            {abstract} +advance(): Iter
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>