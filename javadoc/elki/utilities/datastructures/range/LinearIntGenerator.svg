<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="387px" preserveAspectRatio="none" style="width:317px;height:387px;background:#FFFFFF;" version="1.1" viewBox="0 0 317 387" width="317px" zoomAndPan="magnify"><defs/><g><!--MD5=[5c46f1b411e6991e4fb49b547ead4275]
class elki.utilities.datastructures.range.LinearIntGenerator--><a href="LinearIntGenerator.html" target="_top" title="LinearIntGenerator.html" xlink:actuate="onRequest" xlink:href="LinearIntGenerator.html" xlink:show="new" xlink:title="LinearIntGenerator.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.range.LinearIntGenerator"><rect codeLine="6" fill="#F1F1F1" height="184.3125" id="elki.utilities.datastructures.range.LinearIntGenerator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="295" x="11" y="178"/><ellipse cx="76.25" cy="196.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M79.2188,202.6094 Q78.6406,202.9063 78,203.0469 Q77.3594,203.2031 76.6563,203.2031 Q74.1563,203.2031 72.8281,201.5625 Q71.5156,199.9063 71.5156,196.7813 Q71.5156,193.6563 72.8281,192 Q74.1563,190.3438 76.6563,190.3438 Q77.3594,190.3438 78,190.5 Q78.6563,190.6563 79.2188,190.9531 L79.2188,193.6719 Q78.5938,193.0938 78,192.8281 Q77.4063,192.5469 76.7813,192.5469 Q75.4375,192.5469 74.75,193.625 Q74.0625,194.6875 74.0625,196.7813 Q74.0625,198.875 74.75,199.9531 Q75.4375,201.0156 76.7813,201.0156 Q77.4063,201.0156 78,200.75 Q78.5938,200.4688 79.2188,199.8906 L79.2188,202.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="110.75" y="195.9951">LinearIntGenerator</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="156" x="96.75" y="208.5791">elki.utilities.datastructures.range</text><line style="stroke:#181818;stroke-width:0.5;" x1="12" x2="305" y1="215.9375" y2="215.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="19" y="226.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="31" y="232.9326">start: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="19" y="242.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="31" y="249.2295">step: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="19" y="259.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="31" y="265.5264">stop: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="12" x2="305" y1="272.8281" y2="272.8281"/><ellipse cx="22" cy="286.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="31" y="289.8232">LinearIntGenerator(int, int, int)</text><ellipse cx="22" cy="302.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="31" y="306.1201">getMin(): int</text><ellipse cx="22" cy="319.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="31" y="322.417">getMax(): int</text><ellipse cx="22" cy="335.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="31" y="338.7139">forEach(IntConsumer): void</text><ellipse cx="22" cy="351.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="31" y="355.0107">serializeTo(StringBuilder): StringBuilder</text></g></a><!--MD5=[c73c3020400051c9e64e71baaec06864]
class elki.utilities.datastructures.range.IntGenerator--><a href="IntGenerator.html" target="_top" title="IntGenerator.html" xlink:actuate="onRequest" xlink:href="IntGenerator.html" xlink:show="new" xlink:title="IntGenerator.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.range.IntGenerator"><rect codeLine="17" fill="#F1F1F1" height="111.125" id="elki.utilities.datastructures.range.IntGenerator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="303" x="7" y="7"/><ellipse cx="72.25" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M68.1719,21.7344 L68.1719,19.5781 L75.5625,19.5781 L75.5625,21.7344 L73.0938,21.7344 L73.0938,29.8125 L75.5625,29.8125 L75.5625,31.9688 L68.1719,31.9688 L68.1719,29.8125 L70.6406,29.8125 L70.6406,21.7344 L68.1719,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="89" x="130.25" y="24.9951">IntGenerator</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="164" x="92.75" y="37.5791">elki.utilities.datastructures.range</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="309" y1="44.9375" y2="44.9375"/><ellipse cx="18" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="85" x="27" y="61.9326">getMin(): int</text><ellipse cx="18" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="89" x="27" y="78.2295">getMax(): int</text><ellipse cx="18" cy="91.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="193" x="27" y="94.5264">forEach(IntConsumer): void</text><ellipse cx="18" cy="107.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="277" x="27" y="110.8232">serializeTo(StringBuilder): StringBuilder</text></g></a><!--MD5=[098fb2b1853c4a5e5ebee5e7dfc75a95]
reverse link elki.utilities.datastructures.range.IntGenerator to elki.utilities.datastructures.range.LinearIntGenerator--><g id="link_elki.utilities.datastructures.range.IntGenerator_elki.utilities.datastructures.range.LinearIntGenerator"><path codeLine="24" d="M158.5,138.18 C158.5,151 158.5,164.45 158.5,177.65 " fill="none" id="elki.utilities.datastructures.range.IntGenerator-backto-elki.utilities.datastructures.range.LinearIntGenerator" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="151.5,138.03,158.5,118.03,165.5,138.03,151.5,138.03" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="58.5" y="368.3125"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="58.5" y="377.5947">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[a193e22c1af1d72c45b3c1639edc3d6a]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>LinearIntGenerator\n<size:10>elki.utilities.datastructures.range" as elki.utilities.datastructures.range.LinearIntGenerator [[LinearIntGenerator.html]] {
        -start: int
        -step: int
        -stop: int
        +LinearIntGenerator(int, int, int)
        +getMin(): int
        +getMax(): int
        +forEach(IntConsumer): void
        +serializeTo(StringBuilder): StringBuilder
    }

    interface "<size:14>IntGenerator\n<size:10>elki.utilities.datastructures.range" as elki.utilities.datastructures.range.IntGenerator [[IntGenerator.html]] {
        {abstract} +getMin(): int
        {abstract} +getMax(): int
        {abstract} +forEach(IntConsumer): void
        {abstract} +serializeTo(StringBuilder): StringBuilder
    }

    elki.utilities.datastructures.range.IntGenerator <|.. elki.utilities.datastructures.range.LinearIntGenerator

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>