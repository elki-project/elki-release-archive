<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2312px" preserveAspectRatio="none" style="width:1298px;height:2312px;background:#FFFFFF;" version="1.1" viewBox="0 0 1298 2312" width="1298px" zoomAndPan="magnify"><defs/><g><!--MD5=[3281d461d6018578ec8c24eb5d91014b]
cluster elki.utilities.datastructures--><g id="cluster_elki.utilities.datastructures"><path d="M8.5,6 L220.5,6 A3.75,3.75 0 0 1 223,8.5 L230,28.2969 L1288.5,28.2969 A2.5,2.5 0 0 1 1291,30.7969 L1291,2284.5 A2.5,2.5 0 0 1 1288.5,2287 L8.5,2287 A2.5,2.5 0 0 1 6,2284.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="230" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="211" x="10" y="20.9951">elki.utilities.datastructures</text></g><!--MD5=[a57d9d9cb6294733df90f080c15135c4]
class elki.utilities.datastructures.QuickSelect--><a href="QuickSelect.html" target="_top" title="QuickSelect.html" xlink:actuate="onRequest" xlink:href="QuickSelect.html" xlink:show="new" xlink:title="QuickSelect.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.QuickSelect"><rect codeLine="4" fill="#F1F1F1" height="373.9375" id="elki.utilities.datastructures.QuickSelect" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="532" x="743" y="652"/><ellipse cx="963.75" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M966.7188,673.6406 Q966.1406,673.9375 965.5,674.0781 Q964.8594,674.2344 964.1563,674.2344 Q961.6563,674.2344 960.3281,672.5938 Q959.0156,670.9375 959.0156,667.8125 Q959.0156,664.6875 960.3281,663.0313 Q961.6563,661.375 964.1563,661.375 Q964.8594,661.375 965.5,661.5313 Q966.1563,661.6875 966.7188,661.9844 L966.7188,664.7031 Q966.0938,664.125 965.5,663.8594 Q964.9063,663.5781 964.2813,663.5781 Q962.9375,663.5781 962.25,664.6563 Q961.5625,665.7188 961.5625,667.8125 Q961.5625,669.9063 962.25,670.9844 Q962.9375,672.0469 964.2813,672.0469 Q964.9063,672.0469 965.5,671.7813 Q966.0938,671.5 966.7188,670.9219 L966.7188,673.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="984.25" y="672.8467">QuickSelect</text><line style="stroke:#181818;stroke-width:0.5;" x1="744" x2="1274" y1="684" y2="684"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="694.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="763" y="700.9951">SMALL: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="744" x2="1274" y1="708.2969" y2="708.2969"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="718.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="242" x="763" y="725.292">bestPivot(int, int, int, int, int, int): int</text><ellipse cx="754" cy="738.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="306" x="763" y="741.5889">quickSelect(T, Adapter&lt;T&gt;, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="751.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="289" x="763" y="757.8857">insertionSort(T, Adapter&lt;T&gt;, int, int): void</text><ellipse cx="754" cy="770.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="763" y="774.1826">quickSelect(double[], int): double</text><ellipse cx="754" cy="787.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="176" x="763" y="790.4795">median(double[]): double</text><ellipse cx="754" cy="803.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="226" x="763" y="806.7764">median(double[], int, int): double</text><ellipse cx="754" cy="819.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="236" x="763" y="823.0732">quantile(double[], double): double</text><ellipse cx="754" cy="836.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="286" x="763" y="839.3701">quantile(double[], int, int, double): double</text><ellipse cx="754" cy="852.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="280" x="763" y="855.667">quickSelect(double[], int, int, int): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="865.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="243" x="763" y="871.9639">insertionSort(double[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="881.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="191" x="763" y="888.2607">swap(double[], int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="898.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="189" x="763" y="904.5576">swap(List&lt;T&gt;, int, int): void</text><ellipse cx="754" cy="917.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="437" x="763" y="920.8545">quickSelect(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int): T</text><ellipse cx="754" cy="933.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="383" x="763" y="937.1514">median(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;): T</text><ellipse cx="754" cy="950.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="433" x="763" y="953.4482">median(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int): T</text><ellipse cx="754" cy="966.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="443" x="763" y="969.7451">quantile(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, double): T</text><ellipse cx="754" cy="982.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="493" x="763" y="986.042">quantile(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int, double): T</text><ellipse cx="754" cy="998.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="506" x="763" y="1002.3389">quickSelect(List&lt;? extends T&gt;, Comparator&lt;? super T&gt;, int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="751" y="1012.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="418" x="763" y="1018.6357">insertionSort(List&lt;T&gt;, Comparator&lt;? super T&gt;, int, int): void</text></g></a><!--MD5=[0d9b2c262d06f3e4afceacee59204ec9]
class elki.utilities.datastructures.QuickSelect.Adapter--><a href="QuickSelect.Adapter.html" target="_top" title="QuickSelect.Adapter.html" xlink:actuate="onRequest" xlink:href="QuickSelect.Adapter.html" xlink:show="new" xlink:title="QuickSelect.Adapter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.QuickSelect.Adapter"><rect codeLine="27" fill="#F1F1F1" height="96.8906" id="elki.utilities.datastructures.QuickSelect.Adapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="914.5" y="1885.5"/><ellipse cx="930.4" cy="1901.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M926.3219,1897.2656 L926.3219,1895.1094 L933.7125,1895.1094 L933.7125,1897.2656 L931.2438,1897.2656 L931.2438,1905.3438 L933.7125,1905.3438 L933.7125,1907.5 L926.3219,1907.5 L926.3219,1905.3438 L928.7906,1905.3438 L928.7906,1897.2656 L926.3219,1897.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="944.6" y="1906.3467">QuickSelect.Adapter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="1097.5" y="1882.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="1098.5" y="1894.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="915.5" x2="1102.5" y1="1917.5" y2="1917.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="915.5" x2="1102.5" y1="1925.5" y2="1925.5"/><ellipse cx="925.5" cy="1939.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="146" x="934.5" y="1942.4951">swap(T, int, int): void</text><ellipse cx="925.5" cy="1955.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="161" x="934.5" y="1958.792">compare(T, int, int): int</text><ellipse cx="925.5" cy="1971.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="934.5" y="1975.0889">isSorted(T, int, int): void</text></g></a><!--MD5=[64f1a517155e529a3cf27a26f02c000d]
class elki.utilities.datastructures.KuhnMunkresWong--><a href="KuhnMunkresWong.html" target="_top" title="KuhnMunkresWong.html" xlink:actuate="onRequest" xlink:href="KuhnMunkresWong.html" xlink:show="new" xlink:title="KuhnMunkresWong.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.KuhnMunkresWong"><rect codeLine="33" fill="#F1F1F1" height="259.8594" id="elki.utilities.datastructures.KuhnMunkresWong" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="428.5" y="1804"/><ellipse cx="483.75" cy="1820" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M486.7188,1825.6406 Q486.1406,1825.9375 485.5,1826.0781 Q484.8594,1826.2344 484.1563,1826.2344 Q481.6563,1826.2344 480.3281,1824.5938 Q479.0156,1822.9375 479.0156,1819.8125 Q479.0156,1816.6875 480.3281,1815.0313 Q481.6563,1813.375 484.1563,1813.375 Q484.8594,1813.375 485.5,1813.5313 Q486.1563,1813.6875 486.7188,1813.9844 L486.7188,1816.7031 Q486.0938,1816.125 485.5,1815.8594 Q484.9063,1815.5781 484.2813,1815.5781 Q482.9375,1815.5781 482.25,1816.6563 Q481.5625,1817.7188 481.5625,1819.8125 Q481.5625,1821.9063 482.25,1822.9844 Q482.9375,1824.0469 484.2813,1824.0469 Q484.9063,1824.0469 485.5,1823.7813 Q486.0938,1823.5 486.7188,1822.9219 L486.7188,1825.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="504.25" y="1824.8467">KuhnMunkresWong</text><line style="stroke:#181818;stroke-width:0.5;" x1="429.5" x2="682.5" y1="1836" y2="1836"/><polygon fill="none" points="439.5,1845.6484,435.5,1851.6484,443.5,1851.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="448.5" y="1852.9951">radj: double[]</text><polygon fill="none" points="439.5,1861.9453,435.5,1867.9453,443.5,1867.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="448.5" y="1869.292">cadj: double[]</text><polygon fill="none" points="439.5,1878.2422,435.5,1884.2422,443.5,1884.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="448.5" y="1885.5889">rmin: double[]</text><polygon fill="none" points="439.5,1894.5391,435.5,1900.5391,443.5,1900.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="448.5" y="1901.8857">rptr: int[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="429.5" x2="682.5" y1="1909.1875" y2="1909.1875"/><ellipse cx="439.5" cy="1922.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="448.5" y="1926.1826">run(double[]): int[]</text><polygon fill="#FFFF44" points="439.5,1934.1328,443.5,1938.1328,439.5,1942.1328,435.5,1938.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="448.5" y="1942.4795">initialize(double[]): void</text><polygon fill="#FFFF44" points="439.5,1950.4297,443.5,1954.4297,439.5,1958.4297,435.5,1954.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="448.5" y="1958.7764">initialCover(): void</text><polygon fill="#FFFF44" points="439.5,1966.7266,443.5,1970.7266,439.5,1974.7266,435.5,1970.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="448.5" y="1975.0732">initUncoveredMinimum(): void</text><polygon fill="#FFFF44" points="439.5,1983.0234,443.5,1987.0234,439.5,1991.0234,435.5,1987.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="448.5" y="1991.3701">findUncoveredMinimum(): double</text><polygon fill="#FFFF44" points="439.5,1999.3203,443.5,2003.3203,439.5,2007.3203,435.5,2003.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="448.5" y="2007.667">removeCost(double): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="436.5" y="2017.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="448.5" y="2023.9639">pivot(): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="436.5" y="2033.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="448.5" y="2040.2607">updateStars(): void</text><polygon fill="#FFFF44" points="439.5,2048.2109,443.5,2052.2109,439.5,2056.2109,435.5,2052.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="448.5" y="2056.5576">costOf(int, int): double</text></g></a><!--MD5=[c3b41ddde29e464ae0feb583c1abe0ad]
class elki.utilities.datastructures.KuhnMunkres--><a href="KuhnMunkres.html" target="_top" title="KuhnMunkres.html" xlink:actuate="onRequest" xlink:href="KuhnMunkres.html" xlink:show="new" xlink:title="KuhnMunkres.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.KuhnMunkres"><rect codeLine="49" fill="#F1F1F1" height="341.3438" id="elki.utilities.datastructures.KuhnMunkres" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="304" x="404" y="668.5"/><ellipse cx="503.75" cy="684.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M506.7188,690.1406 Q506.1406,690.4375 505.5,690.5781 Q504.8594,690.7344 504.1563,690.7344 Q501.6563,690.7344 500.3281,689.0938 Q499.0156,687.4375 499.0156,684.3125 Q499.0156,681.1875 500.3281,679.5313 Q501.6563,677.875 504.1563,677.875 Q504.8594,677.875 505.5,678.0313 Q506.1563,678.1875 506.7188,678.4844 L506.7188,681.2031 Q506.0938,680.625 505.5,680.3594 Q504.9063,680.0781 504.2813,680.0781 Q502.9375,680.0781 502.25,681.1563 Q501.5625,682.2188 501.5625,684.3125 Q501.5625,686.4063 502.25,687.4844 Q502.9375,688.5469 504.2813,688.5469 Q504.9063,688.5469 505.5,688.2813 Q506.0938,688 506.7188,687.4219 L506.7188,690.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="524.25" y="689.3467">KuhnMunkres</text><line style="stroke:#181818;stroke-width:0.5;" x1="405" x2="707" y1="700.5" y2="700.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="412" y="711.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="424" y="717.4951">LOG: Logging</text><polygon fill="none" points="415,726.4453,411,732.4453,419,732.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="424" y="733.792">cost: double[]</text><polygon fill="none" points="415,742.7422,411,748.7422,419,748.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="424" y="750.0889">selected: int</text><polygon fill="none" points="415,759.0391,411,765.0391,419,765.0391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="424" y="766.3857">rsel: int[]</text><polygon fill="none" points="415,775.3359,411,781.3359,419,781.3359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="424" y="782.6826">csel: int[]</text><polygon fill="none" points="415,791.6328,411,797.6328,419,797.6328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="424" y="798.9795">rmark: int[]</text><polygon fill="none" points="415,807.9297,411,813.9297,419,813.9297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="424" y="815.2764">cmark: int[]</text><polygon fill="none" points="415,824.2266,411,830.2266,419,830.2266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="424" y="831.5732">minr: int</text><polygon fill="none" points="415,840.5234,411,846.5234,419,846.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="424" y="847.8701">minc: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="405" x2="707" y1="855.1719" y2="855.1719"/><ellipse cx="415" cy="868.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="424" y="872.167">run(double[]): int[]</text><polygon fill="#FFFF44" points="415,880.1172,419,884.1172,415,888.1172,411,884.1172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="424" y="888.4639">initialize(double[]): void</text><polygon fill="#FFFF44" points="415,896.4141,419,900.4141,415,904.4141,411,900.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="424" y="904.7607">initialCover(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="412" y="914.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="424" y="921.0576">findUncoveredMinimum(): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="412" y="931.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="424" y="937.3545">removeCost(double): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="412" y="947.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="424" y="953.6514">pivot(): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="412" y="963.6016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="424" y="969.9482">updateStars(): void</text><polygon fill="#FFFF44" points="415,977.8984,419,981.8984,415,985.8984,411,981.8984" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="424" y="986.2451">debugLogMatrix(Level, long, String): void</text><polygon fill="#FFFF44" points="415,994.1953,419,998.1953,415,1002.1953,411,998.1953" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="424" y="1002.542">costOf(int, int): double</text></g></a><!--MD5=[d18e276ecc853115a3337aa08fbbd8a6]
class elki.utilities.datastructures.KuhnMunkresStern--><a href="KuhnMunkresStern.html" target="_top" title="KuhnMunkresStern.html" xlink:actuate="onRequest" xlink:href="KuhnMunkresStern.html" xlink:show="new" xlink:title="KuhnMunkresStern.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.KuhnMunkresStern"><rect codeLine="70" fill="#F1F1F1" height="145.7813" id="elki.utilities.datastructures.KuhnMunkresStern" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="428.5" y="2125"/><ellipse cx="485.25" cy="2141" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M488.2188,2146.6406 Q487.6406,2146.9375 487,2147.0781 Q486.3594,2147.2344 485.6563,2147.2344 Q483.1563,2147.2344 481.8281,2145.5938 Q480.5156,2143.9375 480.5156,2140.8125 Q480.5156,2137.6875 481.8281,2136.0313 Q483.1563,2134.375 485.6563,2134.375 Q486.3594,2134.375 487,2134.5313 Q487.6563,2134.6875 488.2188,2134.9844 L488.2188,2137.7031 Q487.5938,2137.125 487,2136.8594 Q486.4063,2136.5781 485.7813,2136.5781 Q484.4375,2136.5781 483.75,2137.6563 Q483.0625,2138.7188 483.0625,2140.8125 Q483.0625,2142.9063 483.75,2143.9844 Q484.4375,2145.0469 485.7813,2145.0469 Q486.4063,2145.0469 487,2144.7813 Q487.5938,2144.5 488.2188,2143.9219 L488.2188,2146.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="505.75" y="2145.8467">KuhnMunkresStern</text><line style="stroke:#181818;stroke-width:0.5;" x1="429.5" x2="682.5" y1="2157" y2="2157"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="436.5" y="2167.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="448.5" y="2173.9951">cptr: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="436.5" y="2183.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="448.5" y="2190.292">cmin: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="429.5" x2="682.5" y1="2197.5938" y2="2197.5938"/><ellipse cx="439.5" cy="2211.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="448.5" y="2214.5889">run(double[]): int[]</text><polygon fill="#FFFF44" points="439.5,2222.5391,443.5,2226.5391,439.5,2230.5391,435.5,2226.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="448.5" y="2230.8857">initUncoveredMinimum(): void</text><polygon fill="#FFFF44" points="439.5,2238.8359,443.5,2242.8359,439.5,2246.8359,435.5,2242.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="448.5" y="2247.1826">findUncoveredMinimum(): double</text><polygon fill="#FFFF44" points="439.5,2255.1328,443.5,2259.1328,439.5,2263.1328,435.5,2259.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="448.5" y="2263.4795">removeCost(double): void</text></g></a><!--MD5=[e5d0eca6685f486e43f9b88c5e763d68]
class elki.utilities.datastructures.BitsUtil--><a href="BitsUtil.html" target="_top" title="BitsUtil.html" xlink:actuate="onRequest" xlink:href="BitsUtil.html" xlink:show="new" xlink:title="BitsUtil.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.BitsUtil"><rect codeLine="79" fill="#F1F1F1" height="1596.2031" id="elki.utilities.datastructures.BitsUtil" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="21.5" y="41"/><ellipse cx="167.25" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M170.2188,62.6406 Q169.6406,62.9375 169,63.0781 Q168.3594,63.2344 167.6563,63.2344 Q165.1563,63.2344 163.8281,61.5938 Q162.5156,59.9375 162.5156,56.8125 Q162.5156,53.6875 163.8281,52.0313 Q165.1563,50.375 167.6563,50.375 Q168.3594,50.375 169,50.5313 Q169.6563,50.6875 170.2188,50.9844 L170.2188,53.7031 Q169.5938,53.125 169,52.8594 Q168.4063,52.5781 167.7813,52.5781 Q166.4375,52.5781 165.75,53.6563 Q165.0625,54.7188 165.0625,56.8125 Q165.0625,58.9063 165.75,59.9844 Q166.4375,61.0469 167.7813,61.0469 Q168.4063,61.0469 169,60.7813 Q169.5938,60.5 170.2188,59.9219 L170.2188,62.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="187.75" y="61.8467">BitsUtil</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="367.5" y1="73" y2="73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="83.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="41.5" y="89.9951">LONG_LOG2_SIZE: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="99.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="41.5" y="106.292">LONG_LOG2_MASK: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="116.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="146" x="41.5" y="122.5889">LONG_ALL_BITS: long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="132.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="141" x="41.5" y="138.8857">LONG_63_BITS: long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="148.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="141" x="41.5" y="155.1826">LONG_32_BITS: long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="165.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="41.5" y="171.4795">POW5_INT: int[]</text><ellipse cx="32.5" cy="184.4297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="41.5" y="187.7764">FASTUTIL_HASH_STRATEGY: Strategy&lt;long[]&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="367.5" y1="195.0781" y2="195.0781"/><ellipse cx="32.5" cy="208.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="41.5" y="212.0732">zero(int): long[]</text><ellipse cx="32.5" cy="225.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="152" x="41.5" y="228.3701">make(int, long): long[]</text><ellipse cx="32.5" cy="241.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="101" x="41.5" y="244.667">of(int...): long[]</text><ellipse cx="32.5" cy="257.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="111" x="41.5" y="260.9639">ones(int): long[]</text><ellipse cx="32.5" cy="273.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="220" x="41.5" y="277.2607">random(int, int, Random): long[]</text><ellipse cx="32.5" cy="290.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="132" x="41.5" y="293.5576">copy(long[]): long[]</text><ellipse cx="32.5" cy="306.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="157" x="41.5" y="309.8545">copy(long[], int): long[]</text><ellipse cx="32.5" cy="322.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="182" x="41.5" y="326.1514">copy(long[], int, int): long[]</text><ellipse cx="32.5" cy="339.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="118" x="41.5" y="342.4482">grayC(long): long</text><ellipse cx="32.5" cy="355.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="41.5" y="358.7451">grayI(long[]): long[]</text><ellipse cx="32.5" cy="371.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="41.5" y="375.042">invgrayC(long): long</text><ellipse cx="32.5" cy="387.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="41.5" y="391.3389">invgrayI(long[]): long[]</text><ellipse cx="32.5" cy="404.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="41.5" y="407.6357">isZero(long[]): boolean</text><ellipse cx="32.5" cy="420.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="134" x="41.5" y="423.9326">cardinality(long): int</text><ellipse cx="32.5" cy="436.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="41.5" y="440.2295">cardinality(long[]): int</text><ellipse cx="32.5" cy="453.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="41.5" y="456.5264">flipC(long, int): long</text><ellipse cx="32.5" cy="469.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="146" x="41.5" y="472.8232">flipI(long[], int): long[]</text><ellipse cx="32.5" cy="485.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="41.5" y="489.1201">setC(long, int): long</text><ellipse cx="32.5" cy="502.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="41.5" y="505.417">setI(long[], int): long[]</text><ellipse cx="32.5" cy="518.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="172" x="41.5" y="521.7139">setI(long[], long[]): long[]</text><ellipse cx="32.5" cy="534.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="41.5" y="538.0107">clearC(long, int): long</text><ellipse cx="32.5" cy="550.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="41.5" y="554.3076">clearI(long[], int): long[]</text><ellipse cx="32.5" cy="567.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="41.5" y="570.6045">get(long, int): boolean</text><ellipse cx="32.5" cy="583.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="163" x="41.5" y="586.9014">get(long[], int): boolean</text><ellipse cx="32.5" cy="599.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="41.5" y="603.1982">onesI(long[], int): void</text><ellipse cx="32.5" cy="616.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="41.5" y="619.4951">zeroI(long[]): long[]</text><ellipse cx="32.5" cy="632.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="171" x="41.5" y="635.792">xorI(long[], long[]): long[]</text><ellipse cx="32.5" cy="648.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="196" x="41.5" y="652.0889">xorI(long[], long[], int): long[]</text><ellipse cx="32.5" cy="665.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="164" x="41.5" y="668.3857">orI(long[], long[]): long[]</text><ellipse cx="32.5" cy="681.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="189" x="41.5" y="684.6826">orI(long[], long[], int): long[]</text><ellipse cx="32.5" cy="697.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="176" x="41.5" y="700.9795">andI(long[], long[]): long[]</text><ellipse cx="32.5" cy="713.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="41.5" y="717.2764">andI(long[], long[], int): long[]</text><ellipse cx="32.5" cy="730.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="207" x="41.5" y="733.5732">andCMin(long[], long[]): long[]</text><ellipse cx="32.5" cy="746.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="41.5" y="749.8701">nandI(long[], long[]): long[]</text><ellipse cx="32.5" cy="762.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="140" x="41.5" y="766.167">invertI(long[]): long[]</text><ellipse cx="32.5" cy="779.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="41.5" y="782.4639">shiftRightI(long[], int): long[]</text><ellipse cx="32.5" cy="795.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="181" x="41.5" y="798.7607">shiftLeftI(long[], int): long[]</text><ellipse cx="32.5" cy="811.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="41.5" y="815.0576">cycleRightC(long, int, int): long</text><ellipse cx="32.5" cy="828.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="223" x="41.5" y="831.3545">cycleRightI(long[], int, int): long[]</text><ellipse cx="32.5" cy="844.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="41.5" y="847.6514">truncateI(long[], int): long[]</text><ellipse cx="32.5" cy="860.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="199" x="41.5" y="863.9482">cycleLeftC(long, int, int): long</text><ellipse cx="32.5" cy="876.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="212" x="41.5" y="880.2451">cycleLeftI(long[], int, int): long[]</text><ellipse cx="32.5" cy="893.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="41.5" y="896.542">toString(long[]): String</text><ellipse cx="32.5" cy="909.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="178" x="41.5" y="912.8389">toString(long[], int): String</text><ellipse cx="32.5" cy="925.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="41.5" y="929.1357">toString(long): String</text><ellipse cx="32.5" cy="942.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="180" x="41.5" y="945.4326">toStringLow(long[]): String</text><ellipse cx="32.5" cy="958.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="41.5" y="961.7295">toStringLow(long[], int): String</text><ellipse cx="32.5" cy="974.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="41.5" y="978.0264">toStringLow(long): String</text><ellipse cx="32.5" cy="990.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="226" x="41.5" y="994.3232">toString(long[], String, int): String</text><ellipse cx="32.5" cy="1007.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="283" x="41.5" y="1010.6201">numberOfTrailingZerosSigned(long[]): int</text><ellipse cx="32.5" cy="1023.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="235" x="41.5" y="1026.917">numberOfTrailingZeros(long[]): int</text><ellipse cx="32.5" cy="1039.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="273" x="41.5" y="1043.2139">numberOfTrailingZerosSigned(long): int</text><ellipse cx="32.5" cy="1056.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="41.5" y="1059.5107">numberOfTrailingZeros(long): int</text><ellipse cx="32.5" cy="1072.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="212" x="41.5" y="1075.8076">numberOfTrailingZeros(int): int</text><ellipse cx="32.5" cy="1088.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="288" x="41.5" y="1092.1045">numberOfLeadingZerosSigned(long[]): int</text><ellipse cx="32.5" cy="1105.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="240" x="41.5" y="1108.4014">numberOfLeadingZeros(long[]): int</text><ellipse cx="32.5" cy="1121.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="278" x="41.5" y="1124.6982">numberOfLeadingZerosSigned(long): int</text><ellipse cx="32.5" cy="1137.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="265" x="41.5" y="1140.9951">numberOfLeadingZerosSigned(int): int</text><ellipse cx="32.5" cy="1153.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="230" x="41.5" y="1157.292">numberOfLeadingZeros(long): int</text><ellipse cx="32.5" cy="1170.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="217" x="41.5" y="1173.5889">numberOfLeadingZeros(int): int</text><ellipse cx="32.5" cy="1186.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="191" x="41.5" y="1189.8857">previousSetBit(long, int): int</text><ellipse cx="32.5" cy="1202.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="41.5" y="1206.1826">previousSetBit(long[], int): int</text><ellipse cx="32.5" cy="1219.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="203" x="41.5" y="1222.4795">previousClearBit(long, int): int</text><ellipse cx="32.5" cy="1235.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="213" x="41.5" y="1238.7764">previousClearBit(long[], int): int</text><ellipse cx="32.5" cy="1251.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="162" x="41.5" y="1255.0732">nextSetBit(long, int): int</text><ellipse cx="32.5" cy="1268.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="172" x="41.5" y="1271.3701">nextSetBit(long[], int): int</text><ellipse cx="32.5" cy="1284.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="174" x="41.5" y="1287.667">nextClearBit(long, int): int</text><ellipse cx="32.5" cy="1300.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="184" x="41.5" y="1303.9639">nextClearBit(long[], int): int</text><ellipse cx="32.5" cy="1316.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="41.5" y="1320.2607">magnitude(long[]): int</text><ellipse cx="32.5" cy="1333.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="140" x="41.5" y="1336.5576">magnitude(long): int</text><ellipse cx="32.5" cy="1349.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="41.5" y="1352.8545">magnitude(int): int</text><ellipse cx="32.5" cy="1365.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="204" x="41.5" y="1369.1514">intersect(long, long): boolean</text><ellipse cx="32.5" cy="1382.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="224" x="41.5" y="1385.4482">intersect(long[], long[]): boolean</text><ellipse cx="32.5" cy="1398.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="215" x="41.5" y="1401.7451">intersectionSize(long, long): int</text><ellipse cx="32.5" cy="1414.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="235" x="41.5" y="1418.042">intersectionSize(long[], long[]): int</text><ellipse cx="32.5" cy="1430.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="172" x="41.5" y="1434.3389">unionSize(long, long): int</text><ellipse cx="32.5" cy="1447.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="41.5" y="1450.6357">unionSize(long[], long[]): int</text><ellipse cx="32.5" cy="1463.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="229" x="41.5" y="1466.9326">hammingDistance(long, long): int</text><ellipse cx="32.5" cy="1479.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="249" x="41.5" y="1483.2295">hammingDistance(long[], long[]): int</text><ellipse cx="32.5" cy="1496.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="132" x="41.5" y="1499.5264">capacity(long[]): int</text><ellipse cx="32.5" cy="1512.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="181" x="41.5" y="1515.8232">equal(long, long): boolean</text><ellipse cx="32.5" cy="1528.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="41.5" y="1532.1201">equal(long[], long[]): boolean</text><ellipse cx="32.5" cy="1545.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="41.5" y="1548.417">compare(long, long): int</text><ellipse cx="32.5" cy="1561.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="41.5" y="1564.7139">compare(long[], long[]): int</text><ellipse cx="32.5" cy="1577.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="41.5" y="1581.0107">hashCode(long): int</text><ellipse cx="32.5" cy="1593.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="41.5" y="1597.3076">hashCode(long[]): int</text><ellipse cx="32.5" cy="1610.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="163" x="41.5" y="1613.6045">lpow2(long, int): double</text><ellipse cx="32.5" cy="1626.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="172" x="41.5" y="1629.9014">lpow10(long, int): double</text></g></a><!--MD5=[eeef652daaa49d93db7ff166ce5211a7]
link elki.utilities.datastructures.QuickSelect to elki.utilities.datastructures.QuickSelect.Adapter--><g id="link_elki.utilities.datastructures.QuickSelect_elki.utilities.datastructures.QuickSelect.Adapter"><path codeLine="177" d="M989.6,1026.13 C973.17,1193.57 950.92,1446.43 942,1667 C940.08,1714.52 932.58,1727.39 942,1774 C949.49,1811.07 965.89,1850.24 980.58,1880.43 " fill="none" id="elki.utilities.datastructures.QuickSelect-to-elki.utilities.datastructures.QuickSelect.Adapter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="982.93,1885.2,982.5583,1875.3582,980.7283,1880.7108,975.3756,1878.8809,982.93,1885.2" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="120" x="943" y="1680.0669">DOUBLE_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="120" x="943" y="1695.1997">INTEGER_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="950" y="1710.3325">FLOAT_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="110" x="948" y="1725.4653">SHORT_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="951.5" y="1740.5981">LONG_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="954.5" y="1755.731">BYTE_ADAPTER</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="952" y="1770.8638">CHAR_ADAPTER</text></g><!--MD5=[a33dc8e08ec759cff67966e79cb229da]
reverse link elki.utilities.datastructures.QuickSelect to elki.utilities.datastructures.QuickSelect.Adapter--><g id="link_elki.utilities.datastructures.QuickSelect_elki.utilities.datastructures.QuickSelect.Adapter"><path codeLine="178" d="M1027.39,1041.38 C1041.71,1208.71 1060.38,1453.12 1068,1667 C1069.69,1714.53 1076.4,1727.19 1068,1774 C1061.05,1812.69 1045.31,1854.27 1031.83,1885.2 " fill="none" id="elki.utilities.datastructures.QuickSelect-backto-elki.utilities.datastructures.QuickSelect.Adapter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1026.7758" cy="1034.1606" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1027.4616" x2="1026.09" y1="1042.1311" y2="1026.19"/><line style="stroke:#181818;stroke-width:1.0;" x1="1018.8053" x2="1034.7464" y1="1034.8464" y2="1033.4747"/></g><!--MD5=[b4adb515eb35070f418af4060338755c]
reverse link elki.utilities.datastructures.KuhnMunkres to elki.utilities.datastructures.KuhnMunkresWong--><g id="link_elki.utilities.datastructures.KuhnMunkres_elki.utilities.datastructures.KuhnMunkresWong"><path codeLine="179" d="M556,1029.59 C556,1251.2 556,1611.98 556,1803.69 " fill="none" id="elki.utilities.datastructures.KuhnMunkres-backto-elki.utilities.datastructures.KuhnMunkresWong" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="549,1029.58,556,1009.58,563,1029.58,549,1029.58" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[23ecc32f8daa689bd7658226e3d61e5a]
reverse link elki.utilities.datastructures.KuhnMunkresWong to elki.utilities.datastructures.KuhnMunkresStern--><g id="link_elki.utilities.datastructures.KuhnMunkresWong_elki.utilities.datastructures.KuhnMunkresStern"><path codeLine="180" d="M556,2084.14 C556,2098.24 556,2112.06 556,2124.92 " fill="none" id="elki.utilities.datastructures.KuhnMunkresWong-backto-elki.utilities.datastructures.KuhnMunkresStern" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="549,2084.08,556,2064.08,563,2084.08,549,2084.08" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="549" y="2293"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="549" y="2302.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[45ca12e9ee63a306a4d96b031b88a660]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.utilities.datastructures {

        class QuickSelect [[QuickSelect.html]] {
            {static} -SMALL: int
            {static} -bestPivot(int, int, int, int, int, int): int
            {static} +quickSelect(T, Adapter<T>, int, int, int): void
            {static} -insertionSort(T, Adapter<T>, int, int): void
            {static} +quickSelect(double[], int): double
            {static} +median(double[]): double
            {static} +median(double[], int, int): double
            {static} +quantile(double[], double): double
            {static} +quantile(double[], int, int, double): double
            {static} +quickSelect(double[], int, int, int): double
            {static} -insertionSort(double[], int, int): void
            {static} -swap(double[], int, int): void
            {static} -swap(List<T>, int, int): void
            {static} +quickSelect(List<? extends T>, Comparator<? super T>, int): T
            {static} +median(List<? extends T>, Comparator<? super T>): T
            {static} +median(List<? extends T>, Comparator<? super T>, int, int): T
            {static} +quantile(List<? extends T>, Comparator<? super T>, double): T
            {static} +quantile(List<? extends T>, Comparator<? super T>, int, int, double): T
            {static} +quickSelect(List<? extends T>, Comparator<? super T>, int, int, int): void
            {static} -insertionSort(List<T>, Comparator<? super T>, int, int): void
        }

        interface elki.utilities.datastructures.QuickSelect.Adapter<T> [[QuickSelect.Adapter.html]] {
            {abstract} +swap(T, int, int): void
            {abstract} +compare(T, int, int): int
            +isSorted(T, int, int): void
        }

        class KuhnMunkresWong [[KuhnMunkresWong.html]] {
            ~radj: double[]
            ~cadj: double[]
            ~rmin: double[]
            ~rptr: int[]
            +run(double[]): int[]
            #initialize(double[]): void
            #initialCover(): void
            #initUncoveredMinimum(): void
            #findUncoveredMinimum(): double
            #removeCost(double): void
            -pivot(): boolean
            -updateStars(): void
            #costOf(int, int): double
        }

        class KuhnMunkres [[KuhnMunkres.html]] {
            {static} -LOG: Logging
            ~cost: double[]
            ~selected: int
            ~rsel: int[]
            ~csel: int[]
            ~rmark: int[]
            ~cmark: int[]
            ~minr: int
            ~minc: int
            +run(double[]): int[]
            #initialize(double[]): void
            #initialCover(): void
            -findUncoveredMinimum(): double
            -removeCost(double): void
            -pivot(): boolean
            -updateStars(): void
            #debugLogMatrix(Level, long, String): void
            #costOf(int, int): double
        }

        class KuhnMunkresStern [[KuhnMunkresStern.html]] {
            -cptr: int[]
            -cmin: double[]
            +run(double[]): int[]
            #initUncoveredMinimum(): void
            #findUncoveredMinimum(): double
            #removeCost(double): void
        }

        class BitsUtil [[BitsUtil.html]] {
            {static} -LONG_LOG2_SIZE: int
            {static} -LONG_LOG2_MASK: int
            {static} -LONG_ALL_BITS: long
            {static} -LONG_63_BITS: long
            {static} -LONG_32_BITS: long
            {static} -POW5_INT: int[]
            {static} +FASTUTIL_HASH_STRATEGY: Strategy<long[]>
            {static} +zero(int): long[]
            {static} +make(int, long): long[]
            {static} +of(int...): long[]
            {static} +ones(int): long[]
            {static} +random(int, int, Random): long[]
            {static} +copy(long[]): long[]
            {static} +copy(long[], int): long[]
            {static} +copy(long[], int, int): long[]
            {static} +grayC(long): long
            {static} +grayI(long[]): long[]
            {static} +invgrayC(long): long
            {static} +invgrayI(long[]): long[]
            {static} +isZero(long[]): boolean
            {static} +cardinality(long): int
            {static} +cardinality(long[]): int
            {static} +flipC(long, int): long
            {static} +flipI(long[], int): long[]
            {static} +setC(long, int): long
            {static} +setI(long[], int): long[]
            {static} +setI(long[], long[]): long[]
            {static} +clearC(long, int): long
            {static} +clearI(long[], int): long[]
            {static} +get(long, int): boolean
            {static} +get(long[], int): boolean
            {static} +onesI(long[], int): void
            {static} +zeroI(long[]): long[]
            {static} +xorI(long[], long[]): long[]
            {static} +xorI(long[], long[], int): long[]
            {static} +orI(long[], long[]): long[]
            {static} +orI(long[], long[], int): long[]
            {static} +andI(long[], long[]): long[]
            {static} +andI(long[], long[], int): long[]
            {static} +andCMin(long[], long[]): long[]
            {static} +nandI(long[], long[]): long[]
            {static} +invertI(long[]): long[]
            {static} +shiftRightI(long[], int): long[]
            {static} +shiftLeftI(long[], int): long[]
            {static} +cycleRightC(long, int, int): long
            {static} +cycleRightI(long[], int, int): long[]
            {static} +truncateI(long[], int): long[]
            {static} +cycleLeftC(long, int, int): long
            {static} +cycleLeftI(long[], int, int): long[]
            {static} +toString(long[]): String
            {static} +toString(long[], int): String
            {static} +toString(long): String
            {static} +toStringLow(long[]): String
            {static} +toStringLow(long[], int): String
            {static} +toStringLow(long): String
            {static} +toString(long[], String, int): String
            {static} +numberOfTrailingZerosSigned(long[]): int
            {static} +numberOfTrailingZeros(long[]): int
            {static} +numberOfTrailingZerosSigned(long): int
            {static} +numberOfTrailingZeros(long): int
            {static} +numberOfTrailingZeros(int): int
            {static} +numberOfLeadingZerosSigned(long[]): int
            {static} +numberOfLeadingZeros(long[]): int
            {static} +numberOfLeadingZerosSigned(long): int
            {static} +numberOfLeadingZerosSigned(int): int
            {static} +numberOfLeadingZeros(long): int
            {static} +numberOfLeadingZeros(int): int
            {static} +previousSetBit(long, int): int
            {static} +previousSetBit(long[], int): int
            {static} +previousClearBit(long, int): int
            {static} +previousClearBit(long[], int): int
            {static} +nextSetBit(long, int): int
            {static} +nextSetBit(long[], int): int
            {static} +nextClearBit(long, int): int
            {static} +nextClearBit(long[], int): int
            {static} +magnitude(long[]): int
            {static} +magnitude(long): int
            {static} +magnitude(int): int
            {static} +intersect(long, long): boolean
            {static} +intersect(long[], long[]): boolean
            {static} +intersectionSize(long, long): int
            {static} +intersectionSize(long[], long[]): int
            {static} +unionSize(long, long): int
            {static} +unionSize(long[], long[]): int
            {static} +hammingDistance(long, long): int
            {static} +hammingDistance(long[], long[]): int
            {static} +capacity(long[]): int
            {static} +equal(long, long): boolean
            {static} +equal(long[], long[]): boolean
            {static} +compare(long, long): int
            {static} +compare(long[], long[]): int
            {static} +hashCode(long): int
            {static} +hashCode(long[]): int
            {static} +lpow2(long, int): double
            {static} +lpow10(long, int): double
        }

        QuickSelect - -> elki.utilities.datastructures.QuickSelect.Adapter: DOUBLE_ADAPTER\nINTEGER_ADAPTER\nFLOAT_ADAPTER\nSHORT_ADAPTER\nLONG_ADAPTER\nBYTE_ADAPTER\nCHAR_ADAPTER
        QuickSelect +- - elki.utilities.datastructures.QuickSelect.Adapter
        KuhnMunkres <|- - KuhnMunkresWong
        KuhnMunkresWong <|- - KuhnMunkresStern
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>