<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="700px" preserveAspectRatio="none" style="width:358px;height:700px;background:#FFFFFF;" version="1.1" viewBox="0 0 358 700" width="358px" zoomAndPan="magnify"><defs/><g><!--MD5=[24502757a6a965c16748f287fe4828c8]
class elki.utilities.datastructures.arraylike.DoubleArray--><a href="DoubleArray.html" target="_top" title="DoubleArray.html" xlink:actuate="onRequest" xlink:href="DoubleArray.html" xlink:show="new" xlink:title="DoubleArray.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arraylike.DoubleArray"><rect codeLine="6" fill="#F1F1F1" height="493.9531" id="elki.utilities.datastructures.arraylike.DoubleArray" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="39.5" y="181"/><ellipse cx="88.25" cy="199.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M91.2188,205.6094 Q90.6406,205.9063 90,206.0469 Q89.3594,206.2031 88.6563,206.2031 Q86.1563,206.2031 84.8281,204.5625 Q83.5156,202.9063 83.5156,199.7813 Q83.5156,196.6563 84.8281,195 Q86.1563,193.3438 88.6563,193.3438 Q89.3594,193.3438 90,193.5 Q90.6563,193.6563 91.2188,193.9531 L91.2188,196.6719 Q90.5938,196.0938 90,195.8281 Q89.4063,195.5469 88.7813,195.5469 Q87.4375,195.5469 86.75,196.625 Q86.0625,197.6875 86.0625,199.7813 Q86.0625,201.875 86.75,202.9531 Q87.4375,204.0156 88.7813,204.0156 Q89.4063,204.0156 90,203.75 Q90.5938,203.4688 91.2188,202.8906 L91.2188,205.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="151.25" y="198.9951">DoubleArray</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="169" x="108.75" y="211.5791">elki.utilities.datastructures.arraylike</text><line style="stroke:#181818;stroke-width:0.5;" x1="40.5" x2="313.5" y1="218.9375" y2="218.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="47.5" y="229.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="59.5" y="235.9326">MAX_ARRAY_SIZE: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="47.5" y="245.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="59.5" y="252.2295">LAST_GROW_SIZE: int</text><ellipse cx="50.5" cy="265.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="59.5" y="268.5264">data: double[]</text><ellipse cx="50.5" cy="281.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="59.5" y="284.8232">size: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="40.5" x2="313.5" y1="292.125" y2="292.125"/><ellipse cx="50.5" cy="305.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="59.5" y="309.1201">DoubleArray()</text><ellipse cx="50.5" cy="322.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="59.5" y="325.417">DoubleArray(int)</text><ellipse cx="50.5" cy="338.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="59.5" y="341.7139">DoubleArray(DoubleArray)</text><ellipse cx="50.5" cy="354.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="59.5" y="358.0107">clear(): void</text><ellipse cx="50.5" cy="370.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="59.5" y="374.3076">add(double): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="47.5" y="384.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="59.5" y="390.6045">grow(): void</text><ellipse cx="50.5" cy="403.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="59.5" y="406.9014">get(int): double</text><ellipse cx="50.5" cy="419.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="59.5" y="423.1982">set(int, double): void</text><ellipse cx="50.5" cy="436.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="59.5" y="439.4951">swap(int, int): void</text><ellipse cx="50.5" cy="452.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="59.5" y="455.792">remove(int, int): void</text><ellipse cx="50.5" cy="468.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="59.5" y="472.0889">insert(int, double): void</text><ellipse cx="50.5" cy="485.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="59.5" y="488.3857">size(): int</text><ellipse cx="50.5" cy="501.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="59.5" y="504.6826">isEmpty(): boolean</text><ellipse cx="50.5" cy="517.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="59.5" y="520.9795">sort(): void</text><ellipse cx="50.5" cy="533.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="59.5" y="537.2764">size(DoubleArray): int</text><ellipse cx="50.5" cy="550.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="59.5" y="553.5732">get(DoubleArray, int): Double</text><ellipse cx="50.5" cy="566.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="59.5" y="569.8701">getDouble(DoubleArray, int): double</text><ellipse cx="50.5" cy="582.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="59.5" y="586.167">getFloat(DoubleArray, int): float</text><ellipse cx="50.5" cy="599.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="59.5" y="602.4639">getInteger(DoubleArray, int): int</text><ellipse cx="50.5" cy="615.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="59.5" y="618.7607">getShort(DoubleArray, int): short</text><ellipse cx="50.5" cy="631.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="59.5" y="635.0576">getLong(DoubleArray, int): long</text><ellipse cx="50.5" cy="648.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="59.5" y="651.3545">getByte(DoubleArray, int): byte</text><ellipse cx="50.5" cy="664.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="59.5" y="667.6514">toArray(): double[]</text></g></a><!--MD5=[33c782cc8e835ba34538a96cb9e42bcc]
class elki.utilities.datastructures.arraylike.NumberArrayAdapter--><a href="NumberArrayAdapter.html" target="_top" title="NumberArrayAdapter.html" xlink:actuate="onRequest" xlink:href="NumberArrayAdapter.html" xlink:show="new" xlink:title="NumberArrayAdapter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arraylike.NumberArrayAdapter"><rect codeLine="36" fill="#F1F1F1" height="111.125" id="elki.utilities.datastructures.arraylike.NumberArrayAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="340" x="7" y="10"/><ellipse cx="22" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17.9219,24.7344 L17.9219,22.5781 L25.3125,22.5781 L25.3125,24.7344 L22.8438,24.7344 L22.8438,32.8125 L25.3125,32.8125 L25.3125,34.9688 L17.9219,34.9688 L17.9219,32.8125 L20.3906,32.8125 L20.3906,24.7344 L17.9219,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="150" x="51" y="27.9951">NumberArrayAdapter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="180" x="36" y="40.5791">elki.utilities.datastructures.arraylike</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="126" x="224" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="124" x="225" y="19.1387">Double, DoubleArray</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="346" y1="47.9375" y2="47.9375"/><ellipse cx="18" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="152" x="27" y="64.9326">size(DoubleArray): int</text><ellipse cx="18" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="207" x="27" y="81.2295">get(DoubleArray, int): Double</text><ellipse cx="18" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="256" x="27" y="97.5264">getDouble(DoubleArray, int): double</text><ellipse cx="18" cy="110.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="222" x="27" y="113.8232">getLong(DoubleArray, int): long</text></g></a><!--MD5=[704333545d2827e5b6acdf3737a29b2f]
reverse link elki.utilities.datastructures.arraylike.NumberArrayAdapter to elki.utilities.datastructures.arraylike.DoubleArray--><g id="link_elki.utilities.datastructures.arraylike.NumberArrayAdapter_elki.utilities.datastructures.arraylike.DoubleArray"><path codeLine="43" d="M177,141.51 C177,153.77 177,167.04 177,180.9 " fill="none" id="elki.utilities.datastructures.arraylike.NumberArrayAdapter-backto-elki.utilities.datastructures.arraylike.DoubleArray" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="170,141.25,177,121.25,184,141.25,170,141.25" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="79" y="680.9531"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="79" y="690.2354">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[bc923512b8642dbde12cae79c4d07a2c]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>DoubleArray\n<size:10>elki.utilities.datastructures.arraylike" as elki.utilities.datastructures.arraylike.DoubleArray [[DoubleArray.html]] {
        {static} -MAX_ARRAY_SIZE: int
        {static} -LAST_GROW_SIZE: int
        +data: double[]
        +size: int
        +DoubleArray()
        +DoubleArray(int)
        +DoubleArray(DoubleArray)
        +clear(): void
        +add(double): void
        -grow(): void
        +get(int): double
        +set(int, double): void
        +swap(int, int): void
        +remove(int, int): void
        +insert(int, double): void
        +size(): int
        +isEmpty(): boolean
        +sort(): void
        +size(DoubleArray): int
        +get(DoubleArray, int): Double
        +getDouble(DoubleArray, int): double
        +getFloat(DoubleArray, int): float
        +getInteger(DoubleArray, int): int
        +getShort(DoubleArray, int): short
        +getLong(DoubleArray, int): long
        +getByte(DoubleArray, int): byte
        +toArray(): double[]
    }

    interface "<size:14>NumberArrayAdapter\n<size:10>elki.utilities.datastructures.arraylike" as elki.utilities.datastructures.arraylike.NumberArrayAdapter<Double, DoubleArray> [[NumberArrayAdapter.html]] {
        {abstract} +size(DoubleArray): int
        {abstract} +get(DoubleArray, int): Double
        {abstract} +getDouble(DoubleArray, int): double
        {abstract} +getLong(DoubleArray, int): long
    }

    elki.utilities.datastructures.arraylike.NumberArrayAdapter <|.. elki.utilities.datastructures.arraylike.DoubleArray

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>