<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="700px" preserveAspectRatio="none" style="width:360px;height:700px;background:#FFFFFF;" version="1.1" viewBox="0 0 360 700" width="360px" zoomAndPan="magnify"><defs/><g><!--MD5=[c0985ba678ccef8ed8e9f4ee96aa5b20]
class elki.utilities.datastructures.arraylike.IntegerArray--><a href="IntegerArray.html" target="_top" title="IntegerArray.html" xlink:actuate="onRequest" xlink:href="IntegerArray.html" xlink:show="new" xlink:title="IntegerArray.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arraylike.IntegerArray"><rect codeLine="6" fill="#F1F1F1" height="493.9531" id="elki.utilities.datastructures.arraylike.IntegerArray" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="41" y="181"/><ellipse cx="89.25" cy="199.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M92.2188,205.6094 Q91.6406,205.9063 91,206.0469 Q90.3594,206.2031 89.6563,206.2031 Q87.1563,206.2031 85.8281,204.5625 Q84.5156,202.9063 84.5156,199.7813 Q84.5156,196.6563 85.8281,195 Q87.1563,193.3438 89.6563,193.3438 Q90.3594,193.3438 91,193.5 Q91.6563,193.6563 92.2188,193.9531 L92.2188,196.6719 Q91.5938,196.0938 91,195.8281 Q90.4063,195.5469 89.7813,195.5469 Q88.4375,195.5469 87.75,196.625 Q87.0625,197.6875 87.0625,199.7813 Q87.0625,201.875 87.75,202.9531 Q88.4375,204.0156 89.7813,204.0156 Q90.4063,204.0156 91,203.75 Q91.5938,203.4688 92.2188,202.8906 L92.2188,205.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="152.75" y="198.9951">IntegerArray</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="169" x="109.75" y="211.5791">elki.utilities.datastructures.arraylike</text><line style="stroke:#181818;stroke-width:0.5;" x1="42" x2="314" y1="218.9375" y2="218.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="49" y="229.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="61" y="235.9326">MAX_ARRAY_SIZE: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="49" y="245.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="61" y="252.2295">LAST_GROW_SIZE: int</text><ellipse cx="52" cy="265.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="61" y="268.5264">data: int[]</text><ellipse cx="52" cy="281.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="61" y="284.8232">size: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="42" x2="314" y1="292.125" y2="292.125"/><ellipse cx="52" cy="305.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="61" y="309.1201">IntegerArray()</text><ellipse cx="52" cy="322.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="61" y="325.417">IntegerArray(int)</text><ellipse cx="52" cy="338.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="61" y="341.7139">IntegerArray(IntegerArray)</text><ellipse cx="52" cy="354.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="61" y="358.0107">clear(): void</text><ellipse cx="52" cy="370.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="61" y="374.3076">add(int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="49" y="384.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="61" y="390.6045">grow(): void</text><ellipse cx="52" cy="403.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="61" y="406.9014">get(int): int</text><ellipse cx="52" cy="419.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="61" y="423.1982">set(int, int): void</text><ellipse cx="52" cy="436.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="61" y="439.4951">swap(int, int): void</text><ellipse cx="52" cy="452.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="61" y="455.792">remove(int, int): void</text><ellipse cx="52" cy="468.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="61" y="472.0889">insert(int, int): void</text><ellipse cx="52" cy="485.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="61" y="488.3857">size(): int</text><ellipse cx="52" cy="501.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="61" y="504.6826">isEmpty(): boolean</text><ellipse cx="52" cy="517.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="61" y="520.9795">sort(): void</text><ellipse cx="52" cy="533.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="61" y="537.2764">size(IntegerArray): int</text><ellipse cx="52" cy="550.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="61" y="553.5732">get(IntegerArray, int): Integer</text><ellipse cx="52" cy="566.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="61" y="569.8701">getDouble(IntegerArray, int): double</text><ellipse cx="52" cy="582.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="61" y="586.167">getFloat(IntegerArray, int): float</text><ellipse cx="52" cy="599.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="61" y="602.4639">getInteger(IntegerArray, int): int</text><ellipse cx="52" cy="615.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="61" y="618.7607">getShort(IntegerArray, int): short</text><ellipse cx="52" cy="631.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="61" y="635.0576">getLong(IntegerArray, int): long</text><ellipse cx="52" cy="648.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="61" y="651.3545">getByte(IntegerArray, int): byte</text><ellipse cx="52" cy="664.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="61" y="667.6514">toArray(): int[]</text></g></a><!--MD5=[33c782cc8e835ba34538a96cb9e42bcc]
class elki.utilities.datastructures.arraylike.NumberArrayAdapter--><a href="NumberArrayAdapter.html" target="_top" title="NumberArrayAdapter.html" xlink:actuate="onRequest" xlink:href="NumberArrayAdapter.html" xlink:show="new" xlink:title="NumberArrayAdapter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.arraylike.NumberArrayAdapter"><rect codeLine="36" fill="#F1F1F1" height="111.125" id="elki.utilities.datastructures.arraylike.NumberArrayAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="342" x="7" y="10"/><ellipse cx="22" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17.9219,24.7344 L17.9219,22.5781 L25.3125,22.5781 L25.3125,24.7344 L22.8438,24.7344 L22.8438,32.8125 L25.3125,32.8125 L25.3125,34.9688 L17.9219,34.9688 L17.9219,32.8125 L20.3906,32.8125 L20.3906,24.7344 L17.9219,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="150" x="51" y="27.9951">NumberArrayAdapter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="180" x="36" y="40.5791">elki.utilities.datastructures.arraylike</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="128" x="224" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="126" x="225" y="19.1387">Integer, IntegerArray</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="348" y1="47.9375" y2="47.9375"/><ellipse cx="18" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="151" x="27" y="64.9326">size(IntegerArray): int</text><ellipse cx="18" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="205" x="27" y="81.2295">get(IntegerArray, int): Integer</text><ellipse cx="18" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="27" y="97.5264">getDouble(IntegerArray, int): double</text><ellipse cx="18" cy="110.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="221" x="27" y="113.8232">getLong(IntegerArray, int): long</text></g></a><!--MD5=[02d81249a53466433df3b06ae69b7818]
reverse link elki.utilities.datastructures.arraylike.NumberArrayAdapter to elki.utilities.datastructures.arraylike.IntegerArray--><g id="link_elki.utilities.datastructures.arraylike.NumberArrayAdapter_elki.utilities.datastructures.arraylike.IntegerArray"><path codeLine="43" d="M178,141.51 C178,153.77 178,167.04 178,180.9 " fill="none" id="elki.utilities.datastructures.arraylike.NumberArrayAdapter-backto-elki.utilities.datastructures.arraylike.IntegerArray" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="171,141.25,178,121.25,185,141.25,171,141.25" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="80" y="680.9531"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="80" y="690.2354">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[8e7cb5ab8b09a3138ebf7867629231bb]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>IntegerArray\n<size:10>elki.utilities.datastructures.arraylike" as elki.utilities.datastructures.arraylike.IntegerArray [[IntegerArray.html]] {
        {static} -MAX_ARRAY_SIZE: int
        {static} -LAST_GROW_SIZE: int
        +data: int[]
        +size: int
        +IntegerArray()
        +IntegerArray(int)
        +IntegerArray(IntegerArray)
        +clear(): void
        +add(int): void
        -grow(): void
        +get(int): int
        +set(int, int): void
        +swap(int, int): void
        +remove(int, int): void
        +insert(int, int): void
        +size(): int
        +isEmpty(): boolean
        +sort(): void
        +size(IntegerArray): int
        +get(IntegerArray, int): Integer
        +getDouble(IntegerArray, int): double
        +getFloat(IntegerArray, int): float
        +getInteger(IntegerArray, int): int
        +getShort(IntegerArray, int): short
        +getLong(IntegerArray, int): long
        +getByte(IntegerArray, int): byte
        +toArray(): int[]
    }

    interface "<size:14>NumberArrayAdapter\n<size:10>elki.utilities.datastructures.arraylike" as elki.utilities.datastructures.arraylike.NumberArrayAdapter<Integer, IntegerArray> [[NumberArrayAdapter.html]] {
        {abstract} +size(IntegerArray): int
        {abstract} +get(IntegerArray, int): Integer
        {abstract} +getDouble(IntegerArray, int): double
        {abstract} +getLong(IntegerArray, int): long
    }

    elki.utilities.datastructures.arraylike.NumberArrayAdapter <|.. elki.utilities.datastructures.arraylike.IntegerArray

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>