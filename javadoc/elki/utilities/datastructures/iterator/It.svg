<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="331px" preserveAspectRatio="none" style="width:570px;height:331px;background:#FFFFFF;" version="1.1" viewBox="0 0 570 331" width="570px" zoomAndPan="magnify"><defs/><g><!--MD5=[2d9fce021190a906c1c5dfa1fad69cb4]
class elki.utilities.datastructures.iterator.It--><a href="It.html" target="_top" title="It.html" xlink:actuate="onRequest" xlink:href="It.html" xlink:show="new" xlink:title="It.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.iterator.It"><rect codeLine="6" fill="#F1F1F1" height="160.0156" id="elki.utilities.datastructures.iterator.It" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="552" x="7" y="146"/><ellipse cx="186.25" cy="164.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.1719,160.7344 L182.1719,158.5781 L189.5625,158.5781 L189.5625,160.7344 L187.0938,160.7344 L187.0938,168.8125 L189.5625,168.8125 L189.5625,170.9688 L182.1719,170.9688 L182.1719,168.8125 L184.6406,168.8125 L184.6406,160.7344 L182.1719,160.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="9" x="288.75" y="163.9951">It</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="173" x="206.75" y="176.5791">elki.utilities.datastructures.iterator</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="552" y="143"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="553" y="155.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="558" y1="183.9375" y2="183.9375"/><ellipse cx="18" cy="197.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="53" x="27" y="200.9326">get(): O</text><ellipse cx="18" cy="213.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="124" x="27" y="217.2295">advance(): It&lt;O&gt;</text><ellipse cx="18" cy="230.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="27" y="233.5264">filter(Class&lt;? super T&gt;): It&lt;T&gt;</text><ellipse cx="18" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="27" y="249.8232">filter(Predicate&lt;? super O&gt;): It&lt;O&gt;</text><ellipse cx="18" cy="262.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="27" y="266.1201">find(Object): boolean</text><ellipse cx="18" cy="279.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="27" y="282.417">forEach(Consumer&lt;? super O&gt;): void</text><ellipse cx="18" cy="295.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="526" x="27" y="298.7139">collect(T extends Collection&lt;? super O&gt;): T extends Collection&lt;? super O&gt;</text></g></a><!--MD5=[bed797726050ad470b869cc67ea665a3]
class elki.utilities.datastructures.iterator.Iter--><a href="Iter.html" target="_top" title="Iter.html" xlink:actuate="onRequest" xlink:href="Iter.html" xlink:show="new" xlink:title="Iter.html" xlink:type="simple"><g id="elem_elki.utilities.datastructures.iterator.Iter"><rect codeLine="16" fill="#F1F1F1" height="78.5313" id="elki.utilities.datastructures.iterator.Iter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="205" x="180.5" y="7"/><ellipse cx="195.5" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M191.4219,21.7344 L191.4219,19.5781 L198.8125,19.5781 L198.8125,21.7344 L196.3438,21.7344 L196.3438,29.8125 L198.8125,29.8125 L198.8125,31.9688 L191.4219,31.9688 L191.4219,29.8125 L193.8906,29.8125 L193.8906,21.7344 L191.4219,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="23" x="284.5" y="24.9951">Iter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="173" x="209.5" y="37.5791">elki.utilities.datastructures.iterator</text><line style="stroke:#181818;stroke-width:0.5;" x1="181.5" x2="384.5" y1="44.9375" y2="44.9375"/><ellipse cx="191.5" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="200.5" y="61.9326">valid(): boolean</text><ellipse cx="191.5" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="200.5" y="78.2295">advance(): Iter</text></g></a><!--MD5=[217b220071c71987099321d0b340cdb8]
reverse link elki.utilities.datastructures.iterator.Iter to elki.utilities.datastructures.iterator.It--><g id="link_elki.utilities.datastructures.iterator.Iter_elki.utilities.datastructures.iterator.It"><path codeLine="21" d="M283,106.22 C283,118.87 283,132.45 283,145.73 " fill="none" id="elki.utilities.datastructures.iterator.Iter-backto-elki.utilities.datastructures.iterator.It" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="276,106.01,283,86.01,290,106.01,276,106.01" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="185" y="312.0156"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="185" y="321.2979">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[a5d2c33d95d13ee0bf5d507cc34a5476]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    interface "<size:14>It\n<size:10>elki.utilities.datastructures.iterator" as elki.utilities.datastructures.iterator.It<O> [[It.html]] {
        {abstract} +get(): O
        {abstract} +advance(): It<O>
        +filter(Class<? super T>): It<T>
        +filter(Predicate<? super O>): It<O>
        +find(Object): boolean
        +forEach(Consumer<? super O>): void
        +collect(T extends Collection<? super O>): T extends Collection<? super O>
    }

    interface "<size:14>Iter\n<size:10>elki.utilities.datastructures.iterator" as elki.utilities.datastructures.iterator.Iter [[Iter.html]] {
        {abstract} +valid(): boolean
        {abstract} +advance(): Iter
    }

    elki.utilities.datastructures.iterator.Iter <|- - elki.utilities.datastructures.iterator.It

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>