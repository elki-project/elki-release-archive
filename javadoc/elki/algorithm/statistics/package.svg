<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="795px" preserveAspectRatio="none" style="width:5852px;height:795px;background:#FFFFFF;" version="1.1" viewBox="0 0 5852 795" width="5852px" zoomAndPan="magnify"><defs/><g><!--MD5=[7c26d47c8967fa3d108da4c73ffe5542]
cluster elki.algorithm.statistics--><g id="cluster_elki.algorithm.statistics"><path d="M396.5,171 L579.5,171 A3.75,3.75 0 0 1 582,173.5 L589,193.2969 L5842.5,193.2969 A2.5,2.5 0 0 1 5845,195.7969 L5845,767.5 A2.5,2.5 0 0 1 5842.5,770 L396.5,770 A2.5,2.5 0 0 1 394,767.5 L394,173.5 A2.5,2.5 0 0 1 396.5,171 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="394" x2="589" y1="193.2969" y2="193.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="182" x="398" y="185.9951">elki.algorithm.statistics</text></g><!--MD5=[160e40e4de9325fe07c8e87e0e7695ed]
cluster elki--><g id="cluster_elki"><path d="M3468.5,6 L3496.5,6 A3.75,3.75 0 0 1 3499,8.5 L3506,28.2969 L3837.5,28.2969 A2.5,2.5 0 0 1 3840,30.7969 L3840,135.5 A2.5,2.5 0 0 1 3837.5,138 L3468.5,138 A2.5,2.5 0 0 1 3466,135.5 L3466,8.5 A2.5,2.5 0 0 1 3468.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3466" x2="3506" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="27" x="3470" y="20.9951">elki</text></g><!--MD5=[fe423a4af84666e549f6571190956bed]
cluster elki.result.textwriter--><g id="cluster_elki.result.textwriter"><path d="M8.5,277 L171.5,277 A3.75,3.75 0 0 1 174,279.5 L181,299.2969 L367.5,299.2969 A2.5,2.5 0 0 1 370,301.7969 L370,389.5 A2.5,2.5 0 0 1 367.5,392 L8.5,392 A2.5,2.5 0 0 1 6,389.5 L6,279.5 A2.5,2.5 0 0 1 8.5,277 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="181" y1="299.2969" y2="299.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="162" x="10" y="291.9951">elki.result.textwriter</text></g><!--MD5=[f8bfdf53106a8198fcc1bdeafc32b2dc]
class elki.algorithm.statistics.HopkinsStatisticClusteringTendency--><a href="HopkinsStatisticClusteringTendency.html" target="_top" title="HopkinsStatisticClusteringTendency.html" xlink:actuate="onRequest" xlink:href="HopkinsStatisticClusteringTendency.html" xlink:show="new" xlink:title="HopkinsStatisticClusteringTendency.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.HopkinsStatisticClusteringTendency"><rect codeLine="4" fill="#F1F1F1" height="276.1563" id="elki.algorithm.statistics.HopkinsStatisticClusteringTendency" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="948" x="410" y="206"/><ellipse cx="755.25" cy="222" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M758.2188,227.6406 Q757.6406,227.9375 757,228.0781 Q756.3594,228.2344 755.6563,228.2344 Q753.1563,228.2344 751.8281,226.5938 Q750.5156,224.9375 750.5156,221.8125 Q750.5156,218.6875 751.8281,217.0313 Q753.1563,215.375 755.6563,215.375 Q756.3594,215.375 757,215.5313 Q757.6563,215.6875 758.2188,215.9844 L758.2188,218.7031 Q757.5938,218.125 757,217.8594 Q756.4063,217.5781 755.7813,217.5781 Q754.4375,217.5781 753.75,218.6563 Q753.0625,219.7188 753.0625,221.8125 Q753.0625,223.9063 753.75,224.9844 Q754.4375,226.0469 755.7813,226.0469 Q756.4063,226.0469 757,225.7813 Q757.5938,225.5 758.2188,224.9219 L758.2188,227.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="775.75" y="226.8467">HopkinsStatisticClusteringTendency</text><line style="stroke:#181818;stroke-width:0.5;" x1="411" x2="1357" y1="238" y2="238"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="418" y="248.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="430" y="254.9951">LOG: Logging</text><polygon fill="none" points="421,262.9453,425,266.9453,421,270.9453,417,266.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="430" y="271.292">sampleSize: int</text><polygon fill="none" points="421,279.2422,425,283.2422,421,287.2422,417,283.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="430" y="287.5889">rep: int</text><polygon fill="none" points="421,295.5391,425,299.5391,421,303.5391,417,299.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="430" y="303.8857">k: int</text><polygon fill="none" points="421,311.8359,425,315.8359,421,319.8359,417,315.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="430" y="320.1826">random: RandomFactory</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="418" y="330.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="430" y="336.4795">maxima: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="418" y="346.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="430" y="352.7764">minima: double[]</text><polygon fill="none" points="421,360.7266,425,364.7266,421,368.7266,417,364.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="430" y="369.0732">distance: NumberVectorDistance&lt;? super NumberVector&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="411" x2="1357" y1="376.375" y2="376.375"/><ellipse cx="421" cy="390.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="922" x="430" y="393.3701">HopkinsStatisticClusteringTendency(NumberVectorDistance&lt;? super NumberVector&gt;, int, RandomFactory, int, int, double[], double[])</text><ellipse cx="421" cy="406.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="430" y="409.667">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="421" cy="422.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="430" y="425.9639">run(Relation&lt;NumberVector&gt;): Double</text><polygon fill="#FFFF44" points="421,433.9141,425,437.9141,421,441.9141,417,437.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="619" x="430" y="442.2607">computeNNForRealData(KNNSearcher&lt;DBIDRef&gt;, Relation&lt;NumberVector&gt;, int): double</text><polygon fill="#FFFF44" points="421,450.2109,425,454.2109,421,458.2109,417,454.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="603" x="430" y="458.5576">computeNNForUniformData(KNNSearcher&lt;NumberVector&gt;, double[], double[]): double</text><polygon fill="#FFFF44" points="421,466.5078,425,470.5078,421,474.5078,417,470.5078" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="526" x="430" y="474.8545">initializeDataExtends(Relation&lt;NumberVector&gt;, int, double[], double[]): void</text></g></a><!--MD5=[efdbae759add86f3f9315694b9fcf1dc]
class elki.algorithm.statistics.DistanceStatisticsWithClasses--><a href="DistanceStatisticsWithClasses.html" target="_top" title="DistanceStatisticsWithClasses.html" xlink:actuate="onRequest" xlink:href="DistanceStatisticsWithClasses.html" xlink:show="new" xlink:title="DistanceStatisticsWithClasses.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.DistanceStatisticsWithClasses"><rect codeLine="39" fill="#F1F1F1" height="227.2656" id="elki.algorithm.statistics.DistanceStatisticsWithClasses" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="547" x="1393.5" y="230.5"/><ellipse cx="1553.25" cy="246.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1556.2188,252.1406 Q1555.6406,252.4375 1555,252.5781 Q1554.3594,252.7344 1553.6563,252.7344 Q1551.1563,252.7344 1549.8281,251.0938 Q1548.5156,249.4375 1548.5156,246.3125 Q1548.5156,243.1875 1549.8281,241.5313 Q1551.1563,239.875 1553.6563,239.875 Q1554.3594,239.875 1555,240.0313 Q1555.6563,240.1875 1556.2188,240.4844 L1556.2188,243.2031 Q1555.5938,242.625 1555,242.3594 Q1554.4063,242.0781 1553.7813,242.0781 Q1552.4375,242.0781 1551.75,243.1563 Q1551.0625,244.2188 1551.0625,246.3125 Q1551.0625,248.4063 1551.75,249.4844 Q1552.4375,250.5469 1553.7813,250.5469 Q1554.4063,250.5469 1555,250.2813 Q1555.5938,250 1556.2188,249.4219 L1556.2188,252.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="1573.75" y="251.3467">DistanceStatisticsWithClasses</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="1933.5" y="227.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="1934.5" y="239.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1394.5" x2="1939.5" y1="262.5" y2="262.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1401.5" y="273.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1413.5" y="279.4951">LOG: Logging</text><polygon fill="none" points="1404.5,287.4453,1408.5,291.4453,1404.5,295.4453,1400.5,291.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1413.5" y="295.792">distance: Distance&lt;? super O&gt;</text><polygon fill="none" points="1404.5,303.7422,1408.5,307.7422,1404.5,311.7422,1400.5,307.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="1413.5" y="312.0889">numbin: int</text><polygon fill="none" points="1404.5,320.0391,1408.5,324.0391,1404.5,328.0391,1400.5,324.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1413.5" y="328.3857">sampling: boolean</text><polygon fill="none" points="1404.5,336.3359,1408.5,340.3359,1404.5,344.3359,1400.5,340.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1413.5" y="344.6826">exact: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1394.5" x2="1939.5" y1="351.9844" y2="351.9844"/><ellipse cx="1404.5" cy="365.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="521" x="1413.5" y="368.9795">DistanceStatisticsWithClasses(Distance&lt;? super O&gt;, int, boolean, boolean)</text><ellipse cx="1404.5" cy="381.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1413.5" y="385.2764">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="1404.5" cy="398.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="1413.5" y="401.5732">run(Database, Relation&lt;O&gt;): HistogramResult</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1401.5" y="411.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="457" x="1413.5" y="417.8701">sampleMinMax(Relation&lt;O&gt;, DistanceQuery&lt;O&gt;): DoubleMinMax</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1401.5" y="427.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="1413.5" y="434.167">exactMinMax(Relation&lt;O&gt;, DistanceQuery&lt;O&gt;): DoubleMinMax</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1401.5" y="444.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="339" x="1413.5" y="450.4639">shrinkHeap(TreeSet&lt;DoubleDBIDPair&gt;, int): void</text></g></a><!--MD5=[a7fe004d6e62e63b5a22e9111092eb97]
class elki.algorithm.statistics.EvaluateRetrievalPerformance--><a href="EvaluateRetrievalPerformance.html" target="_top" title="EvaluateRetrievalPerformance.html" xlink:actuate="onRequest" xlink:href="EvaluateRetrievalPerformance.html" xlink:show="new" xlink:title="EvaluateRetrievalPerformance.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.EvaluateRetrievalPerformance"><rect codeLine="65" fill="#F1F1F1" height="259.8594" id="elki.algorithm.statistics.EvaluateRetrievalPerformance" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="690" x="1976" y="214"/><ellipse cx="2208.25" cy="230" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2211.2188,235.6406 Q2210.6406,235.9375 2210,236.0781 Q2209.3594,236.2344 2208.6563,236.2344 Q2206.1563,236.2344 2204.8281,234.5938 Q2203.5156,232.9375 2203.5156,229.8125 Q2203.5156,226.6875 2204.8281,225.0313 Q2206.1563,223.375 2208.6563,223.375 Q2209.3594,223.375 2210,223.5313 Q2210.6563,223.6875 2211.2188,223.9844 L2211.2188,226.7031 Q2210.5938,226.125 2210,225.8594 Q2209.4063,225.5781 2208.7813,225.5781 Q2207.4375,225.5781 2206.75,226.6563 Q2206.0625,227.7188 2206.0625,229.8125 Q2206.0625,231.9063 2206.75,232.9844 Q2207.4375,234.0469 2208.7813,234.0469 Q2209.4063,234.0469 2210,233.7813 Q2210.5938,233.5 2211.2188,232.9219 L2211.2188,235.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="2228.75" y="234.8467">EvaluateRetrievalPerformance</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="2659" y="211"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="2660" y="223.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1977" x2="2665" y1="246" y2="246"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1984" y="256.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1996" y="262.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1984" y="272.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1996" y="279.292">PREFIX: String</text><polygon fill="none" points="1987,287.2422,1991,291.2422,1987,295.2422,1983,291.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1996" y="295.5889">distance: Distance&lt;? super O&gt;</text><polygon fill="none" points="1987,303.5391,1991,307.5391,1987,311.5391,1983,307.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="1996" y="311.8857">sampling: double</text><polygon fill="none" points="1987,319.8359,1991,323.8359,1987,327.8359,1983,323.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="1996" y="328.1826">random: RandomFactory</text><polygon fill="none" points="1987,336.1328,1991,340.1328,1987,344.1328,1983,340.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1996" y="344.4795">includeSelf: boolean</text><polygon fill="none" points="1987,352.4297,1991,356.4297,1987,360.4297,1983,356.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="1996" y="360.7764">maxk: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1977" x2="2665" y1="368.0781" y2="368.0781"/><ellipse cx="1987" cy="381.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="627" x="1996" y="385.0732">EvaluateRetrievalPerformance(Distance&lt;? super O&gt;, double, RandomFactory, boolean, int)</text><ellipse cx="1987" cy="398.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1996" y="401.3701">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="1987" cy="414.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="419" x="1996" y="417.667">run(Relation&lt;O&gt;, Relation&lt;?&gt;): RetrievalPerformanceResult</text><polygon fill="#FFFF44" points="1987,425.6172,1991,429.6172,1987,433.6172,1983,429.6172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="216" x="1996" y="433.9639">match(Object, Object): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1984" y="443.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="1996" y="450.2607">findMatches(ModifiableDBIDs, Relation&lt;?&gt;, Object): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1984" y="460.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="664" x="1996" y="466.5576">computeDistances(ModifiableDoubleDBIDList, DBIDIter, DistanceQuery&lt;O&gt;, Relation&lt;O&gt;): void</text></g></a><!--MD5=[06287fed9dcd01ba6b266e1fe53653b2]
class elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator--><a href="EvaluateRetrievalPerformance.KNNEvaluator.html" target="_top" title="EvaluateRetrievalPerformance.KNNEvaluator.html" xlink:actuate="onRequest" xlink:href="EvaluateRetrievalPerformance.KNNEvaluator.html" xlink:show="new" xlink:title="EvaluateRetrievalPerformance.KNNEvaluator.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator"><rect codeLine="81" fill="#F1F1F1" height="80.5938" id="elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="801" x="1920.5" y="608"/><ellipse cx="2166.25" cy="624" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2169.2188,629.6406 Q2168.6406,629.9375 2168,630.0781 Q2167.3594,630.2344 2166.6563,630.2344 Q2164.1563,630.2344 2162.8281,628.5938 Q2161.5156,626.9375 2161.5156,623.8125 Q2161.5156,620.6875 2162.8281,619.0313 Q2164.1563,617.375 2166.6563,617.375 Q2167.3594,617.375 2168,617.5313 Q2168.6563,617.6875 2169.2188,617.9844 L2169.2188,620.7031 Q2168.5938,620.125 2168,619.8594 Q2167.4063,619.5781 2166.7813,619.5781 Q2165.4375,619.5781 2164.75,620.6563 Q2164.0625,621.7188 2164.0625,623.8125 Q2164.0625,625.9063 2164.75,626.9844 Q2165.4375,628.0469 2166.7813,628.0469 Q2167.4063,628.0469 2168,627.7813 Q2168.5938,627.5 2169.2188,626.9219 L2169.2188,629.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="2186.75" y="628.8467">EvaluateRetrievalPerformance.KNNEvaluator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1921.5" x2="2720.5" y1="640" y2="640"/><line style="stroke:#181818;stroke-width:0.5;" x1="1921.5" x2="2720.5" y1="648" y2="648"/><ellipse cx="1931.5" cy="661.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="775" x="1940.5" y="664.9951">evaluateKNN(double[], ModifiableDoubleDBIDList, Relation&lt;?&gt;, Object2IntOpenHashMap&lt;Object&gt;, Object): void</text><ellipse cx="1931.5" cy="677.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="1940.5" y="681.292">countkNN(Object2IntOpenHashMap&lt;Object&gt;, Object): int</text></g></a><!--MD5=[2ad161806c811d5c1cd01202fb71a197]
class elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult--><a href="EvaluateRetrievalPerformance.RetrievalPerformanceResult.html" target="_top" title="EvaluateRetrievalPerformance.RetrievalPerformanceResult.html" xlink:actuate="onRequest" xlink:href="EvaluateRetrievalPerformance.RetrievalPerformanceResult.html" xlink:show="new" xlink:title="EvaluateRetrievalPerformance.RetrievalPerformanceResult.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult"><rect codeLine="86" fill="#F1F1F1" height="210.9688" id="elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="432" x="932" y="543"/><ellipse cx="947" cy="559" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M949.9688,564.6406 Q949.3906,564.9375 948.75,565.0781 Q948.1094,565.2344 947.4063,565.2344 Q944.9063,565.2344 943.5781,563.5938 Q942.2656,561.9375 942.2656,558.8125 Q942.2656,555.6875 943.5781,554.0313 Q944.9063,552.375 947.4063,552.375 Q948.1094,552.375 948.75,552.5313 Q949.4063,552.6875 949.9688,552.9844 L949.9688,555.7031 Q949.3438,555.125 948.75,554.8594 Q948.1563,554.5781 947.5313,554.5781 Q946.1875,554.5781 945.5,555.6563 Q944.8125,556.7188 944.8125,558.8125 Q944.8125,560.9063 945.5,561.9844 Q946.1875,563.0469 947.5313,563.0469 Q948.1563,563.0469 948.75,562.7813 Q949.3438,562.5 949.9688,561.9219 L949.9688,564.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="400" x="961" y="563.8467">EvaluateRetrievalPerformance.RetrievalPerformanceResult</text><line style="stroke:#181818;stroke-width:0.5;" x1="933" x2="1363" y1="575" y2="575"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="940" y="585.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="952" y="591.9951">samplesize: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="940" y="601.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="952" y="608.292">map: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="940" y="618.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="952" y="624.5889">auroc: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="940" y="634.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="952" y="640.8857">knnperf: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="933" x2="1363" y1="648.1875" y2="648.1875"/><ellipse cx="943" cy="661.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="952" y="665.1826">RetrievalPerformanceResult(int, double, double, double[])</text><ellipse cx="943" cy="678.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="952" y="681.4795">getAUROC(): double</text><ellipse cx="943" cy="694.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="952" y="697.7764">getMAP(): double</text><ellipse cx="943" cy="710.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="952" y="714.0732">getLongName(): String</text><ellipse cx="943" cy="727.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="952" y="730.3701">getShortName(): String</text><ellipse cx="943" cy="743.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="952" y="746.667">writeToText(TextWriterStream, String): void</text></g></a><!--MD5=[6f9a25fc23ff9d37367e9e073653af0d]
class elki.algorithm.statistics.AveragePrecisionAtK--><a href="AveragePrecisionAtK.html" target="_top" title="AveragePrecisionAtK.html" xlink:actuate="onRequest" xlink:href="AveragePrecisionAtK.html" xlink:show="new" xlink:title="AveragePrecisionAtK.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.AveragePrecisionAtK"><rect codeLine="113" fill="#F1F1F1" height="210.9688" id="elki.algorithm.statistics.AveragePrecisionAtK" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="590" x="2701" y="238.5"/><ellipse cx="2914.75" cy="254.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2917.7188,260.1406 Q2917.1406,260.4375 2916.5,260.5781 Q2915.8594,260.7344 2915.1563,260.7344 Q2912.6563,260.7344 2911.3281,259.0938 Q2910.0156,257.4375 2910.0156,254.3125 Q2910.0156,251.1875 2911.3281,249.5313 Q2912.6563,247.875 2915.1563,247.875 Q2915.8594,247.875 2916.5,248.0313 Q2917.1563,248.1875 2917.7188,248.4844 L2917.7188,251.2031 Q2917.0938,250.625 2916.5,250.3594 Q2915.9063,250.0781 2915.2813,250.0781 Q2913.9375,250.0781 2913.25,251.1563 Q2912.5625,252.2188 2912.5625,254.3125 Q2912.5625,256.4063 2913.25,257.4844 Q2913.9375,258.5469 2915.2813,258.5469 Q2915.9063,258.5469 2916.5,258.2813 Q2917.0938,258 2917.7188,257.4219 L2917.7188,260.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="2935.25" y="259.3467">AveragePrecisionAtK</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3284" y="235.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3285" y="247.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="2702" x2="3290" y1="270.5" y2="270.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="281.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2721" y="287.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="297.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="2721" y="303.792">distance: Distance&lt;? super O&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="313.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="2721" y="320.0889">k: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="330.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="2721" y="336.3857">sampling: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="346.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="2721" y="352.6826">random: RandomFactory</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2709" y="362.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="2721" y="368.9795">includeSelf: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="2702" x2="3290" y1="376.2813" y2="376.2813"/><ellipse cx="2712" cy="389.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="564" x="2721" y="393.2764">AveragePrecisionAtK(Distance&lt;? super O&gt;, int, double, RandomFactory, boolean)</text><ellipse cx="2712" cy="406.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2721" y="409.5732">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2712" cy="422.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="2721" y="425.8701">run(Relation&lt;O&gt;, Relation&lt;?&gt;): CollectionResult&lt;double[]&gt;</text><polygon fill="#FFFF44" points="2712,433.8203,2716,437.8203,2712,441.8203,2708,437.8203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="216" x="2721" y="442.167">match(Object, Object): boolean</text></g></a><!--MD5=[2df48ae8d3f2e713f40b2f21891c4741]
class elki.algorithm.statistics.DistanceQuantileSampler--><a href="DistanceQuantileSampler.html" target="_top" title="DistanceQuantileSampler.html" xlink:actuate="onRequest" xlink:href="DistanceQuantileSampler.html" xlink:show="new" xlink:title="DistanceQuantileSampler.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.DistanceQuantileSampler"><rect codeLine="140" fill="#F1F1F1" height="210.9688" id="elki.algorithm.statistics.DistanceQuantileSampler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="653" x="3326.5" y="238.5"/><ellipse cx="3555.75" cy="254.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3558.7188,260.1406 Q3558.1406,260.4375 3557.5,260.5781 Q3556.8594,260.7344 3556.1563,260.7344 Q3553.6563,260.7344 3552.3281,259.0938 Q3551.0156,257.4375 3551.0156,254.3125 Q3551.0156,251.1875 3552.3281,249.5313 Q3553.6563,247.875 3556.1563,247.875 Q3556.8594,247.875 3557.5,248.0313 Q3558.1563,248.1875 3558.7188,248.4844 L3558.7188,251.2031 Q3558.0938,250.625 3557.5,250.3594 Q3556.9063,250.0781 3556.2813,250.0781 Q3554.9375,250.0781 3554.25,251.1563 Q3553.5625,252.2188 3553.5625,254.3125 Q3553.5625,256.4063 3554.25,257.4844 Q3554.9375,258.5469 3556.2813,258.5469 Q3556.9063,258.5469 3557.5,258.2813 Q3558.0938,258 3558.7188,257.4219 L3558.7188,260.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="3576.25" y="259.3467">DistanceQuantileSampler</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3972.5" y="235.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3973.5" y="247.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="3327.5" x2="3978.5" y1="270.5" y2="270.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="281.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3346.5" y="287.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="297.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="99" x="3346.5" y="303.792">PREFIX: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="313.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="3346.5" y="320.0889">distance: Distance&lt;? super O&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="330.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="3346.5" y="336.3857">quantile: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="346.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="3346.5" y="352.6826">sampling: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="362.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="3346.5" y="368.9795">nozeros: boolean</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3334.5" y="378.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="3346.5" y="385.2764">rand: RandomFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="3327.5" x2="3978.5" y1="392.5781" y2="392.5781"/><ellipse cx="3337.5" cy="406.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="627" x="3346.5" y="409.5732">DistanceQuantileSampler(Distance&lt;? super O&gt;, double, double, boolean, RandomFactory)</text><ellipse cx="3337.5" cy="422.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="3346.5" y="425.8701">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="3337.5" cy="438.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="3346.5" y="442.167">run(Relation&lt;O&gt;): CollectionResult&lt;double[]&gt;</text></g></a><!--MD5=[5a4551dcebca59e64a425e797985dab5]
class elki.algorithm.statistics.AddUniformScale--><a href="AddUniformScale.html" target="_top" title="AddUniformScale.html" xlink:actuate="onRequest" xlink:href="AddUniformScale.html" xlink:show="new" xlink:title="AddUniformScale.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.AddUniformScale"><rect codeLine="167" fill="#F1F1F1" height="96.8906" id="elki.algorithm.statistics.AddUniformScale" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="408" x="4015" y="295.5"/><ellipse cx="4156.25" cy="311.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4159.2188,317.1406 Q4158.6406,317.4375 4158,317.5781 Q4157.3594,317.7344 4156.6563,317.7344 Q4154.1563,317.7344 4152.8281,316.0938 Q4151.5156,314.4375 4151.5156,311.3125 Q4151.5156,308.1875 4152.8281,306.5313 Q4154.1563,304.875 4156.6563,304.875 Q4157.3594,304.875 4158,305.0313 Q4158.6563,305.1875 4159.2188,305.4844 L4159.2188,308.2031 Q4158.5938,307.625 4158,307.3594 Q4157.4063,307.0781 4156.7813,307.0781 Q4155.4375,307.0781 4154.75,308.1563 Q4154.0625,309.2188 4154.0625,311.3125 Q4154.0625,313.4063 4154.75,314.4844 Q4155.4375,315.5469 4156.7813,315.5469 Q4157.4063,315.5469 4158,315.2813 Q4158.5938,315 4159.2188,314.4219 L4159.2188,317.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="4176.75" y="316.3467">AddUniformScale</text><line style="stroke:#181818;stroke-width:0.5;" x1="4016" x2="4422" y1="327.5" y2="327.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4016" x2="4422" y1="335.5" y2="335.5"/><ellipse cx="4026" cy="349.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="4035" y="352.4951">run(Database): Void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4023" y="362.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="4035" y="368.792">run(Relation&lt;? extends NumberVector&gt;): ScalesResult</text><ellipse cx="4026" cy="381.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="4035" y="385.0889">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[18233d3a6f63f6087e92f918a3de43c5]
class elki.algorithm.statistics.EvaluateRankingQuality--><a href="EvaluateRankingQuality.html" target="_top" title="EvaluateRankingQuality.html" xlink:actuate="onRequest" xlink:href="EvaluateRankingQuality.html" xlink:show="new" xlink:title="EvaluateRankingQuality.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.EvaluateRankingQuality"><rect codeLine="173" fill="#F1F1F1" height="145.7813" id="elki.algorithm.statistics.EvaluateRankingQuality" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="509" x="4457.5" y="271"/><ellipse cx="4550.75" cy="287" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4553.7188,292.6406 Q4553.1406,292.9375 4552.5,293.0781 Q4551.8594,293.2344 4551.1563,293.2344 Q4548.6563,293.2344 4547.3281,291.5938 Q4546.0156,289.9375 4546.0156,286.8125 Q4546.0156,283.6875 4547.3281,282.0313 Q4548.6563,280.375 4551.1563,280.375 Q4551.8594,280.375 4552.5,280.5313 Q4553.1563,280.6875 4553.7188,280.9844 L4553.7188,283.7031 Q4553.0938,283.125 4552.5,282.8594 Q4551.9063,282.5781 4551.2813,282.5781 Q4549.9375,282.5781 4549.25,283.6563 Q4548.5625,284.7188 4548.5625,286.8125 Q4548.5625,288.9063 4549.25,289.9844 Q4549.9375,291.0469 4551.2813,291.0469 Q4551.9063,291.0469 4552.5,290.7813 Q4553.0938,290.5 4553.7188,289.9219 L4553.7188,292.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="4571.25" y="291.8467">EvaluateRankingQuality</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="4817.5" y="268"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="4818.5" y="280.1387">V extends NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="4458.5" x2="4965.5" y1="303" y2="303"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4465.5" y="313.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="4477.5" y="319.9951">LOG: Logging</text><polygon fill="none" points="4468.5,327.9453,4472.5,331.9453,4468.5,335.9453,4464.5,331.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="4477.5" y="336.292">distance: Distance&lt;? super NumberVector&gt;</text><polygon fill="none" points="4468.5,344.2422,4472.5,348.2422,4468.5,352.2422,4464.5,348.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="4477.5" y="352.5889">numbins: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="4458.5" x2="4965.5" y1="359.8906" y2="359.8906"/><ellipse cx="4468.5" cy="373.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="435" x="4477.5" y="376.8857">EvaluateRankingQuality(Distance&lt;? super NumberVector&gt;, int)</text><ellipse cx="4468.5" cy="389.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="4477.5" y="393.1826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="4468.5" cy="406.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="483" x="4477.5" y="409.4795">run(Database, Relation&lt;V extends NumberVector&gt;): HistogramResult</text></g></a><!--MD5=[a48a721576b15584049750df4850ff64]
class elki.algorithm.statistics.AddSingleScale--><a href="AddSingleScale.html" target="_top" title="AddSingleScale.html" xlink:actuate="onRequest" xlink:href="AddSingleScale.html" xlink:show="new" xlink:title="AddSingleScale.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.AddSingleScale"><rect codeLine="190" fill="#F1F1F1" height="129.4844" id="elki.algorithm.statistics.AddSingleScale" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="408" x="5002" y="279.5"/><ellipse cx="5148.75" cy="295.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5151.7188,301.1406 Q5151.1406,301.4375 5150.5,301.5781 Q5149.8594,301.7344 5149.1563,301.7344 Q5146.6563,301.7344 5145.3281,300.0938 Q5144.0156,298.4375 5144.0156,295.3125 Q5144.0156,292.1875 5145.3281,290.5313 Q5146.6563,288.875 5149.1563,288.875 Q5149.8594,288.875 5150.5,289.0313 Q5151.1563,289.1875 5151.7188,289.4844 L5151.7188,292.2031 Q5151.0938,291.625 5150.5,291.3594 Q5149.9063,291.0781 5149.2813,291.0781 Q5147.9375,291.0781 5147.25,292.1563 Q5146.5625,293.2188 5146.5625,295.3125 Q5146.5625,297.4063 5147.25,298.4844 Q5147.9375,299.5469 5149.2813,299.5469 Q5149.9063,299.5469 5150.5,299.2813 Q5151.0938,299 5151.7188,298.4219 L5151.7188,301.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="5169.25" y="300.3467">AddSingleScale</text><line style="stroke:#181818;stroke-width:0.5;" x1="5003" x2="5409" y1="311.5" y2="311.5"/><polygon fill="none" points="5013,321.1484,5009,327.1484,5017,327.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="5022" y="328.4951">minmax: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="5003" x2="5409" y1="335.7969" y2="335.7969"/><ellipse cx="5013" cy="349.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="5022" y="352.792">AddSingleScale(double[])</text><ellipse cx="5013" cy="365.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="5022" y="369.0889">run(Database): Void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5010" y="379.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="5022" y="385.3857">run(Relation&lt;? extends NumberVector&gt;): ScalesResult</text><ellipse cx="5013" cy="398.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="5022" y="401.6826">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[9b0ec66ac8870c189cb8b4ddea8f9b5b]
class elki.algorithm.statistics.RankingQualityHistogram--><a href="RankingQualityHistogram.html" target="_top" title="RankingQualityHistogram.html" xlink:actuate="onRequest" xlink:href="RankingQualityHistogram.html" xlink:show="new" xlink:title="RankingQualityHistogram.html" xlink:type="simple"><g id="elem_elki.algorithm.statistics.RankingQualityHistogram"><rect codeLine="205" fill="#F1F1F1" height="145.7813" id="elki.algorithm.statistics.RankingQualityHistogram" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="384" x="5445" y="271"/><ellipse cx="5540.75" cy="287" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5543.7188,292.6406 Q5543.1406,292.9375 5542.5,293.0781 Q5541.8594,293.2344 5541.1563,293.2344 Q5538.6563,293.2344 5537.3281,291.5938 Q5536.0156,289.9375 5536.0156,286.8125 Q5536.0156,283.6875 5537.3281,282.0313 Q5538.6563,280.375 5541.1563,280.375 Q5541.8594,280.375 5542.5,280.5313 Q5543.1563,280.6875 5543.7188,280.9844 L5543.7188,283.7031 Q5543.0938,283.125 5542.5,282.8594 Q5541.9063,282.5781 5541.2813,282.5781 Q5539.9375,282.5781 5539.25,283.6563 Q5538.5625,284.7188 5538.5625,286.8125 Q5538.5625,288.9063 5539.25,289.9844 Q5539.9375,291.0469 5541.2813,291.0469 Q5541.9063,291.0469 5542.5,290.7813 Q5543.0938,290.5 5543.7188,289.9219 L5543.7188,292.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="5561.25" y="291.8467">RankingQualityHistogram</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="5822" y="268"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="5823" y="280.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="5446" x2="5828" y1="303" y2="303"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5453" y="313.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="5465" y="319.9951">LOG: Logging</text><polygon fill="none" points="5456,327.9453,5460,331.9453,5456,335.9453,5452,331.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="5465" y="336.292">distance: Distance&lt;? super O&gt;</text><polygon fill="none" points="5456,344.2422,5460,348.2422,5456,352.2422,5452,348.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5465" y="352.5889">numbins: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="5446" x2="5828" y1="359.8906" y2="359.8906"/><ellipse cx="5456" cy="373.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="5465" y="376.8857">RankingQualityHistogram(Distance&lt;? super O&gt;, int)</text><ellipse cx="5456" cy="389.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="5465" y="393.1826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="5456" cy="406.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="5465" y="409.4795">run(Database, Relation&lt;O&gt;): HistogramResult</text></g></a><!--MD5=[6617a5df6c1f5d3bd235afcb3413924f]
class elki.Algorithm--><a href="../../Algorithm.html" target="_top" title="../../Algorithm.html" xlink:actuate="onRequest" xlink:href="../../Algorithm.html" xlink:show="new" xlink:title="../../Algorithm.html" xlink:type="simple"><g id="elem_elki.Algorithm"><rect codeLine="254" fill="#F1F1F1" height="80.5938" id="elki.Algorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="341" x="3482.5" y="41"/><ellipse cx="3614.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3610.1719,52.7656 L3610.1719,50.6094 L3617.5625,50.6094 L3617.5625,52.7656 L3615.0938,52.7656 L3615.0938,60.8438 L3617.5625,60.8438 L3617.5625,63 L3610.1719,63 L3610.1719,60.8438 L3612.6406,60.8438 L3612.6406,52.7656 L3610.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="69" x="3634.75" y="61.8467">Algorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="3483.5" x2="3822.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="3483.5" x2="3822.5" y1="81" y2="81"/><ellipse cx="3493.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="3502.5" y="97.9951">autorun(Database): Object</text><ellipse cx="3493.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="315" x="3502.5" y="114.292">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[135bb79dd8f8b1d54ecbff64dca8d91a]
class elki.result.textwriter.TextWriteable--><a href="../../result/textwriter/TextWriteable.html" target="_top" title="../../result/textwriter/TextWriteable.html" xlink:actuate="onRequest" xlink:href="../../result/textwriter/TextWriteable.html" xlink:show="new" xlink:title="../../result/textwriter/TextWriteable.html" xlink:type="simple"><g id="elem_elki.result.textwriter.TextWriteable"><rect codeLine="268" fill="#F1F1F1" height="64.2969" id="elki.result.textwriter.TextWriteable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="331" x="22.5" y="312"/><ellipse cx="134.25" cy="328" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M130.1719,323.7656 L130.1719,321.6094 L137.5625,321.6094 L137.5625,323.7656 L135.0938,323.7656 L135.0938,331.8438 L137.5625,331.8438 L137.5625,334 L130.1719,334 L130.1719,331.8438 L132.6406,331.8438 L132.6406,323.7656 L130.1719,323.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="99" x="154.75" y="332.8467">TextWriteable</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="352.5" y1="344" y2="344"/><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="352.5" y1="352" y2="352"/><ellipse cx="33.5" cy="365.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="305" x="42.5" y="368.9951">writeToText(TextWriterStream, String): void</text></g></a><!--MD5=[9047c9cedc7edca6ddb33fd2a10410d2]
reverse link elki.Algorithm to elki.algorithm.statistics.HopkinsStatisticClusteringTendency--><g id="link_elki.Algorithm_elki.algorithm.statistics.HopkinsStatisticClusteringTendency"><path codeLine="222" d="M3462.13,85.8 C2951.24,95.14 1577.6,123.59 1376,163 C1323,173.36 1268.12,188.6 1215.08,205.89 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.HopkinsStatisticClusteringTendency" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3462.02,78.81,3482.14,85.44,3462.27,92.8,3462.02,78.81" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5ca654ecef678f31094757d7b0ac9868]
reverse link elki.Algorithm to elki.algorithm.statistics.DistanceStatisticsWithClasses--><g id="link_elki.Algorithm_elki.algorithm.statistics.DistanceStatisticsWithClasses"><path codeLine="225" d="M3462.35,86.19 C3049.65,94.96 2099.29,119.61 1959,163 C1910.07,178.13 1861.06,203.41 1817.55,230.31 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.DistanceStatisticsWithClasses" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3462.34,79.19,3482.49,85.77,3462.64,93.19,3462.34,79.19" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[26d84574b4af4fd32e9b22560dc0b276]
reverse link elki.Algorithm to elki.algorithm.statistics.EvaluateRetrievalPerformance--><g id="link_elki.Algorithm_elki.algorithm.statistics.EvaluateRetrievalPerformance"><path codeLine="228" d="M3462.05,89.86 C3222.37,100.56 2825.49,123.59 2684,163 C2638.77,175.6 2592.44,193.86 2548.67,213.98 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.EvaluateRetrievalPerformance" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3461.95,82.85,3482.24,88.97,3462.57,96.84,3461.95,82.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e679373b2f996695e6f158497ceca4d0]
reverse link elki.algorithm.statistics.EvaluateRetrievalPerformance to elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator--><g id="link_elki.algorithm.statistics.EvaluateRetrievalPerformance_elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator"><path codeLine="229" d="M2321,489.2 C2321,532.76 2321,577.11 2321,607.73 " fill="none" id="elki.algorithm.statistics.EvaluateRetrievalPerformance-backto-elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2321" cy="482.16" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2321" x2="2321" y1="490.16" y2="474.16"/><line style="stroke:#181818;stroke-width:1.0;" x1="2313" x2="2329" y1="482.16" y2="482.16"/></g><!--MD5=[3b64014280ad1bbe3731bba84c563005]
link elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator to elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator--><g id="link_elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator_elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator"><path codeLine="230" d="M2721.53,631.47 C2743.46,635.62 2756.5,641.29 2756.5,648.5 C2756.5,655.14 2745.42,660.49 2726.51,664.53 " fill="none" id="elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator-to-elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2721.53,665.53,2731.1421,667.6765,2726.4318,664.5439,2729.5644,659.8336,2721.53,665.53" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="44" x="2762.5" y="653.0669">STATIC</text></g><!--MD5=[a3a40e688c54c173bbaf91af696dc081]
reverse link elki.result.textwriter.TextWriteable to elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult--><g id="link_elki.result.textwriter.TextWriteable_elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult"><path codeLine="231" d="M241.35,388.57 C281.17,419 338.13,458.28 394,482 C567.32,555.58 777.51,598.25 931.89,621.77 " fill="none" id="elki.result.textwriter.TextWriteable-backto-elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="236.87,393.95,225.39,376.14,245.47,382.91,236.87,393.95" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b2a2d7e3a6b16b01a6440e06198e56b7]
reverse link elki.algorithm.statistics.EvaluateRetrievalPerformance to elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult--><g id="link_elki.algorithm.statistics.EvaluateRetrievalPerformance_elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult"><path codeLine="232" d="M1969.93,478.5 C1965.94,479.69 1961.96,480.86 1958,482 C1759.78,539.26 1528.77,584.4 1364.3,612.97 " fill="none" id="elki.algorithm.statistics.EvaluateRetrievalPerformance-backto-elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1976.7848" cy="476.4232" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1969.1295" x2="1984.44" y1="478.7465" y2="474.1"/><line style="stroke:#181818;stroke-width:1.0;" x1="1974.4615" x2="1979.108" y1="468.768" y2="484.0785"/></g><!--MD5=[0d2d784dc6d5fd43ce0f09b33901fb96]
reverse link elki.Algorithm to elki.algorithm.statistics.AveragePrecisionAtK--><g id="link_elki.Algorithm_elki.algorithm.statistics.AveragePrecisionAtK"><path codeLine="235" d="M3462.79,116.58 C3411.91,128.5 3357.59,143.83 3309,163 C3257.69,183.25 3204.67,210.85 3157.18,238.35 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.AveragePrecisionAtK" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3461.41,109.72,3482.47,112.1,3464.52,123.37,3461.41,109.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f81eeed64a652f383a48d67942dbaeb7]
reverse link elki.Algorithm to elki.algorithm.statistics.DistanceQuantileSampler--><g id="link_elki.Algorithm_elki.algorithm.statistics.DistanceQuantileSampler"><path codeLine="238" d="M3653,142.41 C3653,170.84 3653,205.65 3653,238.24 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.DistanceQuantileSampler" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3646,142.06,3653,122.06,3660,142.06,3646,142.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7e02126d7a398ec186b6a5a1a59ba59f]
reverse link elki.Algorithm to elki.algorithm.statistics.AddUniformScale--><g id="link_elki.Algorithm_elki.algorithm.statistics.AddUniformScale"><path codeLine="241" d="M3843.14,110.96 C3894.69,122.91 3949.38,139.67 3997,163 C4065.17,196.4 4131.16,254.17 4173.21,295.25 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.AddUniformScale" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3841.56,117.78,3823.55,106.6,3844.6,104.11,3841.56,117.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f2cfe9a916abddcf25370f20979ed727]
reverse link elki.Algorithm to elki.algorithm.statistics.EvaluateRankingQuality--><g id="link_elki.Algorithm_elki.algorithm.statistics.EvaluateRankingQuality"><path codeLine="242" d="M3843.62,91.46 C4040.9,102.59 4334.77,124.94 4441,163 C4508.79,187.29 4576.28,232.03 4626.95,270.83 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.EvaluateRankingQuality" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3843.23,98.45,3823.65,90.35,3844.01,84.47,3843.23,98.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[982e622a0e23abe4756e4d8296c15ed3]
reverse link elki.Algorithm to elki.algorithm.statistics.AddSingleScale--><g id="link_elki.Algorithm_elki.algorithm.statistics.AddSingleScale"><path codeLine="245" d="M3843.58,87.59 C4186.28,97.68 4880.64,122.81 4984,163 C5047.82,187.82 5107.34,238.18 5148.66,279.34 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.AddSingleScale" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3843.32,94.58,3823.53,87,3843.72,80.59,3843.32,94.58" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6aca89bdddb93bb03ebf76c6906cce08]
reverse link elki.Algorithm to elki.algorithm.statistics.RankingQualityHistogram--><g id="link_elki.Algorithm_elki.algorithm.statistics.RankingQualityHistogram"><path codeLine="248" d="M3843.98,84.13 C4272.4,88.79 5283.98,105.78 5428,163 C5485.41,185.81 5538.03,231.33 5576.11,270.89 " fill="none" id="elki.Algorithm-backto-elki.algorithm.statistics.RankingQualityHistogram" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3843.64,91.13,3823.71,83.91,3843.78,77.13,3843.64,91.13" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="2826" y="776"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="2826" y="785.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[ae3beed855eb5635ee19aff39ff08e32]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.algorithm.statistics {

        class HopkinsStatisticClusteringTendency [[HopkinsStatisticClusteringTendency.html]] {
            {static} -LOG: Logging
            #sampleSize: int
            #rep: int
            #k: int
            #random: RandomFactory
            -maxima: double[]
            -minima: double[]
            #distance: NumberVectorDistance<? super NumberVector>
            +HopkinsStatisticClusteringTendency(NumberVectorDistance<? super NumberVector>, int, RandomFactory, int, int, double[], double[])
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<NumberVector>): Double
            #computeNNForRealData(KNNSearcher<DBIDRef>, Relation<NumberVector>, int): double
            #computeNNForUniformData(KNNSearcher<NumberVector>, double[], double[]): double
            #initializeDataExtends(Relation<NumberVector>, int, double[], double[]): void
        }

        class elki.algorithm.statistics.HopkinsStatisticClusteringTendency.Par [[HopkinsStatisticClusteringTendency.Par.html]] {
            {static} +SAMPLESIZE_ID: OptionID
            {static} +REP_ID: OptionID
            {static} +SEED_ID: OptionID
            {static} +MINIMA_ID: OptionID
            {static} +MAXIMA_ID: OptionID
            {static} +K_ID: OptionID
            #distance: NumberVectorDistance<? super NumberVector>
            #sampleSize: int
            #rep: int
            #k: int
            #random: RandomFactory
            #maxima: double[]
            #minima: double[]
            +configure(Parameterization): void
            +make(): HopkinsStatisticClusteringTendency
        }

        class DistanceStatisticsWithClasses<O> [[DistanceStatisticsWithClasses.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            #numbin: int
            #sampling: boolean
            #exact: boolean
            +DistanceStatisticsWithClasses(Distance<? super O>, int, boolean, boolean)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Database, Relation<O>): HistogramResult
            -sampleMinMax(Relation<O>, DistanceQuery<O>): DoubleMinMax
            -exactMinMax(Relation<O>, DistanceQuery<O>): DoubleMinMax
            {static} -shrinkHeap(TreeSet<DoubleDBIDPair>, int): void
        }

        class elki.algorithm.statistics.DistanceStatisticsWithClasses.Par<O> {
            {static} +EXACT_ID: OptionID
            {static} +SAMPLING_ID: OptionID
            {static} +HISTOGRAM_BINS_ID: OptionID
            #distance: Distance<? super O>
            #numbin: int
            #sampling: boolean
            #exact: boolean
            +configure(Parameterization): void
            +make(): DistanceStatisticsWithClasses<O>
        }

        class EvaluateRetrievalPerformance<O> [[EvaluateRetrievalPerformance.html]] {
            {static} -LOG: Logging
            -PREFIX: String
            #distance: Distance<? super O>
            #sampling: double
            #random: RandomFactory
            #includeSelf: boolean
            #maxk: int
            +EvaluateRetrievalPerformance(Distance<? super O>, double, RandomFactory, boolean, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>, Relation<?>): RetrievalPerformanceResult
            {static} #match(Object, Object): boolean
            -findMatches(ModifiableDBIDs, Relation<?>, Object): void
            -computeDistances(ModifiableDoubleDBIDList, DBIDIter, DistanceQuery<O>, Relation<O>): void
        }

        class elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator [[EvaluateRetrievalPerformance.KNNEvaluator.html]] {
            +evaluateKNN(double[], ModifiableDoubleDBIDList, Relation<?>, Object2IntOpenHashMap<Object>, Object): void
            +countkNN(Object2IntOpenHashMap<Object>, Object): int
        }

        class elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult [[EvaluateRetrievalPerformance.RetrievalPerformanceResult.html]] {
            -samplesize: int
            -map: double
            -auroc: double
            -knnperf: double[]
            +RetrievalPerformanceResult(int, double, double, double[])
            +getAUROC(): double
            +getMAP(): double
            +getLongName(): String
            +getShortName(): String
            +writeToText(TextWriterStream, String): void
        }

        class elki.algorithm.statistics.EvaluateRetrievalPerformance.Par<O> {
            {static} +SAMPLING_ID: OptionID
            {static} +SEED_ID: OptionID
            {static} +INCLUDESELF_ID: OptionID
            {static} +MAXK_ID: OptionID
            #distance: Distance<? super O>
            #sampling: double
            #seed: RandomFactory
            #includeSelf: boolean
            #maxk: int
            +configure(Parameterization): void
            +make(): EvaluateRetrievalPerformance<O>
        }

        class AveragePrecisionAtK<O> [[AveragePrecisionAtK.html]] {
            {static} -LOG: Logging
            -distance: Distance<? super O>
            -k: int
            -sampling: double
            -random: RandomFactory
            -includeSelf: boolean
            +AveragePrecisionAtK(Distance<? super O>, int, double, RandomFactory, boolean)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>, Relation<?>): CollectionResult<double[]>
            {static} #match(Object, Object): boolean
        }

        class elki.algorithm.statistics.AveragePrecisionAtK.Par<O> {
            {static} -K_ID: OptionID
            {static} +SAMPLING_ID: OptionID
            {static} +SEED_ID: OptionID
            {static} +INCLUDESELF_ID: OptionID
            #distance: Distance<? super O>
            #k: int
            #sampling: double
            #seed: RandomFactory
            #includeSelf: boolean
            +configure(Parameterization): void
            +make(): AveragePrecisionAtK<O>
        }

        class DistanceQuantileSampler<O> [[DistanceQuantileSampler.html]] {
            {static} -LOG: Logging
            {static} -PREFIX: String
            -distance: Distance<? super O>
            -quantile: double
            -sampling: double
            -nozeros: boolean
            -rand: RandomFactory
            +DistanceQuantileSampler(Distance<? super O>, double, double, boolean, RandomFactory)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): CollectionResult<double[]>
        }

        class elki.algorithm.statistics.DistanceQuantileSampler.Par<O> [[DistanceQuantileSampler.Par.html]] {
            {static} +QUANTILE_ID: OptionID
            {static} +SAMPLING_ID: OptionID
            {static} +NOZEROS_ID: OptionID
            {static} +SEED_ID: OptionID
            #distance: Distance<? super O>
            #quantile: double
            #sampling: double
            #nozeros: boolean
            #rand: RandomFactory
            +configure(Parameterization): void
            +make(): DistanceQuantileSampler<O>
        }

        class AddUniformScale [[AddUniformScale.html]] {
            +run(Database): Void
            -run(Relation<? extends NumberVector>): ScalesResult
            +getInputTypeRestriction(): TypeInformation[]
        }

        class EvaluateRankingQuality<V extends NumberVector> [[EvaluateRankingQuality.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super NumberVector>
            #numbins: int
            +EvaluateRankingQuality(Distance<? super NumberVector>, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Database, Relation<V extends NumberVector>): HistogramResult
        }

        class elki.algorithm.statistics.EvaluateRankingQuality.Par<V extends NumberVector> {
            {static} +HISTOGRAM_BINS_ID: OptionID
            #distance: Distance<? super NumberVector>
            #numbins: int
            +configure(Parameterization): void
            +make(): EvaluateRankingQuality<V extends NumberVector>
        }

        class AddSingleScale [[AddSingleScale.html]] {
            ~minmax: double[]
            +AddSingleScale(double[])
            +run(Database): Void
            -run(Relation<? extends NumberVector>): ScalesResult
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.algorithm.statistics.AddSingleScale.Par [[AddSingleScale.Par.html]] {
            {static} +MINMAX_ID: OptionID
            ~minmax: double[]
            +configure(Parameterization): void
            +make(): AddSingleScale
        }

        class RankingQualityHistogram<O> [[RankingQualityHistogram.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            #numbins: int
            +RankingQualityHistogram(Distance<? super O>, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Database, Relation<O>): HistogramResult
        }

        class elki.algorithm.statistics.RankingQualityHistogram.Par<O> {
            {static} +HISTOGRAM_BINS_ID: OptionID
            #distance: Distance<? super O>
            #numbins: int
            +configure(Parameterization): void
            +make(): RankingQualityHistogram<O>
        }

        elki.Algorithm <|.. HopkinsStatisticClusteringTendency
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.HopkinsStatisticClusteringTendency.Par
        HopkinsStatisticClusteringTendency +- - elki.algorithm.statistics.HopkinsStatisticClusteringTendency.Par
        elki.Algorithm <|.. DistanceStatisticsWithClasses
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.DistanceStatisticsWithClasses.Par
        DistanceStatisticsWithClasses +- - elki.algorithm.statistics.DistanceStatisticsWithClasses.Par
        elki.Algorithm <|.. EvaluateRetrievalPerformance
        EvaluateRetrievalPerformance +- - elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator
        elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator - -> elki.algorithm.statistics.EvaluateRetrievalPerformance.KNNEvaluator: STATIC
        elki.result.textwriter.TextWriteable <|.. elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult
        EvaluateRetrievalPerformance +- - elki.algorithm.statistics.EvaluateRetrievalPerformance.RetrievalPerformanceResult
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.EvaluateRetrievalPerformance.Par
        EvaluateRetrievalPerformance +- - elki.algorithm.statistics.EvaluateRetrievalPerformance.Par
        elki.Algorithm <|.. AveragePrecisionAtK
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.AveragePrecisionAtK.Par
        AveragePrecisionAtK +- - elki.algorithm.statistics.AveragePrecisionAtK.Par
        elki.Algorithm <|.. DistanceQuantileSampler
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.DistanceQuantileSampler.Par
        DistanceQuantileSampler +- - elki.algorithm.statistics.DistanceQuantileSampler.Par
        elki.Algorithm <|.. AddUniformScale
        elki.Algorithm <|.. EvaluateRankingQuality
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.EvaluateRankingQuality.Par
        EvaluateRankingQuality +- - elki.algorithm.statistics.EvaluateRankingQuality.Par
        elki.Algorithm <|.. AddSingleScale
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.AddSingleScale.Par
        AddSingleScale +- - elki.algorithm.statistics.AddSingleScale.Par
        elki.Algorithm <|.. RankingQualityHistogram
        elki.utilities.optionhandling.Parameterizer <|.. elki.algorithm.statistics.RankingQualityHistogram.Par
        RankingQualityHistogram +- - elki.algorithm.statistics.RankingQualityHistogram.Par
    }

    namespace elki {
        interface Algorithm [[../../Algorithm.html]] {
            +autorun(Database): Object
            {abstract} +getInputTypeRestriction(): TypeInformation[]
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    namespace elki.result.textwriter {
        interface TextWriteable [[../../result/textwriter/TextWriteable.html]] {
            {abstract} +writeToText(TextWriterStream, String): void
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>