<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2228px" preserveAspectRatio="none" style="width:9080px;height:2228px;background:#FFFFFF;" version="1.1" viewBox="0 0 9080 2228" width="9080px" zoomAndPan="magnify"><defs/><g><!--MD5=[e23e625bb5c92ed55b9d7cb685855574]
cluster elki.data--><g id="cluster_elki.data"><path d="M8.5,219 L75.5,219 A3.75,3.75 0 0 1 78,221.5 L85,241.2969 L7673.5,241.2969 A2.5,2.5 0 0 1 7676,243.7969 L7676,2200.5 A2.5,2.5 0 0 1 7673.5,2203 L8.5,2203 A2.5,2.5 0 0 1 6,2200.5 L6,221.5 A2.5,2.5 0 0 1 8.5,219 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="85" y1="241.2969" y2="241.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="66" x="10" y="233.9951">elki.data</text></g><!--MD5=[fe423a4af84666e549f6571190956bed]
cluster elki.result.textwriter--><g id="cluster_elki.result.textwriter"><path d="M7702.5,349.5 L7865.5,349.5 A3.75,3.75 0 0 1 7868,352 L7875,371.7969 L8061.5,371.7969 A2.5,2.5 0 0 1 8064,374.2969 L8064,462 A2.5,2.5 0 0 1 8061.5,464.5 L7702.5,464.5 A2.5,2.5 0 0 1 7700,462 L7700,352 A2.5,2.5 0 0 1 7702.5,349.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="7700" x2="7875" y1="371.7969" y2="371.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="162" x="7704" y="364.4951">elki.result.textwriter</text></g><!--MD5=[b61ec7d9fa358563eae2a167b58ab6ac]
cluster elki.data.model--><g id="cluster_elki.data.model"><path d="M8940.5,1234 L9060.5,1234 A3.75,3.75 0 0 1 9063,1236.5 L9070,1256.2969 L9070.5,1256.2969 A2.5,2.5 0 0 1 9073,1258.7969 L9073,1330.5 A2.5,2.5 0 0 1 9070.5,1333 L8940.5,1333 A2.5,2.5 0 0 1 8938,1330.5 L8938,1236.5 A2.5,2.5 0 0 1 8940.5,1234 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="8938" x2="9070" y1="1256.2969" y2="1256.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="119" x="8942" y="1248.9951">elki.data.model</text></g><!--MD5=[2bb155270179297775edcda92cfceec7]
cluster elki.data.type--><g id="cluster_elki.data.type"><path d="M8263.5,1709.5 L8370.5,1709.5 A3.75,3.75 0 0 1 8373,1712 L8380,1731.7969 L8958.5,1731.7969 A2.5,2.5 0 0 1 8961,1734.2969 L8961,1806 A2.5,2.5 0 0 1 8958.5,1808.5 L8263.5,1808.5 A2.5,2.5 0 0 1 8261,1806 L8261,1712 A2.5,2.5 0 0 1 8263.5,1709.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="8261" x2="8380" y1="1731.7969" y2="1731.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="106" x="8265" y="1724.4951">elki.data.type</text></g><!--MD5=[83ce216fd16d0ebcf9d8c8b4f41176f2]
cluster elki.utilities.io--><g id="cluster_elki.utilities.io"><path d="M7702.5,799.5 L7811.5,799.5 A3.75,3.75 0 0 1 7814,802 L7821,821.7969 L7985.5,821.7969 A2.5,2.5 0 0 1 7988,824.2969 L7988,945 A2.5,2.5 0 0 1 7985.5,947.5 L7702.5,947.5 A2.5,2.5 0 0 1 7700,945 L7700,802 A2.5,2.5 0 0 1 7702.5,799.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="7700" x2="7821" y1="821.7969" y2="821.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="108" x="7704" y="814.4951">elki.utilities.io</text></g><!--MD5=[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id="cluster_java.lang"><path d="M4636.5,6 L4706.5,6 A3.75,3.75 0 0 1 4709,8.5 L4716,28.2969 L5036.5,28.2969 A2.5,2.5 0 0 1 5039,30.7969 L5039,183.5 A2.5,2.5 0 0 1 5036.5,186 L4636.5,186 A2.5,2.5 0 0 1 4634,183.5 L4634,8.5 A2.5,2.5 0 0 1 4636.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4634" x2="4716" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="4638" y="20.9951">java.lang</text></g><!--MD5=[7db3c59d38ae5b37b484eb2df9368145]
cluster java.util--><g id="cluster_java.util"><path d="M8090.5,219 L8151.5,219 A3.75,3.75 0 0 1 8154,221.5 L8161,241.2969 L8797.5,241.2969 A2.5,2.5 0 0 1 8800,243.7969 L8800,592.5 A2.5,2.5 0 0 1 8797.5,595 L8090.5,595 A2.5,2.5 0 0 1 8088,592.5 L8088,221.5 A2.5,2.5 0 0 1 8090.5,219 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="8088" x2="8161" y1="241.2969" y2="241.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="60" x="8092" y="233.9951">java.util</text></g><!--MD5=[f2e2ae479fed8e275a1086c2f359ba62]
cluster elki.data.spatial--><g id="cluster_elki.data.spatial"><path d="M5273.5,46.5 L5396.5,46.5 A3.75,3.75 0 0 1 5399,49 L5406,68.7969 L5460.5,68.7969 A2.5,2.5 0 0 1 5463,71.2969 L5463,143 A2.5,2.5 0 0 1 5460.5,145.5 L5273.5,145.5 A2.5,2.5 0 0 1 5271,143 L5271,49 A2.5,2.5 0 0 1 5273.5,46.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="5271" x2="5406" y1="68.7969" y2="68.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="122" x="5275" y="61.4951">elki.data.spatial</text></g><!--MD5=[0d852700fdad35b7061d461d6907a324]
cluster java.io--><g id="cluster_java.io"><path d="M5489.5,30 L5540.5,30 A3.75,3.75 0 0 1 5543,32.5 L5550,52.2969 L5778.5,52.2969 A2.5,2.5 0 0 1 5781,54.7969 L5781,159.5 A2.5,2.5 0 0 1 5778.5,162 L5489.5,162 A2.5,2.5 0 0 1 5487,159.5 L5487,32.5 A2.5,2.5 0 0 1 5489.5,30 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="5487" x2="5550" y1="52.2969" y2="52.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="50" x="5491" y="44.9951">java.io</text></g><!--MD5=[ece72703ec3a22cc62d6e0b44c1f2f7f]
class elki.data.Cluster--><a href="Cluster.html" target="_top" title="Cluster.html" xlink:actuate="onRequest" xlink:href="Cluster.html" xlink:show="new" xlink:title="Cluster.html" xlink:type="simple"><g id="elem_elki.data.Cluster"><rect codeLine="4" fill="#F1F1F1" height="390.2344" id="elki.data.Cluster" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="366" x="6927" y="688"/><ellipse cx="7029.25" cy="704" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7032.2188,709.6406 Q7031.6406,709.9375 7031,710.0781 Q7030.3594,710.2344 7029.6563,710.2344 Q7027.1563,710.2344 7025.8281,708.5938 Q7024.5156,706.9375 7024.5156,703.8125 Q7024.5156,700.6875 7025.8281,699.0313 Q7027.1563,697.375 7029.6563,697.375 Q7030.3594,697.375 7031,697.5313 Q7031.6563,697.6875 7032.2188,697.9844 L7032.2188,700.7031 Q7031.5938,700.125 7031,699.8594 Q7030.4063,699.5781 7029.7813,699.5781 Q7028.4375,699.5781 7027.75,700.6563 Q7027.0625,701.7188 7027.0625,703.8125 Q7027.0625,705.9063 7027.75,706.9844 Q7028.4375,708.0469 7029.7813,708.0469 Q7030.4063,708.0469 7031,707.7813 Q7031.5938,707.5 7032.2188,706.9219 L7032.2188,709.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="7049.75" y="708.8467">Cluster</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="102" x="7194" y="685"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="100" x="7195" y="697.1387">M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="6928" x2="7292" y1="720" y2="720"/><polygon fill="none" points="6938,728.6484,6942,732.6484,6938,736.6484,6934,732.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="6947" y="736.9951">name: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6935" y="746.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="6947" y="753.292">ids: DBIDs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6935" y="763.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="6947" y="769.5889">noise: boolean</text><ellipse cx="6938" cy="782.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="325" x="6947" y="785.8857">BY_NAME_SORTER: Comparator&lt;Cluster&lt;?&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6928" x2="7292" y1="793.1875" y2="793.1875"/><ellipse cx="6938" cy="806.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="6947" y="810.1826">Cluster(String, DBIDs, boolean, M extends Model)</text><ellipse cx="6938" cy="823.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="6947" y="826.4795">Cluster(String, DBIDs, M extends Model)</text><ellipse cx="6938" cy="839.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="6947" y="842.7764">Cluster(DBIDs, boolean, M extends Model)</text><ellipse cx="6938" cy="855.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="6947" y="859.0732">Cluster(DBIDs, M extends Model)</text><ellipse cx="6938" cy="872.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="6947" y="875.3701">Cluster(String, DBIDs, boolean)</text><ellipse cx="6938" cy="888.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="6947" y="891.667">Cluster(String, DBIDs)</text><ellipse cx="6938" cy="904.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="6947" y="907.9639">Cluster(DBIDs, boolean)</text><ellipse cx="6938" cy="920.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="6947" y="924.2607">Cluster(DBIDs)</text><ellipse cx="6938" cy="937.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6947" y="940.5576">size(): int</text><ellipse cx="6938" cy="953.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="6947" y="956.8545">getNameAutomatic(): String</text><ellipse cx="6938" cy="969.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="6947" y="973.1514">getName(): String</text><ellipse cx="6938" cy="986.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="6947" y="989.4482">setName(String): void</text><ellipse cx="6938" cy="1002.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="6947" y="1005.7451">getIDs(): DBIDs</text><ellipse cx="6938" cy="1018.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6947" y="1022.042">setIDs(DBIDs): void</text><ellipse cx="6938" cy="1034.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="6947" y="1038.3389">writeToText(TextWriterStream, String): void</text><ellipse cx="6938" cy="1051.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="6947" y="1054.6357">isNoise(): boolean</text><ellipse cx="6938" cy="1067.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="6947" y="1070.9326">setNoise(boolean): void</text></g></a><!--MD5=[98566fc09ca9ca28d0e159eccd3a790a]
class elki.data.Clustering--><a href="Clustering.html" target="_top" title="Clustering.html" xlink:actuate="onRequest" xlink:href="Clustering.html" xlink:show="new" xlink:title="Clustering.html" xlink:type="simple"><g id="elem_elki.data.Clustering"><rect codeLine="28" fill="#F1F1F1" height="178.375" id="elki.data.Clustering" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="572" x="7088" y="327.5"/><ellipse cx="7282.75" cy="343.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7285.7188,349.1406 Q7285.1406,349.4375 7284.5,349.5781 Q7283.8594,349.7344 7283.1563,349.7344 Q7280.6563,349.7344 7279.3281,348.0938 Q7278.0156,346.4375 7278.0156,343.3125 Q7278.0156,340.1875 7279.3281,338.5313 Q7280.6563,336.875 7283.1563,336.875 Q7283.8594,336.875 7284.5,337.0313 Q7285.1563,337.1875 7285.7188,337.4844 L7285.7188,340.2031 Q7285.0938,339.625 7284.5,339.3594 Q7283.9063,339.0781 7283.2813,339.0781 Q7281.9375,339.0781 7281.25,340.1563 Q7280.5625,341.2188 7280.5625,343.3125 Q7280.5625,345.4063 7281.25,346.4844 Q7281.9375,347.5469 7283.2813,347.5469 Q7283.9063,347.5469 7284.5,347.2813 Q7285.0938,347 7285.7188,346.4219 L7285.7188,349.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="7303.25" y="348.3467">Clustering</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="102" x="7561" y="324.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="100" x="7562" y="336.6387">M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="7089" x2="7659" y1="359.5" y2="359.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7096" y="370.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="7108" y="376.4951">hierarchy: ModifiableHierarchy&lt;Cluster&lt;M extends Model&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="7089" x2="7659" y1="383.7969" y2="383.7969"/><ellipse cx="7099" cy="397.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="7108" y="400.792">Clustering(List&lt;Cluster&lt;M extends Model&gt;&gt;)</text><ellipse cx="7099" cy="413.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="7108" y="417.0889">Clustering()</text><ellipse cx="7099" cy="430.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="7108" y="433.3857">addToplevelCluster(Cluster&lt;M extends Model&gt;): void</text><ellipse cx="7099" cy="446.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="546" x="7108" y="449.6826">addChildCluster(Cluster&lt;M extends Model&gt;, Cluster&lt;M extends Model&gt;): void</text><ellipse cx="7099" cy="462.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="7108" y="465.9795">getClusterHierarchy(): Hierarchy&lt;Cluster&lt;M extends Model&gt;&gt;</text><ellipse cx="7099" cy="478.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="7108" y="482.2764">iterToplevelClusters(): It&lt;Cluster&lt;M extends Model&gt;&gt;</text><ellipse cx="7099" cy="495.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="463" x="7108" y="498.5732">getClusteringResults(Object): List&lt;Clustering&lt;? extends Model&gt;&gt;</text></g></a><!--MD5=[75601e61646a836ab6ad7832666b777d]
class elki.data.Subspace--><a href="Subspace.html" target="_top" title="Subspace.html" xlink:actuate="onRequest" xlink:href="Subspace.html" xlink:show="new" xlink:title="Subspace.html" xlink:type="simple"><g id="elem_elki.data.Subspace"><rect codeLine="39" fill="#F1F1F1" height="243.5625" id="elki.data.Subspace" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="394" x="6659" y="294.5"/><ellipse cx="6817.25" cy="310.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6820.2188,316.1406 Q6819.6406,316.4375 6819,316.5781 Q6818.3594,316.7344 6817.6563,316.7344 Q6815.1563,316.7344 6813.8281,315.0938 Q6812.5156,313.4375 6812.5156,310.3125 Q6812.5156,307.1875 6813.8281,305.5313 Q6815.1563,303.875 6817.6563,303.875 Q6818.3594,303.875 6819,304.0313 Q6819.6563,304.1875 6820.2188,304.4844 L6820.2188,307.2031 Q6819.5938,306.625 6819,306.3594 Q6818.4063,306.0781 6817.7813,306.0781 Q6816.4375,306.0781 6815.75,307.1563 Q6815.0625,308.2188 6815.0625,310.3125 Q6815.0625,312.4063 6815.75,313.4844 Q6816.4375,314.5469 6817.7813,314.5469 Q6818.4063,314.5469 6819,314.2813 Q6819.5938,314 6820.2188,313.4219 L6820.2188,316.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="6837.75" y="315.3467">Subspace</text><line style="stroke:#181818;stroke-width:0.5;" x1="6660" x2="7052" y1="326.5" y2="326.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6667" y="337.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="6679" y="343.4951">dimensions: long[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6667" y="353.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="6679" y="359.792">dimensionality: int</text><ellipse cx="6670" cy="372.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="368" x="6679" y="376.0889">DIMENSION_COMPARATOR: Comparator&lt;Subspace&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6660" x2="7052" y1="383.3906" y2="383.3906"/><ellipse cx="6670" cy="397.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="6679" y="400.3857">Subspace(int)</text><ellipse cx="6670" cy="413.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="6679" y="416.6826">Subspace(long[])</text><ellipse cx="6670" cy="429.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="6679" y="432.9795">getDimensions(): long[]</text><ellipse cx="6670" cy="445.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6679" y="449.2764">dimensionality(): int</text><ellipse cx="6670" cy="462.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="6679" y="465.5732">join(Subspace): Subspace</text><ellipse cx="6670" cy="478.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="6679" y="481.8701">dimensionsToString(): String</text><ellipse cx="6670" cy="494.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="6679" y="498.167">dimensonsToString(String): String</text><ellipse cx="6670" cy="511.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="6679" y="514.4639">isSubspace(Subspace): boolean</text><polygon fill="#FFFF44" points="6670,522.4141,6674,526.4141,6670,530.4141,6666,526.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="6679" y="530.7607">joinLastDimensions(Subspace): long[]</text></g></a><!--MD5=[9ee14a8aab1a92f55d517ae602a4c0fb]
class elki.data.BitVector--><a href="BitVector.html" target="_top" title="BitVector.html" xlink:actuate="onRequest" xlink:href="BitVector.html" xlink:show="new" xlink:title="BitVector.html" xlink:type="simple"><g id="elem_elki.data.BitVector"><rect codeLine="54" fill="#F1F1F1" height="520.6094" id="elki.data.BitVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="391" x="22.5" y="1508"/><ellipse cx="182.25" cy="1524" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M185.2188,1529.6406 Q184.6406,1529.9375 184,1530.0781 Q183.3594,1530.2344 182.6563,1530.2344 Q180.1563,1530.2344 178.8281,1528.5938 Q177.5156,1526.9375 177.5156,1523.8125 Q177.5156,1520.6875 178.8281,1519.0313 Q180.1563,1517.375 182.6563,1517.375 Q183.3594,1517.375 184,1517.5313 Q184.6563,1517.6875 185.2188,1517.9844 L185.2188,1520.7031 Q184.5938,1520.125 184,1519.8594 Q183.4063,1519.5781 182.7813,1519.5781 Q181.4375,1519.5781 180.75,1520.6563 Q180.0625,1521.7188 180.0625,1523.8125 Q180.0625,1525.9063 180.75,1526.9844 Q181.4375,1528.0469 182.7813,1528.0469 Q183.4063,1528.0469 184,1527.7813 Q184.5938,1527.5 185.2188,1526.9219 L185.2188,1529.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="202.75" y="1528.8467">BitVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="412.5" y1="1540" y2="1540"/><ellipse cx="33.5" cy="1553.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="365" x="42.5" y="1556.9951">SHORT_SERIALIZER: ByteBufferSerializer&lt;BitVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="1566.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="42.5" y="1573.292">bits: long[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="1583.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="42.5" y="1589.5889">dimensionality: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="412.5" y1="1596.8906" y2="1596.8906"/><ellipse cx="33.5" cy="1610.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="42.5" y="1613.8857">BitVector(long[], int)</text><ellipse cx="33.5" cy="1626.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="42.5" y="1630.1826">getDimensionality(): int</text><ellipse cx="33.5" cy="1643.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="42.5" y="1646.4795">setDimensionality(int): void</text><ellipse cx="33.5" cy="1659.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="42.5" y="1662.7764">booleanValue(int): boolean</text><ellipse cx="33.5" cy="1675.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="42.5" y="1679.0732">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="103.5" y="1679.0732">(int): Bit</text><ellipse cx="33.5" cy="1692.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="42.5" y="1695.3701">doubleValue(int): double</text><ellipse cx="33.5" cy="1708.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="42.5" y="1711.667">longValue(int): long</text><ellipse cx="33.5" cy="1724.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="42.5" y="1727.9639">iter(): int</text><ellipse cx="33.5" cy="1740.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="42.5" y="1744.2607">iterAdvance(int): int</text><ellipse cx="33.5" cy="1757.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="42.5" y="1760.5576">iterRetract(int): int</text><ellipse cx="33.5" cy="1773.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="42.5" y="1776.8545">iterValid(int): boolean</text><ellipse cx="33.5" cy="1789.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="42.5" y="1793.1514">iterDim(int): int</text><ellipse cx="33.5" cy="1806.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="42.5" y="1809.4482">iterDoubleValue(int): double</text><ellipse cx="33.5" cy="1822.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="42.5" y="1825.7451">iterLongValue(int): long</text><ellipse cx="33.5" cy="1838.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="42.5" y="1842.042">toArray(): double[]</text><ellipse cx="33.5" cy="1854.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="42.5" y="1858.3389">contains(long[]): boolean</text><ellipse cx="33.5" cy="1871.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="42.5" y="1874.6357">cloneBits(): long[]</text><ellipse cx="33.5" cy="1887.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="42.5" y="1890.9326">cardinality(): int</text><ellipse cx="33.5" cy="1903.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="42.5" y="1907.2295">jaccardSimilarity(BitVector): double</text><ellipse cx="33.5" cy="1920.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="42.5" y="1923.5264">hammingDistance(BitVector): int</text><ellipse cx="33.5" cy="1936.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="42.5" y="1939.8232">intersectionSize(BitVector): int</text><ellipse cx="33.5" cy="1952.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="42.5" y="1956.1201">unionSize(BitVector): int</text><ellipse cx="33.5" cy="1969.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="42.5" y="1972.417">intersect(BitVector): boolean</text><ellipse cx="33.5" cy="1985.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="42.5" y="1988.7139">andOnto(long[]): void</text><ellipse cx="33.5" cy="2001.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="42.5" y="2005.0107">orOnto(long[]): void</text><ellipse cx="33.5" cy="2017.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="42.5" y="2021.3076">xorOnto(long[]): void</text></g></a><!--MD5=[7c13185a121deb3c19ed2d56383db923]
class elki.data.BitVector.ShortSerializer--><a href="BitVector.ShortSerializer.html" target="_top" title="BitVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="BitVector.ShortSerializer.html" xlink:show="new" xlink:title="BitVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.BitVector.ShortSerializer"><rect codeLine="98" fill="#F1F1F1" height="96.8906" id="elki.data.BitVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="302" x="288" y="2090"/><ellipse cx="351.75" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M354.7188,2111.6406 Q354.1406,2111.9375 353.5,2112.0781 Q352.8594,2112.2344 352.1563,2112.2344 Q349.6563,2112.2344 348.3281,2110.5938 Q347.0156,2108.9375 347.0156,2105.8125 Q347.0156,2102.6875 348.3281,2101.0313 Q349.6563,2099.375 352.1563,2099.375 Q352.8594,2099.375 353.5,2099.5313 Q354.1563,2099.6875 354.7188,2099.9844 L354.7188,2102.7031 Q354.0938,2102.125 353.5,2101.8594 Q352.9063,2101.5781 352.2813,2101.5781 Q350.9375,2101.5781 350.25,2102.6563 Q349.5625,2103.7188 349.5625,2105.8125 Q349.5625,2107.9063 350.25,2108.9844 Q350.9375,2110.0469 352.2813,2110.0469 Q352.9063,2110.0469 353.5,2109.7813 Q354.0938,2109.5 354.7188,2108.9219 L354.7188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="372.25" y="2110.8467">BitVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="289" x2="589" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="289" x2="589" y1="2130" y2="2130"/><ellipse cx="299" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="308" y="2146.9951">fromByteBuffer(ByteBuffer): BitVector</text><ellipse cx="299" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="308" y="2163.292">toByteBuffer(ByteBuffer, BitVector): void</text><ellipse cx="299" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="308" y="2179.5889">getByteSize(BitVector): int</text></g></a><!--MD5=[2bc9b52ce3fc472af85783c7d6aa923a]
class elki.data.Bit--><a href="Bit.html" target="_top" title="Bit.html" xlink:actuate="onRequest" xlink:href="Bit.html" xlink:show="new" xlink:title="Bit.html" xlink:type="simple"><g id="elem_elki.data.Bit"><rect codeLine="104" fill="#F1F1F1" height="243.5625" id="elki.data.Bit" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="4121.5" y="294.5"/><ellipse cx="4197.75" cy="310.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4200.7188,316.1406 Q4200.1406,316.4375 4199.5,316.5781 Q4198.8594,316.7344 4198.1563,316.7344 Q4195.6563,316.7344 4194.3281,315.0938 Q4193.0156,313.4375 4193.0156,310.3125 Q4193.0156,307.1875 4194.3281,305.5313 Q4195.6563,303.875 4198.1563,303.875 Q4198.8594,303.875 4199.5,304.0313 Q4200.1563,304.1875 4200.7188,304.4844 L4200.7188,307.2031 Q4200.0938,306.625 4199.5,306.3594 Q4198.9063,306.0781 4198.2813,306.0781 Q4196.9375,306.0781 4196.25,307.1563 Q4195.5625,308.2188 4195.5625,310.3125 Q4195.5625,312.4063 4196.25,313.4844 Q4196.9375,314.5469 4198.2813,314.5469 Q4198.9063,314.5469 4199.5,314.2813 Q4200.0938,314 4200.7188,313.4219 L4200.7188,316.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="18" x="4218.25" y="315.3467">Bit</text><line style="stroke:#181818;stroke-width:0.5;" x1="4122.5" x2="4299.5" y1="326.5" y2="326.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4129.5" y="337.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="151" x="4141.5" y="343.4951">serialVersionUID: long</text><ellipse cx="4132.5" cy="356.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="4141.5" y="359.792">BIT_PATTERN: Pattern</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4129.5" y="369.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="4141.5" y="376.0889">bit: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="4122.5" x2="4299.5" y1="383.3906" y2="383.3906"/><ellipse cx="4132.5" cy="397.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="18" x="4141.5" y="400.3857">Bit</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="4159.5" y="400.3857">(boolean)</text><ellipse cx="4132.5" cy="413.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="18" x="4141.5" y="416.6826">Bit</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="4159.5" y="416.6826">(int)</text><ellipse cx="4132.5" cy="429.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="128" x="4141.5" y="432.9795">valueOf(String): Bit</text><ellipse cx="4132.5" cy="445.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="4141.5" y="449.2764">valueOf(boolean): Bit</text><ellipse cx="4132.5" cy="462.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="4141.5" y="465.5732">intValue(): int</text><ellipse cx="4132.5" cy="478.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="4141.5" y="481.8701">longValue(): long</text><ellipse cx="4132.5" cy="494.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="4141.5" y="498.167">floatValue(): float</text><ellipse cx="4132.5" cy="511.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="4141.5" y="514.4639">doubleValue(): double</text><ellipse cx="4132.5" cy="527.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="4141.5" y="530.7607">bitValue(): boolean</text></g></a><!--MD5=[3198457223b24919246ae6bf1fda415a]
class elki.data.ClassLabel--><a href="ClassLabel.html" target="_top" title="ClassLabel.html" xlink:actuate="onRequest" xlink:href="ClassLabel.html" xlink:show="new" xlink:title="ClassLabel.html" xlink:type="simple"><g id="elem_elki.data.ClassLabel"><rect codeLine="119" fill="#F1F1F1" height="48" id="elki.data.ClassLabel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="108" x="5731" y="392.5"/><ellipse cx="5746" cy="408.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5746.1094,403.8438 L5744.9531,408.9219 L5747.2813,408.9219 L5746.1094,403.8438 Z M5744.625,401.6094 L5747.6094,401.6094 L5750.9688,414 L5748.5156,414 L5747.75,410.9375 L5744.4688,410.9375 L5743.7188,414 L5741.2813,414 L5744.625,401.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="76" x="5760" y="413.3467">ClassLabel</text><line style="stroke:#181818;stroke-width:0.5;" x1="5732" x2="5838" y1="424.5" y2="424.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5732" x2="5838" y1="432.5" y2="432.5"/></g></a><!--MD5=[bf7d9d72da533ecd68ca08321215b530]
class elki.data.IntegerVector--><a href="IntegerVector.html" target="_top" title="IntegerVector.html" xlink:actuate="onRequest" xlink:href="IntegerVector.html" xlink:show="new" xlink:title="IntegerVector.html" xlink:type="simple"><g id="elem_elki.data.IntegerVector"><rect codeLine="127" fill="#F1F1F1" height="243.5625" id="elki.data.IntegerVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="439" x="3513.5" y="1171"/><ellipse cx="3681.75" cy="1187" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3684.7188,1192.6406 Q3684.1406,1192.9375 3683.5,1193.0781 Q3682.8594,1193.2344 3682.1563,1193.2344 Q3679.6563,1193.2344 3678.3281,1191.5938 Q3677.0156,1189.9375 3677.0156,1186.8125 Q3677.0156,1183.6875 3678.3281,1182.0313 Q3679.6563,1180.375 3682.1563,1180.375 Q3682.8594,1180.375 3683.5,1180.5313 Q3684.1563,1180.6875 3684.7188,1180.9844 L3684.7188,1183.7031 Q3684.0938,1183.125 3683.5,1182.8594 Q3682.9063,1182.5781 3682.2813,1182.5781 Q3680.9375,1182.5781 3680.25,1183.6563 Q3679.5625,1184.7188 3679.5625,1186.8125 Q3679.5625,1188.9063 3680.25,1189.9844 Q3680.9375,1191.0469 3682.2813,1191.0469 Q3682.9063,1191.0469 3683.5,1190.7813 Q3684.0938,1190.5 3684.7188,1189.9219 L3684.7188,1192.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3702.25" y="1191.8467">IntegerVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="3514.5" x2="3951.5" y1="1203" y2="1203"/><ellipse cx="3524.5" cy="1216.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="384" x="3533.5" y="1219.9951">BYTE_SERIALIZER: ByteBufferSerializer&lt;IntegerVector&gt;</text><ellipse cx="3524.5" cy="1232.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="396" x="3533.5" y="1236.292">SHORT_SERIALIZER: ByteBufferSerializer&lt;IntegerVector&gt;</text><ellipse cx="3524.5" cy="1249.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="413" x="3533.5" y="1252.5889">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;IntegerVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3521.5" y="1262.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3533.5" y="1268.8857">values: int[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="3514.5" x2="3951.5" y1="1276.1875" y2="1276.1875"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3521.5" y="1286.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="3533.5" y="1293.1826">IntegerVector(int[], boolean)</text><ellipse cx="3524.5" cy="1306.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="3533.5" y="1309.4795">IntegerVector(int[])</text><ellipse cx="3524.5" cy="1322.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="3533.5" y="1325.7764">getDimensionality(): int</text><ellipse cx="3524.5" cy="1338.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="3533.5" y="1342.0732">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="3594.5" y="1342.0732">(int): Integer</text><ellipse cx="3524.5" cy="1355.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="3533.5" y="1358.3701">doubleValue(int): double</text><ellipse cx="3524.5" cy="1371.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="3533.5" y="1374.667">longValue(int): long</text><ellipse cx="3524.5" cy="1387.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="3533.5" y="1390.9639">intValue(int): int</text><ellipse cx="3524.5" cy="1403.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="3533.5" y="1407.2607">toArray(): double[]</text></g></a><!--MD5=[17c11ea7700e05cf51324e9ddb698382]
class elki.data.IntegerVector.SmallSerializer--><a href="IntegerVector.SmallSerializer.html" target="_top" title="IntegerVector.SmallSerializer.html" xlink:actuate="onRequest" xlink:href="IntegerVector.SmallSerializer.html" xlink:show="new" xlink:title="IntegerVector.SmallSerializer.html" xlink:type="simple"><g id="elem_elki.data.IntegerVector.SmallSerializer"><rect codeLine="153" fill="#F1F1F1" height="96.8906" id="elki.data.IntegerVector.SmallSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="333" x="3014.5" y="1720"/><ellipse cx="3078.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3081.7188,1741.6406 Q3081.1406,1741.9375 3080.5,1742.0781 Q3079.8594,1742.2344 3079.1563,1742.2344 Q3076.6563,1742.2344 3075.3281,1740.5938 Q3074.0156,1738.9375 3074.0156,1735.8125 Q3074.0156,1732.6875 3075.3281,1731.0313 Q3076.6563,1729.375 3079.1563,1729.375 Q3079.8594,1729.375 3080.5,1729.5313 Q3081.1563,1729.6875 3081.7188,1729.9844 L3081.7188,1732.7031 Q3081.0938,1732.125 3080.5,1731.8594 Q3079.9063,1731.5781 3079.2813,1731.5781 Q3077.9375,1731.5781 3077.25,1732.6563 Q3076.5625,1733.7188 3076.5625,1735.8125 Q3076.5625,1737.9063 3077.25,1738.9844 Q3077.9375,1740.0469 3079.2813,1740.0469 Q3079.9063,1740.0469 3080.5,1739.7813 Q3081.0938,1739.5 3081.7188,1738.9219 L3081.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="3099.25" y="1740.8467">IntegerVector.SmallSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3015.5" x2="3346.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="3015.5" x2="3346.5" y1="1760" y2="1760"/><ellipse cx="3025.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="3034.5" y="1776.9951">fromByteBuffer(ByteBuffer): IntegerVector</text><ellipse cx="3025.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="3034.5" y="1793.292">toByteBuffer(ByteBuffer, IntegerVector): void</text><ellipse cx="3025.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="3034.5" y="1809.5889">getByteSize(IntegerVector): int</text></g></a><!--MD5=[347e2ff45e1fe1b2ba2b30a2c2a16e48]
class elki.data.IntegerVector.ShortSerializer--><a href="IntegerVector.ShortSerializer.html" target="_top" title="IntegerVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="IntegerVector.ShortSerializer.html" xlink:show="new" xlink:title="IntegerVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.IntegerVector.ShortSerializer"><rect codeLine="159" fill="#F1F1F1" height="96.8906" id="elki.data.IntegerVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="333" x="3382.5" y="1720"/><ellipse cx="3446.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3449.2188,1741.6406 Q3448.6406,1741.9375 3448,1742.0781 Q3447.3594,1742.2344 3446.6563,1742.2344 Q3444.1563,1742.2344 3442.8281,1740.5938 Q3441.5156,1738.9375 3441.5156,1735.8125 Q3441.5156,1732.6875 3442.8281,1731.0313 Q3444.1563,1729.375 3446.6563,1729.375 Q3447.3594,1729.375 3448,1729.5313 Q3448.6563,1729.6875 3449.2188,1729.9844 L3449.2188,1732.7031 Q3448.5938,1732.125 3448,1731.8594 Q3447.4063,1731.5781 3446.7813,1731.5781 Q3445.4375,1731.5781 3444.75,1732.6563 Q3444.0625,1733.7188 3444.0625,1735.8125 Q3444.0625,1737.9063 3444.75,1738.9844 Q3445.4375,1740.0469 3446.7813,1740.0469 Q3447.4063,1740.0469 3448,1739.7813 Q3448.5938,1739.5 3449.2188,1738.9219 L3449.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="3466.75" y="1740.8467">IntegerVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3383.5" x2="3714.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="3383.5" x2="3714.5" y1="1760" y2="1760"/><ellipse cx="3393.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="3402.5" y="1776.9951">fromByteBuffer(ByteBuffer): IntegerVector</text><ellipse cx="3393.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="3402.5" y="1793.292">toByteBuffer(ByteBuffer, IntegerVector): void</text><ellipse cx="3393.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="3402.5" y="1809.5889">getByteSize(IntegerVector): int</text></g></a><!--MD5=[a5ba574c19a2be5f0a78b3ce68ed447e]
class elki.data.IntegerVector.VariableSerializer--><a href="IntegerVector.VariableSerializer.html" target="_top" title="IntegerVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="IntegerVector.VariableSerializer.html" xlink:show="new" xlink:title="IntegerVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.IntegerVector.VariableSerializer"><rect codeLine="165" fill="#F1F1F1" height="96.8906" id="elki.data.IntegerVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="333" x="3750.5" y="1720"/><ellipse cx="3805.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3808.7188,1741.6406 Q3808.1406,1741.9375 3807.5,1742.0781 Q3806.8594,1742.2344 3806.1563,1742.2344 Q3803.6563,1742.2344 3802.3281,1740.5938 Q3801.0156,1738.9375 3801.0156,1735.8125 Q3801.0156,1732.6875 3802.3281,1731.0313 Q3803.6563,1729.375 3806.1563,1729.375 Q3806.8594,1729.375 3807.5,1729.5313 Q3808.1563,1729.6875 3808.7188,1729.9844 L3808.7188,1732.7031 Q3808.0938,1732.125 3807.5,1731.8594 Q3806.9063,1731.5781 3806.2813,1731.5781 Q3804.9375,1731.5781 3804.25,1732.6563 Q3803.5625,1733.7188 3803.5625,1735.8125 Q3803.5625,1737.9063 3804.25,1738.9844 Q3804.9375,1740.0469 3806.2813,1740.0469 Q3806.9063,1740.0469 3807.5,1739.7813 Q3808.0938,1739.5 3808.7188,1738.9219 L3808.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="3826.25" y="1740.8467">IntegerVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3751.5" x2="4082.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="3751.5" x2="4082.5" y1="1760" y2="1760"/><ellipse cx="3761.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="3770.5" y="1776.9951">fromByteBuffer(ByteBuffer): IntegerVector</text><ellipse cx="3761.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="3770.5" y="1793.292">toByteBuffer(ByteBuffer, IntegerVector): void</text><ellipse cx="3761.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="3770.5" y="1809.5889">getByteSize(IntegerVector): int</text></g></a><!--MD5=[a4f15f4752bd8d1e479d75821d91e903]
class elki.data.ExternalID--><a href="ExternalID.html" target="_top" title="ExternalID.html" xlink:actuate="onRequest" xlink:href="ExternalID.html" xlink:show="new" xlink:title="ExternalID.html" xlink:type="simple"><g id="elem_elki.data.ExternalID"><rect codeLine="171" fill="#F1F1F1" height="80.5938" id="elki.data.ExternalID" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="5550.5" y="376"/><ellipse cx="5585.3" cy="392" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5588.2688,397.6406 Q5587.6906,397.9375 5587.05,398.0781 Q5586.4094,398.2344 5585.7063,398.2344 Q5583.2063,398.2344 5581.8781,396.5938 Q5580.5656,394.9375 5580.5656,391.8125 Q5580.5656,388.6875 5581.8781,387.0313 Q5583.2063,385.375 5585.7063,385.375 Q5586.4094,385.375 5587.05,385.5313 Q5587.7063,385.6875 5588.2688,385.9844 L5588.2688,388.7031 Q5587.6438,388.125 5587.05,387.8594 Q5586.4563,387.5781 5585.8313,387.5781 Q5584.4875,387.5781 5583.8,388.6563 Q5583.1125,389.7188 5583.1125,391.8125 Q5583.1125,393.9063 5583.8,394.9844 Q5584.4875,396.0469 5585.8313,396.0469 Q5586.4563,396.0469 5587.05,395.7813 Q5587.6438,395.5 5588.2688,394.9219 L5588.2688,397.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="5603.7" y="396.8467">ExternalID</text><line style="stroke:#181818;stroke-width:0.5;" x1="5551.5" x2="5694.5" y1="408" y2="408"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5558.5" y="418.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="5570.5" y="424.9951">name: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="5551.5" x2="5694.5" y1="432.2969" y2="432.2969"/><ellipse cx="5561.5" cy="445.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="5570.5" y="449.292">ExternalID(String)</text></g></a><!--MD5=[f4e314fea9642706e1f1d40d1d36f6cf]
class elki.data.HierarchicalClassLabel--><a href="HierarchicalClassLabel.html" target="_top" title="HierarchicalClassLabel.html" xlink:actuate="onRequest" xlink:href="HierarchicalClassLabel.html" xlink:show="new" xlink:title="HierarchicalClassLabel.html" xlink:type="simple"><g id="elem_elki.data.HierarchicalClassLabel"><rect codeLine="176" fill="#F1F1F1" height="227.2656" id="elki.data.HierarchicalClassLabel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="6007" y="769.5"/><ellipse cx="6093.75" cy="785.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6096.7188,791.1406 Q6096.1406,791.4375 6095.5,791.5781 Q6094.8594,791.7344 6094.1563,791.7344 Q6091.6563,791.7344 6090.3281,790.0938 Q6089.0156,788.4375 6089.0156,785.3125 Q6089.0156,782.1875 6090.3281,780.5313 Q6091.6563,778.875 6094.1563,778.875 Q6094.8594,778.875 6095.5,779.0313 Q6096.1563,779.1875 6096.7188,779.4844 L6096.7188,782.2031 Q6096.0938,781.625 6095.5,781.3594 Q6094.9063,781.0781 6094.2813,781.0781 Q6092.9375,781.0781 6092.25,782.1563 Q6091.5625,783.2188 6091.5625,785.3125 Q6091.5625,787.4063 6092.25,788.4844 Q6092.9375,789.5469 6094.2813,789.5469 Q6094.9063,789.5469 6095.5,789.2813 Q6096.0938,789 6096.7188,788.4219 L6096.7188,791.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="6114.25" y="790.3467">HierarchicalClassLabel</text><line style="stroke:#181818;stroke-width:0.5;" x1="6008" x2="6340" y1="801.5" y2="801.5"/><ellipse cx="6018" cy="815.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="6027" y="818.4951">DEFAULT_SEPARATOR: Pattern</text><ellipse cx="6018" cy="831.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="263" x="6027" y="834.792">DEFAULT_SEPARATOR_STRING: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6015" y="844.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="6027" y="851.0889">separatorPattern: Pattern</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6015" y="861.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="6027" y="867.3857">separatorString: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6015" y="877.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="6027" y="883.6826">levelwiseNames: Comparable&lt;?&gt;[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="6008" x2="6340" y1="890.9844" y2="890.9844"/><ellipse cx="6018" cy="904.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="6027" y="907.9795">HierarchicalClassLabel(String, Pattern, String)</text><ellipse cx="6018" cy="920.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="6027" y="924.2764">HierarchicalClassLabel(String)</text><ellipse cx="6018" cy="937.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="6027" y="940.5732">compareTo(ClassLabel): int</text><ellipse cx="6018" cy="953.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="6027" y="956.8701">depth(): int</text><ellipse cx="6018" cy="969.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="6027" y="973.167">getNameAt(int): String</text><ellipse cx="6018" cy="986.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="6027" y="989.4639">toString(int): String</text></g></a><!--MD5=[5839894bf4a817c2eff32d2a40813251]
class elki.data.SparseDoubleVector--><a href="SparseDoubleVector.html" target="_top" title="SparseDoubleVector.html" xlink:actuate="onRequest" xlink:href="SparseDoubleVector.html" xlink:show="new" xlink:title="SparseDoubleVector.html" xlink:type="simple"><g id="elem_elki.data.SparseDoubleVector"><rect codeLine="194" fill="#F1F1F1" height="357.6406" id="elki.data.SparseDoubleVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="488" x="449" y="1589.5"/><ellipse cx="617.25" cy="1605.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M620.2188,1611.1406 Q619.6406,1611.4375 619,1611.5781 Q618.3594,1611.7344 617.6563,1611.7344 Q615.1563,1611.7344 613.8281,1610.0938 Q612.5156,1608.4375 612.5156,1605.3125 Q612.5156,1602.1875 613.8281,1600.5313 Q615.1563,1598.875 617.6563,1598.875 Q618.3594,1598.875 619,1599.0313 Q619.6563,1599.1875 620.2188,1599.4844 L620.2188,1602.2031 Q619.5938,1601.625 619,1601.3594 Q618.4063,1601.0781 617.7813,1601.0781 Q616.4375,1601.0781 615.75,1602.1563 Q615.0625,1603.2188 615.0625,1605.3125 Q615.0625,1607.4063 615.75,1608.4844 Q616.4375,1609.5469 617.7813,1609.5469 Q618.4063,1609.5469 619,1609.2813 Q619.5938,1609 620.2188,1608.4219 L620.2188,1611.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="637.75" y="1610.3467">SparseDoubleVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="450" x2="936" y1="1621.5" y2="1621.5"/><ellipse cx="460" cy="1635.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="462" x="469" y="1638.4951">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;SparseDoubleVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="457" y="1648.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="124" x="469" y="1654.792">DOUBLE0: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="457" y="1664.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="469" y="1671.0889">indexes: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="457" y="1681.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="469" y="1687.3857">values: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="457" y="1697.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="469" y="1703.6826">dimensionality: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="450" x2="936" y1="1710.9844" y2="1710.9844"/><ellipse cx="460" cy="1724.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="469" y="1727.9795">SparseDoubleVector(int[], double[], int)</text><ellipse cx="460" cy="1740.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="469" y="1744.2764">SparseDoubleVector(Int2DoubleOpenHashMap, int)</text><ellipse cx="460" cy="1757.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="469" y="1760.5732">SparseDoubleVector(double[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="457" y="1770.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="469" y="1776.8701">getMaxDim(): int</text><ellipse cx="460" cy="1789.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="469" y="1793.167">getDimensionality(): int</text><ellipse cx="460" cy="1806.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="469" y="1809.4639">setDimensionality(int): void</text><ellipse cx="460" cy="1822.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="469" y="1825.7607">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="530" y="1825.7607">(int): Double</text><ellipse cx="460" cy="1838.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="86" x="469" y="1842.0576">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="555" y="1842.0576">(int): double</text><ellipse cx="460" cy="1855.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="469" y="1858.3545">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="537" y="1858.3545">(int): long</text><ellipse cx="460" cy="1871.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="469" y="1874.6514">toArray(): double[]</text><ellipse cx="460" cy="1887.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="469" y="1890.9482">iterDim(int): int</text><ellipse cx="460" cy="1903.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="469" y="1907.2451">iterValid(int): boolean</text><ellipse cx="460" cy="1920.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="469" y="1923.542">iterDoubleValue(int): double</text><ellipse cx="460" cy="1936.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="469" y="1939.8389">iterLongValue(int): long</text></g></a><!--MD5=[dc35a9fec318131820214b5b24821a16]
class elki.data.SparseDoubleVector.VariableSerializer--><a href="SparseDoubleVector.VariableSerializer.html" target="_top" title="SparseDoubleVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="SparseDoubleVector.VariableSerializer.html" xlink:show="new" xlink:title="SparseDoubleVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.SparseDoubleVector.VariableSerializer"><rect codeLine="228" fill="#F1F1F1" height="96.8906" id="elki.data.SparseDoubleVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="382" x="798" y="2090"/><ellipse cx="853.25" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M856.2188,2111.6406 Q855.6406,2111.9375 855,2112.0781 Q854.3594,2112.2344 853.6563,2112.2344 Q851.1563,2112.2344 849.8281,2110.5938 Q848.5156,2108.9375 848.5156,2105.8125 Q848.5156,2102.6875 849.8281,2101.0313 Q851.1563,2099.375 853.6563,2099.375 Q854.3594,2099.375 855,2099.5313 Q855.6563,2099.6875 856.2188,2099.9844 L856.2188,2102.7031 Q855.5938,2102.125 855,2101.8594 Q854.4063,2101.5781 853.7813,2101.5781 Q852.4375,2101.5781 851.75,2102.6563 Q851.0625,2103.7188 851.0625,2105.8125 Q851.0625,2107.9063 851.75,2108.9844 Q852.4375,2110.0469 853.7813,2110.0469 Q854.4063,2110.0469 855,2109.7813 Q855.5938,2109.5 856.2188,2108.9219 L856.2188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="873.75" y="2110.8467">SparseDoubleVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="799" x2="1179" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="799" x2="1179" y1="2130" y2="2130"/><ellipse cx="809" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="818" y="2146.9951">fromByteBuffer(ByteBuffer): SparseDoubleVector</text><ellipse cx="809" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="818" y="2163.292">toByteBuffer(ByteBuffer, SparseDoubleVector): void</text><ellipse cx="809" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="818" y="2179.5889">getByteSize(SparseDoubleVector): int</text></g></a><!--MD5=[175437b63de5dfba27817eedf0a159bb]
class elki.data.ShortVector--><a href="ShortVector.html" target="_top" title="ShortVector.html" xlink:actuate="onRequest" xlink:href="ShortVector.html" xlink:show="new" xlink:title="ShortVector.html" xlink:type="simple"><g id="elem_elki.data.ShortVector"><rect codeLine="234" fill="#F1F1F1" height="243.5625" id="elki.data.ShortVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="427" x="4215.5" y="1171"/><ellipse cx="4383.75" cy="1187" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4386.7188,1192.6406 Q4386.1406,1192.9375 4385.5,1193.0781 Q4384.8594,1193.2344 4384.1563,1193.2344 Q4381.6563,1193.2344 4380.3281,1191.5938 Q4379.0156,1189.9375 4379.0156,1186.8125 Q4379.0156,1183.6875 4380.3281,1182.0313 Q4381.6563,1180.375 4384.1563,1180.375 Q4384.8594,1180.375 4385.5,1180.5313 Q4386.1563,1180.6875 4386.7188,1180.9844 L4386.7188,1183.7031 Q4386.0938,1183.125 4385.5,1182.8594 Q4384.9063,1182.5781 4384.2813,1182.5781 Q4382.9375,1182.5781 4382.25,1183.6563 Q4381.5625,1184.7188 4381.5625,1186.8125 Q4381.5625,1188.9063 4382.25,1189.9844 Q4382.9375,1191.0469 4384.2813,1191.0469 Q4384.9063,1191.0469 4385.5,1190.7813 Q4386.0938,1190.5 4386.7188,1189.9219 L4386.7188,1192.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="4404.25" y="1191.8467">ShortVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="4216.5" x2="4641.5" y1="1203" y2="1203"/><ellipse cx="4226.5" cy="1216.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="384" x="4235.5" y="1219.9951">SHORT_SERIALIZER: ByteBufferSerializer&lt;ShortVector&gt;</text><ellipse cx="4226.5" cy="1232.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="401" x="4235.5" y="1236.292">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;ShortVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4223.5" y="1246.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="4235.5" y="1252.5889">values: short[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="4216.5" x2="4641.5" y1="1259.8906" y2="1259.8906"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4223.5" y="1270.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4235.5" y="1276.8857">ShortVector(short[], boolean)</text><ellipse cx="4226.5" cy="1289.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="4235.5" y="1293.1826">ShortVector(short[])</text><ellipse cx="4226.5" cy="1306.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="4235.5" y="1309.4795">getDimensionality(): int</text><ellipse cx="4226.5" cy="1322.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="4235.5" y="1325.7764">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="4296.5" y="1325.7764">(int): Short</text><ellipse cx="4226.5" cy="1338.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="4235.5" y="1342.0732">doubleValue(int): double</text><ellipse cx="4226.5" cy="1355.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4235.5" y="1358.3701">longValue(int): long</text><ellipse cx="4226.5" cy="1371.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="4235.5" y="1374.667">shortValue(int): short</text><ellipse cx="4226.5" cy="1387.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4235.5" y="1390.9639">getValues(): short[]</text><ellipse cx="4226.5" cy="1403.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4235.5" y="1407.2607">toArray(): double[]</text></g></a><!--MD5=[1558b7d7cd76a58bd0c5e9632b6f4185]
class elki.data.ShortVector.ShortSerializer--><a href="ShortVector.ShortSerializer.html" target="_top" title="ShortVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="ShortVector.ShortSerializer.html" xlink:show="new" xlink:title="ShortVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.ShortVector.ShortSerializer"><rect codeLine="260" fill="#F1F1F1" height="96.8906" id="elki.data.ShortVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="321" x="4118.5" y="1720"/><ellipse cx="4182.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4185.2188,1741.6406 Q4184.6406,1741.9375 4184,1742.0781 Q4183.3594,1742.2344 4182.6563,1742.2344 Q4180.1563,1742.2344 4178.8281,1740.5938 Q4177.5156,1738.9375 4177.5156,1735.8125 Q4177.5156,1732.6875 4178.8281,1731.0313 Q4180.1563,1729.375 4182.6563,1729.375 Q4183.3594,1729.375 4184,1729.5313 Q4184.6563,1729.6875 4185.2188,1729.9844 L4185.2188,1732.7031 Q4184.5938,1732.125 4184,1731.8594 Q4183.4063,1731.5781 4182.7813,1731.5781 Q4181.4375,1731.5781 4180.75,1732.6563 Q4180.0625,1733.7188 4180.0625,1735.8125 Q4180.0625,1737.9063 4180.75,1738.9844 Q4181.4375,1740.0469 4182.7813,1740.0469 Q4183.4063,1740.0469 4184,1739.7813 Q4184.5938,1739.5 4185.2188,1738.9219 L4185.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="4202.75" y="1740.8467">ShortVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="4119.5" x2="4438.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="4119.5" x2="4438.5" y1="1760" y2="1760"/><ellipse cx="4129.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="4138.5" y="1776.9951">fromByteBuffer(ByteBuffer): ShortVector</text><ellipse cx="4129.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="4138.5" y="1793.292">toByteBuffer(ByteBuffer, ShortVector): void</text><ellipse cx="4129.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="4138.5" y="1809.5889">getByteSize(ShortVector): int</text></g></a><!--MD5=[6563616fd4b1210cde147567df24c6c1]
class elki.data.ShortVector.VariableSerializer--><a href="ShortVector.VariableSerializer.html" target="_top" title="ShortVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="ShortVector.VariableSerializer.html" xlink:show="new" xlink:title="ShortVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.ShortVector.VariableSerializer"><rect codeLine="266" fill="#F1F1F1" height="96.8906" id="elki.data.ShortVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="321" x="4474.5" y="1720"/><ellipse cx="4529.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4532.7188,1741.6406 Q4532.1406,1741.9375 4531.5,1742.0781 Q4530.8594,1742.2344 4530.1563,1742.2344 Q4527.6563,1742.2344 4526.3281,1740.5938 Q4525.0156,1738.9375 4525.0156,1735.8125 Q4525.0156,1732.6875 4526.3281,1731.0313 Q4527.6563,1729.375 4530.1563,1729.375 Q4530.8594,1729.375 4531.5,1729.5313 Q4532.1563,1729.6875 4532.7188,1729.9844 L4532.7188,1732.7031 Q4532.0938,1732.125 4531.5,1731.8594 Q4530.9063,1731.5781 4530.2813,1731.5781 Q4528.9375,1731.5781 4528.25,1732.6563 Q4527.5625,1733.7188 4527.5625,1735.8125 Q4527.5625,1737.9063 4528.25,1738.9844 Q4528.9375,1740.0469 4530.2813,1740.0469 Q4530.9063,1740.0469 4531.5,1739.7813 Q4532.0938,1739.5 4532.7188,1738.9219 L4532.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4550.25" y="1740.8467">ShortVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="4475.5" x2="4794.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="4475.5" x2="4794.5" y1="1760" y2="1760"/><ellipse cx="4485.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="4494.5" y="1776.9951">fromByteBuffer(ByteBuffer): ShortVector</text><ellipse cx="4485.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="4494.5" y="1793.292">toByteBuffer(ByteBuffer, ShortVector): void</text><ellipse cx="4485.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="4494.5" y="1809.5889">getByteSize(ShortVector): int</text></g></a><!--MD5=[f810ef17f5bd702cf2f5d6b159cc68b3]
class elki.data.SparseShortVector--><a href="SparseShortVector.html" target="_top" title="SparseShortVector.html" xlink:actuate="onRequest" xlink:href="SparseShortVector.html" xlink:show="new" xlink:title="SparseShortVector.html" xlink:type="simple"><g id="elem_elki.data.SparseShortVector"><rect codeLine="272" fill="#F1F1F1" height="390.2344" id="elki.data.SparseShortVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="475" x="972.5" y="1573.5"/><ellipse cx="1140.75" cy="1589.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1143.7188,1595.1406 Q1143.1406,1595.4375 1142.5,1595.5781 Q1141.8594,1595.7344 1141.1563,1595.7344 Q1138.6563,1595.7344 1137.3281,1594.0938 Q1136.0156,1592.4375 1136.0156,1589.3125 Q1136.0156,1586.1875 1137.3281,1584.5313 Q1138.6563,1582.875 1141.1563,1582.875 Q1141.8594,1582.875 1142.5,1583.0313 Q1143.1563,1583.1875 1143.7188,1583.4844 L1143.7188,1586.2031 Q1143.0938,1585.625 1142.5,1585.3594 Q1141.9063,1585.0781 1141.2813,1585.0781 Q1139.9375,1585.0781 1139.25,1586.1563 Q1138.5625,1587.2188 1138.5625,1589.3125 Q1138.5625,1591.4063 1139.25,1592.4844 Q1139.9375,1593.5469 1141.2813,1593.5469 Q1141.9063,1593.5469 1142.5,1593.2813 Q1143.0938,1593 1143.7188,1592.4219 L1143.7188,1595.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="1161.25" y="1594.3467">SparseShortVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="973.5" x2="1446.5" y1="1605.5" y2="1605.5"/><ellipse cx="983.5" cy="1619.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="449" x="992.5" y="1622.4951">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;SparseShortVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="1632.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="992.5" y="1638.792">SHORT0: short</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="1648.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="992.5" y="1655.0889">indexes: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="1665.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="992.5" y="1671.3857">values: short[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="1681.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="992.5" y="1687.6826">dimensionality: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="973.5" x2="1446.5" y1="1694.9844" y2="1694.9844"/><ellipse cx="983.5" cy="1708.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="992.5" y="1711.9795">SparseShortVector(int[], short[], int)</text><ellipse cx="983.5" cy="1724.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="992.5" y="1728.2764">SparseShortVector(Int2DoubleOpenHashMap, int)</text><ellipse cx="983.5" cy="1741.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="992.5" y="1744.5732">SparseShortVector(short[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="1754.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="992.5" y="1760.8701">getMaxDim(): int</text><ellipse cx="983.5" cy="1773.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="992.5" y="1777.167">getDimensionality(): int</text><ellipse cx="983.5" cy="1790.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="992.5" y="1793.4639">setDimensionality(int): void</text><ellipse cx="983.5" cy="1806.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="992.5" y="1809.7607">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="1053.5" y="1809.7607">(int): Short</text><ellipse cx="983.5" cy="1822.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="86" x="992.5" y="1826.0576">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1078.5" y="1826.0576">(int): double</text><ellipse cx="983.5" cy="1839.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="992.5" y="1842.3545">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1060.5" y="1842.3545">(int): long</text><ellipse cx="983.5" cy="1855.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="74" x="992.5" y="1858.6514">shortValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1066.5" y="1858.6514">(int): short</text><ellipse cx="983.5" cy="1871.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="992.5" y="1874.9482">toArray(): double[]</text><ellipse cx="983.5" cy="1887.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="992.5" y="1891.2451">iterDim(int): int</text><ellipse cx="983.5" cy="1904.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="992.5" y="1907.542">iterValid(int): boolean</text><ellipse cx="983.5" cy="1920.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="992.5" y="1923.8389">iterDoubleValue(int): double</text><ellipse cx="983.5" cy="1936.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="992.5" y="1940.1357">iterShortValue(int): short</text><ellipse cx="983.5" cy="1953.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="992.5" y="1956.4326">iterLongValue(int): long</text></g></a><!--MD5=[1bdbee0b749a7645ae0971e95e8a0ea6]
class elki.data.SparseShortVector.VariableSerializer--><a href="SparseShortVector.VariableSerializer.html" target="_top" title="SparseShortVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="SparseShortVector.VariableSerializer.html" xlink:show="new" xlink:title="SparseShortVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.SparseShortVector.VariableSerializer"><rect codeLine="308" fill="#F1F1F1" height="96.8906" id="elki.data.SparseShortVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="369" x="1459.5" y="2090"/><ellipse cx="1514.75" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1517.7188,2111.6406 Q1517.1406,2111.9375 1516.5,2112.0781 Q1515.8594,2112.2344 1515.1563,2112.2344 Q1512.6563,2112.2344 1511.3281,2110.5938 Q1510.0156,2108.9375 1510.0156,2105.8125 Q1510.0156,2102.6875 1511.3281,2101.0313 Q1512.6563,2099.375 1515.1563,2099.375 Q1515.8594,2099.375 1516.5,2099.5313 Q1517.1563,2099.6875 1517.7188,2099.9844 L1517.7188,2102.7031 Q1517.0938,2102.125 1516.5,2101.8594 Q1515.9063,2101.5781 1515.2813,2101.5781 Q1513.9375,2101.5781 1513.25,2102.6563 Q1512.5625,2103.7188 1512.5625,2105.8125 Q1512.5625,2107.9063 1513.25,2108.9844 Q1513.9375,2110.0469 1515.2813,2110.0469 Q1515.9063,2110.0469 1516.5,2109.7813 Q1517.0938,2109.5 1517.7188,2108.9219 L1517.7188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="1535.25" y="2110.8467">SparseShortVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="1460.5" x2="1827.5" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="1460.5" x2="1827.5" y1="2130" y2="2130"/><ellipse cx="1470.5" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="1479.5" y="2146.9951">fromByteBuffer(ByteBuffer): SparseShortVector</text><ellipse cx="1470.5" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="1479.5" y="2163.292">toByteBuffer(ByteBuffer, SparseShortVector): void</text><ellipse cx="1470.5" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="1479.5" y="2179.5889">getByteSize(SparseShortVector): int</text></g></a><!--MD5=[019cfaef331a6807583122d3717c93d5]
class elki.data.SparseIntegerVector--><a href="SparseIntegerVector.html" target="_top" title="SparseIntegerVector.html" xlink:actuate="onRequest" xlink:href="SparseIntegerVector.html" xlink:show="new" xlink:title="SparseIntegerVector.html" xlink:type="simple"><g id="elem_elki.data.SparseIntegerVector"><rect codeLine="314" fill="#F1F1F1" height="390.2344" id="elki.data.SparseIntegerVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="487" x="1482.5" y="1573.5"/><ellipse cx="1650.75" cy="1589.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1653.7188,1595.1406 Q1653.1406,1595.4375 1652.5,1595.5781 Q1651.8594,1595.7344 1651.1563,1595.7344 Q1648.6563,1595.7344 1647.3281,1594.0938 Q1646.0156,1592.4375 1646.0156,1589.3125 Q1646.0156,1586.1875 1647.3281,1584.5313 Q1648.6563,1582.875 1651.1563,1582.875 Q1651.8594,1582.875 1652.5,1583.0313 Q1653.1563,1583.1875 1653.7188,1583.4844 L1653.7188,1586.2031 Q1653.0938,1585.625 1652.5,1585.3594 Q1651.9063,1585.0781 1651.2813,1585.0781 Q1649.9375,1585.0781 1649.25,1586.1563 Q1648.5625,1587.2188 1648.5625,1589.3125 Q1648.5625,1591.4063 1649.25,1592.4844 Q1649.9375,1593.5469 1651.2813,1593.5469 Q1651.9063,1593.5469 1652.5,1593.2813 Q1653.0938,1593 1653.7188,1592.4219 L1653.7188,1595.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1671.25" y="1594.3467">SparseIntegerVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="1483.5" x2="1968.5" y1="1605.5" y2="1605.5"/><ellipse cx="1493.5" cy="1619.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="461" x="1502.5" y="1622.4951">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;SparseIntegerVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1490.5" y="1632.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="57" x="1502.5" y="1638.792">INT0: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1490.5" y="1648.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1502.5" y="1655.0889">indexes: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1490.5" y="1665.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1502.5" y="1671.3857">values: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1490.5" y="1681.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1502.5" y="1687.6826">dimensionality: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1483.5" x2="1968.5" y1="1694.9844" y2="1694.9844"/><ellipse cx="1493.5" cy="1708.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="1502.5" y="1711.9795">SparseIntegerVector(int[], int[], int)</text><ellipse cx="1493.5" cy="1724.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="1502.5" y="1728.2764">SparseIntegerVector(Int2DoubleOpenHashMap, int)</text><ellipse cx="1493.5" cy="1741.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="1502.5" y="1744.5732">SparseIntegerVector(int[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1490.5" y="1754.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1502.5" y="1760.8701">getMaxDim(): int</text><ellipse cx="1493.5" cy="1773.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="1502.5" y="1777.167">getDimensionality(): int</text><ellipse cx="1493.5" cy="1790.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="1502.5" y="1793.4639">setDimensionality(int): void</text><ellipse cx="1493.5" cy="1806.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="1502.5" y="1809.7607">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="1563.5" y="1809.7607">(int): Integer</text><ellipse cx="1493.5" cy="1822.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="86" x="1502.5" y="1826.0576">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1588.5" y="1826.0576">(int): double</text><ellipse cx="1493.5" cy="1839.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="1502.5" y="1842.3545">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1570.5" y="1842.3545">(int): long</text><ellipse cx="1493.5" cy="1855.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="55" x="1502.5" y="1858.6514">intValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="1557.5" y="1858.6514">(int): int</text><ellipse cx="1493.5" cy="1871.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1502.5" y="1874.9482">toArray(): double[]</text><ellipse cx="1493.5" cy="1887.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1502.5" y="1891.2451">iterDim(int): int</text><ellipse cx="1493.5" cy="1904.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1502.5" y="1907.542">iterValid(int): boolean</text><ellipse cx="1493.5" cy="1920.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1502.5" y="1923.8389">iterDoubleValue(int): double</text><ellipse cx="1493.5" cy="1936.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="1502.5" y="1940.1357">iterIntValue(int): int</text><ellipse cx="1493.5" cy="1953.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1502.5" y="1956.4326">iterLongValue(int): long</text></g></a><!--MD5=[b8f7077225b726207cf6cb3b251674b4]
class elki.data.SparseIntegerVector.VariableSerializer--><a href="SparseIntegerVector.VariableSerializer.html" target="_top" title="SparseIntegerVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="SparseIntegerVector.VariableSerializer.html" xlink:show="new" xlink:title="SparseIntegerVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.SparseIntegerVector.VariableSerializer"><rect codeLine="350" fill="#F1F1F1" height="96.8906" id="elki.data.SparseIntegerVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="381" x="2244.5" y="2090"/><ellipse cx="2299.75" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2302.7188,2111.6406 Q2302.1406,2111.9375 2301.5,2112.0781 Q2300.8594,2112.2344 2300.1563,2112.2344 Q2297.6563,2112.2344 2296.3281,2110.5938 Q2295.0156,2108.9375 2295.0156,2105.8125 Q2295.0156,2102.6875 2296.3281,2101.0313 Q2297.6563,2099.375 2300.1563,2099.375 Q2300.8594,2099.375 2301.5,2099.5313 Q2302.1563,2099.6875 2302.7188,2099.9844 L2302.7188,2102.7031 Q2302.0938,2102.125 2301.5,2101.8594 Q2300.9063,2101.5781 2300.2813,2101.5781 Q2298.9375,2101.5781 2298.25,2102.6563 Q2297.5625,2103.7188 2297.5625,2105.8125 Q2297.5625,2107.9063 2298.25,2108.9844 Q2298.9375,2110.0469 2300.2813,2110.0469 Q2300.9063,2110.0469 2301.5,2109.7813 Q2302.0938,2109.5 2302.7188,2108.9219 L2302.7188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="2320.25" y="2110.8467">SparseIntegerVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2245.5" x2="2624.5" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="2245.5" x2="2624.5" y1="2130" y2="2130"/><ellipse cx="2255.5" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="2264.5" y="2146.9951">fromByteBuffer(ByteBuffer): SparseIntegerVector</text><ellipse cx="2255.5" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="355" x="2264.5" y="2163.292">toByteBuffer(ByteBuffer, SparseIntegerVector): void</text><ellipse cx="2255.5" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="2264.5" y="2179.5889">getByteSize(SparseIntegerVector): int</text></g></a><!--MD5=[fabf32eaf74f78d17ef0fe86bc4290e7]
class elki.data.SparseByteVector--><a href="SparseByteVector.html" target="_top" title="SparseByteVector.html" xlink:actuate="onRequest" xlink:href="SparseByteVector.html" xlink:show="new" xlink:title="SparseByteVector.html" xlink:type="simple"><g id="elem_elki.data.SparseByteVector"><rect codeLine="356" fill="#F1F1F1" height="390.2344" id="elki.data.SparseByteVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="469" x="2004.5" y="1573.5"/><ellipse cx="2172.75" cy="1589.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2175.7188,1595.1406 Q2175.1406,1595.4375 2174.5,1595.5781 Q2173.8594,1595.7344 2173.1563,1595.7344 Q2170.6563,1595.7344 2169.3281,1594.0938 Q2168.0156,1592.4375 2168.0156,1589.3125 Q2168.0156,1586.1875 2169.3281,1584.5313 Q2170.6563,1582.875 2173.1563,1582.875 Q2173.8594,1582.875 2174.5,1583.0313 Q2175.1563,1583.1875 2175.7188,1583.4844 L2175.7188,1586.2031 Q2175.0938,1585.625 2174.5,1585.3594 Q2173.9063,1585.0781 2173.2813,1585.0781 Q2171.9375,1585.0781 2171.25,1586.1563 Q2170.5625,1587.2188 2170.5625,1589.3125 Q2170.5625,1591.4063 2171.25,1592.4844 Q2171.9375,1593.5469 2173.2813,1593.5469 Q2173.9063,1593.5469 2174.5,1593.2813 Q2175.0938,1593 2175.7188,1592.4219 L2175.7188,1595.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="2193.25" y="1594.3467">SparseByteVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="2005.5" x2="2472.5" y1="1605.5" y2="1605.5"/><ellipse cx="2015.5" cy="1619.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="443" x="2024.5" y="1622.4951">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;SparseByteVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2012.5" y="1632.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="2024.5" y="1638.792">indexes: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2012.5" y="1648.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="2024.5" y="1655.0889">values: byte[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2012.5" y="1665.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="2024.5" y="1671.3857">dimensionality: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2012.5" y="1681.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="86" x="2024.5" y="1687.6826">BYTE0: Byte</text><line style="stroke:#181818;stroke-width:0.5;" x1="2005.5" x2="2472.5" y1="1694.9844" y2="1694.9844"/><ellipse cx="2015.5" cy="1708.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="2024.5" y="1711.9795">SparseByteVector(int[], byte[], int)</text><ellipse cx="2015.5" cy="1724.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="2024.5" y="1728.2764">SparseByteVector(Int2DoubleOpenHashMap, int)</text><ellipse cx="2015.5" cy="1741.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="2024.5" y="1744.5732">SparseByteVector(byte[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2012.5" y="1754.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2024.5" y="1760.8701">getMaxDim(): int</text><ellipse cx="2015.5" cy="1773.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2024.5" y="1777.167">getDimensionality(): int</text><ellipse cx="2015.5" cy="1790.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="2024.5" y="1793.4639">setDimensionality(int): void</text><ellipse cx="2015.5" cy="1806.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="2024.5" y="1809.7607">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="2085.5" y="1809.7607">(int): Byte</text><ellipse cx="2015.5" cy="1822.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="86" x="2024.5" y="1826.0576">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="2110.5" y="1826.0576">(int): double</text><ellipse cx="2015.5" cy="1839.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="2024.5" y="1842.3545">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2092.5" y="1842.3545">(int): long</text><ellipse cx="2015.5" cy="1855.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="2024.5" y="1858.6514">byteValue(int): byte</text><ellipse cx="2015.5" cy="1871.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="2024.5" y="1874.9482">toArray(): double[]</text><ellipse cx="2015.5" cy="1887.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="2024.5" y="1891.2451">iterDim(int): int</text><ellipse cx="2015.5" cy="1904.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2024.5" y="1907.542">iterValid(int): boolean</text><ellipse cx="2015.5" cy="1920.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="2024.5" y="1923.8389">iterDoubleValue(int): double</text><ellipse cx="2015.5" cy="1936.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2024.5" y="1940.1357">iterLongValue(int): long</text><ellipse cx="2015.5" cy="1953.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2024.5" y="1956.4326">iterByteValue(int): byte</text></g></a><!--MD5=[de713badb39c69437a65fa3a18a5a8a6]
class elki.data.SparseByteVector.VariableSerializer--><a href="SparseByteVector.VariableSerializer.html" target="_top" title="SparseByteVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="SparseByteVector.VariableSerializer.html" xlink:show="new" xlink:title="SparseByteVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.SparseByteVector.VariableSerializer"><rect codeLine="392" fill="#F1F1F1" height="96.8906" id="elki.data.SparseByteVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="363" x="3713.5" y="2090"/><ellipse cx="3768.75" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3771.7188,2111.6406 Q3771.1406,2111.9375 3770.5,2112.0781 Q3769.8594,2112.2344 3769.1563,2112.2344 Q3766.6563,2112.2344 3765.3281,2110.5938 Q3764.0156,2108.9375 3764.0156,2105.8125 Q3764.0156,2102.6875 3765.3281,2101.0313 Q3766.6563,2099.375 3769.1563,2099.375 Q3769.8594,2099.375 3770.5,2099.5313 Q3771.1563,2099.6875 3771.7188,2099.9844 L3771.7188,2102.7031 Q3771.0938,2102.125 3770.5,2101.8594 Q3769.9063,2101.5781 3769.2813,2101.5781 Q3767.9375,2101.5781 3767.25,2102.6563 Q3766.5625,2103.7188 3766.5625,2105.8125 Q3766.5625,2107.9063 3767.25,2108.9844 Q3767.9375,2110.0469 3769.2813,2110.0469 Q3769.9063,2110.0469 3770.5,2109.7813 Q3771.0938,2109.5 3771.7188,2108.9219 L3771.7188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="3789.25" y="2110.8467">SparseByteVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3714.5" x2="4075.5" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="3714.5" x2="4075.5" y1="2130" y2="2130"/><ellipse cx="3724.5" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="3733.5" y="2146.9951">fromByteBuffer(ByteBuffer): SparseByteVector</text><ellipse cx="3724.5" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="3733.5" y="2163.292">toByteBuffer(ByteBuffer, SparseByteVector): void</text><ellipse cx="3724.5" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="3733.5" y="2179.5889">getByteSize(SparseByteVector): int</text></g></a><!--MD5=[4d30bb4e76043a1d92898200397cf529]
class elki.data.FloatVector--><a href="FloatVector.html" target="_top" title="FloatVector.html" xlink:actuate="onRequest" xlink:href="FloatVector.html" xlink:show="new" xlink:title="FloatVector.html" xlink:type="simple"><g id="elem_elki.data.FloatVector"><rect codeLine="398" fill="#F1F1F1" height="243.5625" id="elki.data.FloatVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="423" x="4677.5" y="1171"/><ellipse cx="4845.75" cy="1187" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4848.7188,1192.6406 Q4848.1406,1192.9375 4847.5,1193.0781 Q4846.8594,1193.2344 4846.1563,1193.2344 Q4843.6563,1193.2344 4842.3281,1191.5938 Q4841.0156,1189.9375 4841.0156,1186.8125 Q4841.0156,1183.6875 4842.3281,1182.0313 Q4843.6563,1180.375 4846.1563,1180.375 Q4846.8594,1180.375 4847.5,1180.5313 Q4848.1563,1180.6875 4848.7188,1180.9844 L4848.7188,1183.7031 Q4848.0938,1183.125 4847.5,1182.8594 Q4846.9063,1182.5781 4846.2813,1182.5781 Q4844.9375,1182.5781 4844.25,1183.6563 Q4843.5625,1184.7188 4843.5625,1186.8125 Q4843.5625,1188.9063 4844.25,1189.9844 Q4844.9375,1191.0469 4846.2813,1191.0469 Q4846.9063,1191.0469 4847.5,1190.7813 Q4848.0938,1190.5 4848.7188,1189.9219 L4848.7188,1192.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="4866.25" y="1191.8467">FloatVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="4678.5" x2="5099.5" y1="1203" y2="1203"/><ellipse cx="4688.5" cy="1216.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="368" x="4697.5" y="1219.9951">BYTE_SERIALIZER: ByteBufferSerializer&lt;FloatVector&gt;</text><ellipse cx="4688.5" cy="1232.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="380" x="4697.5" y="1236.292">SHORT_SERIALIZER: ByteBufferSerializer&lt;FloatVector&gt;</text><ellipse cx="4688.5" cy="1249.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="397" x="4697.5" y="1252.5889">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;FloatVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4685.5" y="1262.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="4697.5" y="1268.8857">values: float[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="4678.5" x2="5099.5" y1="1276.1875" y2="1276.1875"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4685.5" y="1286.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="4697.5" y="1293.1826">FloatVector(float[], boolean)</text><ellipse cx="4688.5" cy="1306.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="4697.5" y="1309.4795">FloatVector(float[])</text><ellipse cx="4688.5" cy="1322.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="4697.5" y="1325.7764">getDimensionality(): int</text><ellipse cx="4688.5" cy="1338.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="4697.5" y="1342.0732">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="4758.5" y="1342.0732">(int): Float</text><ellipse cx="4688.5" cy="1355.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="4697.5" y="1358.3701">doubleValue(int): double</text><ellipse cx="4688.5" cy="1371.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4697.5" y="1374.667">floatValue(int): float</text><ellipse cx="4688.5" cy="1387.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4697.5" y="1390.9639">longValue(int): long</text><ellipse cx="4688.5" cy="1403.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4697.5" y="1407.2607">toArray(): double[]</text></g></a><!--MD5=[faf8320eb75c2cb8bfc41fe651275bbd]
class elki.data.FloatVector.SmallSerializer--><a href="FloatVector.SmallSerializer.html" target="_top" title="FloatVector.SmallSerializer.html" xlink:actuate="onRequest" xlink:href="FloatVector.SmallSerializer.html" xlink:show="new" xlink:title="FloatVector.SmallSerializer.html" xlink:type="simple"><g id="elem_elki.data.FloatVector.SmallSerializer"><rect codeLine="424" fill="#F1F1F1" height="96.8906" id="elki.data.FloatVector.SmallSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="317" x="4830.5" y="1720"/><ellipse cx="4894.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4897.7188,1741.6406 Q4897.1406,1741.9375 4896.5,1742.0781 Q4895.8594,1742.2344 4895.1563,1742.2344 Q4892.6563,1742.2344 4891.3281,1740.5938 Q4890.0156,1738.9375 4890.0156,1735.8125 Q4890.0156,1732.6875 4891.3281,1731.0313 Q4892.6563,1729.375 4895.1563,1729.375 Q4895.8594,1729.375 4896.5,1729.5313 Q4897.1563,1729.6875 4897.7188,1729.9844 L4897.7188,1732.7031 Q4897.0938,1732.125 4896.5,1731.8594 Q4895.9063,1731.5781 4895.2813,1731.5781 Q4893.9375,1731.5781 4893.25,1732.6563 Q4892.5625,1733.7188 4892.5625,1735.8125 Q4892.5625,1737.9063 4893.25,1738.9844 Q4893.9375,1740.0469 4895.2813,1740.0469 Q4895.9063,1740.0469 4896.5,1739.7813 Q4897.0938,1739.5 4897.7188,1738.9219 L4897.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="4915.25" y="1740.8467">FloatVector.SmallSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="4831.5" x2="5146.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="4831.5" x2="5146.5" y1="1760" y2="1760"/><ellipse cx="4841.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="4850.5" y="1776.9951">fromByteBuffer(ByteBuffer): FloatVector</text><ellipse cx="4841.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="4850.5" y="1793.292">toByteBuffer(ByteBuffer, FloatVector): void</text><ellipse cx="4841.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="4850.5" y="1809.5889">getByteSize(FloatVector): int</text></g></a><!--MD5=[a34f4c402de204e4b6e7a779d5016408]
class elki.data.FloatVector.ShortSerializer--><a href="FloatVector.ShortSerializer.html" target="_top" title="FloatVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="FloatVector.ShortSerializer.html" xlink:show="new" xlink:title="FloatVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.FloatVector.ShortSerializer"><rect codeLine="430" fill="#F1F1F1" height="96.8906" id="elki.data.FloatVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="317" x="5182.5" y="1720"/><ellipse cx="5246.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5249.2188,1741.6406 Q5248.6406,1741.9375 5248,1742.0781 Q5247.3594,1742.2344 5246.6563,1742.2344 Q5244.1563,1742.2344 5242.8281,1740.5938 Q5241.5156,1738.9375 5241.5156,1735.8125 Q5241.5156,1732.6875 5242.8281,1731.0313 Q5244.1563,1729.375 5246.6563,1729.375 Q5247.3594,1729.375 5248,1729.5313 Q5248.6563,1729.6875 5249.2188,1729.9844 L5249.2188,1732.7031 Q5248.5938,1732.125 5248,1731.8594 Q5247.4063,1731.5781 5246.7813,1731.5781 Q5245.4375,1731.5781 5244.75,1732.6563 Q5244.0625,1733.7188 5244.0625,1735.8125 Q5244.0625,1737.9063 5244.75,1738.9844 Q5245.4375,1740.0469 5246.7813,1740.0469 Q5247.4063,1740.0469 5248,1739.7813 Q5248.5938,1739.5 5249.2188,1738.9219 L5249.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="5266.75" y="1740.8467">FloatVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5183.5" x2="5498.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="5183.5" x2="5498.5" y1="1760" y2="1760"/><ellipse cx="5193.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="5202.5" y="1776.9951">fromByteBuffer(ByteBuffer): FloatVector</text><ellipse cx="5193.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="5202.5" y="1793.292">toByteBuffer(ByteBuffer, FloatVector): void</text><ellipse cx="5193.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="5202.5" y="1809.5889">getByteSize(FloatVector): int</text></g></a><!--MD5=[d25aed42cb0be2cb5a1084b2350bc4a2]
class elki.data.FloatVector.VariableSerializer--><a href="FloatVector.VariableSerializer.html" target="_top" title="FloatVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="FloatVector.VariableSerializer.html" xlink:show="new" xlink:title="FloatVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.FloatVector.VariableSerializer"><rect codeLine="436" fill="#F1F1F1" height="96.8906" id="elki.data.FloatVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="317" x="5534.5" y="1720"/><ellipse cx="5589.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5592.7188,1741.6406 Q5592.1406,1741.9375 5591.5,1742.0781 Q5590.8594,1742.2344 5590.1563,1742.2344 Q5587.6563,1742.2344 5586.3281,1740.5938 Q5585.0156,1738.9375 5585.0156,1735.8125 Q5585.0156,1732.6875 5586.3281,1731.0313 Q5587.6563,1729.375 5590.1563,1729.375 Q5590.8594,1729.375 5591.5,1729.5313 Q5592.1563,1729.6875 5592.7188,1729.9844 L5592.7188,1732.7031 Q5592.0938,1732.125 5591.5,1731.8594 Q5590.9063,1731.5781 5590.2813,1731.5781 Q5588.9375,1731.5781 5588.25,1732.6563 Q5587.5625,1733.7188 5587.5625,1735.8125 Q5587.5625,1737.9063 5588.25,1738.9844 Q5588.9375,1740.0469 5590.2813,1740.0469 Q5590.9063,1740.0469 5591.5,1739.7813 Q5592.0938,1739.5 5592.7188,1738.9219 L5592.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="5610.25" y="1740.8467">FloatVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5535.5" x2="5850.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="5535.5" x2="5850.5" y1="1760" y2="1760"/><ellipse cx="5545.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="5554.5" y="1776.9951">fromByteBuffer(ByteBuffer): FloatVector</text><ellipse cx="5545.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="5554.5" y="1793.292">toByteBuffer(ByteBuffer, FloatVector): void</text><ellipse cx="5545.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="5554.5" y="1809.5889">getByteSize(FloatVector): int</text></g></a><!--MD5=[1e4de421d43336fae7ed62bc708c6705]
class elki.data.SimpleClassLabel--><a href="SimpleClassLabel.html" target="_top" title="SimpleClassLabel.html" xlink:actuate="onRequest" xlink:href="SimpleClassLabel.html" xlink:show="new" xlink:title="SimpleClassLabel.html" xlink:type="simple"><g id="elem_elki.data.SimpleClassLabel"><rect codeLine="442" fill="#F1F1F1" height="113.1875" id="elki.data.SimpleClassLabel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="391" x="5580.5" y="826.5"/><ellipse cx="5712.25" cy="842.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5715.2188,848.1406 Q5714.6406,848.4375 5714,848.5781 Q5713.3594,848.7344 5712.6563,848.7344 Q5710.1563,848.7344 5708.8281,847.0938 Q5707.5156,845.4375 5707.5156,842.3125 Q5707.5156,839.1875 5708.8281,837.5313 Q5710.1563,835.875 5712.6563,835.875 Q5713.3594,835.875 5714,836.0313 Q5714.6563,836.1875 5715.2188,836.4844 L5715.2188,839.2031 Q5714.5938,838.625 5714,838.3594 Q5713.4063,838.0781 5712.7813,838.0781 Q5711.4375,838.0781 5710.75,839.1563 Q5710.0625,840.2188 5710.0625,842.3125 Q5710.0625,844.4063 5710.75,845.4844 Q5711.4375,846.5469 5712.7813,846.5469 Q5713.4063,846.5469 5714,846.2813 Q5714.5938,846 5715.2188,845.4219 L5715.2188,848.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="5732.75" y="847.3467">SimpleClassLabel</text><line style="stroke:#181818;stroke-width:0.5;" x1="5581.5" x2="5970.5" y1="858.5" y2="858.5"/><ellipse cx="5591.5" cy="872.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="365" x="5600.5" y="875.4951">SERIALIZER: ByteBufferSerializer&lt;SimpleClassLabel&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5588.5" y="885.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="5600.5" y="891.792">label: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="5581.5" x2="5970.5" y1="899.0938" y2="899.0938"/><ellipse cx="5591.5" cy="912.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="5600.5" y="916.0889">SimpleClassLabel(String)</text><ellipse cx="5591.5" cy="929.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="5600.5" y="932.3857">compareTo(ClassLabel): int</text></g></a><!--MD5=[61e4454f394acf310b2e78f6c7392e58]
class elki.data.SimpleClassLabel.Serializer--><a href="SimpleClassLabel.Serializer.html" target="_top" title="SimpleClassLabel.Serializer.html" xlink:actuate="onRequest" xlink:href="SimpleClassLabel.Serializer.html" xlink:show="new" xlink:title="SimpleClassLabel.Serializer.html" xlink:type="simple"><g id="elem_elki.data.SimpleClassLabel.Serializer"><rect codeLine="449" fill="#F1F1F1" height="96.8906" id="elki.data.SimpleClassLabel.Serializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="358" x="6379" y="1244.5"/><ellipse cx="6461.25" cy="1260.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6464.2188,1266.1406 Q6463.6406,1266.4375 6463,1266.5781 Q6462.3594,1266.7344 6461.6563,1266.7344 Q6459.1563,1266.7344 6457.8281,1265.0938 Q6456.5156,1263.4375 6456.5156,1260.3125 Q6456.5156,1257.1875 6457.8281,1255.5313 Q6459.1563,1253.875 6461.6563,1253.875 Q6462.3594,1253.875 6463,1254.0313 Q6463.6563,1254.1875 6464.2188,1254.4844 L6464.2188,1257.2031 Q6463.5938,1256.625 6463,1256.3594 Q6462.4063,1256.0781 6461.7813,1256.0781 Q6460.4375,1256.0781 6459.75,1257.1563 Q6459.0625,1258.2188 6459.0625,1260.3125 Q6459.0625,1262.4063 6459.75,1263.4844 Q6460.4375,1264.5469 6461.7813,1264.5469 Q6462.4063,1264.5469 6463,1264.2813 Q6463.5938,1264 6464.2188,1263.4219 L6464.2188,1266.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="6481.75" y="1265.3467">SimpleClassLabel.Serializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6380" x2="6736" y1="1276.5" y2="1276.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="6380" x2="6736" y1="1284.5" y2="1284.5"/><ellipse cx="6390" cy="1298.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="6399" y="1301.4951">fromByteBuffer(ByteBuffer): SimpleClassLabel</text><ellipse cx="6390" cy="1314.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="6399" y="1317.792">toByteBuffer(ByteBuffer, SimpleClassLabel): void</text><ellipse cx="6390" cy="1330.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="6399" y="1334.0889">getByteSize(SimpleClassLabel): int</text></g></a><!--MD5=[084775f9b6f907ce0e9aeca07beeb5c4]
class elki.data.LabelList--><a href="LabelList.html" target="_top" title="LabelList.html" xlink:actuate="onRequest" xlink:href="LabelList.html" xlink:show="new" xlink:title="LabelList.html" xlink:type="simple"><g id="elem_elki.data.LabelList"><rect codeLine="459" fill="#F1F1F1" height="162.0781" id="elki.data.LabelList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="331" x="4405.5" y="335.5"/><ellipse cx="4537.25" cy="351.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4540.2188,357.1406 Q4539.6406,357.4375 4539,357.5781 Q4538.3594,357.7344 4537.6563,357.7344 Q4535.1563,357.7344 4533.8281,356.0938 Q4532.5156,354.4375 4532.5156,351.3125 Q4532.5156,348.1875 4533.8281,346.5313 Q4535.1563,344.875 4537.6563,344.875 Q4538.3594,344.875 4539,345.0313 Q4539.6563,345.1875 4540.2188,345.4844 L4540.2188,348.2031 Q4539.5938,347.625 4539,347.3594 Q4538.4063,347.0781 4537.7813,347.0781 Q4536.4375,347.0781 4535.75,348.1563 Q4535.0625,349.2188 4535.0625,351.3125 Q4535.0625,353.4063 4535.75,354.4844 Q4536.4375,355.5469 4537.7813,355.5469 Q4538.4063,355.5469 4539,355.2813 Q4539.5938,355 4540.2188,354.4219 L4540.2188,357.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="4557.75" y="356.3467">LabelList</text><line style="stroke:#181818;stroke-width:0.5;" x1="4406.5" x2="4735.5" y1="367.5" y2="367.5"/><ellipse cx="4416.5" cy="381.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="305" x="4425.5" y="384.4951">SERIALIZER: ByteBufferSerializer&lt;LabelList&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4413.5" y="394.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="4425.5" y="400.792">labels: String[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="4406.5" x2="4735.5" y1="408.0938" y2="408.0938"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4413.5" y="418.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="4425.5" y="425.0889">LabelList(int)</text><polygon fill="#FFFF44" points="4416.5,433.0391,4420.5,437.0391,4416.5,441.0391,4412.5,437.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="4425.5" y="441.3857">LabelList(String[])</text><ellipse cx="4416.5" cy="454.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="248" x="4425.5" y="457.6826">make(Collection&lt;String&gt;): LabelList</text><ellipse cx="4416.5" cy="470.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="4425.5" y="473.9795">size(): int</text><ellipse cx="4416.5" cy="486.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="4425.5" y="490.2764">get(int): String</text></g></a><!--MD5=[9acbd7fca30f55e92e703d01eddf0186]
class elki.data.LabelList.Serializer--><a href="LabelList.Serializer.html" target="_top" title="LabelList.Serializer.html" xlink:actuate="onRequest" xlink:href="LabelList.Serializer.html" xlink:show="new" xlink:title="LabelList.Serializer.html" xlink:type="simple"><g id="elem_elki.data.LabelList.Serializer"><rect codeLine="469" fill="#F1F1F1" height="96.8906" id="elki.data.LabelList.Serializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="298" x="4337" y="834.5"/><ellipse cx="4419.25" cy="850.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4422.2188,856.1406 Q4421.6406,856.4375 4421,856.5781 Q4420.3594,856.7344 4419.6563,856.7344 Q4417.1563,856.7344 4415.8281,855.0938 Q4414.5156,853.4375 4414.5156,850.3125 Q4414.5156,847.1875 4415.8281,845.5313 Q4417.1563,843.875 4419.6563,843.875 Q4420.3594,843.875 4421,844.0313 Q4421.6563,844.1875 4422.2188,844.4844 L4422.2188,847.2031 Q4421.5938,846.625 4421,846.3594 Q4420.4063,846.0781 4419.7813,846.0781 Q4418.4375,846.0781 4417.75,847.1563 Q4417.0625,848.2188 4417.0625,850.3125 Q4417.0625,852.4063 4417.75,853.4844 Q4418.4375,854.5469 4419.7813,854.5469 Q4420.4063,854.5469 4421,854.2813 Q4421.5938,854 4422.2188,853.4219 L4422.2188,856.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4439.75" y="855.3467">LabelList.Serializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="4338" x2="4634" y1="866.5" y2="866.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4338" x2="4634" y1="874.5" y2="874.5"/><ellipse cx="4348" cy="888.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="4357" y="891.4951">fromByteBuffer(ByteBuffer): LabelList</text><ellipse cx="4348" cy="904.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="4357" y="907.792">toByteBuffer(ByteBuffer, LabelList): void</text><ellipse cx="4348" cy="920.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="4357" y="924.0889">getByteSize(LabelList): int</text></g></a><!--MD5=[77f4f7e9835329da7ea6a3dcad38c610]
class elki.data.SparseFloatVector--><a href="SparseFloatVector.html" target="_top" title="SparseFloatVector.html" xlink:actuate="onRequest" xlink:href="SparseFloatVector.html" xlink:show="new" xlink:title="SparseFloatVector.html" xlink:type="simple"><g id="elem_elki.data.SparseFloatVector"><rect codeLine="475" fill="#F1F1F1" height="390.2344" id="elki.data.SparseFloatVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="471" x="2508.5" y="1573.5"/><ellipse cx="2676.75" cy="1589.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2679.7188,1595.1406 Q2679.1406,1595.4375 2678.5,1595.5781 Q2677.8594,1595.7344 2677.1563,1595.7344 Q2674.6563,1595.7344 2673.3281,1594.0938 Q2672.0156,1592.4375 2672.0156,1589.3125 Q2672.0156,1586.1875 2673.3281,1584.5313 Q2674.6563,1582.875 2677.1563,1582.875 Q2677.8594,1582.875 2678.5,1583.0313 Q2679.1563,1583.1875 2679.7188,1583.4844 L2679.7188,1586.2031 Q2679.0938,1585.625 2678.5,1585.3594 Q2677.9063,1585.0781 2677.2813,1585.0781 Q2675.9375,1585.0781 2675.25,1586.1563 Q2674.5625,1587.2188 2674.5625,1589.3125 Q2674.5625,1591.4063 2675.25,1592.4844 Q2675.9375,1593.5469 2677.2813,1593.5469 Q2677.9063,1593.5469 2678.5,1593.2813 Q2679.0938,1593 2679.7188,1592.4219 L2679.7188,1595.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="2697.25" y="1594.3467">SparseFloatVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="2509.5" x2="2978.5" y1="1605.5" y2="1605.5"/><ellipse cx="2519.5" cy="1619.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="445" x="2528.5" y="1622.4951">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;SparseFloatVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2516.5" y="1632.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="91" x="2528.5" y="1638.792">FLOAT0: float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2516.5" y="1648.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="2528.5" y="1655.0889">indexes: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2516.5" y="1665.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="2528.5" y="1671.3857">values: float[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2516.5" y="1681.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="2528.5" y="1687.6826">dimensionality: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2509.5" x2="2978.5" y1="1694.9844" y2="1694.9844"/><ellipse cx="2519.5" cy="1708.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="2528.5" y="1711.9795">SparseFloatVector(int[], float[], int)</text><ellipse cx="2519.5" cy="1724.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="2528.5" y="1728.2764">SparseFloatVector(Int2FloatOpenHashMap, int)</text><ellipse cx="2519.5" cy="1741.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="2528.5" y="1744.5732">SparseFloatVector(float[])</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2516.5" y="1754.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2528.5" y="1760.8701">getMaxDim(): int</text><ellipse cx="2519.5" cy="1773.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2528.5" y="1777.167">getDimensionality(): int</text><ellipse cx="2519.5" cy="1790.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="2528.5" y="1793.4639">setDimensionality(int): void</text><ellipse cx="2519.5" cy="1806.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="2528.5" y="1809.7607">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="2589.5" y="1809.7607">(int): Float</text><ellipse cx="2519.5" cy="1822.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="86" x="2528.5" y="1826.0576">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="2614.5" y="1826.0576">(int): double</text><ellipse cx="2519.5" cy="1839.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="67" x="2528.5" y="1842.3545">floatValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="2595.5" y="1842.3545">(int): float</text><ellipse cx="2519.5" cy="1855.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="2528.5" y="1858.6514">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2596.5" y="1858.6514">(int): long</text><ellipse cx="2519.5" cy="1871.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="2528.5" y="1874.9482">toArray(): double[]</text><ellipse cx="2519.5" cy="1887.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="2528.5" y="1891.2451">iterDim(int): int</text><ellipse cx="2519.5" cy="1904.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2528.5" y="1907.542">iterValid(int): boolean</text><ellipse cx="2519.5" cy="1920.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="2528.5" y="1923.8389">iterDoubleValue(int): double</text><ellipse cx="2519.5" cy="1936.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="2528.5" y="1940.1357">iterFloatValue(int): float</text><ellipse cx="2519.5" cy="1953.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2528.5" y="1956.4326">iterLongValue(int): long</text></g></a><!--MD5=[1a7d8ddc2a2bd48ac3725566f39d62df]
class elki.data.SparseFloatVector.VariableSerializer--><a href="SparseFloatVector.VariableSerializer.html" target="_top" title="SparseFloatVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="SparseFloatVector.VariableSerializer.html" xlink:show="new" xlink:title="SparseFloatVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.SparseFloatVector.VariableSerializer"><rect codeLine="511" fill="#F1F1F1" height="96.8906" id="elki.data.SparseFloatVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="365" x="4928.5" y="2090"/><ellipse cx="4983.75" cy="2106" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4986.7188,2111.6406 Q4986.1406,2111.9375 4985.5,2112.0781 Q4984.8594,2112.2344 4984.1563,2112.2344 Q4981.6563,2112.2344 4980.3281,2110.5938 Q4979.0156,2108.9375 4979.0156,2105.8125 Q4979.0156,2102.6875 4980.3281,2101.0313 Q4981.6563,2099.375 4984.1563,2099.375 Q4984.8594,2099.375 4985.5,2099.5313 Q4986.1563,2099.6875 4986.7188,2099.9844 L4986.7188,2102.7031 Q4986.0938,2102.125 4985.5,2101.8594 Q4984.9063,2101.5781 4984.2813,2101.5781 Q4982.9375,2101.5781 4982.25,2102.6563 Q4981.5625,2103.7188 4981.5625,2105.8125 Q4981.5625,2107.9063 4982.25,2108.9844 Q4982.9375,2110.0469 4984.2813,2110.0469 Q4984.9063,2110.0469 4985.5,2109.7813 Q4986.0938,2109.5 4986.7188,2108.9219 L4986.7188,2111.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="5004.25" y="2110.8467">SparseFloatVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="4929.5" x2="5292.5" y1="2122" y2="2122"/><line style="stroke:#181818;stroke-width:0.5;" x1="4929.5" x2="5292.5" y1="2130" y2="2130"/><ellipse cx="4939.5" cy="2143.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="4948.5" y="2146.9951">fromByteBuffer(ByteBuffer): SparseFloatVector</text><ellipse cx="4939.5" cy="2159.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="4948.5" y="2163.292">toByteBuffer(ByteBuffer, SparseFloatVector): void</text><ellipse cx="4939.5" cy="2176.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="4948.5" y="2179.5889">getByteSize(SparseFloatVector): int</text></g></a><!--MD5=[7ceac52860aa8c2c2bb25ca8f6913452]
class elki.data.DoubleVector--><a href="DoubleVector.html" target="_top" title="DoubleVector.html" xlink:actuate="onRequest" xlink:href="DoubleVector.html" xlink:show="new" xlink:title="DoubleVector.html" xlink:type="simple"><g id="elem_elki.data.DoubleVector"><rect codeLine="517" fill="#F1F1F1" height="243.5625" id="elki.data.DoubleVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="440" x="5136" y="1171"/><ellipse cx="5304.25" cy="1187" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5307.2188,1192.6406 Q5306.6406,1192.9375 5306,1193.0781 Q5305.3594,1193.2344 5304.6563,1193.2344 Q5302.1563,1193.2344 5300.8281,1191.5938 Q5299.5156,1189.9375 5299.5156,1186.8125 Q5299.5156,1183.6875 5300.8281,1182.0313 Q5302.1563,1180.375 5304.6563,1180.375 Q5305.3594,1180.375 5306,1180.5313 Q5306.6563,1180.6875 5307.2188,1180.9844 L5307.2188,1183.7031 Q5306.5938,1183.125 5306,1182.8594 Q5305.4063,1182.5781 5304.7813,1182.5781 Q5303.4375,1182.5781 5302.75,1183.6563 Q5302.0625,1184.7188 5302.0625,1186.8125 Q5302.0625,1188.9063 5302.75,1189.9844 Q5303.4375,1191.0469 5304.7813,1191.0469 Q5305.4063,1191.0469 5306,1190.7813 Q5306.5938,1190.5 5307.2188,1189.9219 L5307.2188,1192.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="5324.75" y="1191.8467">DoubleVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="5137" x2="5575" y1="1203" y2="1203"/><ellipse cx="5147" cy="1216.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="385" x="5156" y="1219.9951">BYTE_SERIALIZER: ByteBufferSerializer&lt;DoubleVector&gt;</text><ellipse cx="5147" cy="1232.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="397" x="5156" y="1236.292">SHORT_SERIALIZER: ByteBufferSerializer&lt;DoubleVector&gt;</text><ellipse cx="5147" cy="1249.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="414" x="5156" y="1252.5889">VARIABLE_SERIALIZER: ByteBufferSerializer&lt;DoubleVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5144" y="1262.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="5156" y="1268.8857">values: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="5137" x2="5575" y1="1276.1875" y2="1276.1875"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5144" y="1286.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="5156" y="1293.1826">DoubleVector(double[], boolean)</text><ellipse cx="5147" cy="1306.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="5156" y="1309.4795">DoubleVector(double[])</text><ellipse cx="5147" cy="1322.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5156" y="1325.7764">getDimensionality(): int</text><ellipse cx="5147" cy="1338.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="5156" y="1342.0732">doubleValue(int): double</text><ellipse cx="5147" cy="1355.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5156" y="1358.3701">longValue(int): long</text><ellipse cx="5147" cy="1371.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="5156" y="1374.667">toArray(): double[]</text><ellipse cx="5147" cy="1387.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="5156" y="1390.9639">copy(double[]): DoubleVector</text><ellipse cx="5147" cy="1403.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="5156" y="1407.2607">wrap(double[]): DoubleVector</text></g></a><!--MD5=[f393c924c612fb42284f32da71571fcc]
class elki.data.DoubleVector.SmallSerializer--><a href="DoubleVector.SmallSerializer.html" target="_top" title="DoubleVector.SmallSerializer.html" xlink:actuate="onRequest" xlink:href="DoubleVector.SmallSerializer.html" xlink:show="new" xlink:title="DoubleVector.SmallSerializer.html" xlink:type="simple"><g id="elem_elki.data.DoubleVector.SmallSerializer"><rect codeLine="544" fill="#F1F1F1" height="96.8906" id="elki.data.DoubleVector.SmallSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="5887" y="1720"/><ellipse cx="5951.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5954.2188,1741.6406 Q5953.6406,1741.9375 5953,1742.0781 Q5952.3594,1742.2344 5951.6563,1742.2344 Q5949.1563,1742.2344 5947.8281,1740.5938 Q5946.5156,1738.9375 5946.5156,1735.8125 Q5946.5156,1732.6875 5947.8281,1731.0313 Q5949.1563,1729.375 5951.6563,1729.375 Q5952.3594,1729.375 5953,1729.5313 Q5953.6563,1729.6875 5954.2188,1729.9844 L5954.2188,1732.7031 Q5953.5938,1732.125 5953,1731.8594 Q5952.4063,1731.5781 5951.7813,1731.5781 Q5950.4375,1731.5781 5949.75,1732.6563 Q5949.0625,1733.7188 5949.0625,1735.8125 Q5949.0625,1737.9063 5949.75,1738.9844 Q5950.4375,1740.0469 5951.7813,1740.0469 Q5952.4063,1740.0469 5953,1739.7813 Q5953.5938,1739.5 5954.2188,1738.9219 L5954.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="5971.75" y="1740.8467">DoubleVector.SmallSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5888" x2="6220" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="5888" x2="6220" y1="1760" y2="1760"/><ellipse cx="5898" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="5907" y="1776.9951">fromByteBuffer(ByteBuffer): DoubleVector</text><ellipse cx="5898" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="5907" y="1793.292">toByteBuffer(ByteBuffer, DoubleVector): void</text><ellipse cx="5898" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="5907" y="1809.5889">getByteSize(DoubleVector): int</text></g></a><!--MD5=[98b7b0c78c123ad8b38f8c1620281995]
class elki.data.DoubleVector.ShortSerializer--><a href="DoubleVector.ShortSerializer.html" target="_top" title="DoubleVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="DoubleVector.ShortSerializer.html" xlink:show="new" xlink:title="DoubleVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.DoubleVector.ShortSerializer"><rect codeLine="550" fill="#F1F1F1" height="96.8906" id="elki.data.DoubleVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="6256" y="1720"/><ellipse cx="6319.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6322.7188,1741.6406 Q6322.1406,1741.9375 6321.5,1742.0781 Q6320.8594,1742.2344 6320.1563,1742.2344 Q6317.6563,1742.2344 6316.3281,1740.5938 Q6315.0156,1738.9375 6315.0156,1735.8125 Q6315.0156,1732.6875 6316.3281,1731.0313 Q6317.6563,1729.375 6320.1563,1729.375 Q6320.8594,1729.375 6321.5,1729.5313 Q6322.1563,1729.6875 6322.7188,1729.9844 L6322.7188,1732.7031 Q6322.0938,1732.125 6321.5,1731.8594 Q6320.9063,1731.5781 6320.2813,1731.5781 Q6318.9375,1731.5781 6318.25,1732.6563 Q6317.5625,1733.7188 6317.5625,1735.8125 Q6317.5625,1737.9063 6318.25,1738.9844 Q6318.9375,1740.0469 6320.2813,1740.0469 Q6320.9063,1740.0469 6321.5,1739.7813 Q6322.0938,1739.5 6322.7188,1738.9219 L6322.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="6340.25" y="1740.8467">DoubleVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6257" x2="6589" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="6257" x2="6589" y1="1760" y2="1760"/><ellipse cx="6267" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="6276" y="1776.9951">fromByteBuffer(ByteBuffer): DoubleVector</text><ellipse cx="6267" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="6276" y="1793.292">toByteBuffer(ByteBuffer, DoubleVector): void</text><ellipse cx="6267" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="6276" y="1809.5889">getByteSize(DoubleVector): int</text></g></a><!--MD5=[f1203d6040c240f69b7880ad5ef6ba9e]
class elki.data.DoubleVector.VariableSerializer--><a href="DoubleVector.VariableSerializer.html" target="_top" title="DoubleVector.VariableSerializer.html" xlink:actuate="onRequest" xlink:href="DoubleVector.VariableSerializer.html" xlink:show="new" xlink:title="DoubleVector.VariableSerializer.html" xlink:type="simple"><g id="elem_elki.data.DoubleVector.VariableSerializer"><rect codeLine="556" fill="#F1F1F1" height="96.8906" id="elki.data.DoubleVector.VariableSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="6625" y="1720"/><ellipse cx="6680.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6683.2188,1741.6406 Q6682.6406,1741.9375 6682,1742.0781 Q6681.3594,1742.2344 6680.6563,1742.2344 Q6678.1563,1742.2344 6676.8281,1740.5938 Q6675.5156,1738.9375 6675.5156,1735.8125 Q6675.5156,1732.6875 6676.8281,1731.0313 Q6678.1563,1729.375 6680.6563,1729.375 Q6681.3594,1729.375 6682,1729.5313 Q6682.6563,1729.6875 6683.2188,1729.9844 L6683.2188,1732.7031 Q6682.5938,1732.125 6682,1731.8594 Q6681.4063,1731.5781 6680.7813,1731.5781 Q6679.4375,1731.5781 6678.75,1732.6563 Q6678.0625,1733.7188 6678.0625,1735.8125 Q6678.0625,1737.9063 6678.75,1738.9844 Q6679.4375,1740.0469 6680.7813,1740.0469 Q6681.4063,1740.0469 6682,1739.7813 Q6682.5938,1739.5 6683.2188,1738.9219 L6683.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="6700.75" y="1740.8467">DoubleVector.VariableSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6626" x2="6958" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="6626" x2="6958" y1="1760" y2="1760"/><ellipse cx="6636" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="6645" y="1776.9951">fromByteBuffer(ByteBuffer): DoubleVector</text><ellipse cx="6636" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="6645" y="1793.292">toByteBuffer(ByteBuffer, DoubleVector): void</text><ellipse cx="6636" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="6645" y="1809.5889">getByteSize(DoubleVector): int</text></g></a><!--MD5=[7c2ed6693d689cb70da17109f15f4ac5]
class elki.data.ByteVector--><a href="ByteVector.html" target="_top" title="ByteVector.html" xlink:actuate="onRequest" xlink:href="ByteVector.html" xlink:show="new" xlink:title="ByteVector.html" xlink:type="simple"><g id="elem_elki.data.ByteVector"><rect codeLine="562" fill="#F1F1F1" height="243.5625" id="elki.data.ByteVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="404" x="5611" y="1171"/><ellipse cx="5770.75" cy="1187" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5773.7188,1192.6406 Q5773.1406,1192.9375 5772.5,1193.0781 Q5771.8594,1193.2344 5771.1563,1193.2344 Q5768.6563,1193.2344 5767.3281,1191.5938 Q5766.0156,1189.9375 5766.0156,1186.8125 Q5766.0156,1183.6875 5767.3281,1182.0313 Q5768.6563,1180.375 5771.1563,1180.375 Q5771.8594,1180.375 5772.5,1180.5313 Q5773.1563,1180.6875 5773.7188,1180.9844 L5773.7188,1183.7031 Q5773.0938,1183.125 5772.5,1182.8594 Q5771.9063,1182.5781 5771.2813,1182.5781 Q5769.9375,1182.5781 5769.25,1183.6563 Q5768.5625,1184.7188 5768.5625,1186.8125 Q5768.5625,1188.9063 5769.25,1189.9844 Q5769.9375,1191.0469 5771.2813,1191.0469 Q5771.9063,1191.0469 5772.5,1190.7813 Q5773.0938,1190.5 5773.7188,1189.9219 L5773.7188,1192.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="5791.25" y="1191.8467">ByteVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="5612" x2="6014" y1="1203" y2="1203"/><ellipse cx="5622" cy="1216.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="366" x="5631" y="1219.9951">BYTE_SERIALIZER: ByteBufferSerializer&lt;ByteVector&gt;</text><ellipse cx="5622" cy="1232.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="378" x="5631" y="1236.292">SHORT_SERIALIZER: ByteBufferSerializer&lt;ByteVector&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5619" y="1246.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="5631" y="1252.5889">values: byte[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="5612" x2="6014" y1="1259.8906" y2="1259.8906"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5619" y="1270.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="5631" y="1276.8857">ByteVector(byte[], boolean)</text><ellipse cx="5622" cy="1289.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="5631" y="1293.1826">ByteVector(byte[])</text><ellipse cx="5622" cy="1306.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5631" y="1309.4795">getDimensionality(): int</text><ellipse cx="5622" cy="1322.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="5631" y="1325.7764">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="5692" y="1325.7764">(int): Byte</text><ellipse cx="5622" cy="1338.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="5631" y="1342.0732">doubleValue(int): double</text><ellipse cx="5622" cy="1355.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5631" y="1358.3701">longValue(int): long</text><ellipse cx="5622" cy="1371.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5631" y="1374.667">byteValue(int): byte</text><ellipse cx="5622" cy="1387.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="5631" y="1390.9639">getValues(): byte[]</text><ellipse cx="5622" cy="1403.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="5631" y="1407.2607">toArray(): double[]</text></g></a><!--MD5=[f1f150effa19ede735d49c7febe51067]
class elki.data.ByteVector.SmallSerializer--><a href="ByteVector.SmallSerializer.html" target="_top" title="ByteVector.SmallSerializer.html" xlink:actuate="onRequest" xlink:href="ByteVector.SmallSerializer.html" xlink:show="new" xlink:title="ByteVector.SmallSerializer.html" xlink:type="simple"><g id="elem_elki.data.ByteVector.SmallSerializer"><rect codeLine="588" fill="#F1F1F1" height="96.8906" id="elki.data.ByteVector.SmallSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="315" x="6994.5" y="1720"/><ellipse cx="7058.75" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7061.7188,1741.6406 Q7061.1406,1741.9375 7060.5,1742.0781 Q7059.8594,1742.2344 7059.1563,1742.2344 Q7056.6563,1742.2344 7055.3281,1740.5938 Q7054.0156,1738.9375 7054.0156,1735.8125 Q7054.0156,1732.6875 7055.3281,1731.0313 Q7056.6563,1729.375 7059.1563,1729.375 Q7059.8594,1729.375 7060.5,1729.5313 Q7061.1563,1729.6875 7061.7188,1729.9844 L7061.7188,1732.7031 Q7061.0938,1732.125 7060.5,1731.8594 Q7059.9063,1731.5781 7059.2813,1731.5781 Q7057.9375,1731.5781 7057.25,1732.6563 Q7056.5625,1733.7188 7056.5625,1735.8125 Q7056.5625,1737.9063 7057.25,1738.9844 Q7057.9375,1740.0469 7059.2813,1740.0469 Q7059.9063,1740.0469 7060.5,1739.7813 Q7061.0938,1739.5 7061.7188,1738.9219 L7061.7188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="7079.25" y="1740.8467">ByteVector.SmallSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="6995.5" x2="7308.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="6995.5" x2="7308.5" y1="1760" y2="1760"/><ellipse cx="7005.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="7014.5" y="1776.9951">fromByteBuffer(ByteBuffer): ByteVector</text><ellipse cx="7005.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="7014.5" y="1793.292">toByteBuffer(ByteBuffer, ByteVector): void</text><ellipse cx="7005.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="7014.5" y="1809.5889">getByteSize(ByteVector): int</text></g></a><!--MD5=[15e3983ebfeae91fed6b48322d51dd3d]
class elki.data.ByteVector.ShortSerializer--><a href="ByteVector.ShortSerializer.html" target="_top" title="ByteVector.ShortSerializer.html" xlink:actuate="onRequest" xlink:href="ByteVector.ShortSerializer.html" xlink:show="new" xlink:title="ByteVector.ShortSerializer.html" xlink:type="simple"><g id="elem_elki.data.ByteVector.ShortSerializer"><rect codeLine="594" fill="#F1F1F1" height="96.8906" id="elki.data.ByteVector.ShortSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="315" x="7344.5" y="1720"/><ellipse cx="7408.25" cy="1736" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7411.2188,1741.6406 Q7410.6406,1741.9375 7410,1742.0781 Q7409.3594,1742.2344 7408.6563,1742.2344 Q7406.1563,1742.2344 7404.8281,1740.5938 Q7403.5156,1738.9375 7403.5156,1735.8125 Q7403.5156,1732.6875 7404.8281,1731.0313 Q7406.1563,1729.375 7408.6563,1729.375 Q7409.3594,1729.375 7410,1729.5313 Q7410.6563,1729.6875 7411.2188,1729.9844 L7411.2188,1732.7031 Q7410.5938,1732.125 7410,1731.8594 Q7409.4063,1731.5781 7408.7813,1731.5781 Q7407.4375,1731.5781 7406.75,1732.6563 Q7406.0625,1733.7188 7406.0625,1735.8125 Q7406.0625,1737.9063 7406.75,1738.9844 Q7407.4375,1740.0469 7408.7813,1740.0469 Q7409.4063,1740.0469 7410,1739.7813 Q7410.5938,1739.5 7411.2188,1738.9219 L7411.2188,1741.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="7428.75" y="1740.8467">ByteVector.ShortSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="7345.5" x2="7658.5" y1="1752" y2="1752"/><line style="stroke:#181818;stroke-width:0.5;" x1="7345.5" x2="7658.5" y1="1760" y2="1760"/><ellipse cx="7355.5" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="7364.5" y="1776.9951">fromByteBuffer(ByteBuffer): ByteVector</text><ellipse cx="7355.5" cy="1789.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="7364.5" y="1793.292">toByteBuffer(ByteBuffer, ByteVector): void</text><ellipse cx="7355.5" cy="1806.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="7364.5" y="1809.5889">getByteSize(ByteVector): int</text></g></a><!--MD5=[d67ea1a18398daec641c3d3be5487b47]
class elki.data.OneDimensionalDoubleVector--><a href="OneDimensionalDoubleVector.html" target="_top" title="OneDimensionalDoubleVector.html" xlink:actuate="onRequest" xlink:href="OneDimensionalDoubleVector.html" xlink:show="new" xlink:title="OneDimensionalDoubleVector.html" xlink:type="simple"><g id="elem_elki.data.OneDimensionalDoubleVector"><rect codeLine="600" fill="#F1F1F1" height="145.7813" id="elki.data.OneDimensionalDoubleVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="293" x="6050.5" y="1220"/><ellipse cx="6088.9" cy="1236" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6091.8688,1241.6406 Q6091.2906,1241.9375 6090.65,1242.0781 Q6090.0094,1242.2344 6089.3063,1242.2344 Q6086.8063,1242.2344 6085.4781,1240.5938 Q6084.1656,1238.9375 6084.1656,1235.8125 Q6084.1656,1232.6875 6085.4781,1231.0313 Q6086.8063,1229.375 6089.3063,1229.375 Q6090.0094,1229.375 6090.65,1229.5313 Q6091.3063,1229.6875 6091.8688,1229.9844 L6091.8688,1232.7031 Q6091.2438,1232.125 6090.65,1231.8594 Q6090.0563,1231.5781 6089.4313,1231.5781 Q6088.0875,1231.5781 6087.4,1232.6563 Q6086.7125,1233.7188 6086.7125,1235.8125 Q6086.7125,1237.9063 6087.4,1238.9844 Q6088.0875,1240.0469 6089.4313,1240.0469 Q6090.0563,1240.0469 6090.65,1239.7813 Q6091.2438,1239.5 6091.8688,1238.9219 L6091.8688,1241.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="6108.1" y="1240.8467">OneDimensionalDoubleVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="6051.5" x2="6342.5" y1="1252" y2="1252"/><polygon fill="none" points="6061.5,1261.6484,6057.5,1267.6484,6065.5,1267.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="6070.5" y="1268.9951">val: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="6051.5" x2="6342.5" y1="1276.2969" y2="1276.2969"/><ellipse cx="6061.5" cy="1289.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="6070.5" y="1293.292">OneDimensionalDoubleVector(double)</text><ellipse cx="6061.5" cy="1306.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="6070.5" y="1309.5889">getDimensionality(): int</text><ellipse cx="6061.5" cy="1322.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="6070.5" y="1325.8857">doubleValue(int): double</text><ellipse cx="6061.5" cy="1338.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6070.5" y="1342.1826">longValue(int): long</text><ellipse cx="6061.5" cy="1355.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="6070.5" y="1358.4795">toArray(): double[]</text></g></a><!--MD5=[1224b7f66c7d23090bd47292f92ff068]
class elki.data.VectorUtil--><a href="VectorUtil.html" target="_top" title="VectorUtil.html" xlink:actuate="onRequest" xlink:href="VectorUtil.html" xlink:show="new" xlink:title="VectorUtil.html" xlink:type="simple"><g id="elem_elki.data.VectorUtil"><rect codeLine="620" fill="#F1F1F1" height="325.0469" id="elki.data.VectorUtil" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="742" x="5882" y="254"/><ellipse cx="6215.75" cy="270" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6218.7188,275.6406 Q6218.1406,275.9375 6217.5,276.0781 Q6216.8594,276.2344 6216.1563,276.2344 Q6213.6563,276.2344 6212.3281,274.5938 Q6211.0156,272.9375 6211.0156,269.8125 Q6211.0156,266.6875 6212.3281,265.0313 Q6213.6563,263.375 6216.1563,263.375 Q6216.8594,263.375 6217.5,263.5313 Q6218.1563,263.6875 6218.7188,263.9844 L6218.7188,266.7031 Q6218.0938,266.125 6217.5,265.8594 Q6216.9063,265.5781 6216.2813,265.5781 Q6214.9375,265.5781 6214.25,266.6563 Q6213.5625,267.7188 6213.5625,269.8125 Q6213.5625,271.9063 6214.25,272.9844 Q6214.9375,274.0469 6216.2813,274.0469 Q6216.9063,274.0469 6217.5,273.7813 Q6218.0938,273.5 6218.7188,272.9219 L6218.7188,275.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="6236.25" y="274.8467">VectorUtil</text><line style="stroke:#181818;stroke-width:0.5;" x1="5883" x2="6623" y1="286" y2="286"/><line style="stroke:#181818;stroke-width:0.5;" x1="5883" x2="6623" y1="294" y2="294"/><ellipse cx="5893" cy="307.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="628" x="5902" y="310.9951">randomVector(Factory&lt;V extends NumberVector&gt;, int, Random): V extends NumberVector</text><ellipse cx="5893" cy="323.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="562" x="5902" y="327.292">randomVector(Factory&lt;V extends NumberVector&gt;, int): V extends NumberVector</text><ellipse cx="5893" cy="340.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="359" x="5902" y="343.5889">angleDense(NumberVector, NumberVector): double</text><ellipse cx="5893" cy="356.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="457" x="5902" y="359.8857">angleSparse(SparseNumberVector, SparseNumberVector): double</text><ellipse cx="5893" cy="372.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="455" x="5902" y="376.1826">angleSparseDense(SparseNumberVector, NumberVector): double</text><ellipse cx="5893" cy="389.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="339" x="5902" y="392.4795">cosAngle(NumberVector, NumberVector): double</text><ellipse cx="5893" cy="405.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="422" x="5902" y="408.7764">minCosAngle(SpatialComparable, SpatialComparable): double</text><ellipse cx="5893" cy="421.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="421" x="5902" y="425.0732">angle(NumberVector, NumberVector, NumberVector): double</text><ellipse cx="5893" cy="438.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="344" x="5902" y="441.3701">dotDense(NumberVector, NumberVector): double</text><ellipse cx="5893" cy="454.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="302" x="5902" y="457.667">dotDense(NumberVector, double[]): double</text><ellipse cx="5893" cy="470.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="442" x="5902" y="473.9639">dotSparse(SparseNumberVector, SparseNumberVector): double</text><ellipse cx="5893" cy="486.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="5902" y="490.2607">dotSparseDense(SparseNumberVector, NumberVector): double</text><ellipse cx="5893" cy="503.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="398" x="5902" y="506.5576">dotSparseDense(SparseNumberVector, double[]): double</text><ellipse cx="5893" cy="519.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="298" x="5902" y="522.8545">dot(NumberVector, NumberVector): double</text><ellipse cx="5893" cy="535.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="256" x="5902" y="539.1514">dot(NumberVector, double[]): double</text><ellipse cx="5893" cy="552.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="381" x="5902" y="555.4482">minDot(SpatialComparable, SpatialComparable): double</text><ellipse cx="5893" cy="568.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="716" x="5902" y="571.7451">project(V extends NumberVector, long[], Factory&lt;V extends NumberVector&gt;): V extends NumberVector</text></g></a><!--MD5=[77e6989588edfbd2164469e46c7efae0]
class elki.data.VectorUtil.SortDBIDsBySingleDimension--><a href="VectorUtil.SortDBIDsBySingleDimension.html" target="_top" title="VectorUtil.SortDBIDsBySingleDimension.html" xlink:actuate="onRequest" xlink:href="VectorUtil.SortDBIDsBySingleDimension.html" xlink:show="new" xlink:title="VectorUtil.SortDBIDsBySingleDimension.html" xlink:type="simple"><g id="elem_elki.data.VectorUtil.SortDBIDsBySingleDimension"><rect codeLine="640" fill="#F1F1F1" height="162.0781" id="elki.data.VectorUtil.SortDBIDsBySingleDimension" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="516" x="6376" y="802"/><ellipse cx="6492.75" cy="818" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6495.7188,823.6406 Q6495.1406,823.9375 6494.5,824.0781 Q6493.8594,824.2344 6493.1563,824.2344 Q6490.6563,824.2344 6489.3281,822.5938 Q6488.0156,820.9375 6488.0156,817.8125 Q6488.0156,814.6875 6489.3281,813.0313 Q6490.6563,811.375 6493.1563,811.375 Q6493.8594,811.375 6494.5,811.5313 Q6495.1563,811.6875 6495.7188,811.9844 L6495.7188,814.7031 Q6495.0938,814.125 6494.5,813.8594 Q6493.9063,813.5781 6493.2813,813.5781 Q6491.9375,813.5781 6491.25,814.6563 Q6490.5625,815.7188 6490.5625,817.8125 Q6490.5625,819.9063 6491.25,820.9844 Q6491.9375,822.0469 6493.2813,822.0469 Q6493.9063,822.0469 6494.5,821.7813 Q6495.0938,821.5 6495.7188,820.9219 L6495.7188,823.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="6513.25" y="822.8467">VectorUtil.SortDBIDsBySingleDimension</text><line style="stroke:#181818;stroke-width:0.5;" x1="6377" x2="6891" y1="834" y2="834"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6384" y="844.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="6396" y="850.9951">d: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6384" y="860.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="6396" y="867.292">data: Relation&lt;? extends NumberVector&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="6377" x2="6891" y1="874.5938" y2="874.5938"/><ellipse cx="6387" cy="888.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="6396" y="891.5889">SortDBIDsBySingleDimension(Relation&lt;? extends NumberVector&gt;, int)</text><ellipse cx="6387" cy="904.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="465" x="6396" y="907.8857">SortDBIDsBySingleDimension(Relation&lt;? extends NumberVector&gt;)</text><ellipse cx="6387" cy="920.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="6396" y="924.1826">getDimension(): int</text><ellipse cx="6387" cy="937.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="6396" y="940.4795">setDimension(int): void</text><ellipse cx="6387" cy="953.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="6396" y="956.7764">compare(DBIDRef, DBIDRef): int</text></g></a><!--MD5=[8c00aeecb9401a428cd6b0827da31d70]
class elki.data.VectorUtil.SortVectorsBySingleDimension--><a href="VectorUtil.SortVectorsBySingleDimension.html" target="_top" title="VectorUtil.SortVectorsBySingleDimension.html" xlink:actuate="onRequest" xlink:href="VectorUtil.SortVectorsBySingleDimension.html" xlink:show="new" xlink:title="VectorUtil.SortVectorsBySingleDimension.html" xlink:type="simple"><g id="elem_elki.data.VectorUtil.SortVectorsBySingleDimension"><rect codeLine="650" fill="#F1F1F1" height="145.7813" id="elki.data.VectorUtil.SortVectorsBySingleDimension" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="331" x="7328.5" y="810"/><ellipse cx="7350.25" cy="826" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7353.2188,831.6406 Q7352.6406,831.9375 7352,832.0781 Q7351.3594,832.2344 7350.6563,832.2344 Q7348.1563,832.2344 7346.8281,830.5938 Q7345.5156,828.9375 7345.5156,825.8125 Q7345.5156,822.6875 7346.8281,821.0313 Q7348.1563,819.375 7350.6563,819.375 Q7351.3594,819.375 7352,819.5313 Q7352.6563,819.6875 7353.2188,819.9844 L7353.2188,822.7031 Q7352.5938,822.125 7352,821.8594 Q7351.4063,821.5781 7350.7813,821.5781 Q7349.4375,821.5781 7348.75,822.6563 Q7348.0625,823.7188 7348.0625,825.8125 Q7348.0625,827.9063 7348.75,828.9844 Q7349.4375,830.0469 7350.7813,830.0469 Q7351.4063,830.0469 7352,829.7813 Q7352.5938,829.5 7353.2188,828.9219 L7353.2188,831.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="7365.75" y="830.8467">VectorUtil.SortVectorsBySingleDimension</text><line style="stroke:#181818;stroke-width:0.5;" x1="7329.5" x2="7658.5" y1="842" y2="842"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7336.5" y="852.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="7348.5" y="858.9951">d: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="7329.5" x2="7658.5" y1="866.2969" y2="866.2969"/><ellipse cx="7339.5" cy="879.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="7348.5" y="883.292">SortVectorsBySingleDimension(int)</text><ellipse cx="7339.5" cy="896.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="7348.5" y="899.5889">SortVectorsBySingleDimension()</text><ellipse cx="7339.5" cy="912.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="7348.5" y="915.8857">getDimension(): int</text><ellipse cx="7339.5" cy="928.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="7348.5" y="932.1826">setDimension(int): void</text><ellipse cx="7339.5" cy="945.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="7348.5" y="948.4795">compare(NumberVector, NumberVector): int</text></g></a><!--MD5=[7301092a08ae7c1a83c0d7887f62f53c]
class elki.data.SparseNumberVector--><a href="SparseNumberVector.html" target="_top" title="SparseNumberVector.html" xlink:actuate="onRequest" xlink:href="SparseNumberVector.html" xlink:show="new" xlink:title="SparseNumberVector.html" xlink:type="simple"><g id="elem_elki.data.SparseNumberVector"><rect codeLine="659" fill="#F1F1F1" height="276.1563" id="elki.data.SparseNumberVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="227" x="2502.5" y="1155"/><ellipse cx="2537.3" cy="1171" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2533.2219,1166.7656 L2533.2219,1164.6094 L2540.6125,1164.6094 L2540.6125,1166.7656 L2538.1438,1166.7656 L2538.1438,1174.8438 L2540.6125,1174.8438 L2540.6125,1177 L2533.2219,1177 L2533.2219,1174.8438 L2535.6906,1174.8438 L2535.6906,1166.7656 L2533.2219,1166.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="151" x="2555.7" y="1175.8467">SparseNumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="2503.5" x2="2728.5" y1="1187" y2="1187"/><line style="stroke:#181818;stroke-width:0.5;" x1="2503.5" x2="2728.5" y1="1195" y2="1195"/><ellipse cx="2513.5" cy="1208.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="2522.5" y="1211.9951">iter(): int</text><ellipse cx="2513.5" cy="1224.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="194" x="2522.5" y="1228.292">setDimensionality(int): void</text><ellipse cx="2513.5" cy="1241.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="201" x="2522.5" y="1244.5889">iterDoubleValue(int): double</text><ellipse cx="2513.5" cy="1257.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="2522.5" y="1260.8857">iterFloatValue(int): float</text><ellipse cx="2513.5" cy="1273.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="2522.5" y="1277.1826">iterIntValue(int): int</text><ellipse cx="2513.5" cy="1290.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="2522.5" y="1293.4795">iterShortValue(int): short</text><ellipse cx="2513.5" cy="1306.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="167" x="2522.5" y="1309.7764">iterLongValue(int): long</text><ellipse cx="2513.5" cy="1322.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2522.5" y="1326.0732">iterByteValue(int): byte</text><ellipse cx="2513.5" cy="1339.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" text-decoration="line-through" textLength="90" x="2522.5" y="1342.3701">doubleValue</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="2612.5" y="1342.3701">(int): double</text><ellipse cx="2513.5" cy="1355.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="67" x="2522.5" y="1358.667">floatValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="2589.5" y="1358.667">(int): float</text><ellipse cx="2513.5" cy="1371.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="55" x="2522.5" y="1374.9639">intValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="2577.5" y="1374.9639">(int): int</text><ellipse cx="2513.5" cy="1387.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" text-decoration="line-through" textLength="72" x="2522.5" y="1391.2607">longValue</text><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="68" x="2594.5" y="1391.2607">(int): long</text><ellipse cx="2513.5" cy="1404.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="74" x="2522.5" y="1407.5576">shortValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="2596.5" y="1407.5576">(int): short</text><ellipse cx="2513.5" cy="1420.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="68" x="2522.5" y="1423.8545">byteValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2590.5" y="1423.8545">(int): byte</text></g></a><!--MD5=[f73b1d894c0ae1823c38b0c7c2e3d513]
class elki.data.FeatureVector--><a href="FeatureVector.html" target="_top" title="FeatureVector.html" xlink:actuate="onRequest" xlink:href="FeatureVector.html" xlink:show="new" xlink:title="FeatureVector.html" xlink:type="simple"><g id="elem_elki.data.FeatureVector"><rect codeLine="680" fill="#F1F1F1" height="80.5938" id="elki.data.FeatureVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="192" x="4991" y="376"/><ellipse cx="5027.15" cy="392" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5023.0719,387.7656 L5023.0719,385.6094 L5030.4625,385.6094 L5030.4625,387.7656 L5027.9938,387.7656 L5027.9938,395.8438 L5030.4625,395.8438 L5030.4625,398 L5023.0719,398 L5023.0719,395.8438 L5025.5406,395.8438 L5025.5406,387.7656 L5023.0719,387.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="100" x="5045.85" y="396.8467">FeatureVector</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="11" x="5175" y="373"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="9" x="5176" y="385.1387">D</text><line style="stroke:#181818;stroke-width:0.5;" x1="4992" x2="5182" y1="408" y2="408"/><line style="stroke:#181818;stroke-width:0.5;" x1="4992" x2="5182" y1="416" y2="416"/><ellipse cx="5002" cy="429.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="166" x="5011" y="432.9951">getDimensionality(): int</text><ellipse cx="5002" cy="445.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="5011" y="449.292">getValue(int): D</text></g></a><!--MD5=[d3aefc91aa868e02d1615d08e2d5d1d5]
class elki.data.SparseFeatureVector--><a href="SparseFeatureVector.html" target="_top" title="SparseFeatureVector.html" xlink:actuate="onRequest" xlink:href="SparseFeatureVector.html" xlink:show="new" xlink:title="SparseFeatureVector.html" xlink:type="simple"><g id="elem_elki.data.SparseFeatureVector"><rect codeLine="691" fill="#F1F1F1" height="129.4844" id="elki.data.SparseFeatureVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="193" x="4670.5" y="818.5"/><ellipse cx="4685.5" cy="834.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4681.4219,830.2656 L4681.4219,828.1094 L4688.8125,828.1094 L4688.8125,830.2656 L4686.3438,830.2656 L4686.3438,838.3438 L4688.8125,838.3438 L4688.8125,840.5 L4681.4219,840.5 L4681.4219,838.3438 L4683.8906,838.3438 L4683.8906,830.2656 L4681.4219,830.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="4699.5" y="839.3467">SparseFeatureVector</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="11" x="4855.5" y="815.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="9" x="4856.5" y="827.6387">D</text><line style="stroke:#181818;stroke-width:0.5;" x1="4671.5" x2="4862.5" y1="850.5" y2="850.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4671.5" x2="4862.5" y1="858.5" y2="858.5"/><ellipse cx="4681.5" cy="872.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="4690.5" y="875.4951">iter(): int</text><ellipse cx="4681.5" cy="888.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="107" x="4690.5" y="891.792">iterDim(int): int</text><ellipse cx="4681.5" cy="904.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4690.5" y="908.0889">iterAdvance(int): int</text><ellipse cx="4681.5" cy="921.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4690.5" y="924.3857">iterRetract(int): int</text><ellipse cx="4681.5" cy="937.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="4690.5" y="940.6826">iterValid(int): boolean</text></g></a><!--MD5=[270e881d41d9ca2c504985de7ec1dff1]
class elki.data.NumberVector--><a href="NumberVector.html" target="_top" title="NumberVector.html" xlink:actuate="onRequest" xlink:href="NumberVector.html" xlink:show="new" xlink:title="NumberVector.html" xlink:type="simple"><g id="elem_elki.data.NumberVector"><rect codeLine="699" fill="#F1F1F1" height="227.2656" id="elki.data.NumberVector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="245" x="5300.5" y="769.5"/><ellipse cx="5367.25" cy="785.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5363.1719,781.2656 L5363.1719,779.1094 L5370.5625,779.1094 L5370.5625,781.2656 L5368.0938,781.2656 L5368.0938,789.3438 L5370.5625,789.3438 L5370.5625,791.5 L5363.1719,791.5 L5363.1719,789.3438 L5365.6406,789.3438 L5365.6406,781.2656 L5363.1719,781.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="5387.75" y="790.3467">NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="5301.5" x2="5544.5" y1="801.5" y2="801.5"/><ellipse cx="5311.5" cy="815.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="219" x="5320.5" y="818.4951">ATTRIBUTE_SEPARATOR: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="5301.5" x2="5544.5" y1="825.7969" y2="825.7969"/><ellipse cx="5311.5" cy="839.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="61" x="5320.5" y="842.792">getValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="5381.5" y="842.792">(int): Number</text><ellipse cx="5311.5" cy="855.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="5320.5" y="859.0889">getMin(int): double</text><ellipse cx="5311.5" cy="872.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5320.5" y="875.3857">getMax(int): double</text><ellipse cx="5311.5" cy="888.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="5320.5" y="891.6826">doubleValue(int): double</text><ellipse cx="5311.5" cy="904.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="5320.5" y="907.9795">floatValue(int): float</text><ellipse cx="5311.5" cy="920.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="5320.5" y="924.2764">intValue(int): int</text><ellipse cx="5311.5" cy="937.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="5320.5" y="940.5732">longValue(int): long</text><ellipse cx="5311.5" cy="953.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="5320.5" y="956.8701">shortValue(int): short</text><ellipse cx="5311.5" cy="969.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5320.5" y="973.167">byteValue(int): byte</text><ellipse cx="5311.5" cy="986.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="129" x="5320.5" y="989.4639">toArray(): double[]</text></g></a><!--MD5=[28898b6fad39cb5ce20a6b57bf8a94db]
class elki.data.HyperBoundingBox--><a href="HyperBoundingBox.html" target="_top" title="HyperBoundingBox.html" xlink:actuate="onRequest" xlink:href="HyperBoundingBox.html" xlink:show="new" xlink:title="HyperBoundingBox.html" xlink:type="simple"><g id="elem_elki.data.HyperBoundingBox"><rect codeLine="719" fill="#F1F1F1" height="243.5625" id="elki.data.HyperBoundingBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="297" x="5218.5" y="294.5"/><ellipse cx="5296.25" cy="310.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5299.2188,316.1406 Q5298.6406,316.4375 5298,316.5781 Q5297.3594,316.7344 5296.6563,316.7344 Q5294.1563,316.7344 5292.8281,315.0938 Q5291.5156,313.4375 5291.5156,310.3125 Q5291.5156,307.1875 5292.8281,305.5313 Q5294.1563,303.875 5296.6563,303.875 Q5297.3594,303.875 5298,304.0313 Q5298.6563,304.1875 5299.2188,304.4844 L5299.2188,307.2031 Q5298.5938,306.625 5298,306.3594 Q5297.4063,306.0781 5296.7813,306.0781 Q5295.4375,306.0781 5294.75,307.1563 Q5294.0625,308.2188 5294.0625,310.3125 Q5294.0625,312.4063 5294.75,313.4844 Q5295.4375,314.5469 5296.7813,314.5469 Q5297.4063,314.5469 5298,314.2813 Q5298.5938,314 5299.2188,313.4219 L5299.2188,316.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="5316.75" y="315.3467">HyperBoundingBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="5219.5" x2="5514.5" y1="326.5" y2="326.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5226.5" y="337.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="151" x="5238.5" y="343.4951">serialVersionUID: long</text><polygon fill="none" points="5229.5,352.4453,5225.5,358.4453,5233.5,358.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="5238.5" y="359.792">min: double[]</text><polygon fill="none" points="5229.5,368.7422,5225.5,374.7422,5233.5,374.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="5238.5" y="376.0889">max: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="5219.5" x2="5514.5" y1="383.3906" y2="383.3906"/><ellipse cx="5229.5" cy="397.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="5238.5" y="400.3857">HyperBoundingBox()</text><ellipse cx="5229.5" cy="413.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="5238.5" y="416.6826">HyperBoundingBox(double[], double[])</text><ellipse cx="5229.5" cy="429.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="5238.5" y="432.9795">HyperBoundingBox(SpatialComparable)</text><ellipse cx="5229.5" cy="445.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="5238.5" y="449.2764">getMin(int): double</text><ellipse cx="5229.5" cy="462.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5238.5" y="465.5732">getMax(int): double</text><ellipse cx="5229.5" cy="478.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5238.5" y="481.8701">getDimensionality(): int</text><ellipse cx="5229.5" cy="494.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="5238.5" y="498.167">toString(String, NumberFormat): String</text><ellipse cx="5229.5" cy="511.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="5238.5" y="514.4639">writeExternal(ObjectOutput): void</text><ellipse cx="5229.5" cy="527.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="5238.5" y="530.7607">readExternal(ObjectInput): void</text></g></a><!--MD5=[3a21e0cad27ccf10c12591dbb5672008]
class elki.data.ModifiableHyperBoundingBox--><a href="ModifiableHyperBoundingBox.html" target="_top" title="ModifiableHyperBoundingBox.html" xlink:actuate="onRequest" xlink:href="ModifiableHyperBoundingBox.html" xlink:show="new" xlink:title="ModifiableHyperBoundingBox.html" xlink:type="simple"><g id="elem_elki.data.ModifiableHyperBoundingBox"><rect codeLine="734" fill="#F1F1F1" height="227.2656" id="elki.data.ModifiableHyperBoundingBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="367" x="4898.5" y="769.5"/><ellipse cx="4976.75" cy="785.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4979.7188,791.1406 Q4979.1406,791.4375 4978.5,791.5781 Q4977.8594,791.7344 4977.1563,791.7344 Q4974.6563,791.7344 4973.3281,790.0938 Q4972.0156,788.4375 4972.0156,785.3125 Q4972.0156,782.1875 4973.3281,780.5313 Q4974.6563,778.875 4977.1563,778.875 Q4977.8594,778.875 4978.5,779.0313 Q4979.1563,779.1875 4979.7188,779.4844 L4979.7188,782.2031 Q4979.0938,781.625 4978.5,781.3594 Q4977.9063,781.0781 4977.2813,781.0781 Q4975.9375,781.0781 4975.25,782.1563 Q4974.5625,783.2188 4974.5625,785.3125 Q4974.5625,787.4063 4975.25,788.4844 Q4975.9375,789.5469 4977.2813,789.5469 Q4977.9063,789.5469 4978.5,789.2813 Q4979.0938,789 4979.7188,788.4219 L4979.7188,791.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4997.25" y="790.3467">ModifiableHyperBoundingBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="4899.5" x2="5264.5" y1="801.5" y2="801.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4906.5" y="812.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="151" x="4918.5" y="818.4951">serialVersionUID: long</text><line style="stroke:#181818;stroke-width:0.5;" x1="4899.5" x2="5264.5" y1="825.7969" y2="825.7969"/><ellipse cx="4909.5" cy="839.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="4918.5" y="842.792">ModifiableHyperBoundingBox()</text><ellipse cx="4909.5" cy="855.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="4918.5" y="859.0889">ModifiableHyperBoundingBox(SpatialComparable)</text><ellipse cx="4909.5" cy="872.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="4918.5" y="875.3857">ModifiableHyperBoundingBox(double[], double[])</text><ellipse cx="4909.5" cy="888.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="4918.5" y="891.6826">ModifiableHyperBoundingBox(int, double, double)</text><ellipse cx="4909.5" cy="904.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="4918.5" y="907.9795">setMax(int, double): void</text><ellipse cx="4909.5" cy="920.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="4918.5" y="924.2764">setMin(int, double): void</text><ellipse cx="4909.5" cy="937.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="4918.5" y="940.5732">getMinRef(): double[]</text><ellipse cx="4909.5" cy="953.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="4918.5" y="956.8701">getMaxRef(): double[]</text><ellipse cx="4909.5" cy="969.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="4918.5" y="973.167">set(SpatialComparable): void</text><ellipse cx="4909.5" cy="986.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="4918.5" y="989.4639">extend(SpatialComparable): boolean</text></g></a><!--MD5=[135bb79dd8f8b1d54ecbff64dca8d91a]
class elki.result.textwriter.TextWriteable--><a href="../result/textwriter/TextWriteable.html" target="_top" title="../result/textwriter/TextWriteable.html" xlink:actuate="onRequest" xlink:href="../result/textwriter/TextWriteable.html" xlink:show="new" xlink:title="../result/textwriter/TextWriteable.html" xlink:type="simple"><g id="elem_elki.result.textwriter.TextWriteable"><rect codeLine="906" fill="#F1F1F1" height="64.2969" id="elki.result.textwriter.TextWriteable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="331" x="7716.5" y="384.5"/><ellipse cx="7828.25" cy="400.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7824.1719,396.2656 L7824.1719,394.1094 L7831.5625,394.1094 L7831.5625,396.2656 L7829.0938,396.2656 L7829.0938,404.3438 L7831.5625,404.3438 L7831.5625,406.5 L7824.1719,406.5 L7824.1719,404.3438 L7826.6406,404.3438 L7826.6406,396.2656 L7824.1719,396.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="99" x="7848.75" y="405.3467">TextWriteable</text><line style="stroke:#181818;stroke-width:0.5;" x1="7717.5" x2="8046.5" y1="416.5" y2="416.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="7717.5" x2="8046.5" y1="424.5" y2="424.5"/><ellipse cx="7727.5" cy="438.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="305" x="7736.5" y="441.4951">writeToText(TextWriterStream, String): void</text></g></a><!--MD5=[17ab2ec4c837f52a2c497b9931f21e20]
class elki.data.model.Model--><g id="elem_elki.data.model.Model"><rect fill="#F1F1F1" height="48" id="elki.data.model.Model" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="74" x="8955" y="1269"/><ellipse cx="8970" cy="1285" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8972.9688,1290.6406 Q8972.3906,1290.9375 8971.75,1291.0781 Q8971.1094,1291.2344 8970.4063,1291.2344 Q8967.9063,1291.2344 8966.5781,1289.5938 Q8965.2656,1287.9375 8965.2656,1284.8125 Q8965.2656,1281.6875 8966.5781,1280.0313 Q8967.9063,1278.375 8970.4063,1278.375 Q8971.1094,1278.375 8971.75,1278.5313 Q8972.4063,1278.6875 8972.9688,1278.9844 L8972.9688,1281.7031 Q8972.3438,1281.125 8971.75,1280.8594 Q8971.1563,1280.5781 8970.5313,1280.5781 Q8969.1875,1280.5781 8968.5,1281.6563 Q8967.8125,1282.7188 8967.8125,1284.8125 Q8967.8125,1286.9063 8968.5,1287.9844 Q8969.1875,1289.0469 8970.5313,1289.0469 Q8971.1563,1289.0469 8971.75,1288.7813 Q8972.3438,1288.5 8972.9688,1287.9219 L8972.9688,1290.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="8984" y="1289.8467">Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="8956" x2="9028" y1="1301" y2="1301"/><line style="stroke:#181818;stroke-width:0.5;" x1="8956" x2="9028" y1="1309" y2="1309"/></g><!--MD5=[5826bffb6ffb7f6246f21e5452394df3]
class elki.data.type.SimpleTypeInformation--><g id="elem_elki.data.type.SimpleTypeInformation"><rect fill="#F1F1F1" height="48" id="elki.data.type.SimpleTypeInformation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="8277.5" y="1744.5"/><ellipse cx="8292.5" cy="1760.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8295.4688,1766.1406 Q8294.8906,1766.4375 8294.25,1766.5781 Q8293.6094,1766.7344 8292.9063,1766.7344 Q8290.4063,1766.7344 8289.0781,1765.0938 Q8287.7656,1763.4375 8287.7656,1760.3125 Q8287.7656,1757.1875 8289.0781,1755.5313 Q8290.4063,1753.875 8292.9063,1753.875 Q8293.6094,1753.875 8294.25,1754.0313 Q8294.9063,1754.1875 8295.4688,1754.4844 L8295.4688,1757.2031 Q8294.8438,1756.625 8294.25,1756.3594 Q8293.6563,1756.0781 8293.0313,1756.0781 Q8291.6875,1756.0781 8291,1757.1563 Q8290.3125,1758.2188 8290.3125,1760.3125 Q8290.3125,1762.4063 8291,1763.4844 Q8291.6875,1764.5469 8293.0313,1764.5469 Q8293.6563,1764.5469 8294.25,1764.2813 Q8294.8438,1764 8295.4688,1763.4219 L8295.4688,1766.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="8306.5" y="1765.3467">SimpleTypeInformation</text><line style="stroke:#181818;stroke-width:0.5;" x1="8278.5" x2="8465.5" y1="1776.5" y2="1776.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8278.5" x2="8465.5" y1="1784.5" y2="1784.5"/></g><!--MD5=[9ff4951fb5946d1b580ee90a203cd928]
class elki.data.type.VectorTypeInformation--><g id="elem_elki.data.type.VectorTypeInformation"><rect fill="#F1F1F1" height="48" id="elki.data.type.VectorTypeInformation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="8502" y="1744.5"/><ellipse cx="8517" cy="1760.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8519.9688,1766.1406 Q8519.3906,1766.4375 8518.75,1766.5781 Q8518.1094,1766.7344 8517.4063,1766.7344 Q8514.9063,1766.7344 8513.5781,1765.0938 Q8512.2656,1763.4375 8512.2656,1760.3125 Q8512.2656,1757.1875 8513.5781,1755.5313 Q8514.9063,1753.875 8517.4063,1753.875 Q8518.1094,1753.875 8518.75,1754.0313 Q8519.4063,1754.1875 8519.9688,1754.4844 L8519.9688,1757.2031 Q8519.3438,1756.625 8518.75,1756.3594 Q8518.1563,1756.0781 8517.5313,1756.0781 Q8516.1875,1756.0781 8515.5,1757.1563 Q8514.8125,1758.2188 8514.8125,1760.3125 Q8514.8125,1762.4063 8515.5,1763.4844 Q8516.1875,1764.5469 8517.5313,1764.5469 Q8518.1563,1764.5469 8518.75,1764.2813 Q8519.3438,1764 8519.9688,1763.4219 L8519.9688,1766.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="8531" y="1765.3467">VectorTypeInformation</text><line style="stroke:#181818;stroke-width:0.5;" x1="8503" x2="8689" y1="1776.5" y2="1776.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8503" x2="8689" y1="1784.5" y2="1784.5"/></g><!--MD5=[07a70fa3ad43915415ae0df357918a4a]
class elki.data.type.VectorFieldTypeInformation--><g id="elem_elki.data.type.VectorFieldTypeInformation"><rect fill="#F1F1F1" height="48" id="elki.data.type.VectorFieldTypeInformation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="220" x="8725" y="1744.5"/><ellipse cx="8740" cy="1760.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8742.9688,1766.1406 Q8742.3906,1766.4375 8741.75,1766.5781 Q8741.1094,1766.7344 8740.4063,1766.7344 Q8737.9063,1766.7344 8736.5781,1765.0938 Q8735.2656,1763.4375 8735.2656,1760.3125 Q8735.2656,1757.1875 8736.5781,1755.5313 Q8737.9063,1753.875 8740.4063,1753.875 Q8741.1094,1753.875 8741.75,1754.0313 Q8742.4063,1754.1875 8742.9688,1754.4844 L8742.9688,1757.2031 Q8742.3438,1756.625 8741.75,1756.3594 Q8741.1563,1756.0781 8740.5313,1756.0781 Q8739.1875,1756.0781 8738.5,1757.1563 Q8737.8125,1758.2188 8737.8125,1760.3125 Q8737.8125,1762.4063 8738.5,1763.4844 Q8739.1875,1764.5469 8740.5313,1764.5469 Q8741.1563,1764.5469 8741.75,1764.2813 Q8742.3438,1764 8742.9688,1763.4219 L8742.9688,1766.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="8754" y="1765.3467">VectorFieldTypeInformation</text><line style="stroke:#181818;stroke-width:0.5;" x1="8726" x2="8944" y1="1776.5" y2="1776.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8726" x2="8944" y1="1784.5" y2="1784.5"/></g><!--MD5=[fafa09e96069e64ae7d93037ec06383a]
class elki.utilities.io.ByteBufferSerializer--><a href="../utilities/io/ByteBufferSerializer.html" target="_top" title="../utilities/io/ByteBufferSerializer.html" xlink:actuate="onRequest" xlink:href="../utilities/io/ByteBufferSerializer.html" xlink:show="new" xlink:title="../utilities/io/ByteBufferSerializer.html" xlink:type="simple"><g id="elem_elki.utilities.io.ByteBufferSerializer"><rect codeLine="919" fill="#F1F1F1" height="96.8906" id="elki.utilities.io.ByteBufferSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="256" x="7716" y="834.5"/><ellipse cx="7764.25" cy="850.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7760.1719,846.2656 L7760.1719,844.1094 L7767.5625,844.1094 L7767.5625,846.2656 L7765.0938,846.2656 L7765.0938,854.3438 L7767.5625,854.3438 L7767.5625,856.5 L7760.1719,856.5 L7760.1719,854.3438 L7762.6406,854.3438 L7762.6406,846.2656 L7760.1719,846.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="7784.75" y="855.3467">ByteBufferSerializer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="7966" y="831.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="7967" y="843.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="7717" x2="7971" y1="866.5" y2="866.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="7717" x2="7971" y1="874.5" y2="874.5"/><ellipse cx="7727" cy="888.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="211" x="7736" y="891.4951">fromByteBuffer(ByteBuffer): T</text><ellipse cx="7727" cy="904.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="230" x="7736" y="907.792">toByteBuffer(ByteBuffer, T): void</text><ellipse cx="7727" cy="920.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="7736" y="924.0889">getByteSize(T): int</text></g></a><!--MD5=[29a3f9c3e599a99be58e321392791e0a]
class java.lang.Number--><g id="elem_java.lang.Number"><rect codeLine="927" fill="#F1F1F1" height="129.4844" id="java.lang.Number" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="4650" y="41"/><ellipse cx="4709.25" cy="57" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4709.3594,52.3438 L4708.2031,57.4219 L4710.5313,57.4219 L4709.3594,52.3438 Z M4707.875,50.1094 L4710.8594,50.1094 L4714.2188,62.5 L4711.7656,62.5 L4711,59.4375 L4707.7188,59.4375 L4706.9688,62.5 L4704.5313,62.5 L4707.875,50.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="57" x="4729.75" y="61.8467">Number</text><line style="stroke:#181818;stroke-width:0.5;" x1="4651" x2="4833" y1="73" y2="73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4658" y="83.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="151" x="4670" y="89.9951">serialVersionUID: long</text><line style="stroke:#181818;stroke-width:0.5;" x1="4651" x2="4833" y1="97.2969" y2="97.2969"/><ellipse cx="4661" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="4670" y="114.292">intValue(): int</text><ellipse cx="4661" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="122" x="4670" y="130.5889">longValue(): long</text><ellipse cx="4661" cy="143.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="124" x="4670" y="146.8857">floatValue(): float</text><ellipse cx="4661" cy="159.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="158" x="4670" y="163.1826">doubleValue(): double</text></g><!--MD5=[008d82c49f85b4d489e041917c99c847]
class java.lang.Comparable--><g id="elem_java.lang.Comparable"><rect codeLine="934" fill="#F1F1F1" height="64.2969" id="java.lang.Comparable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="4869.5" y="73.5"/><ellipse cx="4894.85" cy="89.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4890.7719,85.2656 L4890.7719,83.1094 L4898.1625,83.1094 L4898.1625,85.2656 L4895.6938,85.2656 L4895.6938,93.3438 L4898.1625,93.3438 L4898.1625,95.5 L4890.7719,95.5 L4890.7719,93.3438 L4893.2406,93.3438 L4893.2406,85.2656 L4890.7719,85.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="4911.15" y="94.3467">Comparable</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="5016.5" y="70.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="5017.5" y="82.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="4870.5" x2="5021.5" y1="105.5" y2="105.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4870.5" x2="5021.5" y1="113.5" y2="113.5"/><ellipse cx="4880.5" cy="127.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="4889.5" y="130.4951">compareTo(T): int</text></g><!--MD5=[ab8fa349a1e2e86ca8104897b03d4899]
class java.util.Comparator--><g id="elem_java.util.Comparator"><rect codeLine="940" fill="#F1F1F1" height="325.0469" id="java.util.Comparator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="681" x="8103.5" y="254"/><ellipse cx="8392.25" cy="270" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8388.1719,265.7656 L8388.1719,263.6094 L8395.5625,263.6094 L8395.5625,265.7656 L8393.0938,265.7656 L8393.0938,273.8438 L8395.5625,273.8438 L8395.5625,276 L8388.1719,276 L8388.1719,273.8438 L8390.6406,273.8438 L8390.6406,265.7656 L8388.1719,265.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="8412.75" y="274.8467">Comparator</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="8778.5" y="251"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="8779.5" y="263.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="8104.5" x2="8783.5" y1="286" y2="286"/><line style="stroke:#181818;stroke-width:0.5;" x1="8104.5" x2="8783.5" y1="294" y2="294"/><ellipse cx="8114.5" cy="307.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="8123.5" y="310.9951">compare(T, T): int</text><ellipse cx="8114.5" cy="323.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="8123.5" y="327.292">reversed(): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="340.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="8123.5" y="343.5889">thenComparing(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="356.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="655" x="8123.5" y="359.8857">thenComparing(Function&lt;? super T, ? extends U&gt;, Comparator&lt;? super U&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="372.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="639" x="8123.5" y="376.1826">thenComparing(Function&lt;? super T, ? extends Comparable&lt;? super U&gt;&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="389.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="440" x="8123.5" y="392.4795">thenComparingInt(ToIntFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="405.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="8123.5" y="408.7764">thenComparingLong(ToLongFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="421.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="506" x="8123.5" y="425.0732">thenComparingDouble(ToDoubleFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="438.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="459" x="8123.5" y="441.3701">reverseOrder(): Comparator&lt;T extends Comparable&lt;? super T&gt;&gt;</text><ellipse cx="8114.5" cy="454.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="454" x="8123.5" y="457.667">naturalOrder(): Comparator&lt;T extends Comparable&lt;? super T&gt;&gt;</text><ellipse cx="8114.5" cy="470.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="363" x="8123.5" y="473.9639">nullsFirst(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="486.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="362" x="8123.5" y="490.2607">nullsLast(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="503.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="621" x="8123.5" y="506.5576">comparing(Function&lt;? super T, ? extends U&gt;, Comparator&lt;? super U&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="519.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="605" x="8123.5" y="522.8545">comparing(Function&lt;? super T, ? extends Comparable&lt;? super U&gt;&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="535.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="406" x="8123.5" y="539.1514">comparingInt(ToIntFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="552.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="8123.5" y="555.4482">comparingLong(ToLongFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="8114.5" cy="568.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="472" x="8123.5" y="571.7451">comparingDouble(ToDoubleFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text></g><!--MD5=[fcd46920285db0b2ccf06276dd312c21]
class elki.data.spatial.SpatialComparable--><g id="elem_elki.data.spatial.SpatialComparable"><rect fill="#F1F1F1" height="48" id="elki.data.spatial.SpatialComparable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="5287" y="81.5"/><ellipse cx="5302" cy="97.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5304.9688,103.1406 Q5304.3906,103.4375 5303.75,103.5781 Q5303.1094,103.7344 5302.4063,103.7344 Q5299.9063,103.7344 5298.5781,102.0938 Q5297.2656,100.4375 5297.2656,97.3125 Q5297.2656,94.1875 5298.5781,92.5313 Q5299.9063,90.875 5302.4063,90.875 Q5303.1094,90.875 5303.75,91.0313 Q5304.4063,91.1875 5304.9688,91.4844 L5304.9688,94.2031 Q5304.3438,93.625 5303.75,93.3594 Q5303.1563,93.0781 5302.5313,93.0781 Q5301.1875,93.0781 5300.5,94.1563 Q5299.8125,95.2188 5299.8125,97.3125 Q5299.8125,99.4063 5300.5,100.4844 Q5301.1875,101.5469 5302.5313,101.5469 Q5303.1563,101.5469 5303.75,101.2813 Q5304.3438,101 5304.9688,100.4219 L5304.9688,103.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="5316" y="102.3467">SpatialComparable</text><line style="stroke:#181818;stroke-width:0.5;" x1="5288" x2="5446" y1="113.5" y2="113.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5288" x2="5446" y1="121.5" y2="121.5"/></g><!--MD5=[a0b94d8eead1d7e17630c46d7bb7bb24]
class java.io.Externalizable--><g id="elem_java.io.Externalizable"><rect codeLine="962" fill="#F1F1F1" height="80.5938" id="java.io.Externalizable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="261" x="5503.5" y="65"/><ellipse cx="5579.75" cy="81" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5575.6719,76.7656 L5575.6719,74.6094 L5583.0625,74.6094 L5583.0625,76.7656 L5580.5938,76.7656 L5580.5938,84.8438 L5583.0625,84.8438 L5583.0625,87 L5575.6719,87 L5575.6719,84.8438 L5578.1406,84.8438 L5578.1406,76.7656 L5575.6719,76.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="100" x="5600.25" y="85.8467">Externalizable</text><line style="stroke:#181818;stroke-width:0.5;" x1="5504.5" x2="5763.5" y1="97" y2="97"/><line style="stroke:#181818;stroke-width:0.5;" x1="5504.5" x2="5763.5" y1="105" y2="105"/><ellipse cx="5514.5" cy="118.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="235" x="5523.5" y="121.9951">writeExternal(ObjectOutput): void</text><ellipse cx="5514.5" cy="134.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="221" x="5523.5" y="138.292">readExternal(ObjectInput): void</text></g><!--MD5=[6004bd2074d3bddbe0f39aed65a9b8d1]
reverse link elki.result.textwriter.TextWriteable to elki.data.Cluster--><g id="link_elki.result.textwriter.TextWriteable_elki.data.Cluster"><path codeLine="748" d="M7845.58,464.23 C7808.24,508.35 7745.86,572.21 7676,603 C7642.49,617.77 7630.02,604.39 7594,611 C7465.79,634.52 7424.34,623.61 7311,688 C7304.99,691.41 7299.03,695.05 7293.13,698.87 " fill="none" id="elki.result.textwriter.TextWriteable-backto-elki.data.Cluster" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7840.28,459.66,7858.41,448.68,7851.08,468.57,7840.28,459.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6643551e11dd1c7d5849a27aececaf44]
link elki.data.Cluster to elki.data.model.Model--><g id="link_elki.data.Cluster_elki.data.model.Model"><path codeLine="749" d="M7293.1,1069.68 C7298.98,1072.71 7304.95,1075.49 7311,1078 C7472.46,1145.01 8724.29,1036.93 8884,1108 C8946.56,1135.84 8975.09,1219.43 8986.11,1263.73 " fill="none" id="elki.data.Cluster-to-elki.data.model.Model" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8987.31,1268.67,8989.0884,1258.983,8986.1377,1263.8094,8981.3114,1260.8587,8987.31,1268.67" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="8909" y="1121.0669">model</text></g><!--MD5=[f46c69604782ca735a8a543cbdefe2e9]
link elki.data.Clustering to elki.data.type.SimpleTypeInformation--><g id="link_elki.data.Clustering_elki.data.type.SimpleTypeInformation"><path codeLine="750" d="M7512.39,505.63 C7569.04,539.19 7636.18,575.86 7700,603 C7822.81,655.24 7887.86,599.77 7988,688 C8325.82,985.63 8366.45,1600.82 8371.33,1739.37 " fill="none" id="elki.data.Clustering-to-elki.data.type.SimpleTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8371.51,1744.48,8375.1993,1735.3482,8371.3387,1739.4829,8367.204,1735.6223,8371.51,1744.48" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="8260" y="1121.0669">TYPE</text></g><!--MD5=[1ddbf5e466f6449701f3b36d591586ca]
link elki.data.Clustering to elki.data.Cluster--><g id="link_elki.data.Clustering_elki.data.Cluster"><path codeLine="751" d="M7323.88,505.69 C7295.25,556.05 7258.14,621.35 7222.89,683.38 " fill="none" id="elki.data.Clustering-to-elki.data.Cluster" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7220.35,687.84,7228.2779,681.9963,7222.823,683.4944,7221.3249,678.0395,7220.35,687.84" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="100" x="7259" y="624.0669">toplevelclusters</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="7258" y="639.1997">toplevelClusters</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="66" x="7276" y="654.3325">allClusters</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="7217.5238" y="676.9885">*</text></g><!--MD5=[b98442cb2fe82092f9dbeba3532ad922]
reverse link elki.data.SparseNumberVector to elki.data.BitVector--><g id="link_elki.data.SparseNumberVector_elki.data.BitVector"><path codeLine="752" d="M2482.19,1293.9 C2064.15,1295.6 789.09,1316.74 431,1508 C425.09,1511.16 419.28,1514.56 413.57,1518.17 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.BitVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2482.31,1286.9,2502.33,1293.83,2482.36,1300.9,2482.31,1286.9" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[179d265bc00e66945619ee0bd92fe6d7]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.BitVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.BitVector.ShortSerializer"><path codeLine="758" d="M7832.29,951.53 C7812.63,1065.88 7772.27,1305.02 7743,1508 C7726.34,1623.51 7764.21,1951.45 7677,2029 C7605.42,2092.65 876.52,2082.97 781,2090 C718.23,2094.62 649.41,2103.44 590.08,2112.24 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.BitVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7825.41,950.19,7835.71,931.67,7839.21,952.57,7825.41,950.19" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7b947c6ca29fdfe7e5c74371968e8c9e]
reverse link elki.data.BitVector to elki.data.BitVector.ShortSerializer--><g id="link_elki.data.BitVector_elki.data.BitVector.ShortSerializer"><path codeLine="759" d="M381.75,2042.16 C392.34,2059.8 402.08,2076.01 410.4,2089.87 " fill="none" id="elki.data.BitVector-backto-elki.data.BitVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="378.0116" cy="2035.9366" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="382.1331" x2="373.89" y1="2042.7932" y2="2029.08"/><line style="stroke:#181818;stroke-width:1.0;" x1="371.155" x2="384.8681" y1="2040.0581" y2="2031.815"/></g><!--MD5=[3e7ae8f71cca6731a3b515b0a558e1a7]
reverse link java.lang.Number to elki.data.Bit--><g id="link_java.lang.Number_elki.data.Bit"><path codeLine="760" d="M4629.81,122.76 C4556.55,137.28 4461.25,163.82 4388,211 C4353.75,233.06 4322.39,263.65 4295.89,294.46 " fill="none" id="java.lang.Number-backto-elki.data.Bit" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4628.91,115.81,4649.86,118.98,4631.5,129.57,4628.91,115.81" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3fefabb79585fdcc1d0c6b02c8905c91]
link elki.data.Bit to elki.data.Bit--><g id="link_elki.data.Bit_elki.data.Bit"><path codeLine="761" d="M4300.53,377.35 C4320.73,380.88 4335.5,393.93 4335.5,416.5 C4335.5,437.13 4323.16,449.81 4305.61,454.53 " fill="none" id="elki.data.Bit-to-elki.data.Bit" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4300.53,455.65,4310.1779,457.6293,4305.4139,454.579,4308.4643,449.815,4300.53,455.65" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="33" x="4345" y="413.5669">TRUE</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="4341.5" y="428.6997">FALSE</text></g><!--MD5=[cbd73558bae4c1f29b31102d4f633aab]
reverse link java.lang.Comparable to elki.data.ClassLabel--><g id="link_java.lang.Comparable_elki.data.ClassLabel"><path codeLine="762" d="M5041.9,138.41 C5105.99,158.22 5192.6,182.09 5271,194 C5319.59,201.38 5673.44,181.83 5713,211 C5771.47,254.11 5782.7,348.45 5784.69,392.27 " fill="none" id="java.lang.Comparable-backto-elki.data.ClassLabel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5039.76,145.08,5022.77,132.42,5043.95,131.72,5039.76,145.08" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[988c88e4b664d265af6bdb180c245497]
reverse link elki.data.NumberVector to elki.data.IntegerVector--><g id="link_elki.data.NumberVector_elki.data.IntegerVector"><path codeLine="764" d="M5354.25,1013.22 C5334.65,1038.77 5310.89,1062.46 5283,1078 C5256.6,1092.7 4227.73,1149.63 4198,1155 C4116.73,1169.68 4029.45,1193.23 3952.7,1216.7 " fill="none" id="elki.data.NumberVector-backto-elki.data.IntegerVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5348.82,1008.77,5366.22,996.68,5360.16,1016.98,5348.82,1008.77" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3084ea43ef1e71e48d5cb986a9a8efdf]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.IntegerVector.SmallSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.IntegerVector.SmallSerializer"><path codeLine="770" d="M7807.44,949.09 C7778.24,994.08 7732.86,1050.57 7676,1078 C7510.15,1158 6975.95,1019.75 6851,1155 C6762.87,1250.4 6859.99,1354.55 6755,1431 C6602.71,1541.89 3531.36,1419.61 3365,1508 C3279.53,1553.41 3224.85,1658.26 3198.86,1719.89 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.IntegerVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.66,945.13,7818.19,931.88,7813.53,952.55,7801.66,945.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6deda6496e429a89d2d12b6fcf3fa1dd]
reverse link elki.data.IntegerVector to elki.data.IntegerVector.SmallSerializer--><g id="link_elki.data.IntegerVector_elki.data.IntegerVector.SmallSerializer"><path codeLine="771" d="M3500.19,1409.06 C3452.82,1437.9 3405.23,1471.24 3365,1508 C3296.1,1570.96 3237.98,1663.89 3206.44,1719.77 " fill="none" id="elki.data.IntegerVector-backto-elki.data.IntegerVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3506.3414" cy="1405.3582" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3499.4828" x2="3513.2" y1="1409.4764" y2="1401.24"/><line style="stroke:#181818;stroke-width:1.0;" x1="3502.2232" x2="3510.4596" y1="1398.4996" y2="1412.2168"/></g><!--MD5=[d5a224c70425ba6bae5dff10ec645019]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.IntegerVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.IntegerVector.ShortSerializer"><path codeLine="772" d="M7807.4,949.02 C7778.19,993.97 7732.8,1050.46 7676,1078 C7524.45,1151.48 7033.6,1028.85 6922,1155 C6821.89,1268.16 6937.93,1388.78 6816,1478 C6746.88,1528.57 3808.89,1468.31 3733,1508 C3647.11,1552.92 3592.51,1658.21 3566.66,1719.98 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.IntegerVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.62,945.06,7818.17,931.83,7813.49,952.49,7801.62,945.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7d3f4ccdc8bbfd6debc2449e2ec6b80f]
reverse link elki.data.IntegerVector to elki.data.IntegerVector.ShortSerializer--><g id="link_elki.data.IntegerVector_elki.data.IntegerVector.ShortSerializer"><path codeLine="773" d="M3680.47,1429.17 C3642.62,1526.57 3593.77,1652.28 3567.57,1719.71 " fill="none" id="elki.data.IntegerVector-backto-elki.data.IntegerVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3683.0726" cy="1422.4769" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3680.1753" x2="3685.97" y1="1429.9338" y2="1415.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="3675.6157" x2="3690.5295" y1="1419.5795" y2="1425.3743"/></g><!--MD5=[4bd9ae53f6316eae321d9a5437956137]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.IntegerVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.IntegerVector.VariableSerializer"><path codeLine="774" d="M7807.36,948.93 C7778.12,993.83 7732.73,1050.3 7676,1078 C7559.63,1134.83 7219.68,1076.77 7094,1108 C7045.95,1119.94 7025.88,1117.98 6993,1155 C6892.68,1267.97 7008.88,1388.71 6887,1478 C6824.57,1523.74 4169.56,1472.1 4101,1508 C4015.14,1552.96 3960.52,1658.24 3934.67,1720 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.IntegerVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.57,944.97,7818.13,931.75,7813.43,952.41,7801.57,944.97" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a5454e2516e337a6b4d8a596f98f596b]
reverse link elki.data.IntegerVector to elki.data.IntegerVector.VariableSerializer--><g id="link_elki.data.IntegerVector_elki.data.IntegerVector.VariableSerializer"><path codeLine="775" d="M3785.53,1429.17 C3823.38,1526.57 3872.23,1652.28 3898.43,1719.71 " fill="none" id="elki.data.IntegerVector-backto-elki.data.IntegerVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3782.9274" cy="1422.4769" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3785.8247" x2="3780.03" y1="1429.9338" y2="1415.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="3775.4705" x2="3790.3843" y1="1425.3743" y2="1419.5795"/></g><!--MD5=[170831d0b87020f979f4384adbd2ea62]
reverse link elki.data.ClassLabel to elki.data.HierarchicalClassLabel--><g id="link_elki.data.ClassLabel_elki.data.HierarchicalClassLabel"><path codeLine="776" d="M5795.89,460.01 C5807.78,500.16 5829.96,560.42 5865,603 C5907.45,654.59 5938.11,644.7 5989,688 C6018.15,712.81 6047.67,741.7 6074.31,769.49 " fill="none" id="elki.data.ClassLabel-backto-elki.data.HierarchicalClassLabel" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5789.08,461.67,5790.45,440.53,5802.57,457.91,5789.08,461.67" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fa313d33aa2d18895f56eab7aa493936]
link elki.data.HierarchicalClassLabel to elki.data.type.SimpleTypeInformation--><g id="link_elki.data.HierarchicalClassLabel_elki.data.type.SimpleTypeInformation"><path codeLine="777" d="M6253.41,996.67 C6282.57,1029.01 6318.49,1060.29 6359,1078 C6409.48,1100.07 8301.93,1070.2 8342,1108 C8434.23,1195 8389.45,1624.18 8375.59,1739.13 " fill="none" id="elki.data.HierarchicalClassLabel-to-elki.data.type.SimpleTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8374.96,1744.37,8380.0335,1735.9285,8375.5732,1739.4077,8372.0939,1734.9474,8374.96,1744.37" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="8399" y="1297.5669">TYPE</text></g><!--MD5=[486fc33ac45fa1f8b5c8d9ce8eb78270]
reverse link elki.data.SparseNumberVector to elki.data.SparseDoubleVector--><g id="link_elki.data.SparseNumberVector_elki.data.SparseDoubleVector"><path codeLine="781" d="M2482.23,1300.22 C2137.01,1318 1224.29,1376.46 955,1508 C913.58,1528.23 874.74,1557.61 840.29,1589.39 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.SparseDoubleVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2482.09,1293.22,2502.42,1299.19,2482.8,1307.2,2482.09,1293.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9fcc30026b24e76f33ec1f666dfbf20a]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SparseDoubleVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SparseDoubleVector.VariableSerializer"><path codeLine="787" d="M7840.45,951.84 C7827.31,1196.67 7780.11,2022.22 7739,2060 C7706.8,2089.59 1485.66,2087.61 1442,2090 C1355.84,2094.71 1260.82,2104.04 1180.15,2113.19 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SparseDoubleVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7833.47,951.22,7841.53,931.63,7847.45,951.97,7833.47,951.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[698f1d34bf4387a7e083950ef66a29d0]
reverse link elki.data.SparseDoubleVector to elki.data.SparseDoubleVector.VariableSerializer--><g id="link_elki.data.SparseDoubleVector_elki.data.SparseDoubleVector.VariableSerializer"><path codeLine="788" d="M845.88,1959.57 C884.87,2008.04 923.4,2055.95 950.65,2089.82 " fill="none" id="elki.data.SparseDoubleVector-backto-elki.data.SparseDoubleVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="841.2443" cy="1953.8035" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="846.2585" x2="836.23" y1="1960.0371" y2="1947.57"/><line style="stroke:#181818;stroke-width:1.0;" x1="835.0107" x2="847.4778" y1="1958.8178" y2="1948.7893"/></g><!--MD5=[b35ccd17d41c2a9a5013432ec639d839]
reverse link elki.data.NumberVector to elki.data.ShortVector--><g id="link_elki.data.NumberVector_elki.data.ShortVector"><path codeLine="789" d="M5353.01,1012.98 C5333.56,1038.27 5310.18,1061.92 5283,1078 C5222.97,1113.52 4726,1132.46 4660,1155 C4646.65,1159.56 4633.23,1164.95 4619.95,1170.92 " fill="none" id="elki.data.NumberVector-backto-elki.data.ShortVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5347.48,1008.68,5364.91,996.63,5358.8,1016.92,5347.48,1008.68" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c01675df010c7b6ef2571a3f47a2dc79]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.ShortVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.ShortVector.ShortSerializer"><path codeLine="795" d="M7807.3,948.81 C7778.04,993.65 7732.63,1050.1 7676,1078 C7573.56,1128.47 7273.62,1079.66 7163,1108 C7115.82,1120.09 7096.2,1118.46 7064,1155 C6964.11,1268.36 7079.83,1388.64 6958,1478 C6901.98,1519.09 4518.28,1475.25 4457,1508 C4372.56,1553.13 4320.31,1658.08 4295.75,1719.8 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.ShortVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.51,944.86,7818.09,931.66,7813.36,952.31,7801.51,944.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[01c901af16e6568bcecfd28116c7cf6b]
reverse link elki.data.ShortVector to elki.data.ShortVector.ShortSerializer--><g id="link_elki.data.ShortVector_elki.data.ShortVector.ShortSerializer"><path codeLine="796" d="M4386.08,1429.47 C4355.24,1526.83 4315.48,1652.35 4294.14,1719.71 " fill="none" id="elki.data.ShortVector-backto-elki.data.ShortVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4388.2448" cy="1422.6467" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4385.8295" x2="4390.66" y1="1430.2734" y2="1415.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="4380.618" x2="4395.8715" y1="1420.2315" y2="1425.062"/></g><!--MD5=[f44d58dc36c8e115a669662ba7ecacb0]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.ShortVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.ShortVector.VariableSerializer"><path codeLine="797" d="M7807.23,948.66 C7777.93,993.44 7732.51,1049.86 7676,1078 C7586.88,1122.38 7325.07,1081.89 7229,1108 C7183.93,1120.25 7165.52,1119.64 7135,1155 C7036.27,1269.37 7150.76,1388.55 7029,1478 C6929.78,1550.9 4921.54,1449.89 4813,1508 C4728.59,1553.19 4676.33,1658.12 4651.76,1719.82 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.ShortVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.44,944.72,7818.03,931.54,7813.28,952.19,7801.44,944.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[81c808d53a228ce93578b5b0f9d59353]
reverse link elki.data.ShortVector to elki.data.ShortVector.VariableSerializer--><g id="link_elki.data.ShortVector_elki.data.ShortVector.VariableSerializer"><path codeLine="798" d="M4487.68,1428.87 C4530.07,1526.32 4584.84,1652.21 4614.21,1719.71 " fill="none" id="elki.data.ShortVector-backto-elki.data.ShortVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4484.8418" cy="1422.3557" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4488.0335" x2="4481.65" y1="1429.6914" y2="1415.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="4477.506" x2="4492.1775" y1="1425.5475" y2="1419.164"/></g><!--MD5=[272f8ca182e4c87d29b4ebcb17edf0bc]
reverse link elki.data.SparseNumberVector to elki.data.SparseShortVector--><g id="link_elki.data.SparseNumberVector_elki.data.SparseShortVector"><path codeLine="799" d="M2482.06,1308.67 C2217.9,1339.25 1640.2,1414.78 1465,1508 C1432.38,1525.36 1401.35,1548.33 1372.89,1573.45 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.SparseShortVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2481.38,1301.7,2502.05,1306.37,2482.98,1315.61,2481.38,1301.7" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[70f1d041c249040fc95e8b23052cdfef]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SparseShortVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SparseShortVector.VariableSerializer"><path codeLine="805" d="M7847.38,951.93 C7858.56,1190.89 7889.3,1982.55 7810,2060 C7782.26,2087.09 2265.73,2088.32 2227,2090 C2093.46,2095.79 1943.12,2108.18 1828.56,2118.86 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SparseShortVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7840.38,952.15,7846.43,931.84,7854.37,951.48,7840.38,952.15" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4c1a6489b8e57699f5dc6d679db376f2]
reverse link elki.data.SparseShortVector to elki.data.SparseShortVector.VariableSerializer--><g id="link_elki.data.SparseShortVector_elki.data.SparseShortVector.VariableSerializer"><path codeLine="806" d="M1401.27,1974.18 C1422.14,1993.43 1443.59,2012.05 1465,2029 C1492.92,2051.1 1525.7,2072.18 1555.52,2089.78 " fill="none" id="elki.data.SparseShortVector-backto-elki.data.SparseShortVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1395.9315" cy="1969.2053" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1401.783" x2="1390.08" y1="1974.6606" y2="1963.75"/><line style="stroke:#181818;stroke-width:1.0;" x1="1390.4762" x2="1401.3868" y1="1975.0568" y2="1963.3538"/></g><!--MD5=[f12b9e27137abac9333cefb7fd68ebc0]
reverse link elki.data.SparseNumberVector to elki.data.SparseIntegerVector--><g id="link_elki.data.SparseNumberVector_elki.data.SparseIntegerVector"><path codeLine="807" d="M2482.64,1320.79 C2349.8,1351.59 2143.63,1410.84 1987,1508 C1957,1526.61 1927.79,1549.27 1900.43,1573.38 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.SparseIntegerVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2481.44,1313.88,2502.5,1316.26,2484.55,1327.53,2481.44,1313.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e26110f4bb6bf6bdeae099705237d99e]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SparseIntegerVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SparseIntegerVector.VariableSerializer"><path codeLine="813" d="M7858.12,951.19 C7903.82,1177.09 8036.09,1903.79 7881,2060 C7860.52,2080.62 3725.06,2089.35 3696,2090 C3316.27,2098.51 2872.51,2117.28 2625.61,2128.51 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SparseIntegerVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7851.24,952.53,7854.1,931.53,7864.96,949.72,7851.24,952.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9b04bfa447e9d48e02791f07e7adccf0]
reverse link elki.data.SparseIntegerVector to elki.data.SparseIntegerVector.VariableSerializer--><g id="link_elki.data.SparseIntegerVector_elki.data.SparseIntegerVector.VariableSerializer"><path codeLine="814" d="M1907.39,1973.32 C1932.55,1994.27 1959.31,2013.51 1987,2029 C2065.48,2072.91 2161.39,2099.17 2244.3,2114.83 " fill="none" id="elki.data.SparseIntegerVector-backto-elki.data.SparseIntegerVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1902.0418" cy="1968.7556" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1908.1335" x2="1895.95" y1="1973.9412" y2="1963.57"/><line style="stroke:#181818;stroke-width:1.0;" x1="1896.8561" x2="1907.2274" y1="1974.8474" y2="1962.6639"/></g><!--MD5=[94312abf557fcd3a96553fb3cbf33f26]
reverse link elki.data.SparseNumberVector to elki.data.SparseByteVector--><g id="link_elki.data.SparseNumberVector_elki.data.SparseByteVector"><path codeLine="815" d="M2494.1,1447.1 C2462.05,1487.35 2427.05,1531.32 2393.53,1573.42 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.SparseByteVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2488.77,1442.56,2506.7,1431.27,2499.72,1451.28,2488.77,1442.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fb2e335a8aeec42a41fedc53dc2a396c]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SparseByteVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SparseByteVector.VariableSerializer"><path codeLine="821" d="M7885.25,949.4 C7909.99,992.6 7939.08,1051.47 7952,1108 C7999.12,1314.24 8100.85,1909.67 7952,2060 C7922.28,2090.01 4953.22,2088.81 4911,2090 C4618.87,2098.27 4279.83,2115.7 4076.62,2126.99 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SparseByteVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7879.07,952.69,7874.98,931.9,7891.14,945.6,7879.07,952.69" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[501f3e21330787e68172325d2e46644c]
reverse link elki.data.SparseByteVector to elki.data.SparseByteVector.VariableSerializer--><g id="link_elki.data.SparseByteVector_elki.data.SparseByteVector.VariableSerializer"><path codeLine="822" d="M2406.02,1973.4 C2432.26,1995.36 2460.79,2014.83 2491,2029 C2599.01,2079.66 3358.5,2116.14 3713.24,2130.62 " fill="none" id="elki.data.SparseByteVector-backto-elki.data.SparseByteVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2400.5938" cy="1968.7182" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2406.6576" x2="2394.53" y1="1973.9365" y2="1963.5"/><line style="stroke:#181818;stroke-width:1.0;" x1="2395.3756" x2="2405.8121" y1="1974.7821" y2="1962.6544"/></g><!--MD5=[51088d7b39ac8e838b98efb54c30e371]
reverse link elki.data.NumberVector to elki.data.FloatVector--><g id="link_elki.data.NumberVector_elki.data.FloatVector"><path codeLine="823" d="M5344.18,1012.95 C5326.04,1036.48 5305.41,1059.42 5283,1078 C5221.02,1129.4 5190.12,1117.24 5119,1155 C5109.35,1160.12 5099.54,1165.46 5089.67,1170.93 " fill="none" id="elki.data.NumberVector-backto-elki.data.FloatVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5338.78,1008.48,5356.34,996.61,5350.01,1016.84,5338.78,1008.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6aa42e766cf8955d2b6d2fb8898a6153]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.FloatVector.SmallSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.FloatVector.SmallSerializer"><path codeLine="829" d="M7806.85,948.87 C7777.49,993.48 7732.16,1049.6 7676,1078 C7486.72,1173.73 7343.38,994.24 7205,1155 C7106.52,1269.4 7221.44,1388.34 7100,1478 C7013.51,1541.86 5259.6,1456.91 5165,1508 C5081.06,1553.33 5029.56,1658.21 5005.43,1719.86 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.FloatVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7801.05,944.94,7817.68,931.81,7812.87,952.45,7801.05,944.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[17f734d2c6e1b529621c14522c167b6f]
reverse link elki.data.FloatVector to elki.data.FloatVector.SmallSerializer--><g id="link_elki.data.FloatVector_elki.data.FloatVector.SmallSerializer"><path codeLine="830" d="M4917.67,1429.77 C4938.23,1527.09 4964.7,1652.42 4978.91,1719.71 " fill="none" id="elki.data.FloatVector-backto-elki.data.FloatVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4916.2138" cy="1422.8472" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4917.8677" x2="4914.56" y1="1430.6744" y2="1415.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="4908.3867" x2="4924.041" y1="1424.501" y2="1421.1933"/></g><!--MD5=[7b6a91bfeed0e3f6a0282bcf327becaf]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.FloatVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.FloatVector.ShortSerializer"><path codeLine="831" d="M7806.67,948.54 C7777.23,992.98 7731.87,1049.04 7676,1078 C7515.27,1161.32 7395.5,1019 7276,1155 C7176.36,1268.39 7292.32,1388.18 7171,1478 C7097.14,1532.69 5597.81,1464.22 5517,1508 C5433.12,1553.44 5381.6,1658.28 5357.45,1719.89 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.FloatVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7800.87,944.62,7817.54,931.54,7812.66,952.16,7800.87,944.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[77182ca36d65edf8e8a679f4bbea211f]
reverse link elki.data.FloatVector to elki.data.FloatVector.ShortSerializer--><g id="link_elki.data.FloatVector_elki.data.FloatVector.ShortSerializer"><path codeLine="832" d="M5074.31,1424.55 C5106.1,1450.54 5137.66,1478.86 5165,1508 C5227.39,1574.49 5283.49,1665.07 5314.81,1719.74 " fill="none" id="elki.data.FloatVector-backto-elki.data.FloatVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5068.8101" cy="1420.111" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5075.0302" x2="5062.59" y1="1425.1419" y2="1415.08"/><line style="stroke:#181818;stroke-width:1.0;" x1="5063.7791" x2="5073.841" y1="1426.331" y2="1413.8909"/></g><!--MD5=[74b7c6e7f611a7842d66d060ec179021]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.FloatVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.FloatVector.VariableSerializer"><path codeLine="833" d="M7806.12,948.43 C7776.54,992.55 7731.25,1048.27 7676,1078 C7543.76,1149.16 7446.35,1042.38 7347,1155 C7247.14,1268.2 7363.15,1387.95 7242,1478 C7180.81,1523.48 5937.02,1471.65 5870,1508 C5785.99,1553.57 5734.05,1658.36 5709.65,1719.93 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.FloatVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7800.31,944.54,7817.06,931.56,7812.05,952.15,7800.31,944.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[092f7e892e1d1548189d837d27fc0b8b]
reverse link elki.data.FloatVector to elki.data.FloatVector.VariableSerializer--><g id="link_elki.data.FloatVector_elki.data.FloatVector.VariableSerializer"><path codeLine="834" d="M5095.43,1421.32 C5103.3,1424.77 5111.17,1428.01 5119,1431 C5287.35,1495.17 5366.59,1408.82 5517,1508 C5595.73,1559.92 5648.51,1660.42 5674.4,1719.96 " fill="none" id="elki.data.FloatVector-backto-elki.data.FloatVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5089.0416" cy="1418.4233" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5096.3233" x2="5081.76" y1="1421.7366" y2="1415.11"/><line style="stroke:#181818;stroke-width:1.0;" x1="5085.7283" x2="5092.3549" y1="1425.7049" y2="1411.1417"/></g><!--MD5=[cf8a33aa9d903920596e613dd5608ca0]
reverse link elki.data.ClassLabel to elki.data.SimpleClassLabel--><g id="link_elki.data.ClassLabel_elki.data.SimpleClassLabel"><path codeLine="835" d="M5784.17,460.58 C5782.53,545.06 5778.9,732.39 5777.08,826.2 " fill="none" id="elki.data.ClassLabel-backto-elki.data.SimpleClassLabel" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5777.17,460.4,5784.55,440.53,5791.16,460.67,5777.17,460.4" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[af754abe026e8526510a18ce46b92f8b]
link elki.data.SimpleClassLabel to elki.data.type.SimpleTypeInformation--><g id="link_elki.data.SimpleClassLabel_elki.data.type.SimpleTypeInformation"><path codeLine="836" d="M5817.75,939.77 C5856.51,986.53 5918.83,1050.02 5990,1078 C6111.62,1125.81 8214.88,1077.7 8342,1108 C8388.21,1119.02 8412.86,1114.69 8438,1155 C8559.38,1349.57 8431.14,1647.88 8386.27,1739.66 " fill="none" id="elki.data.SimpleClassLabel-to-elki.data.type.SimpleTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8383.94,1744.39,8391.5105,1738.0903,8386.1532,1739.9065,8384.3369,1734.5491,8383.94,1744.39" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="8489" y="1297.5669">TYPE</text></g><!--MD5=[feab0469009529de0a0567870bec1032]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SimpleClassLabel.Serializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SimpleClassLabel.Serializer"><path codeLine="837" d="M7807.78,948.82 C7778.63,993.95 7733.16,1050.74 7676,1078 C7584.49,1121.64 6858.12,1070.3 6764,1108 C6693.67,1136.17 6631.68,1199.66 6594.53,1244.14 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SimpleClassLabel.Serializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7802.01,944.85,7818.51,931.56,7813.9,952.24,7802.01,944.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4fe51b54a4ba976afdd97e4c13cd9eab]
reverse link elki.data.SimpleClassLabel to elki.data.SimpleClassLabel.Serializer--><g id="link_elki.data.SimpleClassLabel_elki.data.SimpleClassLabel.Serializer"><path codeLine="838" d="M5832.23,950.81 C5871.97,993.66 5928.86,1046.9 5990,1078 C6140.1,1154.35 6206.3,1088.47 6361,1155 C6412.86,1177.3 6465.01,1214.38 6502.61,1244.34 " fill="none" id="elki.data.SimpleClassLabel-backto-elki.data.SimpleClassLabel.Serializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5827.392" cy="945.4999" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5832.784" x2="5822" y1="951.4097" y2="939.59"/><line style="stroke:#181818;stroke-width:1.0;" x1="5821.4821" x2="5833.3018" y1="950.8918" y2="940.1079"/></g><!--MD5=[41c626a01a98e396d5d0fd7da8526d15]
link elki.data.LabelList to elki.data.LabelList--><g id="link_elki.data.LabelList_elki.data.LabelList"><path codeLine="842" d="M4736.56,381.45 C4757.62,387.57 4771.5,399.26 4771.5,416.5 C4771.5,432.39 4759.7,443.57 4741.36,450.02 " fill="none" id="elki.data.LabelList-to-elki.data.LabelList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4736.56,451.55,4746.3513,452.6135,4741.3216,450.0246,4743.9106,444.9949,4736.56,451.55" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="4777.5" y="421.0669">EMPTY_LABELS</text></g><!--MD5=[ab59b16eb2329d9922af53e0cc38c88d]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.LabelList.Serializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.LabelList.Serializer"><path codeLine="843" d="M7813.32,816.22 C7783,759.1 7730.69,680.71 7658.5,645.5 C7583.9,609.11 4745.05,609.01 4670.5,645.5 C4590.54,684.64 4535.25,776.99 4507.24,834.32 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.LabelList.Serializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7819.7,813.31,7822.58,834.31,7807.24,819.69,7819.7,813.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[40b329179a95fc341adbef71179d0b2e]
reverse link elki.data.LabelList to elki.data.LabelList.Serializer--><g id="link_elki.data.LabelList_elki.data.LabelList.Serializer"><path codeLine="844" d="M4553.6,512.57 C4535.69,610.45 4508.51,758.99 4494.7,834.43 " fill="none" id="elki.data.LabelList-backto-elki.data.LabelList.Serializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4554.8989" cy="505.4791" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4553.4577" x2="4556.34" y1="513.3482" y2="497.61"/><line style="stroke:#181818;stroke-width:1.0;" x1="4547.0297" x2="4562.768" y1="504.038" y2="506.9203"/></g><!--MD5=[05f272580af53d463321b42faef857cb]
reverse link elki.data.SparseNumberVector to elki.data.SparseFloatVector--><g id="link_elki.data.SparseNumberVector_elki.data.SparseFloatVector"><path codeLine="845" d="M2658.4,1450.85 C2669,1490.08 2680.51,1532.62 2691.53,1573.42 " fill="none" id="elki.data.SparseNumberVector-backto-elki.data.SparseFloatVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2651.57,1452.41,2653.11,1431.27,2665.09,1448.75,2651.57,1452.41" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[82bdd2ddaa2a56b2a1672c61707b4c9b]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.SparseFloatVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.SparseFloatVector.VariableSerializer"><path codeLine="851" d="M7881.45,948.97 C7906.32,988.86 7941.41,1039.49 7980,1078 C7996.5,1094.46 8012.22,1087.34 8023,1108 C8071.92,1201.78 8096.79,1984.22 8023,2060 C7975.25,2109.04 5924.38,2130.57 5293.63,2136.04 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.SparseFloatVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7875.4,952.48,7870.94,931.77,7887.34,945.18,7875.4,952.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[92102206ac683e6fc866f9a334a61899]
reverse link elki.data.SparseFloatVector to elki.data.SparseFloatVector.VariableSerializer--><g id="link_elki.data.SparseFloatVector_elki.data.SparseFloatVector.VariableSerializer"><path codeLine="852" d="M2910.79,1973.61 C2937.35,1995.67 2966.29,2015.11 2997,2029 C3018.91,2038.91 4419.06,2105.19 4928.35,2129 " fill="none" id="elki.data.SparseFloatVector-backto-elki.data.SparseFloatVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2905.2316" cy="1968.8575" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2911.3132" x2="2899.15" y1="1974.0551" y2="1963.66"/><line style="stroke:#181818;stroke-width:1.0;" x1="2900.034" x2="2910.4291" y1="1974.9391" y2="1962.776"/></g><!--MD5=[c29b5d5c7fd90917801f1fc2e456e169]
reverse link elki.data.NumberVector to elki.data.DoubleVector--><g id="link_elki.data.NumberVector_elki.data.DoubleVector"><path codeLine="853" d="M5401.27,1016.34 C5393.11,1066.04 5383.88,1122.24 5375.89,1170.87 " fill="none" id="elki.data.NumberVector-backto-elki.data.DoubleVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5394.37,1015.17,5404.51,996.57,5408.18,1017.44,5394.37,1015.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bd6624d5c976aa61dae04aedc1a37e31]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.DoubleVector.SmallSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.DoubleVector.SmallSerializer"><path codeLine="859" d="M7804.78,948.51 C7774.92,991.96 7729.84,1046.84 7676,1078 C7572.44,1137.95 7497.83,1065.85 7418,1155 C7317.3,1267.45 7433.88,1387.59 7313,1478 C7217.4,1549.5 6344.35,1451.85 6239,1508 C6153.43,1553.61 6098.32,1658.38 6072.07,1719.94 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.DoubleVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7799.14,944.36,7816.05,931.59,7810.79,952.12,7799.14,944.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[85766e394c50e18bfa946337aef7973b]
reverse link elki.data.DoubleVector to elki.data.DoubleVector.SmallSerializer--><g id="link_elki.data.DoubleVector_elki.data.DoubleVector.SmallSerializer"><path codeLine="860" d="M5577.01,1422.22 C5582.72,1425.2 5588.39,1428.14 5594,1431 C5639.55,1454.23 5650.12,1463 5699,1478 C5772.35,1500.51 5804.12,1467.05 5869,1508 C5950.18,1559.24 6006.3,1660.22 6034.04,1719.98 " fill="none" id="elki.data.DoubleVector-backto-elki.data.DoubleVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5570.7229" cy="1418.8882" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5577.7958" x2="5563.65" y1="1422.6264" y2="1415.15"/><line style="stroke:#181818;stroke-width:1.0;" x1="5566.9847" x2="5574.4611" y1="1425.9611" y2="1411.8153"/></g><!--MD5=[459bed3237a412ab0cba4ec37f26b589]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.DoubleVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.DoubleVector.ShortSerializer"><path codeLine="861" d="M7802.54,948.36 C7772.18,990.75 7727.43,1044.42 7676,1078 C7638.22,1102.67 7620.73,1090.82 7579,1108 C7537.27,1125.18 7518.14,1120.54 7489,1155 C7391.53,1270.27 7504.39,1386.94 7384,1478 C7315.18,1530.05 6683.93,1467.01 6608,1508 C6522.8,1554 6467.63,1658.37 6441.25,1719.82 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.DoubleVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7796.87,944.26,7814.05,931.86,7808.35,952.27,7796.87,944.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7f2cad27e10e6e695dfdd9fb513d3d65]
reverse link elki.data.DoubleVector to elki.data.DoubleVector.ShortSerializer--><g id="link_elki.data.DoubleVector_elki.data.DoubleVector.ShortSerializer"><path codeLine="862" d="M5567.53,1420.97 C5576.36,1424.6 5585.2,1427.97 5594,1431 C5734.06,1479.27 5776.89,1460.53 5924,1478 C5993.83,1486.29 6178.14,1472.79 6239,1508 C6322.3,1556.19 6377.45,1659.01 6404.18,1719.76 " fill="none" id="elki.data.DoubleVector-backto-elki.data.DoubleVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5561.0347" cy="1418.1977" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5568.3895" x2="5553.68" y1="1421.3453" y2="1415.05"/><line style="stroke:#181818;stroke-width:1.0;" x1="5557.8871" x2="5564.1824" y1="1425.5524" y2="1410.8429"/></g><!--MD5=[3e5bee08ca1cab59fd70c6f3c13a9b39]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.DoubleVector.VariableSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.DoubleVector.VariableSerializer"><path codeLine="863" d="M7798.96,948 C7767.85,988.9 7723.63,1041.01 7676,1078 C7652.45,1096.29 7641.2,1092.06 7616,1108 C7587.37,1126.11 7575.26,1127.13 7556,1155 C7470.49,1278.74 7573.34,1385.16 7455,1478 C7371.26,1543.69 7070.04,1456.32 6977,1508 C6892.48,1554.95 6837.15,1658.72 6810.54,1719.86 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.DoubleVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7793.48,943.65,7811.05,931.81,7804.7,952.02,7793.48,943.65" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[079c9acf0b415d529895d1243f3a4e67]
reverse link elki.data.DoubleVector to elki.data.DoubleVector.VariableSerializer--><g id="link_elki.data.DoubleVector_elki.data.DoubleVector.VariableSerializer"><path codeLine="864" d="M5565.31,1420.82 C5574.86,1424.58 5584.45,1428.01 5594,1431 C5652.63,1449.38 6083.73,1473.4 6145,1478 C6196.41,1481.86 6562.99,1482.86 6608,1508 C6692.26,1555.06 6747.22,1658.79 6773.62,1719.89 " fill="none" id="elki.data.DoubleVector-backto-elki.data.DoubleVector.VariableSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5558.747" cy="1418.1171" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5566.1439" x2="5551.35" y1="1421.1643" y2="1415.07"/><line style="stroke:#181818;stroke-width:1.0;" x1="5555.6998" x2="5561.7941" y1="1425.5141" y2="1410.7202"/></g><!--MD5=[5213c094b8ab6e46a94c57235f2bb22d]
reverse link elki.data.NumberVector to elki.data.ByteVector--><g id="link_elki.data.NumberVector_elki.data.ByteVector"><path codeLine="865" d="M5509.37,1012.86 C5526.26,1035.31 5544.5,1057.9 5563,1078 C5592.41,1109.95 5626.38,1141.79 5659.63,1170.77 " fill="none" id="elki.data.NumberVector-backto-elki.data.ByteVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5503.59,1016.81,5497.33,996.56,5514.84,1008.48,5503.59,1016.81" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4802d17df64132f538658e3cbea00fb9]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.ByteVector.SmallSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.ByteVector.SmallSerializer"><path codeLine="871" d="M7790.84,947.04 C7758.19,985.35 7715.24,1034.99 7676,1078 C7644.01,1113.06 7624.69,1113.31 7602,1155 C7531.51,1284.54 7634.44,1378.05 7526,1478 C7460.23,1538.62 7402.61,1460.22 7327,1508 C7247.19,1558.44 7195.1,1659.95 7169.87,1719.97 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.ByteVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7785.65,942.34,7803.94,931.64,7796.31,951.41,7785.65,942.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c6399af871c0d8d9425aec84e338b6d0]
reverse link elki.data.ByteVector to elki.data.ByteVector.SmallSerializer--><g id="link_elki.data.ByteVector_elki.data.ByteVector.SmallSerializer"><path codeLine="872" d="M6010.64,1421.59 C6018.09,1424.95 6025.56,1428.11 6033,1431 C6269.09,1522.85 6923.52,1478.06 6977,1508 C7059.98,1554.45 7111.29,1658.66 7135.45,1719.95 " fill="none" id="elki.data.ByteVector-backto-elki.data.ByteVector.SmallSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6004.046" cy="1418.5106" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6011.2919" x2="5996.8" y1="1421.9012" y2="1415.12"/><line style="stroke:#181818;stroke-width:1.0;" x1="6000.6554" x2="6007.4365" y1="1425.7565" y2="1411.2646"/></g><!--MD5=[2b405f2bc72e4fbf6a122dffbd5be552]
reverse link elki.utilities.io.ByteBufferSerializer to elki.data.ByteVector.ShortSerializer--><g id="link_elki.utilities.io.ByteBufferSerializer_elki.data.ByteVector.ShortSerializer"><path codeLine="873" d="M7789.82,947.46 C7755.79,990.3 7713.48,1049.49 7687,1108 C7617.22,1262.19 7643.42,1315.25 7597,1478 C7572.44,1564.1 7538.83,1662.89 7518.87,1719.96 " fill="none" id="elki.utilities.io.ByteBufferSerializer-backto-elki.data.ByteVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7784.39,943.04,7802.4,931.88,7795.28,951.84,7784.39,943.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ceef5a60ae5e412fc85ef27758ef9705]
reverse link elki.data.ByteVector to elki.data.ByteVector.ShortSerializer--><g id="link_elki.data.ByteVector_elki.data.ByteVector.ShortSerializer"><path codeLine="874" d="M6006.04,1421.14 C6014.99,1424.82 6024,1428.13 6033,1431 C6307.49,1518.38 7076.79,1365.25 7327,1508 C7409.48,1555.06 7460.9,1658.79 7485.23,1719.89 " fill="none" id="elki.data.ByteVector-backto-elki.data.ByteVector.ShortSerializer" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5999.3713" cy="1418.2589" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6006.7126" x2="5992.03" y1="1421.4379" y2="1415.08"/><line style="stroke:#181818;stroke-width:1.0;" x1="5996.1923" x2="6002.5502" y1="1425.6002" y2="1410.9177"/></g><!--MD5=[8082b71b561841820ac4f89f6ef078cb]
reverse link elki.data.NumberVector to elki.data.OneDimensionalDoubleVector--><g id="link_elki.data.NumberVector_elki.data.OneDimensionalDoubleVector"><path codeLine="875" d="M5493.94,1012.81 C5513.27,1037.91 5536.36,1061.52 5563,1078 C5653,1133.68 5936.76,1110.96 6033,1155 C6067.24,1170.67 6100.11,1195.45 6127.31,1219.65 " fill="none" id="elki.data.NumberVector-backto-elki.data.OneDimensionalDoubleVector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5488.25,1016.88,5482.1,996.6,5499.55,1008.61,5488.25,1016.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d8827c24aadc7780b674906e2797d824]
reverse link java.util.Comparator to elki.data.VectorUtil.SortDBIDsBySingleDimension--><g id="link_java.util.Comparator_elki.data.VectorUtil.SortDBIDsBySingleDimension"><path codeLine="881" d="M8122.31,585.82 C8102.87,592.43 8083.35,598.26 8064,603 C8031.51,610.96 7796.37,608.57 7763,611 C7587.11,623.8 7544.61,641.8 7369,658 C7267.21,667.39 7006.4,654.01 6910,688 C6840.26,712.59 6772.18,760.11 6721.09,801.96 " fill="none" id="java.util.Comparator-backto-elki.data.VectorUtil.SortDBIDsBySingleDimension" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8120.11,579.17,8141.3,579.09,8124.79,592.36,8120.11,579.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b55ed152671af9ac89c5ee31ee876f7c]
reverse link elki.data.VectorUtil to elki.data.VectorUtil.SortDBIDsBySingleDimension--><g id="link_elki.data.VectorUtil_elki.data.VectorUtil.SortDBIDsBySingleDimension"><path codeLine="882" d="M6395.56,591.3 C6454.86,663.6 6520.79,743.98 6568.27,801.86 " fill="none" id="elki.data.VectorUtil-backto-elki.data.VectorUtil.SortDBIDsBySingleDimension" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6390.7888" cy="585.4993" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6395.8576" x2="6385.72" y1="591.6886" y2="579.31"/><line style="stroke:#181818;stroke-width:1.0;" x1="6384.5995" x2="6396.9781" y1="590.5681" y2="580.4305"/></g><!--MD5=[ace8ef0846067492c8bac374bbe746b1]
reverse link java.util.Comparator to elki.data.VectorUtil.SortVectorsBySingleDimension--><g id="link_java.util.Comparator_elki.data.VectorUtil.SortVectorsBySingleDimension"><path codeLine="883" d="M8107.61,586.54 C8092.99,592.36 8078.41,597.87 8064,603 C7907.48,658.68 7846.39,609.46 7700,688 C7643.51,718.31 7591.08,768.13 7553.25,809.69 " fill="none" id="java.util.Comparator-backto-elki.data.VectorUtil.SortVectorsBySingleDimension" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="8104.99,580.05,8126.16,579.02,8110.25,593.02,8104.99,580.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[48a690d2f79be2baa264258bb8aae051]
reverse link elki.data.VectorUtil to elki.data.VectorUtil.SortVectorsBySingleDimension--><g id="link_elki.data.VectorUtil_elki.data.VectorUtil.SortVectorsBySingleDimension"><path codeLine="884" d="M6576.01,584.06 C6597.99,591.47 6620.1,597.92 6642,603 C6661.48,607.52 7345.1,600.3 7362,611 C7430.87,654.59 7464.8,745.45 7480.81,809.93 " fill="none" id="elki.data.VectorUtil-backto-elki.data.VectorUtil.SortVectorsBySingleDimension" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6569.1461" cy="581.6779" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6576.7022" x2="6561.59" y1="584.3057" y2="579.05"/><line style="stroke:#181818;stroke-width:1.0;" x1="6566.5182" x2="6571.7739" y1="589.2339" y2="574.1218"/></g><!--MD5=[1259a32b3a5ce68e05b070ea3f468d3f]
reverse link elki.data.NumberVector to elki.data.SparseNumberVector--><g id="link_elki.data.NumberVector_elki.data.SparseNumberVector"><path codeLine="885" d="M5355.16,1013.01 C5335.43,1038.84 5311.39,1062.7 5283,1078 C5272.07,1083.89 3508.36,1153.78 3496,1155 C3219.24,1182.42 2896.95,1238.94 2729.75,1270.14 " fill="none" id="elki.data.NumberVector-backto-elki.data.SparseNumberVector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5349.51,1008.87,5366.88,996.74,5360.87,1017.06,5349.51,1008.87" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9c0424d3fbaf411f0ed0718187e0224a]
reverse link elki.data.SparseFeatureVector to elki.data.SparseNumberVector--><g id="link_elki.data.SparseFeatureVector_elki.data.SparseNumberVector"><path codeLine="886" d="M4740.6,966.37 C4722.79,1007.54 4694.76,1053.67 4653,1078 C4560.15,1132.09 2811.28,1052.94 2719,1108 C2699.67,1119.54 2683.68,1136.15 2670.54,1154.73 " fill="none" id="elki.data.SparseFeatureVector-backto-elki.data.SparseNumberVector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4734.2,963.51,4748.19,947.59,4747.18,968.76,4734.2,963.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[402889ab55d9e80a29fc27bf54ea59bb]
link elki.data.SparseNumberVector to elki.data.type.VectorTypeInformation--><g id="link_elki.data.SparseNumberVector_elki.data.type.VectorTypeInformation"><path codeLine="887" d="M2729.65,1316.88 C2896.74,1349.33 3218.88,1407.41 3496,1431 C3565.04,1436.88 8426.4,1469.49 8484,1508 C8563.43,1561.11 8586.82,1683.56 8593.47,1739.14 " fill="none" id="elki.data.SparseNumberVector-to-elki.data.type.VectorTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8594.07,1744.3,8597.013,1734.9011,8593.4974,1739.3329,8589.0657,1735.8173,8594.07,1744.3" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="7517" y="1474.0669">VARIABLE_LENGTH</text></g><!--MD5=[437c74eb659a01423cf150ee3dff0555]
link elki.data.SparseNumberVector to elki.data.type.VectorFieldTypeInformation--><g id="link_elki.data.SparseNumberVector_elki.data.type.VectorFieldTypeInformation"><path codeLine="888" d="M2729.63,1317.18 C2896.68,1350.01 3218.79,1408.54 3496,1431 C3955.73,1468.24 7185.92,1449.13 7647,1461 C7882.93,1467.08 8510.58,1378.67 8708,1508 C8789.7,1561.52 8820.59,1683.76 8830.7,1739.21 " fill="none" id="elki.data.SparseNumberVector-to-elki.data.type.VectorFieldTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8831.61,1744.36,8833.955,1734.7944,8830.7256,1739.4388,8826.0812,1736.2094,8831.61,1744.36" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="35" x="8637" y="1474.0669">FIELD</text></g><!--MD5=[a5d5f8c9f3202ceac2ff97c655cdcd74]
link elki.data.FeatureVector to elki.data.type.VectorTypeInformation--><g id="link_elki.data.FeatureVector_elki.data.type.VectorTypeInformation"><path codeLine="891" d="M5098.52,457.17 C5113.84,501.73 5145.63,571.9 5201,603 C5214.13,610.37 7353.97,610.04 7369,611 C7645.67,628.65 7734.68,575.36 7988,688 C8277.93,816.92 8380.31,874.17 8528,1155 C8634.32,1357.17 8610.6,1648.13 8599.79,1739.17 " fill="none" id="elki.data.FeatureVector-to-elki.data.type.VectorTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8599.16,1744.37,8604.2125,1735.9159,8599.7608,1739.4062,8596.2704,1734.9546,8599.16,1744.37" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="8512" y="1121.0669">TYPE</text></g><!--MD5=[a9fe6eefc0d73b9f67e5e8d5f3973bb3]
reverse link elki.data.FeatureVector to elki.data.SparseFeatureVector--><g id="link_elki.data.FeatureVector_elki.data.SparseFeatureVector"><path codeLine="893" d="M5041.77,472.81 C4998.62,526.49 4932.72,610.93 4881,688 C4852.59,730.33 4823.52,779.92 4801.85,818.36 " fill="none" id="elki.data.FeatureVector-backto-elki.data.SparseFeatureVector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5036.38,468.34,5054.39,457.18,5047.27,477.13,5036.38,468.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fef34957a6251e401a228005a9fd3538]
reverse link elki.data.FeatureVector to elki.data.NumberVector--><g id="link_elki.data.FeatureVector_elki.data.NumberVector"><path codeLine="894" d="M5117.81,474.6 C5139.21,512.4 5169.46,562.3 5201,603 C5233.15,644.49 5249.33,647.73 5283,688 C5304.38,713.57 5326.11,742.18 5345.87,769.4 " fill="none" id="elki.data.FeatureVector-backto-elki.data.NumberVector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5111.68,477.99,5108.04,457.12,5123.91,471.17,5111.68,477.99" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b13cfb8b0236fd4b298325b6d5cc9bbf]
reverse link elki.data.spatial.SpatialComparable to elki.data.NumberVector--><g id="link_elki.data.spatial.SpatialComparable_elki.data.NumberVector"><path codeLine="895" d="M5404.26,143.19 C5426.34,162.32 5456.01,183.81 5487,194 C5530.71,208.37 8767.55,178.38 8800,211 C8922.88,334.51 8920.8,477.46 8800,603 C8689.67,717.65 7528.06,653.62 7369,658 C7318.85,659.38 5607.48,664.78 5563,688 C5528.21,706.16 5500.02,737.35 5478.31,769.48 " fill="none" id="elki.data.spatial.SpatialComparable-backto-elki.data.NumberVector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5399.36,148.2,5389.28,129.56,5408.78,137.84,5399.36,148.2" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f32e338e2c00491111f274586e25557a]
link elki.data.NumberVector to elki.data.type.VectorTypeInformation--><g id="link_elki.data.NumberVector_elki.data.type.VectorTypeInformation"><path codeLine="896" d="M5478.24,996.66 C5499.95,1028.79 5528.14,1059.95 5563,1078 C5638.34,1117.01 8557.31,1047.72 8617,1108 C8706.06,1197.94 8625.71,1624.06 8602.07,1738.92 " fill="none" id="elki.data.NumberVector-to-elki.data.type.VectorTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8600.99,1744.15,8606.7313,1736.1476,8602.0035,1739.2538,8598.8973,1734.526,8600.99,1744.15" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="8658" y="1297.5669">VARIABLE_LENGTH</text></g><!--MD5=[16fb27749bbc1f1641435c930e01bcfc]
link elki.data.NumberVector to elki.data.type.VectorFieldTypeInformation--><g id="link_elki.data.NumberVector_elki.data.type.VectorFieldTypeInformation"><path codeLine="897" d="M5478.24,996.67 C5499.94,1028.8 5528.14,1059.95 5563,1078 C5639.13,1117.41 8564.48,1093.67 8649,1108 C8713.3,1118.9 8747.98,1103.51 8788,1155 C8928.66,1336 8866.26,1644.83 8842.62,1739.25 " fill="none" id="elki.data.NumberVector-to-elki.data.type.VectorFieldTypeInformation" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8841.32,1744.37,8847.4103,1736.6299,8842.5495,1739.5235,8839.6559,1734.6627,8841.32,1744.37" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="35" x="8888.5" y="1282.5669">FIELD</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="8876" y="1297.6997">FIELD_1D</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="8876" y="1312.8325">FIELD_2D</text></g><!--MD5=[85f24f1014533dbb35cecdda69a49cd0]
reverse link elki.data.spatial.SpatialComparable to elki.data.HyperBoundingBox--><g id="link_elki.data.spatial.SpatialComparable_elki.data.HyperBoundingBox"><path codeLine="900" d="M5367,149.99 C5367,187.49 5367,243.5 5367,294.42 " fill="none" id="elki.data.spatial.SpatialComparable-backto-elki.data.HyperBoundingBox" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5360,149.73,5367,129.73,5374,149.73,5360,149.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3f476e1aa0ff8e38c1441aa4ffd2a74b]
reverse link java.io.Externalizable to elki.data.HyperBoundingBox--><g id="link_java.io.Externalizable_elki.data.HyperBoundingBox"><path codeLine="901" d="M5579.58,161.03 C5564.23,176.88 5547.71,194.4 5533,211 C5509.57,237.44 5485.17,266.54 5462.51,294.29 " fill="none" id="java.io.Externalizable-backto-elki.data.HyperBoundingBox" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="5574.85,155.84,5593.84,146.42,5584.87,165.62,5574.85,155.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0de6081e4356767b555bc5b697973920]
reverse link elki.data.HyperBoundingBox to elki.data.ModifiableHyperBoundingBox--><g id="link_elki.data.HyperBoundingBox_elki.data.ModifiableHyperBoundingBox"><path codeLine="902" d="M5281.95,556.11 C5240.15,624.24 5190.43,705.27 5151.03,769.5 " fill="none" id="elki.data.HyperBoundingBox-backto-elki.data.ModifiableHyperBoundingBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5276.25,552.02,5292.68,538.63,5288.18,559.34,5276.25,552.02" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="4440" y="2209"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="4440" y="2218.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[67c5a6983857a52b916931b52e139392]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.data {

        class Cluster<M extends Model> [[Cluster.html]] {
            #name: String
            -ids: DBIDs
            -noise: boolean
            {static} +BY_NAME_SORTER: Comparator<Cluster<?>>
            +Cluster(String, DBIDs, boolean, M extends Model)
            +Cluster(String, DBIDs, M extends Model)
            +Cluster(DBIDs, boolean, M extends Model)
            +Cluster(DBIDs, M extends Model)
            +Cluster(String, DBIDs, boolean)
            +Cluster(String, DBIDs)
            +Cluster(DBIDs, boolean)
            +Cluster(DBIDs)
            +size(): int
            +getNameAutomatic(): String
            +getName(): String
            +setName(String): void
            +getIDs(): DBIDs
            +setIDs(DBIDs): void
            +writeToText(TextWriterStream, String): void
            +isNoise(): boolean
            +setNoise(boolean): void
        }

        class Clustering<M extends Model> [[Clustering.html]] {
            -hierarchy: ModifiableHierarchy<Cluster<M extends Model>>
            +Clustering(List<Cluster<M extends Model>>)
            +Clustering()
            +addToplevelCluster(Cluster<M extends Model>): void
            +addChildCluster(Cluster<M extends Model>, Cluster<M extends Model>): void
            +getClusterHierarchy(): Hierarchy<Cluster<M extends Model>>
            +iterToplevelClusters(): It<Cluster<M extends Model>>
            {static} +getClusteringResults(Object): List<Clustering<? extends Model>>
        }

        class Subspace [[Subspace.html]] {
            -dimensions: long[]
            -dimensionality: int
            {static} +DIMENSION_COMPARATOR: Comparator<Subspace>
            +Subspace(int)
            +Subspace(long[])
            +getDimensions(): long[]
            +dimensionality(): int
            +join(Subspace): Subspace
            +dimensionsToString(): String
            +dimensonsToString(String): String
            +isSubspace(Subspace): boolean
            #joinLastDimensions(Subspace): long[]
        }

        class BitVector [[BitVector.html]] {
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<BitVector>
            -bits: long[]
            -dimensionality: int
            +BitVector(long[], int)
            +getDimensionality(): int
            +setDimensionality(int): void
            +booleanValue(int): boolean
            +- -getValue- -(int): Bit
            +doubleValue(int): double
            +longValue(int): long
            +iter(): int
            +iterAdvance(int): int
            +iterRetract(int): int
            +iterValid(int): boolean
            +iterDim(int): int
            +iterDoubleValue(int): double
            +iterLongValue(int): long
            +toArray(): double[]
            +contains(long[]): boolean
            +cloneBits(): long[]
            +cardinality(): int
            +jaccardSimilarity(BitVector): double
            +hammingDistance(BitVector): int
            +intersectionSize(BitVector): int
            +unionSize(BitVector): int
            +intersect(BitVector): boolean
            +andOnto(long[]): void
            +orOnto(long[]): void
            +xorOnto(long[]): void
        }

        class elki.data.BitVector.Factory [[BitVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): BitVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): BitVector
            +newNumberVector(Int2DoubleOpenHashMap, int): BitVector
            +getDefaultSerializer(): ByteBufferSerializer<BitVector>
            +getRestrictionClass(): Class<? super BitVector>
        }

        class elki.data.BitVector.Factory.Par [[BitVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.BitVector.ShortSerializer [[BitVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): BitVector
            +toByteBuffer(ByteBuffer, BitVector): void
            +getByteSize(BitVector): int
        }

        class Bit [[Bit.html]] {
            {static} -serialVersionUID: long
            {static} +BIT_PATTERN: Pattern
            -bit: boolean
            +- -Bit- -(boolean)
            +- -Bit- -(int)
            {static} +valueOf(String): Bit
            {static} +valueOf(boolean): Bit
            +intValue(): int
            +longValue(): long
            +floatValue(): float
            +doubleValue(): double
            +bitValue(): boolean
        }

        abstract class ClassLabel [[ClassLabel.html]]

        abstract class elki.data.ClassLabel.Factory<L extends ClassLabel> [[ClassLabel.Factory.html]] {
            #existing: HashMap<String, L extends ClassLabel>
            {abstract} +makeFromString(String): L extends ClassLabel
            {abstract} +getTypeInformation(): SimpleTypeInformation<? super ClassLabel>
        }

        class IntegerVector [[IntegerVector.html]] {
            {static} +BYTE_SERIALIZER: ByteBufferSerializer<IntegerVector>
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<IntegerVector>
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<IntegerVector>
            -values: int[]
            -IntegerVector(int[], boolean)
            +IntegerVector(int[])
            +getDimensionality(): int
            +- -getValue- -(int): Integer
            +doubleValue(int): double
            +longValue(int): long
            +intValue(int): int
            +toArray(): double[]
        }

        class elki.data.IntegerVector.Factory [[IntegerVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): IntegerVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): IntegerVector
            +getDefaultSerializer(): ByteBufferSerializer<IntegerVector>
            +getRestrictionClass(): Class<? super IntegerVector>
        }

        class elki.data.IntegerVector.Factory.Par [[IntegerVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.IntegerVector.SmallSerializer [[IntegerVector.SmallSerializer.html]] {
            +fromByteBuffer(ByteBuffer): IntegerVector
            +toByteBuffer(ByteBuffer, IntegerVector): void
            +getByteSize(IntegerVector): int
        }

        class elki.data.IntegerVector.ShortSerializer [[IntegerVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): IntegerVector
            +toByteBuffer(ByteBuffer, IntegerVector): void
            +getByteSize(IntegerVector): int
        }

        class elki.data.IntegerVector.VariableSerializer [[IntegerVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): IntegerVector
            +toByteBuffer(ByteBuffer, IntegerVector): void
            +getByteSize(IntegerVector): int
        }

        class ExternalID [[ExternalID.html]] {
            -name: String
            +ExternalID(String)
        }

        class HierarchicalClassLabel [[HierarchicalClassLabel.html]] {
            {static} +DEFAULT_SEPARATOR: Pattern
            {static} +DEFAULT_SEPARATOR_STRING: String
            -separatorPattern: Pattern
            -separatorString: String
            -levelwiseNames: Comparable<?>[]
            +HierarchicalClassLabel(String, Pattern, String)
            +HierarchicalClassLabel(String)
            +compareTo(ClassLabel): int
            +depth(): int
            +getNameAt(int): String
            +toString(int): String
        }

        class elki.data.HierarchicalClassLabel.Factory [[HierarchicalClassLabel.Factory.html]] {
            +makeFromString(String): HierarchicalClassLabel
        }

        class SparseDoubleVector [[SparseDoubleVector.html]] {
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<SparseDoubleVector>
            {static} -DOUBLE0: double
            -indexes: int[]
            -values: double[]
            -dimensionality: int
            +SparseDoubleVector(int[], double[], int)
            +SparseDoubleVector(Int2DoubleOpenHashMap, int)
            +SparseDoubleVector(double[])
            -getMaxDim(): int
            +getDimensionality(): int
            +setDimensionality(int): void
            +- -getValue- -(int): Double
            +- -doubleValue- -(int): double
            +- -longValue- -(int): long
            +toArray(): double[]
            +iterDim(int): int
            +iterValid(int): boolean
            +iterDoubleValue(int): double
            +iterLongValue(int): long
        }

        class elki.data.SparseDoubleVector.Factory [[SparseDoubleVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): SparseDoubleVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): SparseDoubleVector
            +newNumberVector(Int2DoubleOpenHashMap, int): SparseDoubleVector
            +getDefaultSerializer(): ByteBufferSerializer<SparseDoubleVector>
            +getRestrictionClass(): Class<? super SparseDoubleVector>
        }

        class elki.data.SparseDoubleVector.Factory.Par [[SparseDoubleVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.SparseDoubleVector.VariableSerializer [[SparseDoubleVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): SparseDoubleVector
            +toByteBuffer(ByteBuffer, SparseDoubleVector): void
            +getByteSize(SparseDoubleVector): int
        }

        class ShortVector [[ShortVector.html]] {
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<ShortVector>
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<ShortVector>
            -values: short[]
            -ShortVector(short[], boolean)
            +ShortVector(short[])
            +getDimensionality(): int
            +- -getValue- -(int): Short
            +doubleValue(int): double
            +longValue(int): long
            +shortValue(int): short
            +getValues(): short[]
            +toArray(): double[]
        }

        class elki.data.ShortVector.Factory [[ShortVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): ShortVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): ShortVector
            +getDefaultSerializer(): ByteBufferSerializer<ShortVector>
            +getRestrictionClass(): Class<? super ShortVector>
        }

        class elki.data.ShortVector.Factory.Par [[ShortVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.ShortVector.ShortSerializer [[ShortVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): ShortVector
            +toByteBuffer(ByteBuffer, ShortVector): void
            +getByteSize(ShortVector): int
        }

        class elki.data.ShortVector.VariableSerializer [[ShortVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): ShortVector
            +toByteBuffer(ByteBuffer, ShortVector): void
            +getByteSize(ShortVector): int
        }

        class SparseShortVector [[SparseShortVector.html]] {
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<SparseShortVector>
            {static} -SHORT0: short
            -indexes: int[]
            -values: short[]
            -dimensionality: int
            +SparseShortVector(int[], short[], int)
            +SparseShortVector(Int2DoubleOpenHashMap, int)
            +SparseShortVector(short[])
            -getMaxDim(): int
            +getDimensionality(): int
            +setDimensionality(int): void
            +- -getValue- -(int): Short
            +- -doubleValue- -(int): double
            +- -longValue- -(int): long
            +- -shortValue- -(int): short
            +toArray(): double[]
            +iterDim(int): int
            +iterValid(int): boolean
            +iterDoubleValue(int): double
            +iterShortValue(int): short
            +iterLongValue(int): long
        }

        class elki.data.SparseShortVector.Factory [[SparseShortVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): SparseShortVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): SparseShortVector
            +newNumberVector(Int2DoubleOpenHashMap, int): SparseShortVector
            +getDefaultSerializer(): ByteBufferSerializer<SparseShortVector>
            +getRestrictionClass(): Class<? super SparseShortVector>
        }

        class elki.data.SparseShortVector.Factory.Par [[SparseShortVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.SparseShortVector.VariableSerializer [[SparseShortVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): SparseShortVector
            +toByteBuffer(ByteBuffer, SparseShortVector): void
            +getByteSize(SparseShortVector): int
        }

        class SparseIntegerVector [[SparseIntegerVector.html]] {
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<SparseIntegerVector>
            {static} -INT0: int
            -indexes: int[]
            -values: int[]
            -dimensionality: int
            +SparseIntegerVector(int[], int[], int)
            +SparseIntegerVector(Int2DoubleOpenHashMap, int)
            +SparseIntegerVector(int[])
            -getMaxDim(): int
            +getDimensionality(): int
            +setDimensionality(int): void
            +- -getValue- -(int): Integer
            +- -doubleValue- -(int): double
            +- -longValue- -(int): long
            +- -intValue- -(int): int
            +toArray(): double[]
            +iterDim(int): int
            +iterValid(int): boolean
            +iterDoubleValue(int): double
            +iterIntValue(int): int
            +iterLongValue(int): long
        }

        class elki.data.SparseIntegerVector.Factory [[SparseIntegerVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): SparseIntegerVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): SparseIntegerVector
            +newNumberVector(Int2DoubleOpenHashMap, int): SparseIntegerVector
            +getDefaultSerializer(): ByteBufferSerializer<SparseIntegerVector>
            +getRestrictionClass(): Class<? super SparseIntegerVector>
        }

        class elki.data.SparseIntegerVector.Factory.Par [[SparseIntegerVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.SparseIntegerVector.VariableSerializer [[SparseIntegerVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): SparseIntegerVector
            +toByteBuffer(ByteBuffer, SparseIntegerVector): void
            +getByteSize(SparseIntegerVector): int
        }

        class SparseByteVector [[SparseByteVector.html]] {
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<SparseByteVector>
            -indexes: int[]
            -values: byte[]
            -dimensionality: int
            {static} -BYTE0: Byte
            +SparseByteVector(int[], byte[], int)
            +SparseByteVector(Int2DoubleOpenHashMap, int)
            +SparseByteVector(byte[])
            -getMaxDim(): int
            +getDimensionality(): int
            +setDimensionality(int): void
            +- -getValue- -(int): Byte
            +- -doubleValue- -(int): double
            +- -longValue- -(int): long
            +byteValue(int): byte
            +toArray(): double[]
            +iterDim(int): int
            +iterValid(int): boolean
            +iterDoubleValue(int): double
            +iterLongValue(int): long
            +iterByteValue(int): byte
        }

        class elki.data.SparseByteVector.Factory [[SparseByteVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): SparseByteVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): SparseByteVector
            +newNumberVector(Int2DoubleOpenHashMap, int): SparseByteVector
            +getDefaultSerializer(): ByteBufferSerializer<SparseByteVector>
            +getRestrictionClass(): Class<? super SparseByteVector>
        }

        class elki.data.SparseByteVector.Factory.Par [[SparseByteVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.SparseByteVector.VariableSerializer [[SparseByteVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): SparseByteVector
            +toByteBuffer(ByteBuffer, SparseByteVector): void
            +getByteSize(SparseByteVector): int
        }

        class FloatVector [[FloatVector.html]] {
            {static} +BYTE_SERIALIZER: ByteBufferSerializer<FloatVector>
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<FloatVector>
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<FloatVector>
            -values: float[]
            -FloatVector(float[], boolean)
            +FloatVector(float[])
            +getDimensionality(): int
            +- -getValue- -(int): Float
            +doubleValue(int): double
            +floatValue(int): float
            +longValue(int): long
            +toArray(): double[]
        }

        class elki.data.FloatVector.Factory [[FloatVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): FloatVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): FloatVector
            +getDefaultSerializer(): ByteBufferSerializer<FloatVector>
            +getRestrictionClass(): Class<? super FloatVector>
        }

        class elki.data.FloatVector.Factory.Par [[FloatVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.FloatVector.SmallSerializer [[FloatVector.SmallSerializer.html]] {
            +fromByteBuffer(ByteBuffer): FloatVector
            +toByteBuffer(ByteBuffer, FloatVector): void
            +getByteSize(FloatVector): int
        }

        class elki.data.FloatVector.ShortSerializer [[FloatVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): FloatVector
            +toByteBuffer(ByteBuffer, FloatVector): void
            +getByteSize(FloatVector): int
        }

        class elki.data.FloatVector.VariableSerializer [[FloatVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): FloatVector
            +toByteBuffer(ByteBuffer, FloatVector): void
            +getByteSize(FloatVector): int
        }

        class SimpleClassLabel [[SimpleClassLabel.html]] {
            {static} +SERIALIZER: ByteBufferSerializer<SimpleClassLabel>
            -label: String
            +SimpleClassLabel(String)
            +compareTo(ClassLabel): int
        }

        class elki.data.SimpleClassLabel.Serializer [[SimpleClassLabel.Serializer.html]] {
            +fromByteBuffer(ByteBuffer): SimpleClassLabel
            +toByteBuffer(ByteBuffer, SimpleClassLabel): void
            +getByteSize(SimpleClassLabel): int
        }

        class elki.data.SimpleClassLabel.Factory [[SimpleClassLabel.Factory.html]] {
            +makeFromString(String): SimpleClassLabel
        }

        class LabelList [[LabelList.html]] {
            {static} +SERIALIZER: ByteBufferSerializer<LabelList>
            -labels: String[]
            -LabelList(int)
            #LabelList(String[])
            {static} +make(Collection<String>): LabelList
            +size(): int
            +get(int): String
        }

        class elki.data.LabelList.Serializer [[LabelList.Serializer.html]] {
            +fromByteBuffer(ByteBuffer): LabelList
            +toByteBuffer(ByteBuffer, LabelList): void
            +getByteSize(LabelList): int
        }

        class SparseFloatVector [[SparseFloatVector.html]] {
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<SparseFloatVector>
            {static} -FLOAT0: float
            -indexes: int[]
            -values: float[]
            -dimensionality: int
            +SparseFloatVector(int[], float[], int)
            +SparseFloatVector(Int2FloatOpenHashMap, int)
            +SparseFloatVector(float[])
            -getMaxDim(): int
            +getDimensionality(): int
            +setDimensionality(int): void
            +- -getValue- -(int): Float
            +- -doubleValue- -(int): double
            +- -floatValue- -(int): float
            +- -longValue- -(int): long
            +toArray(): double[]
            +iterDim(int): int
            +iterValid(int): boolean
            +iterDoubleValue(int): double
            +iterFloatValue(int): float
            +iterLongValue(int): long
        }

        class elki.data.SparseFloatVector.Factory [[SparseFloatVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): SparseFloatVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): SparseFloatVector
            +newNumberVector(Int2DoubleOpenHashMap, int): SparseFloatVector
            +getDefaultSerializer(): ByteBufferSerializer<SparseFloatVector>
            +getRestrictionClass(): Class<? super SparseFloatVector>
        }

        class elki.data.SparseFloatVector.Factory.Par [[SparseFloatVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.SparseFloatVector.VariableSerializer [[SparseFloatVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): SparseFloatVector
            +toByteBuffer(ByteBuffer, SparseFloatVector): void
            +getByteSize(SparseFloatVector): int
        }

        class DoubleVector [[DoubleVector.html]] {
            {static} +BYTE_SERIALIZER: ByteBufferSerializer<DoubleVector>
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<DoubleVector>
            {static} +VARIABLE_SERIALIZER: ByteBufferSerializer<DoubleVector>
            -values: double[]
            -DoubleVector(double[], boolean)
            +DoubleVector(double[])
            +getDimensionality(): int
            +doubleValue(int): double
            +longValue(int): long
            +toArray(): double[]
            {static} +copy(double[]): DoubleVector
            {static} +wrap(double[]): DoubleVector
        }

        class elki.data.DoubleVector.Factory [[DoubleVector.Factory.html]] {
            +newNumberVector(double[]): DoubleVector
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): DoubleVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): DoubleVector
            +getDefaultSerializer(): ByteBufferSerializer<DoubleVector>
            +getRestrictionClass(): Class<? super DoubleVector>
        }

        class elki.data.DoubleVector.Factory.Par [[DoubleVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.DoubleVector.SmallSerializer [[DoubleVector.SmallSerializer.html]] {
            +fromByteBuffer(ByteBuffer): DoubleVector
            +toByteBuffer(ByteBuffer, DoubleVector): void
            +getByteSize(DoubleVector): int
        }

        class elki.data.DoubleVector.ShortSerializer [[DoubleVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): DoubleVector
            +toByteBuffer(ByteBuffer, DoubleVector): void
            +getByteSize(DoubleVector): int
        }

        class elki.data.DoubleVector.VariableSerializer [[DoubleVector.VariableSerializer.html]] {
            +fromByteBuffer(ByteBuffer): DoubleVector
            +toByteBuffer(ByteBuffer, DoubleVector): void
            +getByteSize(DoubleVector): int
        }

        class ByteVector [[ByteVector.html]] {
            {static} +BYTE_SERIALIZER: ByteBufferSerializer<ByteVector>
            {static} +SHORT_SERIALIZER: ByteBufferSerializer<ByteVector>
            -values: byte[]
            -ByteVector(byte[], boolean)
            +ByteVector(byte[])
            +getDimensionality(): int
            +- -getValue- -(int): Byte
            +doubleValue(int): double
            +longValue(int): long
            +byteValue(int): byte
            +getValues(): byte[]
            +toArray(): double[]
        }

        class elki.data.ByteVector.Factory [[ByteVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): ByteVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): ByteVector
            +getDefaultSerializer(): ByteBufferSerializer<ByteVector>
            +getRestrictionClass(): Class<? super ByteVector>
        }

        class elki.data.ByteVector.Factory.Par [[ByteVector.Factory.Par.html]] {
            +make(): Factory
        }

        class elki.data.ByteVector.SmallSerializer [[ByteVector.SmallSerializer.html]] {
            +fromByteBuffer(ByteBuffer): ByteVector
            +toByteBuffer(ByteBuffer, ByteVector): void
            +getByteSize(ByteVector): int
        }

        class elki.data.ByteVector.ShortSerializer [[ByteVector.ShortSerializer.html]] {
            +fromByteBuffer(ByteBuffer): ByteVector
            +toByteBuffer(ByteBuffer, ByteVector): void
            +getByteSize(ByteVector): int
        }

        class OneDimensionalDoubleVector [[OneDimensionalDoubleVector.html]] {
            ~val: double
            +OneDimensionalDoubleVector(double)
            +getDimensionality(): int
            +doubleValue(int): double
            +longValue(int): long
            +toArray(): double[]
        }

        class elki.data.OneDimensionalDoubleVector.Factory [[OneDimensionalDoubleVector.Factory.html]] {
            +newFeatureVector(A, ArrayAdapter<? extends Number, A>): OneDimensionalDoubleVector
            +newNumberVector(A, NumberArrayAdapter<?, ? super A>): OneDimensionalDoubleVector
            +getDefaultSerializer(): ByteBufferSerializer<OneDimensionalDoubleVector>
            +getRestrictionClass(): Class<? super OneDimensionalDoubleVector>
        }

        class elki.data.OneDimensionalDoubleVector.Factory.Par [[OneDimensionalDoubleVector.Factory.Par.html]] {
            +make(): Factory
        }

        class VectorUtil [[VectorUtil.html]] {
            {static} +randomVector(Factory<V extends NumberVector>, int, Random): V extends NumberVector
            {static} +randomVector(Factory<V extends NumberVector>, int): V extends NumberVector
            {static} +angleDense(NumberVector, NumberVector): double
            {static} +angleSparse(SparseNumberVector, SparseNumberVector): double
            {static} +angleSparseDense(SparseNumberVector, NumberVector): double
            {static} +cosAngle(NumberVector, NumberVector): double
            {static} +minCosAngle(SpatialComparable, SpatialComparable): double
            {static} +angle(NumberVector, NumberVector, NumberVector): double
            {static} +dotDense(NumberVector, NumberVector): double
            {static} +dotDense(NumberVector, double[]): double
            {static} +dotSparse(SparseNumberVector, SparseNumberVector): double
            {static} +dotSparseDense(SparseNumberVector, NumberVector): double
            {static} +dotSparseDense(SparseNumberVector, double[]): double
            {static} +dot(NumberVector, NumberVector): double
            {static} +dot(NumberVector, double[]): double
            {static} +minDot(SpatialComparable, SpatialComparable): double
            {static} +project(V extends NumberVector, long[], Factory<V extends NumberVector>): V extends NumberVector
        }

        class elki.data.VectorUtil.SortDBIDsBySingleDimension [[VectorUtil.SortDBIDsBySingleDimension.html]] {
            -d: int
            -data: Relation<? extends NumberVector>
            +SortDBIDsBySingleDimension(Relation<? extends NumberVector>, int)
            +SortDBIDsBySingleDimension(Relation<? extends NumberVector>)
            +getDimension(): int
            +setDimension(int): void
            +compare(DBIDRef, DBIDRef): int
        }

        class elki.data.VectorUtil.SortVectorsBySingleDimension [[VectorUtil.SortVectorsBySingleDimension.html]] {
            -d: int
            +SortVectorsBySingleDimension(int)
            +SortVectorsBySingleDimension()
            +getDimension(): int
            +setDimension(int): void
            +compare(NumberVector, NumberVector): int
        }

        interface SparseNumberVector [[SparseNumberVector.html]] {
            +iter(): int
            {abstract} +setDimensionality(int): void
            {abstract} +iterDoubleValue(int): double
            +iterFloatValue(int): float
            +iterIntValue(int): int
            +iterShortValue(int): short
            {abstract} +iterLongValue(int): long
            +iterByteValue(int): byte
            {abstract} +- -doubleValue- -(int): double
            +- -floatValue- -(int): float
            +- -intValue- -(int): int
            {abstract} +- -longValue- -(int): long
            +- -shortValue- -(int): short
            +- -byteValue- -(int): byte
        }

        interface elki.data.SparseNumberVector.Factory<V extends SparseNumberVector> [[SparseNumberVector.Factory.html]] {
            {abstract} +newNumberVector(Int2DoubleOpenHashMap, int): V extends SparseNumberVector
        }

        interface FeatureVector<D> [[FeatureVector.html]] {
            {abstract} +getDimensionality(): int
            {abstract} +getValue(int): D
        }

        interface elki.data.FeatureVector.Factory<V extends FeatureVector<? extends D>, D> [[FeatureVector.Factory.html]] {
            {abstract} +newFeatureVector(A, ArrayAdapter<? extends D, A>): V extends FeatureVector<? extends D>
            {abstract} +getDefaultSerializer(): ByteBufferSerializer<V extends FeatureVector<? extends D>>
            {abstract} +getRestrictionClass(): Class<? super FeatureVector<? extends D>>
        }

        interface SparseFeatureVector<D> [[SparseFeatureVector.html]] {
            +iter(): int
            {abstract} +iterDim(int): int
            +iterAdvance(int): int
            +iterRetract(int): int
            {abstract} +iterValid(int): boolean
        }

        interface NumberVector [[NumberVector.html]] {
            {static} +ATTRIBUTE_SEPARATOR: String
            +- -getValue- -(int): Number
            +getMin(int): double
            +getMax(int): double
            {abstract} +doubleValue(int): double
            +floatValue(int): float
            +intValue(int): int
            {abstract} +longValue(int): long
            +shortValue(int): short
            +byteValue(int): byte
            {abstract} +toArray(): double[]
        }

        interface elki.data.NumberVector.Factory<V extends NumberVector> [[NumberVector.Factory.html]] {
            +newNumberVector(double[]): V extends NumberVector
            +newNumberVector(NumberVector): V extends NumberVector
            {abstract} +newNumberVector(A, NumberArrayAdapter<?, ? super A>): V extends NumberVector
        }

        class HyperBoundingBox [[HyperBoundingBox.html]] {
            {static} -serialVersionUID: long
            ~min: double[]
            ~max: double[]
            +HyperBoundingBox()
            +HyperBoundingBox(double[], double[])
            +HyperBoundingBox(SpatialComparable)
            +getMin(int): double
            +getMax(int): double
            +getDimensionality(): int
            +toString(String, NumberFormat): String
            +writeExternal(ObjectOutput): void
            +readExternal(ObjectInput): void
        }

        class ModifiableHyperBoundingBox [[ModifiableHyperBoundingBox.html]] {
            {static} -serialVersionUID: long
            +ModifiableHyperBoundingBox()
            +ModifiableHyperBoundingBox(SpatialComparable)
            +ModifiableHyperBoundingBox(double[], double[])
            +ModifiableHyperBoundingBox(int, double, double)
            +setMax(int, double): void
            +setMin(int, double): void
            +getMinRef(): double[]
            +getMaxRef(): double[]
            +set(SpatialComparable): void
            +extend(SpatialComparable): boolean
        }

        elki.result.textwriter.TextWriteable <|.. Cluster
        Cluster - -> elki.data.model.Model: model
        Clustering - -> elki.data.type.SimpleTypeInformation: TYPE
        Clustering - -> "*" Cluster: toplevelclusters\ntoplevelClusters\nallClusters
        SparseNumberVector <|.. BitVector
        BitVector - -> elki.data.BitVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.BitVector.Factory
        BitVector +- - elki.data.BitVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.BitVector.Factory.Par
        elki.data.BitVector.Factory +- - elki.data.BitVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.BitVector.ShortSerializer
        BitVector +- - elki.data.BitVector.ShortSerializer
        java.lang.Number <|- - Bit
        Bit - -> Bit: TRUE\nFALSE
        java.lang.Comparable <|.. ClassLabel
        ClassLabel +- - elki.data.ClassLabel.Factory
        NumberVector <|.. IntegerVector
        IntegerVector - -> elki.data.IntegerVector.Factory: STATIC
        elki.data.NumberVector.Factory <|.. elki.data.IntegerVector.Factory
        IntegerVector +- - elki.data.IntegerVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.IntegerVector.Factory.Par
        elki.data.IntegerVector.Factory +- - elki.data.IntegerVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.IntegerVector.SmallSerializer
        IntegerVector +- - elki.data.IntegerVector.SmallSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.IntegerVector.ShortSerializer
        IntegerVector +- - elki.data.IntegerVector.ShortSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.IntegerVector.VariableSerializer
        IntegerVector +- - elki.data.IntegerVector.VariableSerializer
        ClassLabel <|- - HierarchicalClassLabel
        HierarchicalClassLabel - -> elki.data.type.SimpleTypeInformation: TYPE
        elki.data.ClassLabel.Factory <|- - elki.data.HierarchicalClassLabel.Factory
        HierarchicalClassLabel +- - elki.data.HierarchicalClassLabel.Factory
        elki.data.HierarchicalClassLabel.Factory - -> elki.data.type.SimpleTypeInformation: typeInformation
        SparseNumberVector <|.. SparseDoubleVector
        SparseDoubleVector - -> elki.data.SparseDoubleVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.SparseDoubleVector.Factory
        SparseDoubleVector +- - elki.data.SparseDoubleVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.SparseDoubleVector.Factory.Par
        elki.data.SparseDoubleVector.Factory +- - elki.data.SparseDoubleVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SparseDoubleVector.VariableSerializer
        SparseDoubleVector +- - elki.data.SparseDoubleVector.VariableSerializer
        NumberVector <|.. ShortVector
        ShortVector - -> elki.data.ShortVector.Factory: STATIC
        elki.data.NumberVector.Factory <|.. elki.data.ShortVector.Factory
        ShortVector +- - elki.data.ShortVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.ShortVector.Factory.Par
        elki.data.ShortVector.Factory +- - elki.data.ShortVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.ShortVector.ShortSerializer
        ShortVector +- - elki.data.ShortVector.ShortSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.ShortVector.VariableSerializer
        ShortVector +- - elki.data.ShortVector.VariableSerializer
        SparseNumberVector <|.. SparseShortVector
        SparseShortVector - -> elki.data.SparseShortVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.SparseShortVector.Factory
        SparseShortVector +- - elki.data.SparseShortVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.SparseShortVector.Factory.Par
        elki.data.SparseShortVector.Factory +- - elki.data.SparseShortVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SparseShortVector.VariableSerializer
        SparseShortVector +- - elki.data.SparseShortVector.VariableSerializer
        SparseNumberVector <|.. SparseIntegerVector
        SparseIntegerVector - -> elki.data.SparseIntegerVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.SparseIntegerVector.Factory
        SparseIntegerVector +- - elki.data.SparseIntegerVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.SparseIntegerVector.Factory.Par
        elki.data.SparseIntegerVector.Factory +- - elki.data.SparseIntegerVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SparseIntegerVector.VariableSerializer
        SparseIntegerVector +- - elki.data.SparseIntegerVector.VariableSerializer
        SparseNumberVector <|.. SparseByteVector
        SparseByteVector - -> elki.data.SparseByteVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.SparseByteVector.Factory
        SparseByteVector +- - elki.data.SparseByteVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.SparseByteVector.Factory.Par
        elki.data.SparseByteVector.Factory +- - elki.data.SparseByteVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SparseByteVector.VariableSerializer
        SparseByteVector +- - elki.data.SparseByteVector.VariableSerializer
        NumberVector <|.. FloatVector
        FloatVector - -> elki.data.FloatVector.Factory: FACTORY
        elki.data.NumberVector.Factory <|.. elki.data.FloatVector.Factory
        FloatVector +- - elki.data.FloatVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.FloatVector.Factory.Par
        elki.data.FloatVector.Factory +- - elki.data.FloatVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.FloatVector.SmallSerializer
        FloatVector +- - elki.data.FloatVector.SmallSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.FloatVector.ShortSerializer
        FloatVector +- - elki.data.FloatVector.ShortSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.FloatVector.VariableSerializer
        FloatVector +- - elki.data.FloatVector.VariableSerializer
        ClassLabel <|- - SimpleClassLabel
        SimpleClassLabel - -> elki.data.type.SimpleTypeInformation: TYPE
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SimpleClassLabel.Serializer
        SimpleClassLabel +- - elki.data.SimpleClassLabel.Serializer
        elki.data.ClassLabel.Factory <|- - elki.data.SimpleClassLabel.Factory
        SimpleClassLabel +- - elki.data.SimpleClassLabel.Factory
        elki.data.SimpleClassLabel.Factory - -> elki.data.type.SimpleTypeInformation: typeInformation
        LabelList - -> LabelList: EMPTY_LABELS
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.LabelList.Serializer
        LabelList +- - elki.data.LabelList.Serializer
        SparseNumberVector <|.. SparseFloatVector
        SparseFloatVector - -> elki.data.SparseFloatVector.Factory: FACTORY
        elki.data.SparseNumberVector.Factory <|.. elki.data.SparseFloatVector.Factory
        SparseFloatVector +- - elki.data.SparseFloatVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.SparseFloatVector.Factory.Par
        elki.data.SparseFloatVector.Factory +- - elki.data.SparseFloatVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.SparseFloatVector.VariableSerializer
        SparseFloatVector +- - elki.data.SparseFloatVector.VariableSerializer
        NumberVector <|.. DoubleVector
        DoubleVector - -> elki.data.DoubleVector.Factory: FACTORY
        elki.data.NumberVector.Factory <|.. elki.data.DoubleVector.Factory
        DoubleVector +- - elki.data.DoubleVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.DoubleVector.Factory.Par
        elki.data.DoubleVector.Factory +- - elki.data.DoubleVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.DoubleVector.SmallSerializer
        DoubleVector +- - elki.data.DoubleVector.SmallSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.DoubleVector.ShortSerializer
        DoubleVector +- - elki.data.DoubleVector.ShortSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.DoubleVector.VariableSerializer
        DoubleVector +- - elki.data.DoubleVector.VariableSerializer
        NumberVector <|.. ByteVector
        ByteVector - -> elki.data.ByteVector.Factory: STATIC
        elki.data.NumberVector.Factory <|.. elki.data.ByteVector.Factory
        ByteVector +- - elki.data.ByteVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.ByteVector.Factory.Par
        elki.data.ByteVector.Factory +- - elki.data.ByteVector.Factory.Par
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.ByteVector.SmallSerializer
        ByteVector +- - elki.data.ByteVector.SmallSerializer
        elki.utilities.io.ByteBufferSerializer <|.. elki.data.ByteVector.ShortSerializer
        ByteVector +- - elki.data.ByteVector.ShortSerializer
        NumberVector <|.. OneDimensionalDoubleVector
        OneDimensionalDoubleVector - -> elki.data.OneDimensionalDoubleVector.Factory: STATIC
        elki.data.NumberVector.Factory <|.. elki.data.OneDimensionalDoubleVector.Factory
        OneDimensionalDoubleVector +- - elki.data.OneDimensionalDoubleVector.Factory
        elki.utilities.optionhandling.Parameterizer <|.. elki.data.OneDimensionalDoubleVector.Factory.Par
        elki.data.OneDimensionalDoubleVector.Factory +- - elki.data.OneDimensionalDoubleVector.Factory.Par
        java.util.Comparator <|.. elki.data.VectorUtil.SortDBIDsBySingleDimension
        VectorUtil +- - elki.data.VectorUtil.SortDBIDsBySingleDimension
        java.util.Comparator <|.. elki.data.VectorUtil.SortVectorsBySingleDimension
        VectorUtil +- - elki.data.VectorUtil.SortVectorsBySingleDimension
        NumberVector <|- - SparseNumberVector
        SparseFeatureVector <|- - SparseNumberVector
        SparseNumberVector - -> elki.data.type.VectorTypeInformation: VARIABLE_LENGTH
        SparseNumberVector - -> elki.data.type.VectorFieldTypeInformation: FIELD
        elki.data.NumberVector.Factory <|- - elki.data.SparseNumberVector.Factory
        SparseNumberVector +- - elki.data.SparseNumberVector.Factory
        FeatureVector - -> elki.data.type.VectorTypeInformation: TYPE
        FeatureVector +- - elki.data.FeatureVector.Factory
        FeatureVector <|- - SparseFeatureVector
        FeatureVector <|- - NumberVector
        elki.data.spatial.SpatialComparable <|- - NumberVector
        NumberVector - -> elki.data.type.VectorTypeInformation: VARIABLE_LENGTH
        NumberVector - -> elki.data.type.VectorFieldTypeInformation: FIELD\nFIELD_1D\nFIELD_2D
        elki.data.FeatureVector.Factory <|- - elki.data.NumberVector.Factory
        NumberVector +- - elki.data.NumberVector.Factory
        elki.data.spatial.SpatialComparable <|.. HyperBoundingBox
        java.io.Externalizable <|.. HyperBoundingBox
        HyperBoundingBox <|- - ModifiableHyperBoundingBox
    }

    namespace elki.result.textwriter {
        interface TextWriteable [[../result/textwriter/TextWriteable.html]] {
            {abstract} +writeToText(TextWriterStream, String): void
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    namespace elki.utilities.io {
        interface ByteBufferSerializer<T> [[../utilities/io/ByteBufferSerializer.html]] {
            {abstract} +fromByteBuffer(ByteBuffer): T
            {abstract} +toByteBuffer(ByteBuffer, T): void
            {abstract} +getByteSize(T): int
        }
    }

    namespace java.lang {
        abstract class Number {
            {static} -serialVersionUID: long
            {abstract} +intValue(): int
            {abstract} +longValue(): long
            {abstract} +floatValue(): float
            {abstract} +doubleValue(): double
        }
        interface Comparable<T> {
            {abstract} +compareTo(T): int
        }
    }

    namespace java.util {
        interface Comparator<T> {
            {abstract} +compare(T, T): int
            +reversed(): Comparator<T>
            +thenComparing(Comparator<? super T>): Comparator<T>
            +thenComparing(Function<? super T, ? extends U>, Comparator<? super U>): Comparator<T>
            +thenComparing(Function<? super T, ? extends Comparable<? super U>>): Comparator<T>
            +thenComparingInt(ToIntFunction<? super T>): Comparator<T>
            +thenComparingLong(ToLongFunction<? super T>): Comparator<T>
            +thenComparingDouble(ToDoubleFunction<? super T>): Comparator<T>
            {static} +reverseOrder(): Comparator<T extends Comparable<? super T>>
            {static} +naturalOrder(): Comparator<T extends Comparable<? super T>>
            {static} +nullsFirst(Comparator<? super T>): Comparator<T>
            {static} +nullsLast(Comparator<? super T>): Comparator<T>
            {static} +comparing(Function<? super T, ? extends U>, Comparator<? super U>): Comparator<T>
            {static} +comparing(Function<? super T, ? extends Comparable<? super U>>): Comparator<T>
            {static} +comparingInt(ToIntFunction<? super T>): Comparator<T>
            {static} +comparingLong(ToLongFunction<? super T>): Comparator<T>
            {static} +comparingDouble(ToDoubleFunction<? super T>): Comparator<T>
        }
    }

    namespace java.io {
        interface Externalizable {
            {abstract} +writeExternal(ObjectOutput): void
            {abstract} +readExternal(ObjectInput): void
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>