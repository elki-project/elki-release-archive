<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="811px" preserveAspectRatio="none" style="width:398px;height:811px;background:#FFFFFF;" version="1.1" viewBox="0 0 398 811" width="398px" zoomAndPan="magnify"><defs/><g><!--MD5=[c17287ba0d4cb656c7ce7d1c79ac2d11]
class elki.data.synthetic.bymodel.GeneratorSingleCluster--><a href="GeneratorSingleCluster.html" target="_top" title="GeneratorSingleCluster.html" xlink:actuate="onRequest" xlink:href="GeneratorSingleCluster.html" xlink:show="new" xlink:title="GeneratorSingleCluster.html" xlink:type="simple"><g id="elem_elki.data.synthetic.bymodel.GeneratorSingleCluster"><rect codeLine="6" fill="#F1F1F1" height="624.3281" id="elki.data.synthetic.bymodel.GeneratorSingleCluster" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="384" x="7" y="162"/><ellipse cx="114.25" cy="180.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M117.2188,186.6094 Q116.6406,186.9063 116,187.0469 Q115.3594,187.2031 114.6563,187.2031 Q112.1563,187.2031 110.8281,185.5625 Q109.5156,183.9063 109.5156,180.7813 Q109.5156,177.6563 110.8281,176 Q112.1563,174.3438 114.6563,174.3438 Q115.3594,174.3438 116,174.5 Q116.6563,174.6563 117.2188,174.9531 L117.2188,177.6719 Q116.5938,177.0938 116,176.8281 Q115.4063,176.5469 114.7813,176.5469 Q113.4375,176.5469 112.75,177.625 Q112.0625,178.6875 112.0625,180.7813 Q112.0625,182.875 112.75,183.9531 Q113.4375,185.0156 114.7813,185.0156 Q115.4063,185.0156 116,184.75 Q116.5938,184.4688 117.2188,183.8906 L117.2188,186.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="134.75" y="179.9951">GeneratorSingleCluster</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="132" x="149.25" y="192.5791">elki.data.synthetic.bymodel</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="390" y1="199.9375" y2="199.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="210.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="27" y="216.9326">axes: List&lt;Distribution&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="226.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="27" y="233.2295">rnds: List&lt;Random&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="243.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="27" y="249.5264">trans: AffineTransformation</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="259.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="27" y="265.8232">dim: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="275.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="27" y="282.1201">clipmin: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="292.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="27" y="298.417">clipmax: double[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="308.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="27" y="314.7139">densitycorrection: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="324.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="27" y="331.0107">size: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="340.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="27" y="347.3076">name: String</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="357.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="27" y="363.6045">retries: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="373.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="27" y="379.9014">discarded: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="389.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="27" y="396.1982">random: Random</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="390" y1="403.5" y2="403.5"/><ellipse cx="18" cy="417.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="27" y="420.4951">GeneratorSingleCluster(String, int, double, Random)</text><ellipse cx="18" cy="433.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="436.792">addGenerator(Distribution, Random): void</text><ellipse cx="18" cy="449.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="27" y="453.0889">addRotation(int, int, double): void</text><ellipse cx="18" cy="466.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="27" y="469.3857">addTranslation(double[]): void</text><ellipse cx="18" cy="482.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="27" y="485.6826">setClipping(double[], double[]): void</text><ellipse cx="18" cy="498.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="27" y="501.9795">getDim(): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="511.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="27" y="518.2764">testClipping(double[]): boolean</text><ellipse cx="18" cy="531.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="27" y="534.5732">generate(int): List&lt;double[]&gt;</text><ellipse cx="18" cy="547.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="27" y="550.8701">getDensity(double[]): double</text><ellipse cx="18" cy="563.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="27" y="567.167">getTransformation(): AffineTransformation</text><ellipse cx="18" cy="580.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="27" y="583.4639">getClipmin(): double[]</text><ellipse cx="18" cy="596.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="27" y="599.7607">getClipmax(): double[]</text><ellipse cx="18" cy="612.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="27" y="616.0576">getSize(): int</text><ellipse cx="18" cy="629.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="27" y="632.3545">getName(): String</text><ellipse cx="18" cy="645.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="648.6514">getDiscarded(): int</text><ellipse cx="18" cy="661.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="27" y="664.9482">incrementDiscarded(): void</text><ellipse cx="18" cy="677.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="27" y="681.2451">getRetries(): int</text><ellipse cx="18" cy="694.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="27" y="697.542">getDensityCorrection(): double</text><ellipse cx="18" cy="710.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="27" y="713.8389">setDensityCorrection(double): void</text><ellipse cx="18" cy="726.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="27" y="730.1357">getNewRandomGenerator(): Random</text><ellipse cx="18" cy="743.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="27" y="746.4326">makeModel(): Model</text><ellipse cx="18" cy="759.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="27" y="762.7295">getDistribution(int): Distribution</text><ellipse cx="18" cy="775.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="27" y="779.0264">computeMean(): double[]</text></g></a><!--MD5=[e7f9ab567584afc058927242b7c71dcf]
class elki.data.synthetic.bymodel.GeneratorInterfaceDynamic--><a href="GeneratorInterfaceDynamic.html" target="_top" title="GeneratorInterfaceDynamic.html" xlink:actuate="onRequest" xlink:href="GeneratorInterfaceDynamic.html" xlink:show="new" xlink:title="GeneratorInterfaceDynamic.html" xlink:type="simple"><g id="elem_elki.data.synthetic.bymodel.GeneratorInterfaceDynamic"><rect codeLine="44" fill="#F1F1F1" height="94.8281" id="elki.data.synthetic.bymodel.GeneratorInterfaceDynamic" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="229" x="84.5" y="7"/><ellipse cx="99.5" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M95.4219,21.7344 L95.4219,19.5781 L102.8125,19.5781 L102.8125,21.7344 L100.3438,21.7344 L100.3438,29.8125 L102.8125,29.8125 L102.8125,31.9688 L95.4219,31.9688 L95.4219,29.8125 L97.8906,29.8125 L97.8906,21.7344 L95.4219,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="197" x="113.5" y="24.9951">GeneratorInterfaceDynamic</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="138" x="143" y="37.5791">elki.data.synthetic.bymodel</text><line style="stroke:#181818;stroke-width:0.5;" x1="85.5" x2="312.5" y1="44.9375" y2="44.9375"/><ellipse cx="95.5" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="104.5" y="61.9326">getDiscarded(): int</text><ellipse cx="95.5" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="109" x="104.5" y="78.2295">getRetries(): int</text><ellipse cx="95.5" cy="91.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="192" x="104.5" y="94.5264">incrementDiscarded(): void</text></g></a><!--MD5=[7a3ff9d9adb41768b4f15393f7cf78e4]
reverse link elki.data.synthetic.bymodel.GeneratorInterfaceDynamic to elki.data.synthetic.bymodel.GeneratorSingleCluster--><g id="link_elki.data.synthetic.bymodel.GeneratorInterfaceDynamic_elki.data.synthetic.bymodel.GeneratorSingleCluster"><path codeLine="50" d="M199,122.41 C199,134.4 199,147.58 199,161.58 " fill="none" id="elki.data.synthetic.bymodel.GeneratorInterfaceDynamic-backto-elki.data.synthetic.bymodel.GeneratorSingleCluster" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="192,122.18,199,102.18,206,122.18,192,122.18" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="99" y="792.3281"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="99" y="801.6104">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[86026106f621838a6fbaec26540f7a2c]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>GeneratorSingleCluster\n<size:10>elki.data.synthetic.bymodel" as elki.data.synthetic.bymodel.GeneratorSingleCluster [[GeneratorSingleCluster.html]] {
        -axes: List<Distribution>
        -rnds: List<Random>
        -trans: AffineTransformation
        -dim: int
        -clipmin: double[]
        -clipmax: double[]
        -densitycorrection: double
        -size: int
        -name: String
        -retries: int
        -discarded: int
        -random: Random
        +GeneratorSingleCluster(String, int, double, Random)
        +addGenerator(Distribution, Random): void
        +addRotation(int, int, double): void
        +addTranslation(double[]): void
        +setClipping(double[], double[]): void
        +getDim(): int
        -testClipping(double[]): boolean
        +generate(int): List<double[]>
        +getDensity(double[]): double
        +getTransformation(): AffineTransformation
        +getClipmin(): double[]
        +getClipmax(): double[]
        +getSize(): int
        +getName(): String
        +getDiscarded(): int
        +incrementDiscarded(): void
        +getRetries(): int
        +getDensityCorrection(): double
        +setDensityCorrection(double): void
        +getNewRandomGenerator(): Random
        +makeModel(): Model
        +getDistribution(int): Distribution
        +computeMean(): double[]
    }

    interface "<size:14>GeneratorInterfaceDynamic\n<size:10>elki.data.synthetic.bymodel" as elki.data.synthetic.bymodel.GeneratorInterfaceDynamic [[GeneratorInterfaceDynamic.html]] {
        {abstract} +getDiscarded(): int
        {abstract} +getRetries(): int
        {abstract} +incrementDiscarded(): void
    }

    elki.data.synthetic.bymodel.GeneratorInterfaceDynamic <|.. elki.data.synthetic.bymodel.GeneratorSingleCluster

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>