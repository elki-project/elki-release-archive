<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="461px" preserveAspectRatio="none" style="width:414px;height:461px;background:#FFFFFF;" version="1.1" viewBox="0 0 414 461" width="414px" zoomAndPan="magnify"><defs/><g><!--MD5=[a0386fbcbe52809f656e4ab2893777d0]
class elki.logging.OutputStreamLogger--><a href="OutputStreamLogger.html" target="_top" title="OutputStreamLogger.html" xlink:actuate="onRequest" xlink:href="OutputStreamLogger.html" xlink:show="new" xlink:title="OutputStreamLogger.html" xlink:type="simple"><g id="elem_elki.logging.OutputStreamLogger"><rect codeLine="6" fill="#F1F1F1" height="330.9844" id="elki.logging.OutputStreamLogger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="398" x="9" y="105"/><ellipse cx="131.25" cy="123.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M134.2188,129.6094 Q133.6406,129.9063 133,130.0469 Q132.3594,130.2031 131.6563,130.2031 Q129.1563,130.2031 127.8281,128.5625 Q126.5156,126.9063 126.5156,123.7813 Q126.5156,120.6563 127.8281,119 Q129.1563,117.3438 131.6563,117.3438 Q132.3594,117.3438 133,117.5 Q133.6563,117.6563 134.2188,117.9531 L134.2188,120.6719 Q133.5938,120.0938 133,119.8281 Q132.4063,119.5469 131.7813,119.5469 Q130.4375,119.5469 129.75,120.625 Q129.0625,121.6875 129.0625,123.7813 Q129.0625,125.875 129.75,126.9531 Q130.4375,128.0156 131.7813,128.0156 Q132.4063,128.0156 133,127.75 Q133.5938,127.4688 134.2188,126.8906 L134.2188,129.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="151.75" y="122.9951">OutputStreamLogger</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="52" x="198.25" y="135.5791">elki.logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="406" y1="142.9375" y2="142.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="153.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="29" y="159.9326">charsSinceNewline: int</text><polygon fill="none" points="20,167.8828,24,171.8828,20,175.8828,16,171.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="175" x="29" y="176.2295">CARRIAGE_RETURN: char</text><ellipse cx="20" cy="189.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="141" x="29" y="192.5264">UNIX_NEWLINE: char</text><ellipse cx="20" cy="205.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="110" x="29" y="208.8232">NEWLINE: String</text><ellipse cx="20" cy="221.7734" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="120" x="29" y="225.1201">NEWLINEC: char[]</text><ellipse cx="20" cy="238.0703" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="29" y="241.417">WHITESPACE: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="406" y1="248.7188" y2="248.7188"/><ellipse cx="20" cy="262.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="29" y="265.7139">OutputStreamLogger(OutputStream)</text><ellipse cx="20" cy="278.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="29" y="282.0107">OutputStreamLogger(OutputStream, String)</text><ellipse cx="20" cy="294.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="29" y="298.3076">OutputStreamLogger(OutputStream, Charset)</text><ellipse cx="20" cy="311.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="29" y="314.6045">OutputStreamLogger(OutputStream, CharsetEncoder)</text><ellipse cx="20" cy="327.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="29" y="330.9014">close(): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="340.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="29" y="347.1982">tailingNonNewline(char[], int, int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="357.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="29" y="363.4951">tailingNonNewline(String, int, int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="373.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="29" y="379.792">countNonNewline(char[], int, int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="389.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="29" y="396.0889">countNonNewline(String, int, int): int</text><ellipse cx="20" cy="409.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="29" y="412.3857">write(char[], int, int): void</text><ellipse cx="20" cy="425.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="29" y="428.6826">write(String, int, int): void</text></g></a><!--MD5=[79afacd505d16abb86fce60989f26ec2]
class java.io.OutputStreamWriter--><g id="elem_java.io.OutputStreamWriter"><rect codeLine="26" fill="#F1F1F1" height="37.9375" id="java.io.OutputStreamWriter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="123.5" y="7"/><ellipse cx="138.5" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M141.4688,31.6094 Q140.8906,31.9063 140.25,32.0469 Q139.6094,32.2031 138.9063,32.2031 Q136.4063,32.2031 135.0781,30.5625 Q133.7656,28.9063 133.7656,25.7813 Q133.7656,22.6563 135.0781,21 Q136.4063,19.3438 138.9063,19.3438 Q139.6094,19.3438 140.25,19.5 Q140.9063,19.6563 141.4688,19.9531 L141.4688,22.6719 Q140.8438,22.0938 140.25,21.8281 Q139.6563,21.5469 139.0313,21.5469 Q137.6875,21.5469 137,22.625 Q136.3125,23.6875 136.3125,25.7813 Q136.3125,27.875 137,28.9531 Q137.6875,30.0156 139.0313,30.0156 Q139.6563,30.0156 140.25,29.75 Q140.8438,29.4688 141.4688,28.8906 L141.4688,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="152.5" y="24.9951">OutputStreamWriter</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="31" x="205.5" y="37.5791">java.io</text></g><!--MD5=[fb2edf60b3e031438476d81e47c34ca8]
reverse link java.io.OutputStreamWriter to elki.logging.OutputStreamLogger--><g id="link_java.io.OutputStreamWriter_elki.logging.OutputStreamLogger"><path codeLine="28" d="M208,65.39 C208,76.96 208,90.45 208,104.89 " fill="none" id="java.io.OutputStreamWriter-backto-elki.logging.OutputStreamLogger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="201,65.23,208,45.23,215,65.23,201,65.23" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="107" y="441.9844"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="107" y="451.2666">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[5e0a84cfaedbfd4d410479d9175d3043]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>OutputStreamLogger\n<size:10>elki.logging" as elki.logging.OutputStreamLogger [[OutputStreamLogger.html]] {
        -charsSinceNewline: int
        {static} #CARRIAGE_RETURN: char
        {static} +UNIX_NEWLINE: char
        {static} +NEWLINE: String
        {static} +NEWLINEC: char[]
        {static} +WHITESPACE: String
        +OutputStreamLogger(OutputStream)
        +OutputStreamLogger(OutputStream, String)
        +OutputStreamLogger(OutputStream, Charset)
        +OutputStreamLogger(OutputStream, CharsetEncoder)
        +close(): void
        -tailingNonNewline(char[], int, int): int
        -tailingNonNewline(String, int, int): int
        -countNonNewline(char[], int, int): int
        -countNonNewline(String, int, int): int
        +write(char[], int, int): void
        +write(String, int, int): void
    }

    class "<size:14>OutputStreamWriter\n<size:10>java.io" as java.io.OutputStreamWriter

    java.io.OutputStreamWriter <|- - elki.logging.OutputStreamLogger

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>