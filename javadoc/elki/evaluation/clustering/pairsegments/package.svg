<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="644px" preserveAspectRatio="none" style="width:1297px;height:644px;background:#FFFFFF;" version="1.1" viewBox="0 0 1297 644" width="1297px" zoomAndPan="magnify"><defs/><g><!--MD5=[276b84209a8cc161a9a1fa36bef112be]
cluster elki.evaluation.clustering.pairsegments--><g id="cluster_elki.evaluation.clustering.pairsegments"><path d="M8.5,178 L319.5,178 A3.75,3.75 0 0 1 322,180.5 L329,200.2969 L1287.5,200.2969 A2.5,2.5 0 0 1 1290,202.7969 L1290,616.5 A2.5,2.5 0 0 1 1287.5,619 L8.5,619 A2.5,2.5 0 0 1 6,616.5 L6,180.5 A2.5,2.5 0 0 1 8.5,178 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="329" y1="200.2969" y2="200.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="310" x="10" y="192.9951">elki.evaluation.clustering.pairsegments</text></g><!--MD5=[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id="cluster_java.lang"><path d="M329.5,6 L399.5,6 A3.75,3.75 0 0 1 402,8.5 L409,28.2969 L830.5,28.2969 A2.5,2.5 0 0 1 833,30.7969 L833,151.5 A2.5,2.5 0 0 1 830.5,154 L329.5,154 A2.5,2.5 0 0 1 327,151.5 L327,8.5 A2.5,2.5 0 0 1 329.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="327" x2="409" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="331" y="20.9951">java.lang</text></g><!--MD5=[a0bd951443118e890cc7a7fcdc33847d]
cluster elki.evaluation--><g id="cluster_elki.evaluation"><path d="M1086.5,30.5 L1200.5,30.5 A3.75,3.75 0 0 1 1203,33 L1210,52.7969 L1213.5,52.7969 A2.5,2.5 0 0 1 1216,55.2969 L1216,127 A2.5,2.5 0 0 1 1213.5,129.5 L1086.5,129.5 A2.5,2.5 0 0 1 1084,127 L1084,33 A2.5,2.5 0 0 1 1086.5,30.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1084" x2="1210" y1="52.7969" y2="52.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="113" x="1088" y="45.4951">elki.evaluation</text></g><!--MD5=[ada36b332889f14c1b5d7f2e687f1c35]
class elki.evaluation.clustering.pairsegments.Segment--><a href="Segment.html" target="_top" title="Segment.html" xlink:actuate="onRequest" xlink:href="Segment.html" xlink:show="new" xlink:title="Segment.html" xlink:type="simple"><g id="elem_elki.evaluation.clustering.pairsegments.Segment"><rect codeLine="4" fill="#F1F1F1" height="259.8594" id="elki.evaluation.clustering.pairsegments.Segment" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="254" x="737" y="278"/><ellipse cx="828.25" cy="294" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M831.2188,299.6406 Q830.6406,299.9375 830,300.0781 Q829.3594,300.2344 828.6563,300.2344 Q826.1563,300.2344 824.8281,298.5938 Q823.5156,296.9375 823.5156,293.8125 Q823.5156,290.6875 824.8281,289.0313 Q826.1563,287.375 828.6563,287.375 Q829.3594,287.375 830,287.5313 Q830.6563,287.6875 831.2188,287.9844 L831.2188,290.7031 Q830.5938,290.125 830,289.8594 Q829.4063,289.5781 828.7813,289.5781 Q827.4375,289.5781 826.75,290.6563 Q826.0625,291.7188 826.0625,293.8125 Q826.0625,295.9063 826.75,296.9844 Q827.4375,298.0469 828.7813,298.0469 Q829.4063,298.0469 830,297.7813 Q830.5938,297.5 831.2188,296.9219 L831.2188,299.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="848.75" y="298.8467">Segment</text><line style="stroke:#181818;stroke-width:0.5;" x1="738" x2="990" y1="310" y2="310"/><ellipse cx="748" cy="323.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="130" x="757" y="326.9951">UNCLUSTERED: int</text><polygon fill="none" points="748,334.9453,752,338.9453,748,342.9453,744,338.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="757" y="343.292">objIDs: DBIDs</text><polygon fill="none" points="748,351.2422,752,355.2422,748,359.2422,744,355.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="757" y="359.5889">pairsize: long</text><polygon fill="none" points="748,367.5391,752,371.5391,748,375.5391,744,371.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="757" y="375.8857">clusterIds: int[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="738" x2="990" y1="383.1875" y2="383.1875"/><ellipse cx="748" cy="396.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="757" y="400.1826">Segment(int)</text><ellipse cx="748" cy="413.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="757" y="416.4795">Segment(int[])</text><ellipse cx="748" cy="429.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="757" y="432.7764">getPairCount(): long</text><ellipse cx="748" cy="445.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="757" y="449.0732">get(int): int</text><ellipse cx="748" cy="462.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="757" y="465.3701">isUnpaired(): boolean</text><ellipse cx="748" cy="478.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="757" y="481.667">isNone(): boolean</text><ellipse cx="748" cy="494.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="757" y="497.9639">getUnpairedClusteringIndex(): int</text><ellipse cx="748" cy="510.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="757" y="514.2607">getDBIDs(): DBIDs</text><ellipse cx="748" cy="527.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="757" y="530.5576">compareTo(Segment): int</text></g></a><!--MD5=[075ef41fa6b92bf00bd7782d7bce02f9]
class elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis--><a href="ClusterPairSegmentAnalysis.html" target="_top" title="ClusterPairSegmentAnalysis.html" xlink:actuate="onRequest" xlink:href="ClusterPairSegmentAnalysis.html" xlink:show="new" xlink:title="ClusterPairSegmentAnalysis.html" xlink:type="simple"><g id="elem_elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis"><rect codeLine="20" fill="#F1F1F1" height="64.2969" id="elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="248" x="1026" y="376"/><ellipse cx="1051.8" cy="392" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1054.7688,397.6406 Q1054.1906,397.9375 1053.55,398.0781 Q1052.9094,398.2344 1052.2063,398.2344 Q1049.7063,398.2344 1048.3781,396.5938 Q1047.0656,394.9375 1047.0656,391.8125 Q1047.0656,388.6875 1048.3781,387.0313 Q1049.7063,385.375 1052.2063,385.375 Q1052.9094,385.375 1053.55,385.5313 Q1054.2063,385.6875 1054.7688,385.9844 L1054.7688,388.7031 Q1054.1438,388.125 1053.55,387.8594 Q1052.9563,387.5781 1052.3313,387.5781 Q1050.9875,387.5781 1050.3,388.6563 Q1049.6125,389.7188 1049.6125,391.8125 Q1049.6125,393.9063 1050.3,394.9844 Q1050.9875,396.0469 1052.3313,396.0469 Q1052.9563,396.0469 1053.55,395.7813 Q1054.1438,395.5 1054.7688,394.9219 L1054.7688,397.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1068.2" y="396.8467">ClusterPairSegmentAnalysis</text><line style="stroke:#181818;stroke-width:0.5;" x1="1027" x2="1273" y1="408" y2="408"/><line style="stroke:#181818;stroke-width:0.5;" x1="1027" x2="1273" y1="416" y2="416"/><ellipse cx="1037" cy="429.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="1046" y="432.9951">processNewResult(Object): void</text></g></a><!--MD5=[6269fe6ba76dbda113a17bd4b2fb41a0]
class elki.evaluation.clustering.pairsegments.Segments--><a href="Segments.html" target="_top" title="Segments.html" xlink:actuate="onRequest" xlink:href="Segments.html" xlink:show="new" xlink:title="Segments.html" xlink:type="simple"><g id="elem_elki.evaluation.clustering.pairsegments.Segments"><rect codeLine="24" fill="#F1F1F1" height="390.2344" id="elki.evaluation.clustering.pairsegments.Segments" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="680" x="22" y="213"/><ellipse cx="322.25" cy="229" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M325.2188,234.6406 Q324.6406,234.9375 324,235.0781 Q323.3594,235.2344 322.6563,235.2344 Q320.1563,235.2344 318.8281,233.5938 Q317.5156,231.9375 317.5156,228.8125 Q317.5156,225.6875 318.8281,224.0313 Q320.1563,222.375 322.6563,222.375 Q323.3594,222.375 324,222.5313 Q324.6563,222.6875 325.2188,222.9844 L325.2188,225.7031 Q324.5938,225.125 324,224.8594 Q323.4063,224.5781 322.7813,224.5781 Q321.4375,224.5781 320.75,225.6563 Q320.0625,226.7188 320.0625,228.8125 Q320.0625,230.9063 320.75,231.9844 Q321.4375,233.0469 322.7813,233.0469 Q323.4063,233.0469 324,232.7813 Q324.5938,232.5 325.2188,231.9219 L325.2188,234.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="342.75" y="233.8467">Segments</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="701" y1="245" y2="245"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="255.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="42" y="261.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="271.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="42" y="278.292">clusterings: List&lt;Clustering&lt;?&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="288.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="42" y="294.5889">clusters: List&lt;List&lt;? extends Cluster&lt;?&gt;&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="304.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="42" y="310.8857">clusteringsCount: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="320.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="42" y="327.1826">numclusters: int[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="337.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="42" y="343.4795">totalObjects: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="353.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="42" y="359.7764">actualPairs: long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="369.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="42" y="376.0732">segments: TreeMap&lt;Segment, Segment&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="701" y1="383.375" y2="383.375"/><ellipse cx="33" cy="397.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="42" y="400.3701">Segments(List&lt;Clustering&lt;?&gt;&gt;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="410.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="42" y="416.667">recursivelyFill(List&lt;List&lt;? extends Cluster&lt;?&gt;&gt;&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="426.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="654" x="42" y="432.9639">recursivelyFill(List&lt;List&lt;? extends Cluster&lt;?&gt;&gt;&gt;, int, SetDBIDs, SetDBIDs, int[], boolean): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="442.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="42" y="449.2607">makeOrUpdateSegment(int[], DBIDs, int): void</text><ellipse cx="33" cy="462.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="42" y="465.5576">getClusteringDescription(int): String</text><ellipse cx="33" cy="478.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="42" y="481.8545">getPairedSegments(Segment): List&lt;Segment&gt;</text><ellipse cx="33" cy="494.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="42" y="498.1514">unifySegment(Segment): Segment</text><ellipse cx="33" cy="511.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="42" y="514.4482">size(): int</text><ellipse cx="33" cy="527.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="42" y="530.7451">getPairCount(boolean): long</text><ellipse cx="33" cy="543.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="42" y="547.042">getClusterings(): int</text><ellipse cx="33" cy="559.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="42" y="563.3389">getTotalClusterCount(): int</text><ellipse cx="33" cy="576.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="42" y="579.6357">getHighestClusterCount(): int</text><ellipse cx="33" cy="592.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="42" y="595.9326">iterator(): Iterator&lt;Segment&gt;</text></g></a><!--MD5=[008d82c49f85b4d489e041917c99c847]
class java.lang.Comparable--><g id="elem_java.lang.Comparable"><rect codeLine="54" fill="#F1F1F1" height="64.2969" id="java.lang.Comparable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="663.5" y="57.5"/><ellipse cx="688.85" cy="73.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M684.7719,69.2656 L684.7719,67.1094 L692.1625,67.1094 L692.1625,69.2656 L689.6938,69.2656 L689.6938,77.3438 L692.1625,77.3438 L692.1625,79.5 L684.7719,79.5 L684.7719,77.3438 L687.2406,77.3438 L687.2406,69.2656 L684.7719,69.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="705.15" y="78.3467">Comparable</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="810.5" y="54.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="811.5" y="66.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="664.5" x2="815.5" y1="89.5" y2="89.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="664.5" x2="815.5" y1="97.5" y2="97.5"/><ellipse cx="674.5" cy="111.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="683.5" y="114.4951">compareTo(T): int</text></g><!--MD5=[f06cde10779025ee1fafe9aaebbf62cd]
class java.lang.Iterable--><g id="elem_java.lang.Iterable"><rect codeLine="57" fill="#F1F1F1" height="96.8906" id="java.lang.Iterable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="285" x="343.5" y="41"/><ellipse cx="449.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M445.1719,52.7656 L445.1719,50.6094 L452.5625,50.6094 L452.5625,52.7656 L450.0938,52.7656 L450.0938,60.8438 L452.5625,60.8438 L452.5625,63 L445.1719,63 L445.1719,60.8438 L447.6406,60.8438 L447.6406,52.7656 L445.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="469.75" y="61.8467">Iterable</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="622.5" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="623.5" y="50.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="344.5" x2="627.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="344.5" x2="627.5" y1="81" y2="81"/><ellipse cx="354.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="363.5" y="97.9951">iterator(): Iterator&lt;T&gt;</text><ellipse cx="354.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="363.5" y="114.292">forEach(Consumer&lt;? super T&gt;): void</text><ellipse cx="354.5" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="363.5" y="130.5889">spliterator(): Spliterator&lt;T&gt;</text></g><!--MD5=[ab738d497caecbdd52763596d8334661]
class elki.evaluation.Evaluator--><a href="../../Evaluator.html" target="_top" title="../../Evaluator.html" xlink:actuate="onRequest" xlink:href="../../Evaluator.html" xlink:show="new" xlink:title="../../Evaluator.html" xlink:type="simple"><g id="elem_elki.evaluation.Evaluator"><rect codeLine="65" fill="#F1F1F1" height="48" id="elki.evaluation.Evaluator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="1100.5" y="65.5"/><ellipse cx="1115.5" cy="81.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1111.4219,77.2656 L1111.4219,75.1094 L1118.8125,75.1094 L1118.8125,77.2656 L1116.3438,77.2656 L1116.3438,85.3438 L1118.8125,85.3438 L1118.8125,87.5 L1111.4219,87.5 L1111.4219,85.3438 L1113.8906,85.3438 L1113.8906,77.2656 L1111.4219,77.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="67" x="1129.5" y="86.3467">Evaluator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1101.5" x2="1198.5" y1="97.5" y2="97.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1101.5" x2="1198.5" y1="105.5" y2="105.5"/></g></a><!--MD5=[3e63d33646700afee9ef22b066becef5]
reverse link java.lang.Comparable to elki.evaluation.clustering.pairsegments.Segment--><g id="link_java.lang.Comparable_elki.evaluation.clustering.pairsegments.Segment"><path codeLine="48" d="M759.62,140.58 C774.1,177.54 794.5,229.61 813.43,277.92 " fill="none" id="java.lang.Comparable-backto-elki.evaluation.clustering.pairsegments.Segment" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="753.01,142.89,752.23,121.71,766.04,137.78,753.01,142.89" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cf3240c7b764ccf06a11a82aec3bd1da]
reverse link elki.evaluation.Evaluator to elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis--><g id="link_elki.evaluation.Evaluator_elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis"><path codeLine="49" d="M1150,133.92 C1150,198.7 1150,319.11 1150,375.87 " fill="none" id="elki.evaluation.Evaluator-backto-elki.evaluation.clustering.pairsegments.ClusterPairSegmentAnalysis" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1143,133.52,1150,113.52,1157,133.52,1143,133.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[326215494831806e58f6a56f1c455771]
reverse link java.lang.Iterable to elki.evaluation.clustering.pairsegments.Segments--><g id="link_java.lang.Iterable_elki.evaluation.clustering.pairsegments.Segments"><path codeLine="50" d="M459.95,157 C453.33,173.89 445.88,192.91 438.11,212.72 " fill="none" id="java.lang.Iterable-backto-elki.evaluation.clustering.pairsegments.Segments" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="453.49,154.29,467.3,138.23,466.52,159.4,453.49,154.29" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="548.5" y="625"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="548.5" y="634.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[58a555301844180864f3864f901aae74]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.evaluation.clustering.pairsegments {

        class Segment [[Segment.html]] {
            {static} +UNCLUSTERED: int
            #objIDs: DBIDs
            #pairsize: long
            #clusterIds: int[]
            +Segment(int)
            +Segment(int[])
            +getPairCount(): long
            +get(int): int
            +isUnpaired(): boolean
            +isNone(): boolean
            +getUnpairedClusteringIndex(): int
            +getDBIDs(): DBIDs
            +compareTo(Segment): int
        }

        class ClusterPairSegmentAnalysis [[ClusterPairSegmentAnalysis.html]] {
            +processNewResult(Object): void
        }

        class Segments [[Segments.html]] {
            {static} -LOG: Logging
            -clusterings: List<Clustering<?>>
            -clusters: List<List<? extends Cluster<?>>>
            -clusteringsCount: int
            -numclusters: int[]
            -totalObjects: int
            -actualPairs: long
            -segments: TreeMap<Segment, Segment>
            +Segments(List<Clustering<?>>)
            -recursivelyFill(List<List<? extends Cluster<?>>>): void
            -recursivelyFill(List<List<? extends Cluster<?>>>, int, SetDBIDs, SetDBIDs, int[], boolean): void
            -makeOrUpdateSegment(int[], DBIDs, int): void
            +getClusteringDescription(int): String
            +getPairedSegments(Segment): List<Segment>
            +unifySegment(Segment): Segment
            +size(): int
            +getPairCount(boolean): long
            +getClusterings(): int
            +getTotalClusterCount(): int
            +getHighestClusterCount(): int
            +iterator(): Iterator<Segment>
        }

        java.lang.Comparable <|.. Segment
        elki.evaluation.Evaluator <|.. ClusterPairSegmentAnalysis
        java.lang.Iterable <|.. Segments
    }

    namespace java.lang {
        interface Comparable<T> {
            {abstract} +compareTo(T): int
        }
        interface Iterable<T> {
            {abstract} +iterator(): Iterator<T>
            +forEach(Consumer<? super T>): void
            +spliterator(): Spliterator<T>
        }
    }

    namespace elki.evaluation {
        interface Evaluator [[../../Evaluator.html]]
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>