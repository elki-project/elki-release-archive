<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="535px" preserveAspectRatio="none" style="width:325px;height:535px;background:#FFFFFF;" version="1.1" viewBox="0 0 325 535" width="325px" zoomAndPan="magnify"><defs/><g><!--MD5=[8806f5e80055bce6964d0df80ed28152]
class elki.projection.DenseAffinityMatrix--><a href="DenseAffinityMatrix.html" target="_top" title="DenseAffinityMatrix.html" xlink:actuate="onRequest" xlink:href="DenseAffinityMatrix.html" xlink:show="new" xlink:title="DenseAffinityMatrix.html" xlink:type="simple"><g id="elem_elki.projection.DenseAffinityMatrix"><rect codeLine="6" fill="#F1F1F1" height="249.5" id="elki.projection.DenseAffinityMatrix" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="9" y="260"/><ellipse cx="94.25" cy="278.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M97.2188,284.6094 Q96.6406,284.9063 96,285.0469 Q95.3594,285.2031 94.6563,285.2031 Q92.1563,285.2031 90.8281,283.5625 Q89.5156,281.9063 89.5156,278.7813 Q89.5156,275.6563 90.8281,274 Q92.1563,272.3438 94.6563,272.3438 Q95.3594,272.3438 96,272.5 Q96.6563,272.6563 97.2188,272.9531 L97.2188,275.6719 Q96.5938,275.0938 96,274.8281 Q95.4063,274.5469 94.7813,274.5469 Q93.4375,274.5469 92.75,275.625 Q92.0625,276.6875 92.0625,278.7813 Q92.0625,280.875 92.75,281.9531 Q93.4375,283.0156 94.7813,283.0156 Q95.4063,283.0156 96,282.75 Q96.5938,282.4688 97.2188,281.8906 L97.2188,284.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="114.75" y="277.9951">DenseAffinityMatrix</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="65" x="147.25" y="290.5791">elki.projection</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="317" y1="297.9375" y2="297.9375"/><polygon fill="none" points="20,307.5859,16,313.5859,24,313.5859" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="29" y="314.9326">pij: double[]</text><polygon fill="none" points="20,323.8828,16,329.8828,24,329.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="29" y="331.2295">ids: ArrayDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="317" y1="338.5313" y2="338.5313"/><ellipse cx="20" cy="352.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="29" y="355.5264">DenseAffinityMatrix(double[], ArrayDBIDs)</text><ellipse cx="20" cy="368.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="29" y="371.8232">get(int, int): double</text><ellipse cx="20" cy="384.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="29" y="388.1201">scale(double): void</text><ellipse cx="20" cy="401.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="29" y="404.417">size(): int</text><ellipse cx="20" cy="417.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="29" y="420.7139">iterDBIDs(): DBIDArrayIter</text><ellipse cx="20" cy="433.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="29" y="437.0107">iter(int): int</text><ellipse cx="20" cy="449.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="29" y="453.3076">iterAdvance(int, int): int</text><ellipse cx="20" cy="466.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="29" y="469.6045">iterDim(int, int): int</text><ellipse cx="20" cy="482.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="29" y="485.9014">iterValue(int, int): double</text><ellipse cx="20" cy="498.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="29" y="502.1982">iterValid(int, int): boolean</text></g></a><!--MD5=[b2bc000fd34f5af2645cfcaae14161a8]
class elki.projection.AffinityMatrix--><a href="AffinityMatrix.html" target="_top" title="AffinityMatrix.html" xlink:actuate="onRequest" xlink:href="AffinityMatrix.html" xlink:show="new" xlink:title="AffinityMatrix.html" xlink:type="simple"><g id="elem_elki.projection.AffinityMatrix"><rect codeLine="21" fill="#F1F1F1" height="192.6094" id="elki.projection.AffinityMatrix" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="207" x="60" y="7"/><ellipse cx="112.75" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M108.6719,21.7344 L108.6719,19.5781 L116.0625,19.5781 L116.0625,21.7344 L113.5938,21.7344 L113.5938,29.8125 L116.0625,29.8125 L116.0625,31.9688 L108.6719,31.9688 L108.6719,29.8125 L111.1406,29.8125 L111.1406,21.7344 L108.6719,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="133.25" y="24.9951">AffinityMatrix</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="71" x="144.25" y="37.5791">elki.projection</text><line style="stroke:#181818;stroke-width:0.5;" x1="61" x2="266" y1="44.9375" y2="44.9375"/><ellipse cx="71" cy="58.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="80" y="61.9326">scale(double): void</text><ellipse cx="71" cy="74.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="80" y="78.2295">size(): int</text><ellipse cx="71" cy="91.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="135" x="80" y="94.5264">get(int, int): double</text><ellipse cx="71" cy="107.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="78" x="80" y="110.8232">iter(int): int</text><ellipse cx="71" cy="123.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="80" y="127.1201">iterDim(int, int): int</text><ellipse cx="71" cy="140.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="80" y="143.417">iterValue(int, int): double</text><ellipse cx="71" cy="156.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="166" x="80" y="159.7139">iterAdvance(int, int): int</text><ellipse cx="71" cy="172.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="180" x="80" y="176.0107">iterValid(int, int): boolean</text><ellipse cx="71" cy="188.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="181" x="80" y="192.3076">iterDBIDs(): DBIDArrayIter</text></g></a><!--MD5=[25af5d26540ad2264aa3c5d7df86a70d]
reverse link elki.projection.AffinityMatrix to elki.projection.DenseAffinityMatrix--><g id="link_elki.projection.AffinityMatrix_elki.projection.DenseAffinityMatrix"><path codeLine="33" d="M163.5,220.38 C163.5,233.35 163.5,246.61 163.5,259.68 " fill="none" id="elki.projection.AffinityMatrix-backto-elki.projection.DenseAffinityMatrix" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="156.5,220.3,163.5,200.3,170.5,220.3,156.5,220.3" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="62.5" y="515.5"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="62.5" y="524.7822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[0d6011f54215996c55439830dfd632a6]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>DenseAffinityMatrix\n<size:10>elki.projection" as elki.projection.DenseAffinityMatrix [[DenseAffinityMatrix.html]] {
        ~pij: double[]
        ~ids: ArrayDBIDs
        +DenseAffinityMatrix(double[], ArrayDBIDs)
        +get(int, int): double
        +scale(double): void
        +size(): int
        +iterDBIDs(): DBIDArrayIter
        +iter(int): int
        +iterAdvance(int, int): int
        +iterDim(int, int): int
        +iterValue(int, int): double
        +iterValid(int, int): boolean
    }

    interface "<size:14>AffinityMatrix\n<size:10>elki.projection" as elki.projection.AffinityMatrix [[AffinityMatrix.html]] {
        {abstract} +scale(double): void
        {abstract} +size(): int
        {abstract} +get(int, int): double
        {abstract} +iter(int): int
        {abstract} +iterDim(int, int): int
        {abstract} +iterValue(int, int): double
        {abstract} +iterAdvance(int, int): int
        {abstract} +iterValid(int, int): boolean
        {abstract} +iterDBIDs(): DBIDArrayIter
    }

    elki.projection.AffinityMatrix <|.. elki.projection.DenseAffinityMatrix

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>