<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="635px" preserveAspectRatio="none" style="width:1920px;height:635px;background:#FFFFFF;" version="1.1" viewBox="0 0 1920 635" width="1920px" zoomAndPan="magnify"><defs/><g><!--MD5=[92d1493f64fa0584c442173b94483fc3]
class elki.index.tree.metrical.mtreevariants.AbstractMTree--><a href="AbstractMTree.html" target="_top" title="AbstractMTree.html" xlink:actuate="onRequest" xlink:href="AbstractMTree.html" xlink:show="new" xlink:title="AbstractMTree.html" xlink:type="simple"><g id="elem_elki.index.tree.metrical.mtreevariants.AbstractMTree"><rect codeLine="6" fill="#F1F1F1" height="363.5781" id="elki.index.tree.metrical.mtreevariants.AbstractMTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1900" x="9" y="149"/><ellipse cx="249.25" cy="167.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M249.3594,163.3125 L248.2031,168.3906 L250.5313,168.3906 L249.3594,163.3125 Z M247.875,161.0781 L250.8594,161.0781 L254.2188,173.4688 L251.7656,173.4688 L251,170.4063 L247.7188,170.4063 L246.9688,173.4688 L244.5313,173.4688 L247.875,161.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="102" x="313.25" y="166.9951">AbstractMTree</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="189" x="269.75" y="179.5791">elki.index.tree.metrical.mtreevariants</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="1220" x="692" y="146"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="1218" x="693" y="158.1387">O, N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;, E extends MTreeEntry, S extends MTreeSettings&lt;O, N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;, E extends MTreeEntry&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1908" y1="186.9375" y2="186.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="197.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="257" x="29" y="203.9326">EXTRA_INTEGRITY_CHECKS: boolean</text><polygon fill="none" points="20,211.8828,24,215.8828,20,219.8828,16,215.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="867" x="29" y="220.2295">settings: S extends MTreeSettings&lt;O, N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;, E extends MTreeEntry&gt;</text><ellipse cx="20" cy="233.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="29" y="236.5264">statistics: Statistics</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1908" y1="243.8281" y2="243.8281"/><ellipse cx="20" cy="257.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1428" x="29" y="260.8232">AbstractMTree(PageFile&lt;N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;&gt;, S extends MTreeSettings&lt;O, N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;, E extends MTreeEntry&gt;)</text><ellipse cx="20" cy="273.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="29" y="277.1201">getDistance(): Distance&lt;? super O&gt;</text><ellipse cx="20" cy="290.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="302" x="29" y="293.417">insert(E extends MTreeEntry, boolean): void</text><ellipse cx="20" cy="306.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="29" y="309.7139">insertAll(List&lt;E extends MTreeEntry&gt;): void</text><polygon fill="#FFFF44" points="20,317.6641,24,321.6641,20,325.6641,16,321.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="29" y="326.0107">createEmptyRoot(E extends MTreeEntry): void</text><polygon fill="#FFFF44" points="20,333.9609,24,337.9609,20,341.9609,16,337.9609" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1007" x="29" y="342.3076">getSortedEntries(N extends AbstractMTreeNode&lt;O, N extends AbstractMTreeNode&lt;O,N,E&gt;, E extends MTreeEntry&gt;, DBID): List&lt;DoubleIntPair&gt;</text><ellipse cx="20" cy="355.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="256" x="29" y="358.6045">distance(DBIDRef, DBIDRef): double</text><ellipse cx="20" cy="371.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="438" x="29" y="374.9014">distance(E extends MTreeEntry, E extends MTreeEntry): double</text><polygon fill="#FFFF44" points="20,382.8516,24,386.8516,20,390.8516,16,386.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1146" x="29" y="391.1982">createNewDirectoryEntry(N extends AbstractMTreeNode&lt;O, N extends AbstractMTreeNode&lt;O,N,E&gt;, E extends MTreeEntry&gt;, DBID, double): E extends MTreeEntry</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="401.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="397" x="29" y="407.4951">adjustTree(IndexTreePath&lt;E extends MTreeEntry&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="417.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="848" x="29" y="423.792">hasOverflow(N extends AbstractMTreeNode&lt;O, N extends AbstractMTreeNode&lt;O,N,E&gt;, E extends MTreeEntry&gt;): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="433.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1874" x="29" y="440.0889">createNewRoot(N extends AbstractMTreeNode&lt;O, N extends AbstractMTreeNode&lt;O,N,E&gt;, E extends MTreeEntry&gt;, N extends AbstractMTreeNode&lt;O, N extends AbstractMTreeNode&lt;O,N,E&gt;, E extends MTreeEntry&gt;, DBID, DBID): IndexTreePath&lt;E extends MTreeEntry&gt;</text><ellipse cx="20" cy="453.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="29" y="456.3857">getLeaves(): List&lt;E extends MTreeEntry&gt;</text><ellipse cx="20" cy="469.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="29" y="472.6826">getHeight(): int</text><ellipse cx="20" cy="485.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="29" y="488.9795">logStatistics(): void</text><polygon fill="#FFFF44" points="20,496.9297,24,500.9297,20,504.9297,16,500.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="29" y="505.2764">doExtraIntegrityChecks(): void</text></g></a><!--MD5=[52aadfe12c07fd18c70d51584ebed562]
class elki.index.tree.metrical.MetricalIndexTree--><a href="../MetricalIndexTree.html" target="_top" title="../MetricalIndexTree.html" xlink:actuate="onRequest" xlink:href="../MetricalIndexTree.html" xlink:show="new" xlink:title="../MetricalIndexTree.html" xlink:type="simple"><g id="elem_elki.index.tree.metrical.MetricalIndexTree"><rect codeLine="28" fill="#F1F1F1" height="78.5313" id="elki.index.tree.metrical.MetricalIndexTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="684" x="617" y="10"/><ellipse cx="632" cy="28.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M632.1094,24.3125 L630.9531,29.3906 L633.2813,29.3906 L632.1094,24.3125 Z M630.625,22.0781 L633.6094,22.0781 L636.9688,34.4688 L634.5156,34.4688 L633.75,31.4063 L630.4688,31.4063 L629.7188,34.4688 L627.2813,34.4688 L630.625,22.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="646" y="27.9951">MetricalIndexTree</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="116" x="651.5" y="40.5791">elki.index.tree.metrical</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="523" x="781" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="521" x="782" y="19.1387">O, N extends AbstractMTreeNode&lt;O, N, E extends MTreeEntry&gt;, E extends MTreeEntry</text><line style="stroke:#181818;stroke-width:0.5;" x1="618" x2="1300" y1="47.9375" y2="47.9375"/><ellipse cx="628" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="637" y="64.9326">getDistance(): Distance&lt;? super O&gt;</text><ellipse cx="628" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="149" x="637" y="81.2295">getLeaves(): List&lt;E&gt;</text></g></a><!--MD5=[9d8ec91253e7d22cbf05b10c38e58d28]
class elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics--><a href="AbstractMTree.Statistics.html" target="_top" title="AbstractMTree.Statistics.html" xlink:actuate="onRequest" xlink:href="AbstractMTree.Statistics.html" xlink:show="new" xlink:title="AbstractMTree.Statistics.html" xlink:type="simple"><g id="elem_elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics"><rect codeLine="32" fill="#F1F1F1" height="37.9375" id="elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="852.5" y="573"/><ellipse cx="867.5" cy="591.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M870.4688,597.6094 Q869.8906,597.9063 869.25,598.0469 Q868.6094,598.2031 867.9063,598.2031 Q865.4063,598.2031 864.0781,596.5625 Q862.7656,594.9063 862.7656,591.7813 Q862.7656,588.6563 864.0781,587 Q865.4063,585.3438 867.9063,585.3438 Q868.6094,585.3438 869.25,585.5 Q869.9063,585.6563 870.4688,585.9531 L870.4688,588.6719 Q869.8438,588.0938 869.25,587.8281 Q868.6563,587.5469 868.0313,587.5469 Q866.6875,587.5469 866,588.625 Q865.3125,589.6875 865.3125,591.7813 Q865.3125,593.875 866,594.9531 Q866.6875,596.0156 868.0313,596.0156 Q868.6563,596.0156 869.25,595.75 Q869.8438,595.4688 870.4688,594.8906 L870.4688,597.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="888.5" y="590.9951">AbstractMTree.Statistics</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="181" x="881.5" y="603.5791">elki.index.tree.metrical.mtreevariants</text></g></a><!--MD5=[fc836cb201312eca9451518862ecc835]
reverse link elki.index.tree.metrical.MetricalIndexTree to elki.index.tree.metrical.mtreevariants.AbstractMTree--><g id="link_elki.index.tree.metrical.MetricalIndexTree_elki.index.tree.metrical.mtreevariants.AbstractMTree"><path codeLine="34" d="M959,109.37 C959,121.46 959,134.79 959,148.72 " fill="none" id="elki.index.tree.metrical.MetricalIndexTree-backto-elki.index.tree.metrical.mtreevariants.AbstractMTree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="952,109.07,959,89.07,966,109.07,952,109.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[04fe20ab3de432fd4e8d89c7eb760f12]
reverse link elki.index.tree.metrical.mtreevariants.AbstractMTree to elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics--><g id="link_elki.index.tree.metrical.mtreevariants.AbstractMTree_elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics"><path codeLine="35" d="M959,528.41 C959,546.25 959,561.75 959,572.86 " fill="none" id="elki.index.tree.metrical.mtreevariants.AbstractMTree-backto-elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="959" cy="521.29" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="959" x2="959" y1="529.29" y2="513.29"/><line style="stroke:#181818;stroke-width:1.0;" x1="951" x2="967" y1="521.29" y2="521.29"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="860" y="615.9375"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="860" y="625.2197">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[1c3f079ea4110ac215ab1707a9553742]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    abstract class "<size:14>AbstractMTree\n<size:10>elki.index.tree.metrical.mtreevariants" as elki.index.tree.metrical.mtreevariants.AbstractMTree<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry, S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>> [[AbstractMTree.html]] {
        {static} -EXTRA_INTEGRITY_CHECKS: boolean
        #settings: S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>
        +statistics: Statistics
        +AbstractMTree(PageFile<N extends AbstractMTreeNode<O, N, E extends MTreeEntry>>, S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>)
        +getDistance(): Distance<? super O>
        +insert(E extends MTreeEntry, boolean): void
        +insertAll(List<E extends MTreeEntry>): void
        #createEmptyRoot(E extends MTreeEntry): void
        #getSortedEntries(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID): List<DoubleIntPair>
        {abstract} +distance(DBIDRef, DBIDRef): double
        +distance(E extends MTreeEntry, E extends MTreeEntry): double
        {abstract} #createNewDirectoryEntry(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID, double): E extends MTreeEntry
        -adjustTree(IndexTreePath<E extends MTreeEntry>): void
        -hasOverflow(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>): boolean
        -createNewRoot(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID, DBID): IndexTreePath<E extends MTreeEntry>
        +getLeaves(): List<E extends MTreeEntry>
        +getHeight(): int
        +logStatistics(): void
        #doExtraIntegrityChecks(): void
    }

    abstract class "<size:14>MetricalIndexTree\n<size:10>elki.index.tree.metrical" as elki.index.tree.metrical.MetricalIndexTree<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry> [[../MetricalIndexTree.html]] {
        {abstract} +getDistance(): Distance<? super O>
        {abstract} +getLeaves(): List<E>
    }
    class "<size:14>AbstractMTree.Statistics\n<size:10>elki.index.tree.metrical.mtreevariants" as elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics [[AbstractMTree.Statistics.html]]

    elki.index.tree.metrical.MetricalIndexTree <|- - elki.index.tree.metrical.mtreevariants.AbstractMTree
    elki.index.tree.metrical.mtreevariants.AbstractMTree +- - elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>