@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    abstract class "<size:14>AbstractMTree\n<size:10>elki.index.tree.metrical.mtreevariants" as elki.index.tree.metrical.mtreevariants.AbstractMTree<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry, S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>> [[AbstractMTree.html]] {
        {static} -EXTRA_INTEGRITY_CHECKS: boolean
        #settings: S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>
        +statistics: Statistics
        +AbstractMTree(PageFile<N extends AbstractMTreeNode<O, N, E extends MTreeEntry>>, S extends MTreeSettings<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry>)
        +getDistance(): Distance<? super O>
        +insert(E extends MTreeEntry, boolean): void
        +insertAll(List<E extends MTreeEntry>): void
        #createEmptyRoot(E extends MTreeEntry): void
        #getSortedEntries(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID): List<DoubleIntPair>
        {abstract} +distance(DBIDRef, DBIDRef): double
        +distance(E extends MTreeEntry, E extends MTreeEntry): double
        {abstract} #createNewDirectoryEntry(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID, double): E extends MTreeEntry
        -adjustTree(IndexTreePath<E extends MTreeEntry>): void
        -hasOverflow(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>): boolean
        -createNewRoot(N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, N extends AbstractMTreeNode<O, N extends AbstractMTreeNode<O,N,E>, E extends MTreeEntry>, DBID, DBID): IndexTreePath<E extends MTreeEntry>
        +getLeaves(): List<E extends MTreeEntry>
        +getHeight(): int
        +logStatistics(): void
        #doExtraIntegrityChecks(): void
    }

    abstract class "<size:14>MetricalIndexTree\n<size:10>elki.index.tree.metrical" as elki.index.tree.metrical.MetricalIndexTree<O, N extends AbstractMTreeNode<O, N, E extends MTreeEntry>, E extends MTreeEntry> [[../MetricalIndexTree.html]] {
        {abstract} +getDistance(): Distance<? super O>
        {abstract} +getLeaves(): List<E>
    }
    class "<size:14>AbstractMTree.Statistics\n<size:10>elki.index.tree.metrical.mtreevariants" as elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics [[AbstractMTree.Statistics.html]]

    elki.index.tree.metrical.MetricalIndexTree <|-- elki.index.tree.metrical.mtreevariants.AbstractMTree
    elki.index.tree.metrical.mtreevariants.AbstractMTree +-- elki.index.tree.metrical.mtreevariants.AbstractMTree.Statistics

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml
