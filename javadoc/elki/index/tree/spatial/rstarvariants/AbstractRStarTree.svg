<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="928px" preserveAspectRatio="none" style="width:1891px;height:928px;background:#FFFFFF;" version="1.1" viewBox="0 0 1891 928" width="1891px" zoomAndPan="magnify"><defs/><g><!--MD5=[d67d115c15aa4638fab20c617f6a8a83]
class elki.index.tree.spatial.rstarvariants.AbstractRStarTree--><a href="AbstractRStarTree.html" target="_top" title="AbstractRStarTree.html" xlink:actuate="onRequest" xlink:href="AbstractRStarTree.html" xlink:show="new" xlink:title="AbstractRStarTree.html" xlink:type="simple"><g id="elem_elki.index.tree.spatial.rstarvariants.AbstractRStarTree"><rect codeLine="6" fill="#F1F1F1" height="591.7344" id="elki.index.tree.spatial.rstarvariants.AbstractRStarTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1871" x="9" y="214"/><ellipse cx="513.75" cy="232.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M513.8594,228.3125 L512.7031,233.3906 L515.0313,233.3906 L513.8594,228.3125 Z M512.375,226.0781 L515.3594,226.0781 L518.7188,238.4688 L516.2656,238.4688 L515.5,235.4063 L512.2188,235.4063 L511.4688,238.4688 L509.0313,238.4688 L512.375,226.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="128" x="556.75" y="231.9951">AbstractRStarTree</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="173" x="534.25" y="244.5791">elki.index.tree.spatial.rstarvariants</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="678" x="1205" y="211"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="676" x="1206" y="223.1387">N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;, E extends SpatialEntry, S extends RTreeSettings</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1879" y1="251.9375" y2="251.9375"/><polygon fill="none" points="20,260.5859,24,264.5859,20,268.5859,16,264.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="257" x="29" y="268.9326">EXTRA_INTEGRITY_CHECKS: boolean</text><polygon fill="none" points="20,276.8828,24,280.8828,20,284.8828,16,280.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="29" y="285.2295">height: int</text><ellipse cx="20" cy="298.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="29" y="301.5264">statistics: Statistics</text><polygon fill="none" points="20,310.4766,16,316.4766,24,316.4766" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="29" y="317.8232">lastInsertedEntry: E extends SpatialEntry</text><polygon fill="none" points="20,325.7734,24,329.7734,20,333.7734,16,329.7734" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="29" y="334.1201">settings: S extends RTreeSettings</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="1879" y1="341.4219" y2="341.4219"/><ellipse cx="20" cy="355.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="830" x="29" y="358.417">AbstractRStarTree(PageFile&lt;N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;&gt;, S extends RTreeSettings)</text><polygon fill="#FFFF44" points="20,366.3672,24,370.3672,20,374.3672,16,370.3672" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="894" x="29" y="374.7139">findPathToObject(IndexTreePath&lt;E extends SpatialEntry&gt;, SpatialComparable, DBIDRef): IndexTreePath&lt;E extends SpatialEntry&gt;</text><ellipse cx="20" cy="387.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="29" y="391.0107">insertLeaf(E extends SpatialEntry): void</text><polygon fill="#FFFF44" points="20,398.9609,24,402.9609,20,406.9609,16,402.9609" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="29" y="407.3076">insertEntry(E extends SpatialEntry, int): void</text><polygon fill="#FFFF44" points="20,415.2578,24,419.2578,20,423.2578,16,419.2578" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="399" x="29" y="423.6045">deletePath(IndexTreePath&lt;E extends SpatialEntry&gt;): void</text><ellipse cx="20" cy="436.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="800" x="29" y="439.9014">initializeFromFile(TreeIndexHeader, PageFile&lt;N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;&gt;): void</text><polygon fill="#FFFF44" points="20,447.8516,24,451.8516,20,455.8516,16,451.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="29" y="456.1982">initializeCapacities(E extends SpatialEntry): void</text><ellipse cx="20" cy="469.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="29" y="472.4951">canBulkLoad(): boolean</text><polygon fill="#FFFF44" points="20,480.4453,24,484.4453,20,488.4453,16,484.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="29" y="488.792">createBulkLeafNodes(List&lt;E extends SpatialEntry&gt;): List&lt;E extends SpatialEntry&gt;</text><polygon fill="#FFFF44" points="20,496.7422,24,500.7422,20,504.7422,16,500.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="320" x="29" y="505.0889">bulkLoad(List&lt;E extends SpatialEntry&gt;): void</text><ellipse cx="20" cy="518.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="29" y="521.3857">getHeight(): int</text><polygon fill="#FFFF44" points="20,529.3359,24,533.3359,20,537.3359,16,533.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="29" y="537.6826">setHeight(int): void</text><polygon fill="#FFFF44" points="20,545.6328,24,549.6328,20,553.6328,16,549.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="147" x="29" y="553.9795">computeHeight(): int</text><polygon fill="#FFFF44" points="20,561.9297,24,565.9297,20,569.9297,16,565.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="884" x="29" y="570.2764">hasOverflow(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;): boolean</text><polygon fill="#FFFF44" points="20,578.2266,24,582.2266,20,586.2266,16,582.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="893" x="29" y="586.5732">hasUnderflow(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;): boolean</text><polygon fill="#FFFF44" points="20,594.5234,24,598.5234,20,602.5234,16,598.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="1073" x="29" y="602.8701">createNewDirectoryEntry(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;): E extends SpatialEntry</text><polygon fill="#FFFF44" points="20,610.8203,24,614.8203,20,618.8203,16,614.8203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1823" x="29" y="619.167">createNewRoot(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;, N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;): IndexTreePath&lt;E extends SpatialEntry&gt;</text><polygon fill="#FFFF44" points="20,627.1172,24,631.1172,20,635.1172,16,631.1172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1523" x="29" y="635.4639">containedTest(IndexTreePath&lt;E extends SpatialEntry&gt;, N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;, SpatialComparable): IndexTreePath&lt;E extends SpatialEntry&gt;</text><polygon fill="#FFFF44" points="20,643.4141,24,647.4141,20,651.4141,16,647.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="842" x="29" y="651.7607">choosePath(IndexTreePath&lt;E extends SpatialEntry&gt;, SpatialComparable, int, int): IndexTreePath&lt;E extends SpatialEntry&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="661.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1845" x="29" y="668.0576">overflowTreatment(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;, IndexTreePath&lt;E extends SpatialEntry&gt;): N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="678.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1459" x="29" y="684.3545">split(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;): N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;</text><ellipse cx="20" cy="697.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1126" x="29" y="700.6514">reInsert(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;, IndexTreePath&lt;E extends SpatialEntry&gt;, int[]): void</text><polygon fill="#FFFF44" points="20,708.6016,24,712.6016,20,716.6016,16,712.6016" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="29" y="716.9482">adjustTree(IndexTreePath&lt;E extends SpatialEntry&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="726.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="971" x="29" y="733.2451">condenseTree(IndexTreePath&lt;E extends SpatialEntry&gt;, ArrayDeque&lt;N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;&gt;): void</text><ellipse cx="20" cy="746.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="29" y="749.542">getLeaves(): List&lt;E extends SpatialEntry&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="759.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1122" x="29" y="765.8389">getLeafNodeEntries(N extends AbstractRStarTreeNode&lt;N extends AbstractRStarTreeNode&lt;N,E&gt;, E extends SpatialEntry&gt;, List&lt;E extends SpatialEntry&gt;, int): void</text><ellipse cx="20" cy="778.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="29" y="782.1357">doExtraIntegrityChecks(): void</text><ellipse cx="20" cy="795.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="29" y="798.4326">logStatistics(): void</text></g></a><!--MD5=[c19cb2b5e3091b35b8033c9395a3b89c]
class elki.index.tree.IndexTree--><a href="../../IndexTree.html" target="_top" title="../../IndexTree.html" xlink:actuate="onRequest" xlink:href="../../IndexTree.html" xlink:show="new" xlink:title="../../IndexTree.html" xlink:type="simple"><g id="elem_elki.index.tree.IndexTree"><rect codeLine="42" fill="#F1F1F1" height="143.7188" id="elki.index.tree.IndexTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="665" x="612" y="10"/><ellipse cx="643.2" cy="28.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M643.3094,24.3125 L642.1531,29.3906 L644.4813,29.3906 L643.3094,24.3125 Z M641.825,22.0781 L644.8094,22.0781 L648.1688,34.4688 L645.7156,34.4688 L644.95,31.4063 L641.6688,31.4063 L640.9188,34.4688 L638.4813,34.4688 L641.825,22.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="71" x="660.8" y="27.9951">IndexTree</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="71" x="660.8" y="40.5791">elki.index.tree</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="524" x="756" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="522" x="757" y="19.1387">N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;, E extends SpatialEntry</text><line style="stroke:#181818;stroke-width:0.5;" x1="613" x2="1276" y1="47.9375" y2="47.9375"/><polygon fill="#FFFF44" points="623,56.5859,627,60.5859,623,64.5859,619,60.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="632" y="64.9326">getLogger(): Logging</text><polygon fill="#FFFF44" points="623,72.8828,627,76.8828,623,80.8828,619,76.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="340" x="632" y="81.2295">initializeCapacities(E extends SpatialEntry): void</text><polygon fill="#FFFF44" points="623,89.1797,627,93.1797,623,97.1797,619,93.1797" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="330" x="632" y="97.5264">createEmptyRoot(E extends SpatialEntry): void</text><polygon fill="#FFFF44" points="623,105.4766,627,109.4766,623,113.4766,619,109.4766" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="291" x="632" y="113.8232">createRootEntry(): E extends SpatialEntry</text><polygon fill="#FFFF44" points="623,121.7734,627,125.7734,623,129.7734,619,125.7734" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="606" x="632" y="130.1201">createNewLeafNode(): N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;</text><polygon fill="#FFFF44" points="623,138.0703,627,142.0703,623,146.0703,619,142.0703" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="639" x="632" y="146.417">createNewDirectoryNode(): N extends AbstractRStarTreeNode&lt;N, E extends SpatialEntry&gt;</text></g></a><!--MD5=[aa4bdbf301fae15af3f9e01de04a97d4]
class elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics--><a href="AbstractRStarTree.Statistics.html" target="_top" title="AbstractRStarTree.Statistics.html" xlink:actuate="onRequest" xlink:href="AbstractRStarTree.Statistics.html" xlink:show="new" xlink:title="AbstractRStarTree.Statistics.html" xlink:type="simple"><g id="elem_elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics"><rect codeLine="50" fill="#F1F1F1" height="37.9375" id="elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="832.5" y="866"/><ellipse cx="847.5" cy="884.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M850.4688,890.6094 Q849.8906,890.9063 849.25,891.0469 Q848.6094,891.2031 847.9063,891.2031 Q845.4063,891.2031 844.0781,889.5625 Q842.7656,887.9063 842.7656,884.7813 Q842.7656,881.6563 844.0781,880 Q845.4063,878.3438 847.9063,878.3438 Q848.6094,878.3438 849.25,878.5 Q849.9063,878.6563 850.4688,878.9531 L850.4688,881.6719 Q849.8438,881.0938 849.25,880.8281 Q848.6563,880.5469 848.0313,880.5469 Q846.6875,880.5469 846,881.625 Q845.3125,882.6875 845.3125,884.7813 Q845.3125,886.875 846,887.9531 Q846.6875,889.0156 848.0313,889.0156 Q848.6563,889.0156 849.25,888.75 Q849.8438,888.4688 850.4688,887.8906 L850.4688,890.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="861.5" y="883.9951">AbstractRStarTree.Statistics</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="166" x="874.5" y="896.5791">elki.index.tree.spatial.rstarvariants</text></g></a><!--MD5=[a481de983dbee37fc3b7dd183588b453]
reverse link elki.index.tree.IndexTree to elki.index.tree.spatial.rstarvariants.AbstractRStarTree--><g id="link_elki.index.tree.IndexTree_elki.index.tree.spatial.rstarvariants.AbstractRStarTree"><path codeLine="52" d="M944.5,174.34 C944.5,186.74 944.5,199.96 944.5,213.73 " fill="none" id="elki.index.tree.IndexTree-backto-elki.index.tree.spatial.rstarvariants.AbstractRStarTree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="937.5,174.3,944.5,154.3,951.5,174.3,937.5,174.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[26410913202bcedf6f3e3665732467cb]
reverse link elki.index.tree.spatial.rstarvariants.AbstractRStarTree to elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics--><g id="link_elki.index.tree.spatial.rstarvariants.AbstractRStarTree_elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics"><path codeLine="53" d="M944.5,821.45 C944.5,839.66 944.5,854.99 944.5,865.91 " fill="none" id="elki.index.tree.spatial.rstarvariants.AbstractRStarTree-backto-elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="944.5" cy="814.26" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="944.5" x2="944.5" y1="822.26" y2="806.26"/><line style="stroke:#181818;stroke-width:1.0;" x1="936.5" x2="952.5" y1="814.26" y2="814.26"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="845.5" y="908.9375"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="845.5" y="918.2197">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[f3550bc83a3f0c5b20e812f2c2b5b2a6]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    abstract class "<size:14>AbstractRStarTree\n<size:10>elki.index.tree.spatial.rstarvariants" as elki.index.tree.spatial.rstarvariants.AbstractRStarTree<N extends AbstractRStarTreeNode<N, E extends SpatialEntry>, E extends SpatialEntry, S extends RTreeSettings> [[AbstractRStarTree.html]] {
        {static} #EXTRA_INTEGRITY_CHECKS: boolean
        #height: int
        +statistics: Statistics
        ~lastInsertedEntry: E extends SpatialEntry
        #settings: S extends RTreeSettings
        +AbstractRStarTree(PageFile<N extends AbstractRStarTreeNode<N, E extends SpatialEntry>>, S extends RTreeSettings)
        #findPathToObject(IndexTreePath<E extends SpatialEntry>, SpatialComparable, DBIDRef): IndexTreePath<E extends SpatialEntry>
        +insertLeaf(E extends SpatialEntry): void
        #insertEntry(E extends SpatialEntry, int): void
        #deletePath(IndexTreePath<E extends SpatialEntry>): void
        +initializeFromFile(TreeIndexHeader, PageFile<N extends AbstractRStarTreeNode<N, E extends SpatialEntry>>): void
        #initializeCapacities(E extends SpatialEntry): void
        +canBulkLoad(): boolean
        #createBulkLeafNodes(List<E extends SpatialEntry>): List<E extends SpatialEntry>
        {abstract} #bulkLoad(List<E extends SpatialEntry>): void
        +getHeight(): int
        #setHeight(int): void
        {abstract} #computeHeight(): int
        {abstract} #hasOverflow(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>): boolean
        {abstract} #hasUnderflow(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>): boolean
        {abstract} #createNewDirectoryEntry(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>): E extends SpatialEntry
        #createNewRoot(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>, N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>): IndexTreePath<E extends SpatialEntry>
        #containedTest(IndexTreePath<E extends SpatialEntry>, N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>, SpatialComparable): IndexTreePath<E extends SpatialEntry>
        #choosePath(IndexTreePath<E extends SpatialEntry>, SpatialComparable, int, int): IndexTreePath<E extends SpatialEntry>
        -overflowTreatment(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>, IndexTreePath<E extends SpatialEntry>): N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>
        -split(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>): N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>
        +reInsert(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>, IndexTreePath<E extends SpatialEntry>, int[]): void
        #adjustTree(IndexTreePath<E extends SpatialEntry>): void
        -condenseTree(IndexTreePath<E extends SpatialEntry>, ArrayDeque<N extends AbstractRStarTreeNode<N, E extends SpatialEntry>>): void
        +getLeaves(): List<E extends SpatialEntry>
        -getLeafNodeEntries(N extends AbstractRStarTreeNode<N extends AbstractRStarTreeNode<N,E>, E extends SpatialEntry>, List<E extends SpatialEntry>, int): void
        +doExtraIntegrityChecks(): void
        +logStatistics(): void
    }

    abstract class "<size:14>IndexTree\n<size:10>elki.index.tree" as elki.index.tree.IndexTree<N extends AbstractRStarTreeNode<N, E extends SpatialEntry>, E extends SpatialEntry> [[../../IndexTree.html]] {
        {abstract} #getLogger(): Logging
        {abstract} #initializeCapacities(E extends SpatialEntry): void
        {abstract} #createEmptyRoot(E extends SpatialEntry): void
        {abstract} #createRootEntry(): E extends SpatialEntry
        {abstract} #createNewLeafNode(): N extends AbstractRStarTreeNode<N, E extends SpatialEntry>
        {abstract} #createNewDirectoryNode(): N extends AbstractRStarTreeNode<N, E extends SpatialEntry>
    }
    class "<size:14>AbstractRStarTree.Statistics\n<size:10>elki.index.tree.spatial.rstarvariants" as elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics [[AbstractRStarTree.Statistics.html]]

    elki.index.tree.IndexTree <|- - elki.index.tree.spatial.rstarvariants.AbstractRStarTree
    elki.index.tree.spatial.rstarvariants.AbstractRStarTree +- - elki.index.tree.spatial.rstarvariants.AbstractRStarTree.Statistics

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>