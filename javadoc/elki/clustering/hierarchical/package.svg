<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1165px" preserveAspectRatio="none" style="width:8104px;height:1165px;background:#FFFFFF;" version="1.1" viewBox="0 0 8104 1165" width="8104px" zoomAndPan="magnify"><defs/><g><!--MD5=[bf846d8b64b2e5cc595d43e82dbc71ec]
cluster elki.clustering.hierarchical--><g id="cluster_elki.clustering.hierarchical"><path d="M8.5,171 L217.5,171 A3.75,3.75 0 0 1 220,173.5 L227,193.2969 L7549.5,193.2969 A2.5,2.5 0 0 1 7552,195.7969 L7552,1137.5 A2.5,2.5 0 0 1 7549.5,1140 L8.5,1140 A2.5,2.5 0 0 1 6,1137.5 L6,173.5 A2.5,2.5 0 0 1 8.5,171 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="227" y1="193.2969" y2="193.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="208" x="10" y="185.9951">elki.clustering.hierarchical</text></g><!--MD5=[3c05438b9ae2906c5280450d2379de39]
cluster elki.clustering.hierarchical.linkage--><g id="cluster_elki.clustering.hierarchical.linkage"><path d="M7578.5,984 L7848.5,984 A3.75,3.75 0 0 1 7851,986.5 L7858,1006.2969 L7883.5,1006.2969 A2.5,2.5 0 0 1 7886,1008.7969 L7886,1080.5 A2.5,2.5 0 0 1 7883.5,1083 L7578.5,1083 A2.5,2.5 0 0 1 7576,1080.5 L7576,986.5 A2.5,2.5 0 0 1 7578.5,984 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="7576" x2="7858" y1="1006.2969" y2="1006.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="269" x="7580" y="998.9951">elki.clustering.hierarchical.linkage</text></g><!--MD5=[160e40e4de9325fe07c8e87e0e7695ed]
cluster elki--><g id="cluster_elki"><path d="M4012.5,6 L4040.5,6 A3.75,3.75 0 0 1 4043,8.5 L4050,28.2969 L4381.5,28.2969 A2.5,2.5 0 0 1 4384,30.7969 L4384,135.5 A2.5,2.5 0 0 1 4381.5,138 L4012.5,138 A2.5,2.5 0 0 1 4010,135.5 L4010,8.5 A2.5,2.5 0 0 1 4012.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4010" x2="4050" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="27" x="4014" y="20.9951">elki</text></g><!--MD5=[e8a1578a7d187e0656ad6dbacf779455]
cluster elki.math.geometry.PrimsMinimumSpanningTree--><g id="cluster_elki.math.geometry.PrimsMinimumSpanningTree"><path d="M7578.5,317.5 L7959.5,317.5 A3.75,3.75 0 0 1 7962,320 L7969,339.7969 L8094.5,339.7969 A2.5,2.5 0 0 1 8097,342.2969 L8097,447 A2.5,2.5 0 0 1 8094.5,449.5 L7578.5,449.5 A2.5,2.5 0 0 1 7576,447 L7576,320 A2.5,2.5 0 0 1 7578.5,317.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="7576" x2="7969" y1="339.7969" y2="339.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="380" x="7580" y="332.4951">elki.math.geometry.PrimsMinimumSpanningTree</text></g><!--MD5=[2681a7b069b51a31d80edfe84c4d06b4]
class elki.clustering.hierarchical.AGNES--><a href="AGNES.html" target="_top" title="AGNES.html" xlink:actuate="onRequest" xlink:href="AGNES.html" xlink:show="new" xlink:title="AGNES.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.AGNES"><rect codeLine="4" fill="#F1F1F1" height="145.7813" id="elki.clustering.hierarchical.AGNES" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="629" x="22.5" y="690"/><ellipse cx="302.75" cy="706" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M305.7188,711.6406 Q305.1406,711.9375 304.5,712.0781 Q303.8594,712.2344 303.1563,712.2344 Q300.6563,712.2344 299.3281,710.5938 Q298.0156,708.9375 298.0156,705.8125 Q298.0156,702.6875 299.3281,701.0313 Q300.6563,699.375 303.1563,699.375 Q303.8594,699.375 304.5,699.5313 Q305.1563,699.6875 305.7188,699.9844 L305.7188,702.7031 Q305.0938,702.125 304.5,701.8594 Q303.9063,701.5781 303.2813,701.5781 Q301.9375,701.5781 301.25,702.6563 Q300.5625,703.7188 300.5625,705.8125 Q300.5625,707.9063 301.25,708.9844 Q301.9375,710.0469 303.2813,710.0469 Q303.9063,710.0469 304.5,709.7813 Q305.0938,709.5 305.7188,708.9219 L305.7188,711.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="323.25" y="710.8467">AGNES</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="644.5" y="687"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="645.5" y="699.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="650.5" y1="722" y2="722"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30.5" y="732.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="42.5" y="738.9951">LOG: Logging</text><polygon fill="none" points="33.5,746.9453,37.5,750.9453,33.5,754.9453,29.5,750.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="42.5" y="755.292">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="650.5" y1="762.5938" y2="762.5938"/><ellipse cx="33.5" cy="776.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="42.5" y="779.5889">AGNES(Distance&lt;? super O&gt;, Linkage)</text><ellipse cx="33.5" cy="792.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="42.5" y="795.8857">run(Relation&lt;O&gt;): ClusterMergeHistory</text><polygon fill="#FFFF44" points="33.5,803.8359,37.5,807.8359,33.5,811.8359,29.5,807.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="603" x="42.5" y="812.1826">initializeDistanceMatrix(ArrayDBIDs, DistanceQuery&lt;?&gt;, Linkage): ClusterDistanceMatrix</text><ellipse cx="33.5" cy="825.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="42.5" y="828.4795">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[0251bf433d6c502a1b93d001784dcdd7]
class elki.clustering.hierarchical.MedoidLinkage--><a href="MedoidLinkage.html" target="_top" title="MedoidLinkage.html" xlink:actuate="onRequest" xlink:href="MedoidLinkage.html" xlink:show="new" xlink:title="MedoidLinkage.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.MedoidLinkage"><rect codeLine="30" fill="#F1F1F1" height="129.4844" id="elki.clustering.hierarchical.MedoidLinkage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="366" x="687" y="698.5"/><ellipse cx="807.75" cy="714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M810.7188,720.1406 Q810.1406,720.4375 809.5,720.5781 Q808.8594,720.7344 808.1563,720.7344 Q805.6563,720.7344 804.3281,719.0938 Q803.0156,717.4375 803.0156,714.3125 Q803.0156,711.1875 804.3281,709.5313 Q805.6563,707.875 808.1563,707.875 Q808.8594,707.875 809.5,708.0313 Q810.1563,708.1875 810.7188,708.4844 L810.7188,711.2031 Q810.0938,710.625 809.5,710.3594 Q808.9063,710.0781 808.2813,710.0781 Q806.9375,710.0781 806.25,711.1563 Q805.5625,712.2188 805.5625,714.3125 Q805.5625,716.4063 806.25,717.4844 Q806.9375,718.5469 808.2813,718.5469 Q808.9063,718.5469 809.5,718.2813 Q810.0938,718 810.7188,717.4219 L810.7188,720.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="828.25" y="719.3467">MedoidLinkage</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="1046" y="695.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="1047" y="707.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="688" x2="1052" y1="730.5" y2="730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="695" y="741.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="707" y="747.4951">LOG: Logging</text><polygon fill="none" points="698,755.4453,702,759.4453,698,763.4453,694,759.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="707" y="763.792">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="688" x2="1052" y1="771.0938" y2="771.0938"/><ellipse cx="698" cy="784.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="707" y="788.0889">MedoidLinkage(Distance&lt;? super O&gt;)</text><ellipse cx="698" cy="801.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="707" y="804.3857">run(Relation&lt;O&gt;): ClusterPrototypeMergeHistory</text><ellipse cx="698" cy="817.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="707" y="820.6826">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[c511ce4cca7bfc0b21e337e52fedf59a]
class elki.clustering.hierarchical.HACAM--><a href="HACAM.html" target="_top" title="HACAM.html" xlink:actuate="onRequest" xlink:href="HACAM.html" xlink:show="new" xlink:title="HACAM.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.HACAM"><rect codeLine="59" fill="#F1F1F1" height="129.4844" id="elki.clustering.hierarchical.HACAM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="366" x="1088" y="698.5"/><ellipse cx="1235.75" cy="714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1238.7188,720.1406 Q1238.1406,720.4375 1237.5,720.5781 Q1236.8594,720.7344 1236.1563,720.7344 Q1233.6563,720.7344 1232.3281,719.0938 Q1231.0156,717.4375 1231.0156,714.3125 Q1231.0156,711.1875 1232.3281,709.5313 Q1233.6563,707.875 1236.1563,707.875 Q1236.8594,707.875 1237.5,708.0313 Q1238.1563,708.1875 1238.7188,708.4844 L1238.7188,711.2031 Q1238.0938,710.625 1237.5,710.3594 Q1236.9063,710.0781 1236.2813,710.0781 Q1234.9375,710.0781 1234.25,711.1563 Q1233.5625,712.2188 1233.5625,714.3125 Q1233.5625,716.4063 1234.25,717.4844 Q1234.9375,718.5469 1236.2813,718.5469 Q1236.9063,718.5469 1237.5,718.2813 Q1238.0938,718 1238.7188,717.4219 L1238.7188,720.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1256.25" y="719.3467">HACAM</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="1447" y="695.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="1448" y="707.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1089" x2="1453" y1="730.5" y2="730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1096" y="741.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1108" y="747.4951">LOG: Logging</text><polygon fill="none" points="1099,755.4453,1103,759.4453,1099,763.4453,1095,759.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1108" y="763.792">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1089" x2="1453" y1="771.0938" y2="771.0938"/><ellipse cx="1099" cy="784.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="1108" y="788.0889">HACAM(Distance&lt;? super O&gt;, Variant)</text><ellipse cx="1099" cy="801.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="1108" y="804.3857">run(Relation&lt;O&gt;): ClusterPrototypeMergeHistory</text><ellipse cx="1099" cy="817.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1108" y="820.6826">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[72f5c157fbd363e8d9ccdc4fc4d5efcd]
class elki.clustering.hierarchical.HACAM.Variant--><a href="HACAM.Variant.html" target="_top" title="HACAM.Variant.html" xlink:actuate="onRequest" xlink:href="HACAM.Variant.html" xlink:show="new" xlink:title="HACAM.Variant.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.HACAM.Variant"><rect codeLine="67" fill="#F1F1F1" height="80.5938" id="elki.clustering.hierarchical.HACAM.Variant" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="1170" y="1002.5"/><ellipse cx="1216.25" cy="1018.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1220.3594,1024.5 L1212.6406,1024.5 L1212.6406,1012.1094 L1220.3594,1012.1094 L1220.3594,1014.2656 L1215.0938,1014.2656 L1215.0938,1016.9375 L1219.8594,1016.9375 L1219.8594,1019.0938 L1215.0938,1019.0938 L1215.0938,1022.3438 L1220.3594,1022.3438 L1220.3594,1024.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1236.75" y="1023.3467">HACAM.Variant</text><line style="stroke:#181818;stroke-width:0.5;" x1="1171" x2="1371" y1="1034.5" y2="1034.5"/><ellipse cx="1181" cy="1048.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="100" x="1190" y="1051.4951">MINIMUM_SUM</text><ellipse cx="1181" cy="1064.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="176" x="1190" y="1067.792">MINIMUM_SUM_INCREASE</text><line style="stroke:#181818;stroke-width:0.5;" x1="1171" x2="1371" y1="1075.0938" y2="1075.0938"/></g></a><!--MD5=[b949da0db227b2b1ddd030e4d0a68d68]
class elki.clustering.hierarchical.ClusterDensityMergeHistory--><a href="ClusterDensityMergeHistory.html" target="_top" title="ClusterDensityMergeHistory.html" xlink:actuate="onRequest" xlink:href="ClusterDensityMergeHistory.html" xlink:show="new" xlink:title="ClusterDensityMergeHistory.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.ClusterDensityMergeHistory"><rect codeLine="98" fill="#F1F1F1" height="96.8906" id="elki.clustering.hierarchical.ClusterDensityMergeHistory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="632" x="6265" y="714.5"/><ellipse cx="6480.75" cy="730.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6483.7188,736.1406 Q6483.1406,736.4375 6482.5,736.5781 Q6481.8594,736.7344 6481.1563,736.7344 Q6478.6563,736.7344 6477.3281,735.0938 Q6476.0156,733.4375 6476.0156,730.3125 Q6476.0156,727.1875 6477.3281,725.5313 Q6478.6563,723.875 6481.1563,723.875 Q6481.8594,723.875 6482.5,724.0313 Q6483.1563,724.1875 6483.7188,724.4844 L6483.7188,727.2031 Q6483.0938,726.625 6482.5,726.3594 Q6481.9063,726.0781 6481.2813,726.0781 Q6479.9375,726.0781 6479.25,727.1563 Q6478.5625,728.2188 6478.5625,730.3125 Q6478.5625,732.4063 6479.25,733.4844 Q6479.9375,734.5469 6481.2813,734.5469 Q6481.9063,734.5469 6482.5,734.2813 Q6483.0938,734 6483.7188,733.4219 L6483.7188,736.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="6501.25" y="735.3467">ClusterDensityMergeHistory</text><line style="stroke:#181818;stroke-width:0.5;" x1="6266" x2="6896" y1="746.5" y2="746.5"/><polygon fill="none" points="6276,755.1484,6280,759.1484,6276,763.1484,6272,759.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="6285" y="763.4951">coredists: DoubleDataStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="6266" x2="6896" y1="770.7969" y2="770.7969"/><ellipse cx="6276" cy="784.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="606" x="6285" y="787.792">ClusterDensityMergeHistory(ArrayDBIDs, int[], double[], int[], boolean, DoubleDataStore)</text><ellipse cx="6276" cy="800.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="6285" y="804.0889">getCoreDistanceStore(): DoubleDataStore</text></g></a><!--MD5=[037208c40996490c6d31cde797b70c5e]
class elki.clustering.hierarchical.Anderberg--><a href="Anderberg.html" target="_top" title="Anderberg.html" xlink:actuate="onRequest" xlink:href="Anderberg.html" xlink:show="new" xlink:title="Anderberg.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.Anderberg"><rect codeLine="104" fill="#F1F1F1" height="113.1875" id="elki.clustering.hierarchical.Anderberg" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="332" x="97" y="986.5"/><ellipse cx="216.25" cy="1002.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M219.2188,1008.1406 Q218.6406,1008.4375 218,1008.5781 Q217.3594,1008.7344 216.6563,1008.7344 Q214.1563,1008.7344 212.8281,1007.0938 Q211.5156,1005.4375 211.5156,1002.3125 Q211.5156,999.1875 212.8281,997.5313 Q214.1563,995.875 216.6563,995.875 Q217.3594,995.875 218,996.0313 Q218.6563,996.1875 219.2188,996.4844 L219.2188,999.2031 Q218.5938,998.625 218,998.3594 Q217.4063,998.0781 216.7813,998.0781 Q215.4375,998.0781 214.75,999.1563 Q214.0625,1000.2188 214.0625,1002.3125 Q214.0625,1004.4063 214.75,1005.4844 Q215.4375,1006.5469 216.7813,1006.5469 Q217.4063,1006.5469 218,1006.2813 Q218.5938,1006 219.2188,1005.4219 L219.2188,1008.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="236.75" y="1007.3467">Anderberg</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="422" y="983.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="423" y="995.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="98" x2="428" y1="1018.5" y2="1018.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="105" y="1029.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="117" y="1035.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="98" x2="428" y1="1042.7969" y2="1042.7969"/><ellipse cx="108" cy="1056.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="117" y="1059.792">Anderberg(Distance&lt;? super O&gt;, Linkage)</text><ellipse cx="108" cy="1072.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="117" y="1076.0889">run(Relation&lt;O&gt;): ClusterMergeHistory</text><ellipse cx="108" cy="1089.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="117" y="1092.3857">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[004d2dd28d0389ddf152db3d115ffdfb]
class elki.clustering.hierarchical.MiniMaxNNChain--><a href="MiniMaxNNChain.html" target="_top" title="MiniMaxNNChain.html" xlink:actuate="onRequest" xlink:href="MiniMaxNNChain.html" xlink:show="new" xlink:title="MiniMaxNNChain.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.MiniMaxNNChain"><rect codeLine="130" fill="#F1F1F1" height="113.1875" id="elki.clustering.hierarchical.MiniMaxNNChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="366" x="2907" y="986.5"/><ellipse cx="3023.25" cy="1002.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3026.2188,1008.1406 Q3025.6406,1008.4375 3025,1008.5781 Q3024.3594,1008.7344 3023.6563,1008.7344 Q3021.1563,1008.7344 3019.8281,1007.0938 Q3018.5156,1005.4375 3018.5156,1002.3125 Q3018.5156,999.1875 3019.8281,997.5313 Q3021.1563,995.875 3023.6563,995.875 Q3024.3594,995.875 3025,996.0313 Q3025.6563,996.1875 3026.2188,996.4844 L3026.2188,999.2031 Q3025.5938,998.625 3025,998.3594 Q3024.4063,998.0781 3023.7813,998.0781 Q3022.4375,998.0781 3021.75,999.1563 Q3021.0625,1000.2188 3021.0625,1002.3125 Q3021.0625,1004.4063 3021.75,1005.4844 Q3022.4375,1006.5469 3023.7813,1006.5469 Q3024.4063,1006.5469 3025,1006.2813 Q3025.5938,1006 3026.2188,1005.4219 L3026.2188,1008.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="3043.75" y="1007.3467">MiniMaxNNChain</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3266" y="983.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3267" y="995.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="2908" x2="3272" y1="1018.5" y2="1018.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2915" y="1029.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2927" y="1035.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="2908" x2="3272" y1="1042.7969" y2="1042.7969"/><ellipse cx="2918" cy="1056.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="2927" y="1059.792">MiniMaxNNChain(Distance&lt;? super O&gt;)</text><ellipse cx="2918" cy="1072.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="2927" y="1076.0889">run(Relation&lt;O&gt;): ClusterPrototypeMergeHistory</text><ellipse cx="2918" cy="1089.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2927" y="1092.3857">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[03391bd9ca5804a565f60cef14cccb7f]
class elki.clustering.hierarchical.OPTICSToHierarchical--><a href="OPTICSToHierarchical.html" target="_top" title="OPTICSToHierarchical.html" xlink:actuate="onRequest" xlink:href="OPTICSToHierarchical.html" xlink:show="new" xlink:title="OPTICSToHierarchical.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.OPTICSToHierarchical"><rect codeLine="146" fill="#F1F1F1" height="113.1875" id="elki.clustering.hierarchical.OPTICSToHierarchical" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="334" x="1489" y="706.5"/><ellipse cx="1577.75" cy="722.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1580.7188,728.1406 Q1580.1406,728.4375 1579.5,728.5781 Q1578.8594,728.7344 1578.1563,728.7344 Q1575.6563,728.7344 1574.3281,727.0938 Q1573.0156,725.4375 1573.0156,722.3125 Q1573.0156,719.1875 1574.3281,717.5313 Q1575.6563,715.875 1578.1563,715.875 Q1578.8594,715.875 1579.5,716.0313 Q1580.1563,716.1875 1580.7188,716.4844 L1580.7188,719.2031 Q1580.0938,718.625 1579.5,718.3594 Q1578.9063,718.0781 1578.2813,718.0781 Q1576.9375,718.0781 1576.25,719.1563 Q1575.5625,720.2188 1575.5625,722.3125 Q1575.5625,724.4063 1576.25,725.4844 Q1576.9375,726.5469 1578.2813,726.5469 Q1578.9063,726.5469 1579.5,726.2813 Q1580.0938,726 1580.7188,725.4219 L1580.7188,728.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1598.25" y="727.3467">OPTICSToHierarchical</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490" x2="1822" y1="738.5" y2="738.5"/><polygon fill="none" points="1500,748.1484,1496,754.1484,1504,754.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1509" y="755.4951">inner: OPTICSTypeAlgorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="1490" x2="1822" y1="762.7969" y2="762.7969"/><ellipse cx="1500" cy="776.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="1509" y="779.792">OPTICSToHierarchical(OPTICSTypeAlgorithm)</text><ellipse cx="1500" cy="792.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="1509" y="796.0889">autorun(Database): ClusterMergeHistory</text><ellipse cx="1500" cy="809.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1509" y="812.3857">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[489d00a7ef19aef21e5d4ac72049d25c]
class elki.clustering.hierarchical.SLINK--><a href="SLINK.html" target="_top" title="SLINK.html" xlink:actuate="onRequest" xlink:href="SLINK.html" xlink:show="new" xlink:title="SLINK.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.SLINK"><rect codeLine="160" fill="#F1F1F1" height="243.5625" id="elki.clustering.hierarchical.SLINK" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="927" x="1858.5" y="641"/><ellipse cx="2292.75" cy="657" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2295.7188,662.6406 Q2295.1406,662.9375 2294.5,663.0781 Q2293.8594,663.2344 2293.1563,663.2344 Q2290.6563,663.2344 2289.3281,661.5938 Q2288.0156,659.9375 2288.0156,656.8125 Q2288.0156,653.6875 2289.3281,652.0313 Q2290.6563,650.375 2293.1563,650.375 Q2293.8594,650.375 2294.5,650.5313 Q2295.1563,650.6875 2295.7188,650.9844 L2295.7188,653.7031 Q2295.0938,653.125 2294.5,652.8594 Q2293.9063,652.5781 2293.2813,652.5781 Q2291.9375,652.5781 2291.25,653.6563 Q2290.5625,654.7188 2290.5625,656.8125 Q2290.5625,658.9063 2291.25,659.9844 Q2291.9375,661.0469 2293.2813,661.0469 Q2293.9063,661.0469 2294.5,660.7813 Q2295.0938,660.5 2295.7188,659.9219 L2295.7188,662.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="2313.25" y="661.8467">SLINK</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="2778.5" y="638"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="2779.5" y="650.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1859.5" x2="2784.5" y1="673" y2="673"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1866.5" y="683.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1878.5" y="689.9951">LOG: Logging</text><polygon fill="none" points="1869.5,697.9453,1873.5,701.9453,1869.5,705.9453,1865.5,701.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1878.5" y="706.292">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1859.5" x2="2784.5" y1="713.5938" y2="713.5938"/><ellipse cx="1869.5" cy="727.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="1878.5" y="730.5889">SLINK(Distance&lt;? super O&gt;)</text><ellipse cx="1869.5" cy="743.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1878.5" y="746.8857">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="1869.5" cy="759.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="1878.5" y="763.1826">run(Relation&lt;O&gt;): ClusterMergeHistory</text><polygon fill="#FFFF44" points="1869.5,771.1328,1873.5,775.1328,1869.5,779.1328,1865.5,775.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="819" x="1878.5" y="779.4795">convertOutput(ClusterMergeHistoryBuilder, ArrayDBIDs, DBIDDataStore, DoubleDataStore): ClusterMergeHistoryBuilder</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1866.5" y="789.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="651" x="1878.5" y="795.7764">step2(DBIDRef, DBIDArrayIter, int, DistanceQuery&lt;? super O&gt;, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1866.5" y="805.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="894" x="1878.5" y="812.0732">step2primitive(DBIDRef, DBIDArrayIter, int, Relation&lt;? extends O&gt;, PrimitiveDistance&lt;? super O&gt;, WritableDoubleDataStore): void</text><polygon fill="#FFFF44" points="1869.5,820.0234,1873.5,824.0234,1869.5,828.0234,1865.5,824.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="901" x="1878.5" y="828.3701">process(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1866.5" y="838.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="831" x="1878.5" y="844.667">slinkstep3(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1866.5" y="854.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="649" x="1878.5" y="860.9639">slinkstep4(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore): void</text><polygon fill="#FFFF44" points="1869.5,868.9141,1873.5,872.9141,1869.5,876.9141,1865.5,872.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="1878.5" y="877.2607">getLogger(): Logging</text></g></a><!--MD5=[10f0de55f87effb8e6e60865fdab7fcc]
class elki.clustering.hierarchical.MiniMax--><a href="MiniMax.html" target="_top" title="MiniMax.html" xlink:actuate="onRequest" xlink:href="MiniMax.html" xlink:show="new" xlink:title="MiniMax.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.MiniMax"><rect codeLine="181" fill="#F1F1F1" height="145.7813" id="elki.clustering.hierarchical.MiniMax" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="683" x="2820.5" y="690"/><ellipse cx="3124.75" cy="706" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3127.7188,711.6406 Q3127.1406,711.9375 3126.5,712.0781 Q3125.8594,712.2344 3125.1563,712.2344 Q3122.6563,712.2344 3121.3281,710.5938 Q3120.0156,708.9375 3120.0156,705.8125 Q3120.0156,702.6875 3121.3281,701.0313 Q3122.6563,699.375 3125.1563,699.375 Q3125.8594,699.375 3126.5,699.5313 Q3127.1563,699.6875 3127.7188,699.9844 L3127.7188,702.7031 Q3127.0938,702.125 3126.5,701.8594 Q3125.9063,701.5781 3125.2813,701.5781 Q3123.9375,701.5781 3123.25,702.6563 Q3122.5625,703.7188 3122.5625,705.8125 Q3122.5625,707.9063 3123.25,708.9844 Q3123.9375,710.0469 3125.2813,710.0469 Q3125.9063,710.0469 3126.5,709.7813 Q3127.0938,709.5 3127.7188,708.9219 L3127.7188,711.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="3145.25" y="710.8467">MiniMax</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3496.5" y="687"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3497.5" y="699.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="2821.5" x2="3502.5" y1="722" y2="722"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2828.5" y="732.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2840.5" y="738.9951">LOG: Logging</text><polygon fill="none" points="2831.5,746.9453,2835.5,750.9453,2831.5,754.9453,2827.5,750.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="2840.5" y="755.292">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2821.5" x2="3502.5" y1="762.5938" y2="762.5938"/><ellipse cx="2831.5" cy="776.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="2840.5" y="779.5889">MiniMax(Distance&lt;? super O&gt;)</text><ellipse cx="2831.5" cy="792.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2840.5" y="795.8857">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2831.5" cy="808.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="2840.5" y="812.1826">run(Relation&lt;O&gt;): ClusterPrototypeMergeHistory</text><polygon fill="#FFFF44" points="2831.5,820.1328,2835.5,824.1328,2831.5,828.1328,2827.5,824.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="657" x="2840.5" y="828.4795">initializeMatrices(ArrayDBIDs, ArrayModifiableDBIDs, DistanceQuery&lt;O&gt;): ClusterDistanceMatrix</text></g></a><!--MD5=[005b60cea2126bec45d4b18da37245d1]
class elki.clustering.hierarchical.ClusterDistanceMatrix--><a href="ClusterDistanceMatrix.html" target="_top" title="ClusterDistanceMatrix.html" xlink:actuate="onRequest" xlink:href="ClusterDistanceMatrix.html" xlink:show="new" xlink:title="ClusterDistanceMatrix.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.ClusterDistanceMatrix"><rect codeLine="213" fill="#F1F1F1" height="145.7813" id="elki.clustering.hierarchical.ClusterDistanceMatrix" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="7208.5" y="320"/><ellipse cx="7232.95" cy="336" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7235.9188,341.6406 Q7235.3406,341.9375 7234.7,342.0781 Q7234.0594,342.2344 7233.3563,342.2344 Q7230.8563,342.2344 7229.5281,340.5938 Q7228.2156,338.9375 7228.2156,335.8125 Q7228.2156,332.6875 7229.5281,331.0313 Q7230.8563,329.375 7233.3563,329.375 Q7234.0594,329.375 7234.7,329.5313 Q7235.3563,329.6875 7235.9188,329.9844 L7235.9188,332.7031 Q7235.2938,332.125 7234.7,331.8594 Q7234.1063,331.5781 7233.4813,331.5781 Q7232.1375,331.5781 7231.45,332.6563 Q7230.7625,333.7188 7230.7625,335.8125 Q7230.7625,337.9063 7231.45,338.9844 Q7232.1375,340.0469 7233.4813,340.0469 Q7234.1063,340.0469 7234.7,339.7813 Q7235.2938,339.5 7235.9188,338.9219 L7235.9188,341.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="7249.05" y="340.8467">ClusterDistanceMatrix</text><line style="stroke:#181818;stroke-width:0.5;" x1="7209.5" x2="7410.5" y1="352" y2="352"/><ellipse cx="7219.5" cy="365.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="7228.5" y="368.9951">matrix: double[]</text><ellipse cx="7219.5" cy="381.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="7228.5" y="385.292">clustermap: int[]</text><ellipse cx="7219.5" cy="398.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="7228.5" y="401.5889">size: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="7209.5" x2="7410.5" y1="408.8906" y2="408.8906"/><ellipse cx="7219.5" cy="422.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="7228.5" y="425.8857">ClusterDistanceMatrix(int)</text><ellipse cx="7219.5" cy="438.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="7228.5" y="442.1826">triangleSize(int): int</text><ellipse cx="7219.5" cy="455.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="7228.5" y="458.4795">get(int, int): double</text></g></a><!--MD5=[69a45bc9cb027ec9ef128f649cf25efe]
class elki.clustering.hierarchical.ClusterMergeHistory--><a href="ClusterMergeHistory.html" target="_top" title="ClusterMergeHistory.html" xlink:actuate="onRequest" xlink:href="ClusterMergeHistory.html" xlink:show="new" xlink:title="ClusterMergeHistory.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.ClusterMergeHistory"><rect codeLine="222" fill="#F1F1F1" height="325.0469" id="elki.clustering.hierarchical.ClusterMergeHistory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="453" x="6478.5" y="230.5"/><ellipse cx="6630.75" cy="246.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6633.7188,252.1406 Q6633.1406,252.4375 6632.5,252.5781 Q6631.8594,252.7344 6631.1563,252.7344 Q6628.6563,252.7344 6627.3281,251.0938 Q6626.0156,249.4375 6626.0156,246.3125 Q6626.0156,243.1875 6627.3281,241.5313 Q6628.6563,239.875 6631.1563,239.875 Q6631.8594,239.875 6632.5,240.0313 Q6633.1563,240.1875 6633.7188,240.4844 L6633.7188,243.2031 Q6633.0938,242.625 6632.5,242.3594 Q6631.9063,242.0781 6631.2813,242.0781 Q6629.9375,242.0781 6629.25,243.1563 Q6628.5625,244.2188 6628.5625,246.3125 Q6628.5625,248.4063 6629.25,249.4844 Q6629.9375,250.5469 6631.2813,250.5469 Q6631.9063,250.5469 6632.5,250.2813 Q6633.0938,250 6633.7188,249.4219 L6633.7188,252.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="6651.25" y="251.3467">ClusterMergeHistory</text><line style="stroke:#181818;stroke-width:0.5;" x1="6479.5" x2="6930.5" y1="262.5" y2="262.5"/><polygon fill="none" points="6489.5,271.1484,6493.5,275.1484,6489.5,279.1484,6485.5,275.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="6498.5" y="279.4951">ids: ArrayDBIDs</text><polygon fill="none" points="6489.5,287.4453,6493.5,291.4453,6489.5,295.4453,6485.5,291.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6498.5" y="295.792">distances: double[]</text><polygon fill="none" points="6489.5,303.7422,6493.5,307.7422,6489.5,311.7422,6485.5,307.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="6498.5" y="312.0889">sizes: int[]</text><polygon fill="none" points="6489.5,320.0391,6493.5,324.0391,6489.5,328.0391,6485.5,324.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="6498.5" y="328.3857">merges: int[]</text><polygon fill="none" points="6489.5,336.3359,6493.5,340.3359,6489.5,344.3359,6485.5,340.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="6498.5" y="344.6826">positions: int[]</text><polygon fill="none" points="6489.5,353.6328,6485.5,359.6328,6493.5,359.6328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6498.5" y="360.9795">isSquared: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="6479.5" x2="6930.5" y1="368.2813" y2="368.2813"/><ellipse cx="6489.5" cy="381.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="6498.5" y="385.2764">ClusterMergeHistory(ArrayDBIDs, int[], double[], int[], boolean)</text><ellipse cx="6489.5" cy="398.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="6498.5" y="401.5732">assignVar(int, DBIDVar): DBIDVar</text><ellipse cx="6489.5" cy="414.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="6498.5" y="417.8701">getMergeA(int): int</text><ellipse cx="6489.5" cy="430.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="6498.5" y="434.167">getMergeB(int): int</text><ellipse cx="6489.5" cy="447.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="6498.5" y="450.4639">getMergeHeight(int): double</text><ellipse cx="6489.5" cy="463.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="6498.5" y="466.7607">getSize(int): int</text><ellipse cx="6489.5" cy="479.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6498.5" y="483.0576">size(): int</text><ellipse cx="6489.5" cy="496.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="6498.5" y="499.3545">numMerges(): int</text><ellipse cx="6489.5" cy="512.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="6498.5" y="515.6514">isSquared(): boolean</text><ellipse cx="6489.5" cy="528.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="6498.5" y="531.9482">getDBIDs(): ArrayDBIDs</text><ellipse cx="6489.5" cy="544.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="6498.5" y="548.2451">getPositions(): int[]</text></g></a><!--MD5=[6ba6af444bc57879c288d3a8b776d603]
class elki.clustering.hierarchical.AbstractHDBSCAN--><a href="AbstractHDBSCAN.html" target="_top" title="AbstractHDBSCAN.html" xlink:actuate="onRequest" xlink:href="AbstractHDBSCAN.html" xlink:show="new" xlink:title="AbstractHDBSCAN.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.AbstractHDBSCAN"><rect codeLine="242" fill="#F1F1F1" height="162.0781" id="elki.clustering.hierarchical.AbstractHDBSCAN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="771" x="4439.5" y="312"/><ellipse cx="4749.75" cy="328" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4749.8594,323.3438 L4748.7031,328.4219 L4751.0313,328.4219 L4749.8594,323.3438 Z M4748.375,321.1094 L4751.3594,321.1094 L4754.7188,333.5 L4752.2656,333.5 L4751.5,330.4375 L4748.2188,330.4375 L4747.4688,333.5 L4745.0313,333.5 L4748.375,321.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="4770.25" y="332.8467">AbstractHDBSCAN</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="5203.5" y="309"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="5204.5" y="321.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="4440.5" x2="5209.5" y1="344" y2="344"/><polygon fill="none" points="4450.5,352.6484,4454.5,356.6484,4450.5,360.6484,4446.5,356.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="4459.5" y="360.9951">minPts: int</text><polygon fill="none" points="4450.5,368.9453,4454.5,372.9453,4450.5,376.9453,4446.5,372.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="4459.5" y="377.292">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4440.5" x2="5209.5" y1="384.5938" y2="384.5938"/><ellipse cx="4450.5" cy="398.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="4459.5" y="401.5889">AbstractHDBSCAN(Distance&lt;? super O&gt;, int)</text><polygon fill="#FFFF44" points="4450.5,409.5391,4454.5,413.5391,4450.5,417.5391,4446.5,413.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="572" x="4459.5" y="417.8857">computeCoreDists(DBIDs, KNNSearcher&lt;DBIDRef&gt;, int): WritableDoubleDataStore</text><polygon fill="#FFFF44" points="4450.5,425.8359,4454.5,429.8359,4450.5,433.8359,4446.5,429.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="745" x="4459.5" y="434.1826">convertToMergeList(ArrayDBIDs, DoubleLongHeap, ClusterMergeHistoryBuilder): ClusterMergeHistoryBuilder</text><ellipse cx="4450.5" cy="447.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="4459.5" y="450.4795">getInputTypeRestriction(): TypeInformation[]</text><polygon fill="#FFFF44" points="4450.5,458.4297,4454.5,462.4297,4450.5,466.4297,4446.5,462.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="4459.5" y="466.7764">getLogger(): Logging</text></g></a><!--MD5=[13a557b0f262bb498ff80ad3bd7458b8]
class elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter--><a href="AbstractHDBSCAN.HDBSCANAdapter.html" target="_top" title="AbstractHDBSCAN.HDBSCANAdapter.html" xlink:actuate="onRequest" xlink:href="AbstractHDBSCAN.HDBSCANAdapter.html" xlink:show="new" xlink:title="AbstractHDBSCAN.HDBSCANAdapter.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter"><rect codeLine="252" fill="#F1F1F1" height="178.375" id="elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="504" x="5237" y="674"/><ellipse cx="5358.25" cy="690" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5361.2188,695.6406 Q5360.6406,695.9375 5360,696.0781 Q5359.3594,696.2344 5358.6563,696.2344 Q5356.1563,696.2344 5354.8281,694.5938 Q5353.5156,692.9375 5353.5156,689.8125 Q5353.5156,686.6875 5354.8281,685.0313 Q5356.1563,683.375 5358.6563,683.375 Q5359.3594,683.375 5360,683.5313 Q5360.6563,683.6875 5361.2188,683.9844 L5361.2188,686.7031 Q5360.5938,686.125 5360,685.8594 Q5359.4063,685.5781 5358.7813,685.5781 Q5357.4375,685.5781 5356.75,686.6563 Q5356.0625,687.7188 5356.0625,689.8125 Q5356.0625,691.9063 5356.75,692.9844 Q5357.4375,694.0469 5358.7813,694.0469 Q5359.4063,694.0469 5360,693.7813 Q5360.5938,693.5 5361.2188,692.9219 L5361.2188,695.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="5378.75" y="694.8467">AbstractHDBSCAN.HDBSCANAdapter</text><line style="stroke:#181818;stroke-width:0.5;" x1="5238" x2="5740" y1="706" y2="706"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5245" y="716.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="5257" y="722.9951">ids: ArrayDBIDs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5245" y="732.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="5257" y="739.292">q: DBIDArrayIter</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5245" y="749.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="5257" y="755.5889">p: DBIDArrayIter</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5245" y="765.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="5257" y="771.8857">coredists: DoubleDataStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5245" y="781.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="5257" y="788.1826">distq: DistanceQuery&lt;?&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5238" x2="5740" y1="795.4844" y2="795.4844"/><ellipse cx="5248" cy="809.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="478" x="5257" y="812.4795">HDBSCANAdapter(ArrayDBIDs, DoubleDataStore, DistanceQuery&lt;?&gt;)</text><ellipse cx="5248" cy="825.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="5257" y="828.7764">distance(ArrayDBIDs, int, int): double</text><ellipse cx="5248" cy="841.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="5257" y="845.0732">size(ArrayDBIDs): int</text></g></a><!--MD5=[3806e1dd8d54abe2cf7b03b2ba2f7026]
class elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector--><a href="AbstractHDBSCAN.HeapMSTCollector.html" target="_top" title="AbstractHDBSCAN.HeapMSTCollector.html" xlink:actuate="onRequest" xlink:href="AbstractHDBSCAN.HeapMSTCollector.html" xlink:show="new" xlink:title="AbstractHDBSCAN.HeapMSTCollector.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector"><rect codeLine="263" fill="#F1F1F1" height="129.4844" id="elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="453" x="5776.5" y="698.5"/><ellipse cx="5870.25" cy="714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5873.2188,720.1406 Q5872.6406,720.4375 5872,720.5781 Q5871.3594,720.7344 5870.6563,720.7344 Q5868.1563,720.7344 5866.8281,719.0938 Q5865.5156,717.4375 5865.5156,714.3125 Q5865.5156,711.1875 5866.8281,709.5313 Q5868.1563,707.875 5870.6563,707.875 Q5871.3594,707.875 5872,708.0313 Q5872.6563,708.1875 5873.2188,708.4844 L5873.2188,711.2031 Q5872.5938,710.625 5872,710.3594 Q5871.4063,710.0781 5870.7813,710.0781 Q5869.4375,710.0781 5868.75,711.1563 Q5868.0625,712.2188 5868.0625,714.3125 Q5868.0625,716.4063 5868.75,717.4844 Q5869.4375,718.5469 5870.7813,718.5469 Q5871.4063,718.5469 5872,718.2813 Q5872.5938,718 5873.2188,717.4219 L5873.2188,720.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="5890.75" y="719.3467">AbstractHDBSCAN.HeapMSTCollector</text><line style="stroke:#181818;stroke-width:0.5;" x1="5777.5" x2="6228.5" y1="730.5" y2="730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5784.5" y="741.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="5796.5" y="747.4951">heap: DoubleLongHeap</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5784.5" y="757.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5796.5" y="763.792">prog: FiniteProgress</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5784.5" y="773.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="5796.5" y="780.0889">log: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="5777.5" x2="6228.5" y1="787.3906" y2="787.3906"/><ellipse cx="5787.5" cy="801.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="5796.5" y="804.3857">HeapMSTCollector(DoubleLongHeap, FiniteProgress, Logging)</text><ellipse cx="5787.5" cy="817.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="5796.5" y="820.6826">addEdge(double, int, int): void</text></g></a><!--MD5=[de12fc2bf483689330014c11dcb046aa]
class elki.clustering.hierarchical.CLINK--><a href="CLINK.html" target="_top" title="CLINK.html" xlink:actuate="onRequest" xlink:href="CLINK.html" xlink:show="new" xlink:title="CLINK.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.CLINK"><rect codeLine="278" fill="#F1F1F1" height="162.0781" id="elki.clustering.hierarchical.CLINK" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="969" x="1837.5" y="962"/><ellipse cx="2292.25" cy="978" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2295.2188,983.6406 Q2294.6406,983.9375 2294,984.0781 Q2293.3594,984.2344 2292.6563,984.2344 Q2290.1563,984.2344 2288.8281,982.5938 Q2287.5156,980.9375 2287.5156,977.8125 Q2287.5156,974.6875 2288.8281,973.0313 Q2290.1563,971.375 2292.6563,971.375 Q2293.3594,971.375 2294,971.5313 Q2294.6563,971.6875 2295.2188,971.9844 L2295.2188,974.7031 Q2294.5938,974.125 2294,973.8594 Q2293.4063,973.5781 2292.7813,973.5781 Q2291.4375,973.5781 2290.75,974.6563 Q2290.0625,975.7188 2290.0625,977.8125 Q2290.0625,979.9063 2290.75,980.9844 Q2291.4375,982.0469 2292.7813,982.0469 Q2293.4063,982.0469 2294,981.7813 Q2294.5938,981.5 2295.2188,980.9219 L2295.2188,983.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="2312.75" y="982.8467">CLINK</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="2799.5" y="959"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="2800.5" y="971.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1838.5" x2="2805.5" y1="994" y2="994"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1845.5" y="1004.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1857.5" y="1010.9951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="1838.5" x2="2805.5" y1="1018.2969" y2="1018.2969"/><ellipse cx="1848.5" cy="1031.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="1857.5" y="1035.292">CLINK(Distance&lt;? super O&gt;)</text><polygon fill="#FFFF44" points="1848.5,1043.2422,1852.5,1047.2422,1848.5,1051.2422,1844.5,1047.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="901" x="1857.5" y="1051.5889">process(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1845.5" y="1061.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="765" x="1857.5" y="1067.8857">clinkstep3(DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1845.5" y="1077.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="943" x="1857.5" y="1084.1826">clinkstep4567(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1845.5" y="1094.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="649" x="1857.5" y="1100.4795">clinkstep8(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore): void</text><polygon fill="#FFFF44" points="1848.5,1108.4297,1852.5,1112.4297,1848.5,1116.4297,1844.5,1112.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="1857.5" y="1116.7764">getLogger(): Logging</text></g></a><!--MD5=[ef89399f1677a45cb2f63c801d43ee9e]
class elki.clustering.hierarchical.HDBSCANLinearMemory--><a href="HDBSCANLinearMemory.html" target="_top" title="HDBSCANLinearMemory.html" xlink:actuate="onRequest" xlink:href="HDBSCANLinearMemory.html" xlink:show="new" xlink:title="HDBSCANLinearMemory.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.HDBSCANLinearMemory"><rect codeLine="294" fill="#F1F1F1" height="129.4844" id="elki.clustering.hierarchical.HDBSCANLinearMemory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="377" x="3538.5" y="698.5"/><ellipse cx="3634.25" cy="714.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3637.2188,720.1406 Q3636.6406,720.4375 3636,720.5781 Q3635.3594,720.7344 3634.6563,720.7344 Q3632.1563,720.7344 3630.8281,719.0938 Q3629.5156,717.4375 3629.5156,714.3125 Q3629.5156,711.1875 3630.8281,709.5313 Q3632.1563,707.875 3634.6563,707.875 Q3635.3594,707.875 3636,708.0313 Q3636.6563,708.1875 3637.2188,708.4844 L3637.2188,711.2031 Q3636.5938,710.625 3636,710.3594 Q3635.4063,710.0781 3634.7813,710.0781 Q3633.4375,710.0781 3632.75,711.1563 Q3632.0625,712.2188 3632.0625,714.3125 Q3632.0625,716.4063 3632.75,717.4844 Q3633.4375,718.5469 3634.7813,718.5469 Q3635.4063,718.5469 3636,718.2813 Q3636.5938,718 3637.2188,717.4219 L3637.2188,720.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="3654.75" y="719.3467">HDBSCANLinearMemory</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3908.5" y="695.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3909.5" y="707.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="3539.5" x2="3914.5" y1="730.5" y2="730.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3546.5" y="741.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3558.5" y="747.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="3539.5" x2="3914.5" y1="754.7969" y2="754.7969"/><ellipse cx="3549.5" cy="768.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="3558.5" y="771.792">HDBSCANLinearMemory(Distance&lt;? super O&gt;, int)</text><ellipse cx="3549.5" cy="784.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="3558.5" y="788.0889">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="3549.5" cy="801.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="3558.5" y="804.3857">run(Relation&lt;O&gt;): ClusterDensityMergeHistory</text><polygon fill="#FFFF44" points="3549.5,812.3359,3553.5,816.3359,3549.5,820.3359,3545.5,816.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="3558.5" y="820.6826">getLogger(): Logging</text></g></a><!--MD5=[716175f7abaccf4cfae85315c787f09f]
class elki.clustering.hierarchical.HierarchicalClusteringAlgorithm--><a href="HierarchicalClusteringAlgorithm.html" target="_top" title="HierarchicalClusteringAlgorithm.html" xlink:actuate="onRequest" xlink:href="HierarchicalClusteringAlgorithm.html" xlink:show="new" xlink:title="HierarchicalClusteringAlgorithm.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm"><rect codeLine="306" fill="#F1F1F1" height="64.2969" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="305" x="2485.5" y="361"/><ellipse cx="2522.1" cy="377" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2518.0219,372.7656 L2518.0219,370.6094 L2525.4125,370.6094 L2525.4125,372.7656 L2522.9438,372.7656 L2522.9438,380.8438 L2525.4125,380.8438 L2525.4125,383 L2518.0219,383 L2518.0219,380.8438 L2520.4906,380.8438 L2520.4906,372.7656 L2518.0219,372.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="225" x="2540.9" y="381.8467">HierarchicalClusteringAlgorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="2486.5" x2="2789.5" y1="393" y2="393"/><line style="stroke:#181818;stroke-width:0.5;" x1="2486.5" x2="2789.5" y1="401" y2="401"/><ellipse cx="2496.5" cy="414.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="2505.5" y="417.9951">autorun(Database): ClusterMergeHistory</text></g></a><!--MD5=[087cf9cc8b5ecdbe3d40686f5dcf1632]
class elki.clustering.hierarchical.MiniMaxAnderberg--><a href="MiniMaxAnderberg.html" target="_top" title="MiniMaxAnderberg.html" xlink:actuate="onRequest" xlink:href="MiniMaxAnderberg.html" xlink:show="new" xlink:title="MiniMaxAnderberg.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.MiniMaxAnderberg"><rect codeLine="310" fill="#F1F1F1" height="96.8906" id="elki.clustering.hierarchical.MiniMaxAnderberg" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="366" x="3308" y="994.5"/><ellipse cx="3417.25" cy="1010.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3420.2188,1016.1406 Q3419.6406,1016.4375 3419,1016.5781 Q3418.3594,1016.7344 3417.6563,1016.7344 Q3415.1563,1016.7344 3413.8281,1015.0938 Q3412.5156,1013.4375 3412.5156,1010.3125 Q3412.5156,1007.1875 3413.8281,1005.5313 Q3415.1563,1003.875 3417.6563,1003.875 Q3418.3594,1003.875 3419,1004.0313 Q3419.6563,1004.1875 3420.2188,1004.4844 L3420.2188,1007.2031 Q3419.5938,1006.625 3419,1006.3594 Q3418.4063,1006.0781 3417.7813,1006.0781 Q3416.4375,1006.0781 3415.75,1007.1563 Q3415.0625,1008.2188 3415.0625,1010.3125 Q3415.0625,1012.4063 3415.75,1013.4844 Q3416.4375,1014.5469 3417.7813,1014.5469 Q3418.4063,1014.5469 3419,1014.2813 Q3419.5938,1014 3420.2188,1013.4219 L3420.2188,1016.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="3437.75" y="1015.3467">MiniMaxAnderberg</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3667" y="991.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3668" y="1003.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="3309" x2="3673" y1="1026.5" y2="1026.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3316" y="1037.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3328" y="1043.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="3309" x2="3673" y1="1050.7969" y2="1050.7969"/><ellipse cx="3319" cy="1064.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="3328" y="1067.792">MiniMaxAnderberg(Distance&lt;? super O&gt;)</text><ellipse cx="3319" cy="1080.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="3328" y="1084.0889">run(Relation&lt;O&gt;): ClusterPrototypeMergeHistory</text></g></a><!--MD5=[379e9b83fa5cf0eb2715d0d468d0cfc7]
class elki.clustering.hierarchical.ClusterMergeHistoryBuilder--><a href="ClusterMergeHistoryBuilder.html" target="_top" title="ClusterMergeHistoryBuilder.html" xlink:actuate="onRequest" xlink:href="ClusterMergeHistoryBuilder.html" xlink:show="new" xlink:title="ClusterMergeHistoryBuilder.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.ClusterMergeHistoryBuilder"><rect codeLine="329" fill="#F1F1F1" height="373.9375" id="elki.clustering.hierarchical.ClusterMergeHistoryBuilder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="476" x="1156" y="206"/><ellipse cx="1295.75" cy="222" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1298.7188,227.6406 Q1298.1406,227.9375 1297.5,228.0781 Q1296.8594,228.2344 1296.1563,228.2344 Q1293.6563,228.2344 1292.3281,226.5938 Q1291.0156,224.9375 1291.0156,221.8125 Q1291.0156,218.6875 1292.3281,217.0313 Q1293.6563,215.375 1296.1563,215.375 Q1296.8594,215.375 1297.5,215.5313 Q1298.1563,215.6875 1298.7188,215.9844 L1298.7188,218.7031 Q1298.0938,218.125 1297.5,217.8594 Q1296.9063,217.5781 1296.2813,217.5781 Q1294.9375,217.5781 1294.25,218.6563 Q1293.5625,219.7188 1293.5625,221.8125 Q1293.5625,223.9063 1294.25,224.9844 Q1294.9375,226.0469 1296.2813,226.0469 Q1296.9063,226.0469 1297.5,225.7813 Q1298.0938,225.5 1298.7188,224.9219 L1298.7188,227.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1316.25" y="226.8467">ClusterMergeHistoryBuilder</text><line style="stroke:#181818;stroke-width:0.5;" x1="1157" x2="1631" y1="238" y2="238"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1164" y="248.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1176" y="254.9951">LOG: Logging</text><polygon fill="none" points="1167,262.9453,1171,266.9453,1167,270.9453,1163,266.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1176" y="271.292">ids: ArrayDBIDs</text><polygon fill="none" points="1167,279.2422,1171,283.2422,1167,287.2422,1163,283.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1176" y="287.5889">mergeDistance: double[]</text><polygon fill="none" points="1167,295.5391,1171,299.5391,1167,303.5391,1163,299.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="1176" y="303.8857">csize: int[]</text><polygon fill="none" points="1167,311.8359,1171,315.8359,1167,319.8359,1163,315.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="1176" y="320.1826">merges: int[]</text><polygon fill="none" points="1167,328.1328,1171,332.1328,1167,336.1328,1163,332.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="1176" y="336.4795">parent: int[]</text><polygon fill="none" points="1167,344.4297,1171,348.4297,1167,352.4297,1163,348.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="1176" y="352.7764">mergecount: int</text><polygon fill="none" points="1167,360.7266,1171,364.7266,1167,368.7266,1163,364.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1176" y="369.0732">prototypes: ArrayModifiableDBIDs</text><polygon fill="none" points="1167,377.0234,1171,381.0234,1167,385.0234,1163,381.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1176" y="385.3701">isSquared: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1157" x2="1631" y1="392.6719" y2="392.6719"/><ellipse cx="1167" cy="406.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="1176" y="409.667">ClusterMergeHistoryBuilder(ArrayDBIDs, boolean)</text><ellipse cx="1167" cy="422.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="1176" y="425.9639">add(int, double, int): int</text><ellipse cx="1167" cy="438.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="1176" y="442.2607">strictAdd(int, double, int): int</text><ellipse cx="1167" cy="455.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="1176" y="458.5576">strictAdd(int, double, int, DBIDRef): int</text><ellipse cx="1167" cy="471.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="1176" y="474.8545">complete(): ClusterMergeHistory</text><ellipse cx="1167" cy="487.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="450" x="1176" y="491.1514">complete(WritableDoubleDataStore): ClusterDensityMergeHistory</text><ellipse cx="1167" cy="504.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1176" y="507.4482">getSize(int): int</text><ellipse cx="1167" cy="520.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1176" y="523.7451">setSize(int, int): void</text><ellipse cx="1167" cy="536.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1176" y="540.042">optimizeOrder(): int[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1164" y="549.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1176" y="556.3389">checkMonotone(): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1164" y="566.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="1176" y="572.6357">addRecursive(int[], int, byte[], int, int): int</text></g></a><!--MD5=[ff1f2ecf5a63e49fa2be5d9288e8da28]
class elki.clustering.hierarchical.NNChain--><a href="NNChain.html" target="_top" title="NNChain.html" xlink:actuate="onRequest" xlink:href="NNChain.html" xlink:show="new" xlink:title="NNChain.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.NNChain"><rect codeLine="352" fill="#F1F1F1" height="96.8906" id="elki.clustering.hierarchical.NNChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="307" x="464.5" y="994.5"/><ellipse cx="578.25" cy="1010.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M581.2188,1016.1406 Q580.6406,1016.4375 580,1016.5781 Q579.3594,1016.7344 578.6563,1016.7344 Q576.1563,1016.7344 574.8281,1015.0938 Q573.5156,1013.4375 573.5156,1010.3125 Q573.5156,1007.1875 574.8281,1005.5313 Q576.1563,1003.875 578.6563,1003.875 Q579.3594,1003.875 580,1004.0313 Q580.6563,1004.1875 581.2188,1004.4844 L581.2188,1007.2031 Q580.5938,1006.625 580,1006.3594 Q579.4063,1006.0781 578.7813,1006.0781 Q577.4375,1006.0781 576.75,1007.1563 Q576.0625,1008.2188 576.0625,1010.3125 Q576.0625,1012.4063 576.75,1013.4844 Q577.4375,1014.5469 578.7813,1014.5469 Q579.4063,1014.5469 580,1014.2813 Q580.5938,1014 581.2188,1013.4219 L581.2188,1016.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="598.75" y="1015.3467">NNChain</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="764.5" y="991.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="765.5" y="1003.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="465.5" x2="770.5" y1="1026.5" y2="1026.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="472.5" y="1037.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="484.5" y="1043.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="465.5" x2="770.5" y1="1050.7969" y2="1050.7969"/><ellipse cx="475.5" cy="1064.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="484.5" y="1067.792">NNChain(Distance&lt;? super O&gt;, Linkage)</text><ellipse cx="475.5" cy="1080.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="484.5" y="1084.0889">run(Relation&lt;O&gt;): ClusterMergeHistory</text></g></a><!--MD5=[b6a33dc4861a03513353e78782e2c84e]
class elki.clustering.hierarchical.LinearMemoryNNChain--><a href="LinearMemoryNNChain.html" target="_top" title="LinearMemoryNNChain.html" xlink:actuate="onRequest" xlink:href="LinearMemoryNNChain.html" xlink:show="new" xlink:title="LinearMemoryNNChain.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.LinearMemoryNNChain"><rect codeLine="369" fill="#F1F1F1" height="113.1875" id="elki.clustering.hierarchical.LinearMemoryNNChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="463" x="3950.5" y="706.5"/><ellipse cx="4023.25" cy="722.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4026.2188,728.1406 Q4025.6406,728.4375 4025,728.5781 Q4024.3594,728.7344 4023.6563,728.7344 Q4021.1563,728.7344 4019.8281,727.0938 Q4018.5156,725.4375 4018.5156,722.3125 Q4018.5156,719.1875 4019.8281,717.5313 Q4021.1563,715.875 4023.6563,715.875 Q4024.3594,715.875 4025,716.0313 Q4025.6563,716.1875 4026.2188,716.4844 L4026.2188,719.2031 Q4025.5938,718.625 4025,718.3594 Q4024.4063,718.0781 4023.7813,718.0781 Q4022.4375,718.0781 4021.75,719.1563 Q4021.0625,720.2188 4021.0625,722.3125 Q4021.0625,724.4063 4021.75,725.4844 Q4022.4375,726.5469 4023.7813,726.5469 Q4024.4063,726.5469 4025,726.2813 Q4025.5938,726 4026.2188,725.4219 L4026.2188,728.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="4043.75" y="727.3467">LinearMemoryNNChain</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="4264.5" y="703.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="4265.5" y="715.6387">O extends NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="3951.5" x2="4412.5" y1="738.5" y2="738.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3958.5" y="749.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3970.5" y="755.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="3951.5" x2="4412.5" y1="762.7969" y2="762.7969"/><ellipse cx="3961.5" cy="776.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="3970.5" y="779.792">LinearMemoryNNChain(GeometricLinkage)</text><ellipse cx="3961.5" cy="792.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="437" x="3970.5" y="796.0889">run(Relation&lt;O extends NumberVector&gt;): ClusterMergeHistory</text><ellipse cx="3961.5" cy="809.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="3970.5" y="812.3857">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[ceb49d871936c918eda8479efd4ff44c]
class elki.clustering.hierarchical.ClusterPrototypeMergeHistory--><a href="ClusterPrototypeMergeHistory.html" target="_top" title="ClusterPrototypeMergeHistory.html" xlink:actuate="onRequest" xlink:href="ClusterPrototypeMergeHistory.html" xlink:show="new" xlink:title="ClusterPrototypeMergeHistory.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.ClusterPrototypeMergeHistory"><rect codeLine="389" fill="#F1F1F1" height="96.8906" id="elki.clustering.hierarchical.ClusterPrototypeMergeHistory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="605" x="6931.5" y="714.5"/><ellipse cx="7126.25" cy="730.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7129.2188,736.1406 Q7128.6406,736.4375 7128,736.5781 Q7127.3594,736.7344 7126.6563,736.7344 Q7124.1563,736.7344 7122.8281,735.0938 Q7121.5156,733.4375 7121.5156,730.3125 Q7121.5156,727.1875 7122.8281,725.5313 Q7124.1563,723.875 7126.6563,723.875 Q7127.3594,723.875 7128,724.0313 Q7128.6563,724.1875 7129.2188,724.4844 L7129.2188,727.2031 Q7128.5938,726.625 7128,726.3594 Q7127.4063,726.0781 7126.7813,726.0781 Q7125.4375,726.0781 7124.75,727.1563 Q7124.0625,728.2188 7124.0625,730.3125 Q7124.0625,732.4063 7124.75,733.4844 Q7125.4375,734.5469 7126.7813,734.5469 Q7127.4063,734.5469 7128,734.2813 Q7128.5938,734 7129.2188,733.4219 L7129.2188,736.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="7146.75" y="735.3467">ClusterPrototypeMergeHistory</text><line style="stroke:#181818;stroke-width:0.5;" x1="6932.5" x2="7535.5" y1="746.5" y2="746.5"/><polygon fill="none" points="6942.5,755.1484,6946.5,759.1484,6942.5,763.1484,6938.5,759.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="6951.5" y="763.4951">prototypes: ArrayDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="6932.5" x2="7535.5" y1="770.7969" y2="770.7969"/><ellipse cx="6942.5" cy="784.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="579" x="6951.5" y="787.792">ClusterPrototypeMergeHistory(ArrayDBIDs, int[], double[], int[], boolean, ArrayDBIDs)</text><ellipse cx="6942.5" cy="800.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="6951.5" y="804.0889">prototype(int): DBID</text></g></a><!--MD5=[cd4efbe5900eb745806ca5da6ce44b23]
class elki.clustering.hierarchical.SLINKHDBSCANLinearMemory--><a href="SLINKHDBSCANLinearMemory.html" target="_top" title="SLINKHDBSCANLinearMemory.html" xlink:actuate="onRequest" xlink:href="SLINKHDBSCANLinearMemory.html" xlink:show="new" xlink:title="SLINKHDBSCANLinearMemory.html" xlink:type="simple"><g id="elem_elki.clustering.hierarchical.SLINKHDBSCANLinearMemory"><rect codeLine="395" fill="#F1F1F1" height="178.375" id="elki.clustering.hierarchical.SLINKHDBSCANLinearMemory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="753" x="4448.5" y="674"/><ellipse cx="4713.25" cy="690" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4716.2188,695.6406 Q4715.6406,695.9375 4715,696.0781 Q4714.3594,696.2344 4713.6563,696.2344 Q4711.1563,696.2344 4709.8281,694.5938 Q4708.5156,692.9375 4708.5156,689.8125 Q4708.5156,686.6875 4709.8281,685.0313 Q4711.1563,683.375 4713.6563,683.375 Q4714.3594,683.375 4715,683.5313 Q4715.6563,683.6875 4716.2188,683.9844 L4716.2188,686.7031 Q4715.5938,686.125 4715,685.8594 Q4714.4063,685.5781 4713.7813,685.5781 Q4712.4375,685.5781 4711.75,686.6563 Q4711.0625,687.7188 4711.0625,689.8125 Q4711.0625,691.9063 4711.75,692.9844 Q4712.4375,694.0469 4713.7813,694.0469 Q4714.4063,694.0469 4715,693.7813 Q4715.5938,693.5 4716.2188,692.9219 L4716.2188,695.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="4733.75" y="694.8467">SLINKHDBSCANLinearMemory</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="5194.5" y="671"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="5195.5" y="683.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="4449.5" x2="5200.5" y1="706" y2="706"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4456.5" y="716.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="4468.5" y="722.9951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="4449.5" x2="5200.5" y1="730.2969" y2="730.2969"/><ellipse cx="4459.5" cy="743.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="4468.5" y="747.292">SLINKHDBSCANLinearMemory(Distance&lt;? super O&gt;, int)</text><ellipse cx="4459.5" cy="760.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="4468.5" y="763.5889">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="4459.5" cy="776.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="4468.5" y="779.8857">run(Relation&lt;O&gt;): ClusterMergeHistory</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4456.5" y="789.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="705" x="4468.5" y="796.1826">step2(DBIDRef, DBIDs, DistanceQuery&lt;? super O&gt;, DoubleDataStore, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4456.5" y="806.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="727" x="4468.5" y="812.4795">step3(DBIDRef, WritableDBIDDataStore, WritableDoubleDataStore, DBIDs, WritableDoubleDataStore): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4456.5" y="822.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="4468.5" y="828.7764">step4(DBIDRef, WritableDBIDDataStore, WritableDoubleDataStore, DBIDs): void</text><polygon fill="#FFFF44" points="4459.5,836.7266,4463.5,840.7266,4459.5,844.7266,4455.5,840.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="4468.5" y="845.0732">getLogger(): Logging</text></g></a><!--MD5=[fb541f7cde841cf045ce68a579eec132]
class elki.clustering.hierarchical.linkage.Linkage--><g id="elem_elki.clustering.hierarchical.linkage.Linkage"><rect fill="#F1F1F1" height="48" id="elki.clustering.hierarchical.linkage.Linkage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="7592.5" y="1019"/><ellipse cx="7607.5" cy="1035" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7610.4688,1040.6406 Q7609.8906,1040.9375 7609.25,1041.0781 Q7608.6094,1041.2344 7607.9063,1041.2344 Q7605.4063,1041.2344 7604.0781,1039.5938 Q7602.7656,1037.9375 7602.7656,1034.8125 Q7602.7656,1031.6875 7604.0781,1030.0313 Q7605.4063,1028.375 7607.9063,1028.375 Q7608.6094,1028.375 7609.25,1028.5313 Q7609.9063,1028.6875 7610.4688,1028.9844 L7610.4688,1031.7031 Q7609.8438,1031.125 7609.25,1030.8594 Q7608.6563,1030.5781 7608.0313,1030.5781 Q7606.6875,1030.5781 7606,1031.6563 Q7605.3125,1032.7188 7605.3125,1034.8125 Q7605.3125,1036.9063 7606,1037.9844 Q7606.6875,1039.0469 7608.0313,1039.0469 Q7608.6563,1039.0469 7609.25,1038.7813 Q7609.8438,1038.5 7610.4688,1037.9219 L7610.4688,1040.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="7621.5" y="1039.8467">Linkage</text><line style="stroke:#181818;stroke-width:0.5;" x1="7593.5" x2="7676.5" y1="1051" y2="1051"/><line style="stroke:#181818;stroke-width:0.5;" x1="7593.5" x2="7676.5" y1="1059" y2="1059"/></g><!--MD5=[e59bdeea756648cd57e2f41016bf500b]
class elki.clustering.hierarchical.linkage.GeometricLinkage--><g id="elem_elki.clustering.hierarchical.linkage.GeometricLinkage"><rect fill="#F1F1F1" height="48" id="elki.clustering.hierarchical.linkage.GeometricLinkage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="7712.5" y="1019"/><ellipse cx="7727.5" cy="1035" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7730.4688,1040.6406 Q7729.8906,1040.9375 7729.25,1041.0781 Q7728.6094,1041.2344 7727.9063,1041.2344 Q7725.4063,1041.2344 7724.0781,1039.5938 Q7722.7656,1037.9375 7722.7656,1034.8125 Q7722.7656,1031.6875 7724.0781,1030.0313 Q7725.4063,1028.375 7727.9063,1028.375 Q7728.6094,1028.375 7729.25,1028.5313 Q7729.9063,1028.6875 7730.4688,1028.9844 L7730.4688,1031.7031 Q7729.8438,1031.125 7729.25,1030.8594 Q7728.6563,1030.5781 7728.0313,1030.5781 Q7726.6875,1030.5781 7726,1031.6563 Q7725.3125,1032.7188 7725.3125,1034.8125 Q7725.3125,1036.9063 7726,1037.9844 Q7726.6875,1039.0469 7728.0313,1039.0469 Q7728.6563,1039.0469 7729.25,1038.7813 Q7729.8438,1038.5 7730.4688,1037.9219 L7730.4688,1040.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="7741.5" y="1039.8467">GeometricLinkage</text><line style="stroke:#181818;stroke-width:0.5;" x1="7713.5" x2="7868.5" y1="1051" y2="1051"/><line style="stroke:#181818;stroke-width:0.5;" x1="7713.5" x2="7868.5" y1="1059" y2="1059"/></g><!--MD5=[6617a5df6c1f5d3bd235afcb3413924f]
class elki.Algorithm--><a href="../../Algorithm.html" target="_top" title="../../Algorithm.html" xlink:actuate="onRequest" xlink:href="../../Algorithm.html" xlink:show="new" xlink:title="../../Algorithm.html" xlink:type="simple"><g id="elem_elki.Algorithm"><rect codeLine="503" fill="#F1F1F1" height="80.5938" id="elki.Algorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="341" x="4026.5" y="41"/><ellipse cx="4158.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4154.1719,52.7656 L4154.1719,50.6094 L4161.5625,50.6094 L4161.5625,52.7656 L4159.0938,52.7656 L4159.0938,60.8438 L4161.5625,60.8438 L4161.5625,63 L4154.1719,63 L4154.1719,60.8438 L4156.6406,60.8438 L4156.6406,52.7656 L4154.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="69" x="4178.75" y="61.8467">Algorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="4027.5" x2="4366.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="4027.5" x2="4366.5" y1="81" y2="81"/><ellipse cx="4037.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="4046.5" y="97.9951">autorun(Database): Object</text><ellipse cx="4037.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="315" x="4046.5" y="114.292">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[830bdeeb15bc34386293b5fe2052e673]
class elki.math.geometry.PrimsMinimumSpanningTree.Adapter--><a href="../../math/geometry/PrimsMinimumSpanningTree.Adapter.html" target="_top" title="../../math/geometry/PrimsMinimumSpanningTree.Adapter.html" xlink:actuate="onRequest" xlink:href="../../math/geometry/PrimsMinimumSpanningTree.Adapter.html" xlink:show="new" xlink:title="../../math/geometry/PrimsMinimumSpanningTree.Adapter.html" xlink:type="simple"><g id="elem_elki.math.geometry.PrimsMinimumSpanningTree.Adapter"><rect codeLine="510" fill="#F1F1F1" height="80.5938" id="elki.math.geometry.PrimsMinimumSpanningTree.Adapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="215" x="7592.5" y="352.5"/><ellipse cx="7662.25" cy="368.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7658.1719,364.2656 L7658.1719,362.1094 L7665.5625,362.1094 L7665.5625,364.2656 L7663.0938,364.2656 L7663.0938,372.3438 L7665.5625,372.3438 L7665.5625,374.5 L7658.1719,374.5 L7658.1719,372.3438 L7660.6406,372.3438 L7660.6406,364.2656 L7658.1719,364.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="56" x="7682.75" y="373.3467">Adapter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="7801.5" y="349.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="7802.5" y="361.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="7593.5" x2="7806.5" y1="384.5" y2="384.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="7593.5" x2="7806.5" y1="392.5" y2="392.5"/><ellipse cx="7603.5" cy="406.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="189" x="7612.5" y="409.4951">distance(T, int, int): double</text><ellipse cx="7603.5" cy="422.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="73" x="7612.5" y="425.792">size(T): int</text></g></a><!--MD5=[f44e19cdca12b06d30125e6020832c64]
class elki.math.geometry.PrimsMinimumSpanningTree.Collector--><a href="../../math/geometry/PrimsMinimumSpanningTree.Collector.html" target="_top" title="../../math/geometry/PrimsMinimumSpanningTree.Collector.html" xlink:actuate="onRequest" xlink:href="../../math/geometry/PrimsMinimumSpanningTree.Collector.html" xlink:show="new" xlink:title="../../math/geometry/PrimsMinimumSpanningTree.Collector.html" xlink:type="simple"><g id="elem_elki.math.geometry.PrimsMinimumSpanningTree.Collector"><rect codeLine="514" fill="#F1F1F1" height="64.2969" id="elki.math.geometry.PrimsMinimumSpanningTree.Collector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="239" x="7842.5" y="361"/><ellipse cx="7926.25" cy="377" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7922.1719,372.7656 L7922.1719,370.6094 L7929.5625,370.6094 L7929.5625,372.7656 L7927.0938,372.7656 L7927.0938,380.8438 L7929.5625,380.8438 L7929.5625,383 L7922.1719,383 L7922.1719,380.8438 L7924.6406,380.8438 L7924.6406,372.7656 L7922.1719,372.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="63" x="7946.75" y="381.8467">Collector</text><line style="stroke:#181818;stroke-width:0.5;" x1="7843.5" x2="8080.5" y1="393" y2="393"/><line style="stroke:#181818;stroke-width:0.5;" x1="7843.5" x2="8080.5" y1="401" y2="401"/><ellipse cx="7853.5" cy="414.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="213" x="7862.5" y="417.9951">addEdge(double, int, int): void</text></g></a><path d="M3841.5,55 L3974.5,55 A3.75,3.75 0 0 1 3977,57.5 L3984,77.2969 L3988.5,77.2969 A2.5,2.5 0 0 1 3991,79.7969 L3991,105.0938 A2.5,2.5 0 0 1 3988.5,107.5938 L3841.5,107.5938 A2.5,2.5 0 0 1 3839,105.0938 L3839,57.5 A2.5,2.5 0 0 1 3841.5,55 " fill="#F1F1F1" style="stroke:#181818;stroke-width:0.5;"/><line style="stroke:#181818;stroke-width:0.5;" x1="3839" x2="3984" y1="77.2969" y2="77.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="3843" y="69.9951">elki.math.geometry</text><!--MD5=[9feff5fbb50a9045943586bf89890c19]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.AGNES--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.AGNES"><path codeLine="410" d="M2482.87,429.38 C2289.1,472.14 1946.86,542.96 1650,580 C1216.96,634.03 1097.23,552.02 670,641 C615.5,652.35 557.92,670.8 506.24,689.91 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.AGNES" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2481.55,422.5,2502.59,425.01,2484.58,436.17,2481.55,422.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fab5b1a52d915f54ff196e48f8f6b55a]
link elki.clustering.hierarchical.AGNES to elki.clustering.hierarchical.linkage.Linkage--><g id="link_elki.clustering.hierarchical.AGNES_elki.clustering.hierarchical.linkage.Linkage"><path codeLine="411" d="M501.21,836.09 C554.06,855.9 613.57,874.74 670,885 C764.05,902.1 7463.56,925.74 7552,962 C7578.17,972.73 7600.74,995.99 7615.71,1014.68 " fill="none" id="elki.clustering.hierarchical.AGNES-to-elki.clustering.hierarchical.linkage.Linkage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7618.97,1018.83,7616.5564,1009.2815,7615.8815,1014.8979,7610.2651,1014.223,7618.97,1018.83" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="45" x="5870" y="928.0669">linkage</text></g><!--MD5=[4d655cd8a383acec3260e3021a1bf089]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.MedoidLinkage--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.MedoidLinkage"><path codeLine="419" d="M2473.76,429.15 C2278.26,470 1941.56,537.27 1650,580 C1393.98,617.52 1316.34,558.76 1071,641 C1031.22,654.33 990.92,676.52 956.94,698.29 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.MedoidLinkage" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2472.38,422.29,2493.39,425.04,2475.25,435.99,2472.38,422.29" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[05e1665084920616ef8dac5a9551d7b0]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.HACAM--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.HACAM"><path codeLine="424" d="M2465.41,423.29 C2186.86,471.77 1651.28,570.37 1472,641 C1434.2,655.89 1395.34,677.55 1361.98,698.44 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.HACAM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2464.52,416.34,2485.42,419.81,2466.91,430.13,2464.52,416.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7f7f1c12b5a2ec0a3f9e0f3117634671]
link elki.clustering.hierarchical.HACAM to elki.clustering.hierarchical.HACAM.Variant--><g id="link_elki.clustering.hierarchical.HACAM_elki.clustering.hierarchical.HACAM.Variant"><path codeLine="425" d="M1250.89,827.63 C1243.32,858.96 1237.51,897.36 1242,932 C1244.83,953.85 1250.7,977.54 1256.42,997.32 " fill="none" id="elki.clustering.hierarchical.HACAM-to-elki.clustering.hierarchical.HACAM.Variant" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1257.87,1002.26,1259.1632,992.4964,1256.4569,997.4639,1251.4894,994.7575,1257.87,1002.26" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="44" x="1243" y="928.0669">variant</text></g><!--MD5=[451dec0461ceb4ab498b3899a67bcc1c]
reverse link elki.clustering.hierarchical.HACAM to elki.clustering.hierarchical.HACAM.Variant--><g id="link_elki.clustering.hierarchical.HACAM_elki.clustering.hierarchical.HACAM.Variant"><path codeLine="426" d="M1288.03,842.89 C1292.19,870.98 1294.76,902.87 1292,932 C1289.78,955.52 1284.93,981.49 1280.46,1002.29 " fill="none" id="elki.clustering.hierarchical.HACAM-backto-elki.clustering.hierarchical.HACAM.Variant" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1286.8606" cy="835.6168" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1288.1411" x2="1285.58" y1="843.5137" y2="827.72"/><line style="stroke:#181818;stroke-width:1.0;" x1="1278.9637" x2="1294.7574" y1="836.8974" y2="834.3363"/></g><!--MD5=[1c4abf1d87d5368f42086e7e3aa875ec]
reverse link elki.clustering.hierarchical.ClusterMergeHistory to elki.clustering.hierarchical.ClusterDensityMergeHistory--><g id="link_elki.clustering.hierarchical.ClusterMergeHistory_elki.clustering.hierarchical.ClusterDensityMergeHistory"><path codeLine="433" d="M6644.02,574.96 C6626.69,626.4 6609.25,678.15 6597.13,714.14 " fill="none" id="elki.clustering.hierarchical.ClusterMergeHistory-backto-elki.clustering.hierarchical.ClusterDensityMergeHistory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6637.5,572.4,6650.52,555.68,6650.77,576.87,6637.5,572.4" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9c881b22ed20dc3265129739721c07a0]
reverse link elki.clustering.hierarchical.AGNES to elki.clustering.hierarchical.Anderberg--><g id="link_elki.clustering.hierarchical.AGNES_elki.clustering.hierarchical.Anderberg"><path codeLine="434" d="M312.54,855.89 C301.06,899.01 287.76,948.98 277.83,986.28 " fill="none" id="elki.clustering.hierarchical.AGNES-backto-elki.clustering.hierarchical.Anderberg" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="305.84,853.84,317.75,836.32,319.37,857.44,305.84,853.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[faca277eac3b818e8decad14526226f6]
reverse link elki.clustering.hierarchical.MiniMax to elki.clustering.hierarchical.MiniMaxNNChain--><g id="link_elki.clustering.hierarchical.MiniMax_elki.clustering.hierarchical.MiniMaxNNChain"><path codeLine="440" d="M3138.2,855.89 C3127.03,899.01 3114.09,948.98 3104.43,986.28 " fill="none" id="elki.clustering.hierarchical.MiniMax-backto-elki.clustering.hierarchical.MiniMaxNNChain" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3131.48,853.92,3143.27,836.32,3145.03,857.43,3131.48,853.92" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0b8155c34e9053773c7fb16a32aa677b]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.OPTICSToHierarchical--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.OPTICSToHierarchical"><path codeLine="445" d="M2477.61,429.71 C2313.1,469.53 2052.12,541.64 1841,641 C1802.8,658.98 1763.27,683.84 1730.61,706.36 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.OPTICSToHierarchical" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2476.1,422.87,2497.18,425.02,2479.37,436.49,2476.1,422.87" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d511367bd178662e7fc921d6f272d434]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.SLINK--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.SLINK"><path codeLine="448" d="M2598.11,440.45 C2555.12,490.52 2484.93,572.26 2426.08,640.79 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.SLINK" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2592.99,435.67,2611.33,425.06,2603.61,444.79,2592.99,435.67" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f6f6ffc2344b5287d81e7f1ffa3183c1]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.MiniMax--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.MiniMax"><path codeLine="451" d="M2698.82,436.71 C2787.11,498.72 2951.92,614.47 3059.26,689.85 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.MiniMax" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2694.57,442.28,2682.22,425.06,2702.61,430.82,2694.57,442.28" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8eac9a95588e6a5b47eb57bc9907603f]
reverse link elki.Algorithm to elki.clustering.hierarchical.AbstractHDBSCAN--><g id="link_elki.Algorithm_elki.clustering.hierarchical.AbstractHDBSCAN"><path codeLine="456" d="M4295.16,130.88 C4393.41,179.3 4546.27,254.63 4662.6,311.96 " fill="none" id="elki.Algorithm-backto-elki.clustering.hierarchical.AbstractHDBSCAN" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4292.02,137.13,4277.17,122.01,4298.21,124.58,4292.02,137.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a5f308d8e83faa1d0154cc86ecb17179]
reverse link elki.math.geometry.PrimsMinimumSpanningTree.Adapter to elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter--><g id="link_elki.math.geometry.PrimsMinimumSpanningTree.Adapter_elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter"><path codeLine="457" d="M7671.82,451.61 C7646.94,495.44 7606.18,552.72 7552,580 C7373.95,669.63 5953.19,596.01 5759,641 C5725.72,648.71 5691.51,660.58 5659.11,673.93 " fill="none" id="elki.math.geometry.PrimsMinimumSpanningTree.Adapter-backto-elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7665.81,448.01,7681.51,433.78,7678.12,454.69,7665.81,448.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0ad33d6975f6b5d734ba09c7a9cb0f96]
reverse link elki.clustering.hierarchical.AbstractHDBSCAN to elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter--><g id="link_elki.clustering.hierarchical.AbstractHDBSCAN_elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter"><path codeLine="458" d="M4982.76,481.43 C5087.63,539.55 5224.87,615.61 5329.99,673.87 " fill="none" id="elki.clustering.hierarchical.AbstractHDBSCAN-backto-elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4976.4865" cy="477.9593" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4983.483" x2="4969.49" y1="481.8386" y2="474.08"/><line style="stroke:#181818;stroke-width:1.0;" x1="4972.6072" x2="4980.3658" y1="484.9558" y2="470.9628"/></g><!--MD5=[968d06559d5ca19f3e7dd02e757e79c9]
reverse link elki.math.geometry.PrimsMinimumSpanningTree.Collector to elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector--><g id="link_elki.math.geometry.PrimsMinimumSpanningTree.Collector_elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector"><path codeLine="459" d="M7940.75,443.36 C7918.79,487.66 7879.95,550.15 7825,580 C7670.91,663.7 6418.18,598.71 6248,641 C6199.31,653.1 6149.04,675.85 6106.81,698.39 " fill="none" id="elki.math.geometry.PrimsMinimumSpanningTree.Collector-backto-elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7934.53,440.16,7949.39,425.06,7947.19,446.13,7934.53,440.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7cb54ceb0a49d22a89cbf850a6b601e4]
reverse link elki.clustering.hierarchical.AbstractHDBSCAN to elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector--><g id="link_elki.clustering.hierarchical.AbstractHDBSCAN_elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector"><path codeLine="460" d="M5211.42,477.62 C5381.79,519.22 5582.89,574.82 5759,641 C5801.82,657.09 5847.13,678.3 5886.92,698.47 " fill="none" id="elki.clustering.hierarchical.AbstractHDBSCAN-backto-elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="5204.374" cy="475.9083" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5212.1479" x2="5196.6" y1="477.7966" y2="474.02"/><line style="stroke:#181818;stroke-width:1.0;" x1="5202.4857" x2="5206.2622" y1="483.6822" y2="468.1343"/></g><!--MD5=[f7338de90ebad4a960835b2dc67f1edb]
reverse link elki.clustering.hierarchical.SLINK to elki.clustering.hierarchical.CLINK--><g id="link_elki.clustering.hierarchical.SLINK_elki.clustering.hierarchical.CLINK"><path codeLine="463" d="M2322,905.26 C2322,924.62 2322,943.93 2322,961.67 " fill="none" id="elki.clustering.hierarchical.SLINK-backto-elki.clustering.hierarchical.CLINK" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2315,905.13,2322,885.13,2329,905.13,2315,905.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2eb7b71f5107e6d46224cea555af1957]
reverse link elki.clustering.hierarchical.AbstractHDBSCAN to elki.clustering.hierarchical.HDBSCANLinearMemory--><g id="link_elki.clustering.hierarchical.AbstractHDBSCAN_elki.clustering.hierarchical.HDBSCANLinearMemory"><path codeLine="466" d="M4432.88,479.03 C4274.47,519.4 4091.91,573.7 3933,641 C3895.76,656.77 3857.01,678.08 3823.29,698.42 " fill="none" id="elki.clustering.hierarchical.AbstractHDBSCAN-backto-elki.clustering.hierarchical.HDBSCANLinearMemory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4431.47,472.17,4452.57,474.05,4434.9,485.74,4431.47,472.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e2b83a199c4a761aebc5c79e67bf3b6f]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.HDBSCANLinearMemory--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.HDBSCANLinearMemory"><path codeLine="467" d="M2810.48,428.38 C2991.77,467.67 3283.13,539.89 3521,641 C3558.22,656.82 3596.97,678.14 3630.68,698.48 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.HDBSCANLinearMemory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2808.92,435.2,2790.84,424.15,2811.86,421.51,2808.92,435.2" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cbaeeb8bf3734f755552e24c02c45329]
reverse link elki.Algorithm to elki.clustering.hierarchical.HierarchicalClusteringAlgorithm--><g id="link_elki.Algorithm_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm"><path codeLine="470" d="M4069.82,128.29 C4049.62,134.74 4028.85,140.9 4009,146 C3572.79,258.14 3045.61,337.32 2790.72,372.14 " fill="none" id="elki.Algorithm-backto-elki.clustering.hierarchical.HierarchicalClusteringAlgorithm" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4067.78,121.59,4088.97,122.04,4072.13,134.9,4067.78,121.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[56c523ff4e53396cd7c801cb15296fc4]
reverse link elki.clustering.hierarchical.MiniMax to elki.clustering.hierarchical.MiniMaxAnderberg--><g id="link_elki.clustering.hierarchical.MiniMax_elki.clustering.hierarchical.MiniMaxAnderberg"><path codeLine="471" d="M3263.11,849.44 C3319.37,896.98 3387.31,954.38 3434.29,994.08 " fill="none" id="elki.clustering.hierarchical.MiniMax-backto-elki.clustering.hierarchical.MiniMaxAnderberg" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3258.34,854.57,3247.58,836.32,3267.38,843.88,3258.34,854.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7af22e42518162f995177670d8f74ef7]
reverse link elki.clustering.hierarchical.AGNES to elki.clustering.hierarchical.NNChain--><g id="link_elki.clustering.hierarchical.AGNES_elki.clustering.hierarchical.NNChain"><path codeLine="476" d="M424.6,850.66 C472.4,897.96 529.78,954.72 569.57,994.08 " fill="none" id="elki.clustering.hierarchical.AGNES-backto-elki.clustering.hierarchical.NNChain" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="419.39,855.36,410.1,836.32,429.24,845.41,419.39,855.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9a037e06031f90234b6e0432336aa4b6]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.LinearMemoryNNChain--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.LinearMemoryNNChain"><path codeLine="481" d="M2810.78,412.26 C3062.56,442.13 3542.78,511.51 3933,641 C3984.21,657.99 4038.38,683.35 4083.07,706.46 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.LinearMemoryNNChain" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2809.88,419.2,2790.83,409.92,2811.51,405.29,2809.88,419.2" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1f68976a37b83243a3985a655a499a32]
link elki.clustering.hierarchical.LinearMemoryNNChain to elki.clustering.hierarchical.linkage.GeometricLinkage--><g id="link_elki.clustering.hierarchical.LinearMemoryNNChain_elki.clustering.hierarchical.linkage.GeometricLinkage"><path codeLine="482" d="M4272.43,819.6 C4318.19,844.65 4375.65,871.57 4431,885 C4607.27,927.76 7525.19,898.25 7695,962 C7723.94,972.87 7750.41,996.42 7768.19,1015.18 " fill="none" id="elki.clustering.hierarchical.LinearMemoryNNChain-to-elki.clustering.hierarchical.linkage.GeometricLinkage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7771.63,1018.86,7768.3939,1009.558,7768.2108,1015.2119,7762.5569,1015.0287,7771.63,1018.86" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="45" x="7243" y="928.0669">linkage</text></g><!--MD5=[21c99903e9a07c9c56212cd9e4881dfa]
reverse link elki.clustering.hierarchical.ClusterMergeHistory to elki.clustering.hierarchical.ClusterPrototypeMergeHistory--><g id="link_elki.clustering.hierarchical.ClusterMergeHistory_elki.clustering.hierarchical.ClusterPrototypeMergeHistory"><path codeLine="488" d="M6948.55,563.43 C7027.99,618.69 7109.97,675.72 7165.58,714.4 " fill="none" id="elki.clustering.hierarchical.ClusterMergeHistory-backto-elki.clustering.hierarchical.ClusterPrototypeMergeHistory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6944.07,568.83,6931.65,551.67,6952.06,557.34,6944.07,568.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8810401dfa20debb82f3bad18b7eca57]
reverse link elki.clustering.hierarchical.AbstractHDBSCAN to elki.clustering.hierarchical.SLINKHDBSCANLinearMemory--><g id="link_elki.clustering.hierarchical.AbstractHDBSCAN_elki.clustering.hierarchical.SLINKHDBSCANLinearMemory"><path codeLine="489" d="M4825,494.33 C4825,550.46 4825,619.78 4825,673.82 " fill="none" id="elki.clustering.hierarchical.AbstractHDBSCAN-backto-elki.clustering.hierarchical.SLINKHDBSCANLinearMemory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4818,494.3,4825,474.3,4832,494.3,4818,494.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[90e1672f67c14563862a51af695121d4]
reverse link elki.clustering.hierarchical.HierarchicalClusteringAlgorithm to elki.clustering.hierarchical.SLINKHDBSCANLinearMemory--><g id="link_elki.clustering.hierarchical.HierarchicalClusteringAlgorithm_elki.clustering.hierarchical.SLINKHDBSCANLinearMemory"><path codeLine="490" d="M2810.74,408.46 C3132.38,437.45 3843.75,511.26 4431,641 C4472.75,650.22 4516.47,661.73 4558.97,673.96 " fill="none" id="elki.clustering.hierarchical.HierarchicalClusteringAlgorithm-backto-elki.clustering.hierarchical.SLINKHDBSCANLinearMemory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2809.88,415.42,2790.58,406.66,2811.13,401.47,2809.88,415.42" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="3952" y="1146"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="3952" y="1155.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[1f284f9d5c73f8aeb9f4778b3ea0ba36]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.hierarchical {

        class AGNES<O> [[AGNES.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            +AGNES(Distance<? super O>, Linkage)
            +run(Relation<O>): ClusterMergeHistory
            {static} #initializeDistanceMatrix(ArrayDBIDs, DistanceQuery<?>, Linkage): ClusterDistanceMatrix
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.AGNES.Instance [[AGNES.Instance.html]] {
            #end: int
            +Instance(Linkage)
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            #findMerge(): int
            #merge(double, int, int): void
            #updateMatrix(double, int, int, int, int): void
            {static} #shrinkActiveSet(int[], int, int): int
        }

        class elki.clustering.hierarchical.AGNES.Par<O> {
            {static} +LINKAGE_ID: OptionID
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): AGNES<O>
        }

        class MedoidLinkage<O> [[MedoidLinkage.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            +MedoidLinkage(Distance<? super O>)
            +run(Relation<O>): ClusterPrototypeMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.MedoidLinkage.Instance [[MedoidLinkage.Instance.html]] {
            #clusters: Int2ObjectOpenHashMap<ModifiableDBIDs>
            #dq: DistanceQuery<?>
            #mi: DBIDArrayMIter
            #mj: DBIDArrayMIter
            #ix: DBIDArrayIter
            #iy: DBIDArrayIter
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            +run(ArrayDBIDs, ClusterDistanceMatrix, ClusterMergeHistoryBuilder, DistanceQuery<?>): ClusterPrototypeMergeHistory
            #findMerge(): int
            #merge(int, int): void
            {static} -findMedoid(DistanceQuery<?>, DBIDs, DBIDArrayMIter): double
            #updateMatrix(int, int): void
        }

        class elki.clustering.hierarchical.MedoidLinkage.Par<O> {
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): MedoidLinkage<O>
        }

        class HACAM<O> [[HACAM.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            +HACAM(Distance<? super O>, Variant)
            +run(Relation<O>): ClusterPrototypeMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        enum elki.clustering.hierarchical.HACAM.Variant [[HACAM.Variant.html]] {
            {static} +MINIMUM_SUM
            {static} +MINIMUM_SUM_INCREASE
        }

        class elki.clustering.hierarchical.HACAM.Instance [[HACAM.Instance.html]] {
            #clusters: Int2ObjectOpenHashMap<ModifiableDBIDs>
            #tds: double[]
            #dq: DistanceQuery<?>
            #prots: DBIDArrayMIter
            #ix: DBIDArrayIter
            #iy: DBIDArrayIter
            +Instance(Variant)
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            +run(ArrayDBIDs, ClusterDistanceMatrix, ClusterMergeHistoryBuilder, DistanceQuery<?>, DBIDArrayMIter): ClusterPrototypeMergeHistory
            #findMerge(): int
            #merge(int, int): void
            -updateMatrices(int, int): void
            #updateEntry(int, int): void
            {static} -findPrototype(DistanceQuery<?>, DBIDs, DBIDs, DBIDVar, double): double
            {static} -findPrototypeSingleton(DistanceQuery<?>, DBIDs, DBIDRef, DBIDVar): double
            {static} -distanceSum(DistanceQuery<?>, DBIDIter, DBIDs, double, double): double
        }

        class elki.clustering.hierarchical.HACAM.Par<O> {
            {static} +VARIANT_ID: OptionID
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): HACAM<O>
        }

        class ClusterDensityMergeHistory [[ClusterDensityMergeHistory.html]] {
            #coredists: DoubleDataStore
            +ClusterDensityMergeHistory(ArrayDBIDs, int[], double[], int[], boolean, DoubleDataStore)
            +getCoreDistanceStore(): DoubleDataStore
        }

        class Anderberg<O> [[Anderberg.html]] {
            {static} -LOG: Logging
            +Anderberg(Distance<? super O>, Linkage)
            +run(Relation<O>): ClusterMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.Anderberg.Instance [[Anderberg.Instance.html]] {
            #bestd: double[]
            #besti: int[]
            +Instance(Linkage)
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            {static} #initializeNNCache(double[], double[], int[]): void
            #findMerge(): int
            #merge(double, int, int): void
            #updateMatrix(double, int, int, int, int): void
            {static} #updateCache(double[], double[], int[], int, int, int, double): void
            {static} #findBest(double[], double[], int[], int): void
        }

        class elki.clustering.hierarchical.Anderberg.Par<O> {
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): Anderberg<O>
        }

        class MiniMaxNNChain<O> [[MiniMaxNNChain.html]] {
            {static} -LOG: Logging
            +MiniMaxNNChain(Distance<? super O>)
            +run(Relation<O>): ClusterPrototypeMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.MiniMaxNNChain.Instance [[MiniMaxNNChain.Instance.html]] {
            +run(ArrayDBIDs, ClusterDistanceMatrix, ClusterMergeHistoryBuilder, DistanceQuery<?>, DBIDArrayMIter): ClusterPrototypeMergeHistory
            -nnChainCore(): void
        }

        class elki.clustering.hierarchical.MiniMaxNNChain.Par<O> {
            +make(): MiniMaxNNChain<O>
        }

        class OPTICSToHierarchical [[OPTICSToHierarchical.html]] {
            ~inner: OPTICSTypeAlgorithm
            +OPTICSToHierarchical(OPTICSTypeAlgorithm)
            +autorun(Database): ClusterMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.OPTICSToHierarchical.Par [[OPTICSToHierarchical.Par.html]] {
            {static} +OPTICS_ID: OptionID
            ~inner: OPTICSTypeAlgorithm
            +configure(Parameterization): void
            +make(): OPTICSToHierarchical
        }

        class SLINK<O> [[SLINK.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            +SLINK(Distance<? super O>)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): ClusterMergeHistory
            {static} #convertOutput(ClusterMergeHistoryBuilder, ArrayDBIDs, DBIDDataStore, DoubleDataStore): ClusterMergeHistoryBuilder
            -step2(DBIDRef, DBIDArrayIter, int, DistanceQuery<? super O>, WritableDoubleDataStore): void
            -step2primitive(DBIDRef, DBIDArrayIter, int, Relation<? extends O>, PrimitiveDistance<? super O>, WritableDoubleDataStore): void
            #process(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void
            -slinkstep3(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void
            -slinkstep4(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore): void
            #getLogger(): Logging
        }

        class elki.clustering.hierarchical.SLINK.Par<O> [[SLINK.Par.html]] {
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): SLINK<O>
        }

        class MiniMax<O> [[MiniMax.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            +MiniMax(Distance<? super O>)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): ClusterPrototypeMergeHistory
            {static} #initializeMatrices(ArrayDBIDs, ArrayModifiableDBIDs, DistanceQuery<O>): ClusterDistanceMatrix
        }

        class elki.clustering.hierarchical.MiniMax.Instance [[MiniMax.Instance.html]] {
            #clusters: Int2ObjectOpenHashMap<ModifiableDBIDs>
            #protiter: DBIDArrayMIter
            #dq: DistanceQuery<?>
            #ix: DBIDArrayIter
            #iy: DBIDArrayIter
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            +run(ArrayDBIDs, ClusterDistanceMatrix, ClusterMergeHistoryBuilder, DistanceQuery<?>, DBIDArrayMIter): ClusterPrototypeMergeHistory
            #findMerge(): int
            #merge(int, int): void
            #updateMatrices(int): void
            #updateEntry(int, int): void
            {static} -findPrototype(DistanceQuery<?>, DBIDs, DBIDs, DBIDVar, double): double
            {static} -findPrototypeSingleton(DistanceQuery<?>, DBIDs, DBIDRef, DBIDVar): double
            {static} -findMax(DistanceQuery<?>, DBIDIter, DBIDs, double, double): double
        }

        class elki.clustering.hierarchical.MiniMax.Par<O> {
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): MiniMax<O>
        }

        class ClusterDistanceMatrix [[ClusterDistanceMatrix.html]] {
            +matrix: double[]
            +clustermap: int[]
            +size: int
            +ClusterDistanceMatrix(int)
            {static} +triangleSize(int): int
            +get(int, int): double
        }

        class ClusterMergeHistory [[ClusterMergeHistory.html]] {
            #ids: ArrayDBIDs
            #distances: double[]
            #sizes: int[]
            #merges: int[]
            #positions: int[]
            ~isSquared: boolean
            +ClusterMergeHistory(ArrayDBIDs, int[], double[], int[], boolean)
            +assignVar(int, DBIDVar): DBIDVar
            +getMergeA(int): int
            +getMergeB(int): int
            +getMergeHeight(int): double
            +getSize(int): int
            +size(): int
            +numMerges(): int
            +isSquared(): boolean
            +getDBIDs(): ArrayDBIDs
            +getPositions(): int[]
        }

        abstract class AbstractHDBSCAN<O> [[AbstractHDBSCAN.html]] {
            #minPts: int
            #distance: Distance<? super O>
            +AbstractHDBSCAN(Distance<? super O>, int)
            #computeCoreDists(DBIDs, KNNSearcher<DBIDRef>, int): WritableDoubleDataStore
            #convertToMergeList(ArrayDBIDs, DoubleLongHeap, ClusterMergeHistoryBuilder): ClusterMergeHistoryBuilder
            +getInputTypeRestriction(): TypeInformation[]
            {abstract} #getLogger(): Logging
        }

        class elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter [[AbstractHDBSCAN.HDBSCANAdapter.html]] {
            -ids: ArrayDBIDs
            -q: DBIDArrayIter
            -p: DBIDArrayIter
            -coredists: DoubleDataStore
            -distq: DistanceQuery<?>
            +HDBSCANAdapter(ArrayDBIDs, DoubleDataStore, DistanceQuery<?>)
            +distance(ArrayDBIDs, int, int): double
            +size(ArrayDBIDs): int
        }

        class elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector [[AbstractHDBSCAN.HeapMSTCollector.html]] {
            -heap: DoubleLongHeap
            -prog: FiniteProgress
            -log: Logging
            +HeapMSTCollector(DoubleLongHeap, FiniteProgress, Logging)
            +addEdge(double, int, int): void
        }

        abstract class elki.clustering.hierarchical.AbstractHDBSCAN.Par<O> {
            {static} +MIN_PTS_ID: OptionID
            #minPts: int
            #distance: Distance<? super O>
            +configure(Parameterization): void
        }

        class CLINK<O> [[CLINK.html]] {
            {static} -LOG: Logging
            +CLINK(Distance<? super O>)
            #process(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void
            -clinkstep3(DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void
            -clinkstep4567(DBIDRef, ArrayDBIDs, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore, WritableDoubleDataStore): void
            -clinkstep8(DBIDRef, DBIDArrayIter, int, WritableDBIDDataStore, WritableDoubleDataStore): void
            #getLogger(): Logging
        }

        class elki.clustering.hierarchical.CLINK.Par<O> [[CLINK.Par.html]] {
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): CLINK<O>
        }

        class HDBSCANLinearMemory<O> [[HDBSCANLinearMemory.html]] {
            {static} -LOG: Logging
            +HDBSCANLinearMemory(Distance<? super O>, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): ClusterDensityMergeHistory
            #getLogger(): Logging
        }

        class elki.clustering.hierarchical.HDBSCANLinearMemory.Par<O> {
            +make(): HDBSCANLinearMemory<O>
        }

        interface HierarchicalClusteringAlgorithm [[HierarchicalClusteringAlgorithm.html]] {
            +autorun(Database): ClusterMergeHistory
        }

        class MiniMaxAnderberg<O> [[MiniMaxAnderberg.html]] {
            {static} -LOG: Logging
            +MiniMaxAnderberg(Distance<? super O>)
            +run(Relation<O>): ClusterPrototypeMergeHistory
        }

        class elki.clustering.hierarchical.MiniMaxAnderberg.Instance [[MiniMaxAnderberg.Instance.html]] {
            #bestd: double[]
            #besti: int[]
            +run(ArrayDBIDs, ClusterDistanceMatrix, ClusterMergeHistoryBuilder, DistanceQuery<?>, DBIDArrayMIter): ClusterPrototypeMergeHistory
            #findMerge(): int
            #merge(int, int): void
            -updateMatrices(int, int): void
        }

        class elki.clustering.hierarchical.MiniMaxAnderberg.Par<O> {
            +make(): MiniMaxAnderberg<O>
        }

        class ClusterMergeHistoryBuilder [[ClusterMergeHistoryBuilder.html]] {
            {static} -LOG: Logging
            #ids: ArrayDBIDs
            #mergeDistance: double[]
            #csize: int[]
            #merges: int[]
            #parent: int[]
            #mergecount: int
            #prototypes: ArrayModifiableDBIDs
            #isSquared: boolean
            +ClusterMergeHistoryBuilder(ArrayDBIDs, boolean)
            +add(int, double, int): int
            +strictAdd(int, double, int): int
            +strictAdd(int, double, int, DBIDRef): int
            +complete(): ClusterMergeHistory
            +complete(WritableDoubleDataStore): ClusterDensityMergeHistory
            +getSize(int): int
            +setSize(int, int): void
            +optimizeOrder(): int[]
            -checkMonotone(): boolean
            -addRecursive(int[], int, byte[], int, int): int
        }

        class NNChain<O> [[NNChain.html]] {
            {static} -LOG: Logging
            +NNChain(Distance<? super O>, Linkage)
            +run(Relation<O>): ClusterMergeHistory
        }

        class elki.clustering.hierarchical.NNChain.Instance [[NNChain.Instance.html]] {
            +Instance(Linkage)
            +run(ClusterDistanceMatrix, ClusterMergeHistoryBuilder): ClusterMergeHistory
            -nnChainCore(): void
            {static} +findUnlinked(int, int, int[]): int
        }

        class elki.clustering.hierarchical.NNChain.Par<O> {
            +make(): NNChain<O>
        }

        class LinearMemoryNNChain<O extends NumberVector> [[LinearMemoryNNChain.html]] {
            {static} -LOG: Logging
            +LinearMemoryNNChain(GeometricLinkage)
            +run(Relation<O extends NumberVector>): ClusterMergeHistory
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.hierarchical.LinearMemoryNNChain.Instance<O extends NumberVector> [[LinearMemoryNNChain.Instance.html]] {
            +Instance(GeometricLinkage)
            +run(ArrayDBIDs, Relation<O extends NumberVector>, ClusterMergeHistoryBuilder): ClusterMergeHistory
            -nnChainCore(DBIDArrayIter, DBIDArrayIter, ClusterMergeHistoryBuilder, Relation<O extends NumberVector>): void
            #merge(int, double[], ClusterMergeHistoryBuilder, int[], double, int, int): void
        }

        class elki.clustering.hierarchical.LinearMemoryNNChain.Par<O extends NumberVector> {
            {static} +LINKAGE_ID: OptionID
            +configure(Parameterization): void
            +make(): LinearMemoryNNChain<O extends NumberVector>
        }

        class ClusterPrototypeMergeHistory [[ClusterPrototypeMergeHistory.html]] {
            #prototypes: ArrayDBIDs
            +ClusterPrototypeMergeHistory(ArrayDBIDs, int[], double[], int[], boolean, ArrayDBIDs)
            +prototype(int): DBID
        }

        class SLINKHDBSCANLinearMemory<O> [[SLINKHDBSCANLinearMemory.html]] {
            {static} -LOG: Logging
            +SLINKHDBSCANLinearMemory(Distance<? super O>, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): ClusterMergeHistory
            -step2(DBIDRef, DBIDs, DistanceQuery<? super O>, DoubleDataStore, WritableDoubleDataStore): void
            -step3(DBIDRef, WritableDBIDDataStore, WritableDoubleDataStore, DBIDs, WritableDoubleDataStore): void
            -step4(DBIDRef, WritableDBIDDataStore, WritableDoubleDataStore, DBIDs): void
            #getLogger(): Logging
        }

        class elki.clustering.hierarchical.SLINKHDBSCANLinearMemory.Par<O> {
            +make(): SLINKHDBSCANLinearMemory<O>
        }

        HierarchicalClusteringAlgorithm <|.. AGNES
        AGNES - -> elki.clustering.hierarchical.linkage.Linkage: linkage
        AGNES +- - elki.clustering.hierarchical.AGNES.Instance
        elki.clustering.hierarchical.AGNES.Instance - -> elki.clustering.hierarchical.linkage.Linkage: linkage
        elki.clustering.hierarchical.AGNES.Instance - -> ClusterDistanceMatrix: mat
        elki.clustering.hierarchical.AGNES.Instance - -> ClusterMergeHistoryBuilder: builder
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.AGNES.Par
        AGNES +- - elki.clustering.hierarchical.AGNES.Par
        elki.clustering.hierarchical.AGNES.Par - -> elki.clustering.hierarchical.linkage.Linkage: linkage
        HierarchicalClusteringAlgorithm <|.. MedoidLinkage
        elki.clustering.hierarchical.AGNES.Instance <|- - elki.clustering.hierarchical.MedoidLinkage.Instance
        MedoidLinkage +- - elki.clustering.hierarchical.MedoidLinkage.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.MedoidLinkage.Par
        MedoidLinkage +- - elki.clustering.hierarchical.MedoidLinkage.Par
        HierarchicalClusteringAlgorithm <|.. HACAM
        HACAM - -> elki.clustering.hierarchical.HACAM.Variant: variant
        HACAM +- - elki.clustering.hierarchical.HACAM.Variant
        elki.clustering.hierarchical.Anderberg.Instance <|- - elki.clustering.hierarchical.HACAM.Instance
        HACAM +- - elki.clustering.hierarchical.HACAM.Instance
        elki.clustering.hierarchical.HACAM.Instance - -> elki.clustering.hierarchical.HACAM.Variant: variant
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.HACAM.Par
        HACAM +- - elki.clustering.hierarchical.HACAM.Par
        elki.clustering.hierarchical.HACAM.Par - -> elki.clustering.hierarchical.HACAM.Variant: variant
        ClusterMergeHistory <|- - ClusterDensityMergeHistory
        AGNES <|- - Anderberg
        elki.clustering.hierarchical.AGNES.Instance <|- - elki.clustering.hierarchical.Anderberg.Instance
        Anderberg +- - elki.clustering.hierarchical.Anderberg.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.Anderberg.Par
        Anderberg +- - elki.clustering.hierarchical.Anderberg.Par
        elki.clustering.hierarchical.Anderberg.Par - -> elki.clustering.hierarchical.linkage.Linkage: linkage
        MiniMax <|- - MiniMaxNNChain
        elki.clustering.hierarchical.MiniMax.Instance <|- - elki.clustering.hierarchical.MiniMaxNNChain.Instance
        MiniMaxNNChain +- - elki.clustering.hierarchical.MiniMaxNNChain.Instance
        elki.clustering.hierarchical.MiniMax.Par <|- - elki.clustering.hierarchical.MiniMaxNNChain.Par
        MiniMaxNNChain +- - elki.clustering.hierarchical.MiniMaxNNChain.Par
        HierarchicalClusteringAlgorithm <|.. OPTICSToHierarchical
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.OPTICSToHierarchical.Par
        OPTICSToHierarchical +- - elki.clustering.hierarchical.OPTICSToHierarchical.Par
        HierarchicalClusteringAlgorithm <|.. SLINK
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.SLINK.Par
        SLINK +- - elki.clustering.hierarchical.SLINK.Par
        HierarchicalClusteringAlgorithm <|.. MiniMax
        elki.clustering.hierarchical.AGNES.Instance <|- - elki.clustering.hierarchical.MiniMax.Instance
        MiniMax +- - elki.clustering.hierarchical.MiniMax.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.MiniMax.Par
        MiniMax +- - elki.clustering.hierarchical.MiniMax.Par
        elki.Algorithm <|.. AbstractHDBSCAN
        elki.math.geometry.PrimsMinimumSpanningTree.Adapter <|.. elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter
        AbstractHDBSCAN +- - elki.clustering.hierarchical.AbstractHDBSCAN.HDBSCANAdapter
        elki.math.geometry.PrimsMinimumSpanningTree.Collector <|.. elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector
        AbstractHDBSCAN +- - elki.clustering.hierarchical.AbstractHDBSCAN.HeapMSTCollector
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.AbstractHDBSCAN.Par
        AbstractHDBSCAN +- - elki.clustering.hierarchical.AbstractHDBSCAN.Par
        SLINK <|- - CLINK
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.CLINK.Par
        CLINK +- - elki.clustering.hierarchical.CLINK.Par
        AbstractHDBSCAN <|- - HDBSCANLinearMemory
        HierarchicalClusteringAlgorithm <|.. HDBSCANLinearMemory
        elki.clustering.hierarchical.AbstractHDBSCAN.Par <|- - elki.clustering.hierarchical.HDBSCANLinearMemory.Par
        HDBSCANLinearMemory +- - elki.clustering.hierarchical.HDBSCANLinearMemory.Par
        elki.Algorithm <|- - HierarchicalClusteringAlgorithm
        MiniMax <|- - MiniMaxAnderberg
        elki.clustering.hierarchical.MiniMax.Instance <|- - elki.clustering.hierarchical.MiniMaxAnderberg.Instance
        MiniMaxAnderberg +- - elki.clustering.hierarchical.MiniMaxAnderberg.Instance
        elki.clustering.hierarchical.MiniMax.Par <|- - elki.clustering.hierarchical.MiniMaxAnderberg.Par
        MiniMaxAnderberg +- - elki.clustering.hierarchical.MiniMaxAnderberg.Par
        AGNES <|- - NNChain
        elki.clustering.hierarchical.AGNES.Instance <|- - elki.clustering.hierarchical.NNChain.Instance
        NNChain +- - elki.clustering.hierarchical.NNChain.Instance
        elki.clustering.hierarchical.AGNES.Par <|- - elki.clustering.hierarchical.NNChain.Par
        NNChain +- - elki.clustering.hierarchical.NNChain.Par
        HierarchicalClusteringAlgorithm <|.. LinearMemoryNNChain
        LinearMemoryNNChain - -> elki.clustering.hierarchical.linkage.GeometricLinkage: linkage
        LinearMemoryNNChain +- - elki.clustering.hierarchical.LinearMemoryNNChain.Instance
        elki.clustering.hierarchical.LinearMemoryNNChain.Instance - -> elki.clustering.hierarchical.linkage.GeometricLinkage: linkage
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.hierarchical.LinearMemoryNNChain.Par
        LinearMemoryNNChain +- - elki.clustering.hierarchical.LinearMemoryNNChain.Par
        elki.clustering.hierarchical.LinearMemoryNNChain.Par - -> elki.clustering.hierarchical.linkage.GeometricLinkage: linkage
        ClusterMergeHistory <|- - ClusterPrototypeMergeHistory
        AbstractHDBSCAN <|- - SLINKHDBSCANLinearMemory
        HierarchicalClusteringAlgorithm <|.. SLINKHDBSCANLinearMemory
        elki.clustering.hierarchical.AbstractHDBSCAN.Par <|- - elki.clustering.hierarchical.SLINKHDBSCANLinearMemory.Par
        SLINKHDBSCANLinearMemory +- - elki.clustering.hierarchical.SLINKHDBSCANLinearMemory.Par
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    namespace elki {
        interface Algorithm [[../../Algorithm.html]] {
            +autorun(Database): Object
            {abstract} +getInputTypeRestriction(): TypeInformation[]
        }
    }

    namespace elki.math.geometry {
        interface elki.math.geometry.PrimsMinimumSpanningTree.Adapter<T> [[../../math/geometry/PrimsMinimumSpanningTree.Adapter.html]] {
            {abstract} +distance(T, int, int): double
            {abstract} +size(T): int
        }
        interface elki.math.geometry.PrimsMinimumSpanningTree.Collector [[../../math/geometry/PrimsMinimumSpanningTree.Collector.html]] {
            {abstract} +addEdge(double, int, int): void
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>