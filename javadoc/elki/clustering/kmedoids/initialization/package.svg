<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="387px" preserveAspectRatio="none" style="width:5518px;height:387px;background:#FFFFFF;" version="1.1" viewBox="0 0 5518 387" width="5518px" zoomAndPan="magnify"><defs/><g><!--MD5=[137533101e19e10517798a87a4cda00a]
cluster elki.clustering.kmedoids.initialization--><g id="cluster_elki.clustering.kmedoids.initialization"><path d="M8.5,6 L299.5,6 A3.75,3.75 0 0 1 302,8.5 L309,28.2969 L4724.5,28.2969 A2.5,2.5 0 0 1 4727,30.7969 L4727,359.5 A2.5,2.5 0 0 1 4724.5,362 L8.5,362 A2.5,2.5 0 0 1 6,359.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="309" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="290" x="10" y="20.9951">elki.clustering.kmedoids.initialization</text></g><!--MD5=[6b1243d1eb00edd5f5f43e3a0dd472a2]
cluster elki.clustering.kmeans.initialization--><g id="cluster_elki.clustering.kmeans.initialization"><path d="M4753.5,6 L5029.5,6 A3.75,3.75 0 0 1 5032,8.5 L5039,28.2969 L5508.5,28.2969 A2.5,2.5 0 0 1 5511,30.7969 L5511,118.5 A2.5,2.5 0 0 1 5508.5,121 L4753.5,121 A2.5,2.5 0 0 1 4751,118.5 L4751,8.5 A2.5,2.5 0 0 1 4753.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4751" x2="5039" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="275" x="4755" y="20.9951">elki.clustering.kmeans.initialization</text></g><!--MD5=[c605527b23da93a5a32ebf2012896fe8]
class elki.clustering.kmedoids.initialization.BUILD--><a href="BUILD.html" target="_top" title="BUILD.html" xlink:actuate="onRequest" xlink:href="BUILD.html" xlink:show="new" xlink:title="BUILD.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.BUILD"><rect codeLine="4" fill="#F1F1F1" height="96.8906" id="elki.clustering.kmedoids.initialization.BUILD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="711" x="2507.5" y="216.5"/><ellipse cx="2832.25" cy="232.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2835.2188,238.1406 Q2834.6406,238.4375 2834,238.5781 Q2833.3594,238.7344 2832.6563,238.7344 Q2830.1563,238.7344 2828.8281,237.0938 Q2827.5156,235.4375 2827.5156,232.3125 Q2827.5156,229.1875 2828.8281,227.5313 Q2830.1563,225.875 2832.6563,225.875 Q2833.3594,225.875 2834,226.0313 Q2834.6563,226.1875 2835.2188,226.4844 L2835.2188,229.2031 Q2834.5938,228.625 2834,228.3594 Q2833.4063,228.0781 2832.7813,228.0781 Q2831.4375,228.0781 2830.75,229.1563 Q2830.0625,230.2188 2830.0625,232.3125 Q2830.0625,234.4063 2830.75,235.4844 Q2831.4375,236.5469 2832.7813,236.5469 Q2833.4063,236.5469 2834,236.2813 Q2834.5938,236 2835.2188,235.4219 L2835.2188,238.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2852.75" y="237.3467">BUILD</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3211.5" y="213.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3212.5" y="225.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="2508.5" x2="3217.5" y1="248.5" y2="248.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2515.5" y="259.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2527.5" y="265.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="2508.5" x2="3217.5" y1="272.7969" y2="272.7969"/><ellipse cx="2518.5" cy="286.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="2527.5" y="289.792">chooseInitialMeans(Relation&lt;? extends NumberVector&gt;, int, NumberVectorDistance&lt;?&gt;): double[]</text><ellipse cx="2518.5" cy="302.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="2527.5" y="306.0889">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text></g></a><!--MD5=[7ab5e4f9cbadc1af039d2452a10707e1]
class elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization--><a href="KMedoidsKMedoidsInitialization.html" target="_top" title="KMedoidsKMedoidsInitialization.html" xlink:actuate="onRequest" xlink:href="KMedoidsKMedoidsInitialization.html" xlink:show="new" xlink:title="KMedoidsKMedoidsInitialization.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization"><rect codeLine="14" fill="#F1F1F1" height="96.8906" id="elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="501" x="1971.5" y="216.5"/><ellipse cx="2104.25" cy="232.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2107.2188,238.1406 Q2106.6406,238.4375 2106,238.5781 Q2105.3594,238.7344 2104.6563,238.7344 Q2102.1563,238.7344 2100.8281,237.0938 Q2099.5156,235.4375 2099.5156,232.3125 Q2099.5156,229.1875 2100.8281,227.5313 Q2102.1563,225.875 2104.6563,225.875 Q2105.3594,225.875 2106,226.0313 Q2106.6563,226.1875 2107.2188,226.4844 L2107.2188,229.2031 Q2106.5938,228.625 2106,228.3594 Q2105.4063,228.0781 2104.7813,228.0781 Q2103.4375,228.0781 2102.75,229.1563 Q2102.0625,230.2188 2102.0625,232.3125 Q2102.0625,234.4063 2102.75,235.4844 Q2103.4375,236.5469 2104.7813,236.5469 Q2105.4063,236.5469 2106,236.2813 Q2106.5938,236 2107.2188,235.4219 L2107.2188,238.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="2124.75" y="237.3467">KMedoidsKMedoidsInitialization</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="2465.5" y="213.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="2466.5" y="225.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1972.5" x2="2471.5" y1="248.5" y2="248.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1979.5" y="259.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="1991.5" y="265.4951">inner: KMedoidsClustering&lt;O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1972.5" x2="2471.5" y1="272.7969" y2="272.7969"/><ellipse cx="1982.5" cy="286.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="1991.5" y="289.792">KMedoidsKMedoidsInitialization(KMedoidsClustering&lt;O&gt;)</text><ellipse cx="1982.5" cy="302.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="1991.5" y="306.0889">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text></g></a><!--MD5=[195ff93b31fe30a2a9aaad6504cf0862]
class elki.clustering.kmedoids.initialization.LAB--><a href="LAB.html" target="_top" title="LAB.html" xlink:actuate="onRequest" xlink:href="LAB.html" xlink:show="new" xlink:title="LAB.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.LAB"><rect codeLine="27" fill="#F1F1F1" height="162.0781" id="elki.clustering.kmedoids.initialization.LAB" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="711" x="3253.5" y="184"/><ellipse cx="3585.75" cy="200" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3588.7188,205.6406 Q3588.1406,205.9375 3587.5,206.0781 Q3586.8594,206.2344 3586.1563,206.2344 Q3583.6563,206.2344 3582.3281,204.5938 Q3581.0156,202.9375 3581.0156,199.8125 Q3581.0156,196.6875 3582.3281,195.0313 Q3583.6563,193.375 3586.1563,193.375 Q3586.8594,193.375 3587.5,193.5313 Q3588.1563,193.6875 3588.7188,193.9844 L3588.7188,196.7031 Q3588.0938,196.125 3587.5,195.8594 Q3586.9063,195.5781 3586.2813,195.5781 Q3584.9375,195.5781 3584.25,196.6563 Q3583.5625,197.7188 3583.5625,199.8125 Q3583.5625,201.9063 3584.25,202.9844 Q3584.9375,204.0469 3586.2813,204.0469 Q3586.9063,204.0469 3587.5,203.7813 Q3588.0938,203.5 3588.7188,202.9219 L3588.7188,205.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="26" x="3606.25" y="204.8467">LAB</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="3957.5" y="181"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="3958.5" y="193.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="3254.5" x2="3963.5" y1="216" y2="216"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3261.5" y="226.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3273.5" y="232.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3261.5" y="242.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="3273.5" y="249.292">rnd: RandomFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="3254.5" x2="3963.5" y1="256.5938" y2="256.5938"/><ellipse cx="3264.5" cy="270.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="3273.5" y="273.5889">LAB(RandomFactory)</text><ellipse cx="3264.5" cy="286.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="3273.5" y="289.8857">chooseInitialMeans(Relation&lt;? extends NumberVector&gt;, int, NumberVectorDistance&lt;?&gt;): double[]</text><ellipse cx="3264.5" cy="302.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="3273.5" y="306.1826">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text><polygon fill="#FFFF44" points="3264.5,314.1328,3268.5,318.1328,3264.5,322.1328,3260.5,318.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="654" x="3273.5" y="322.4795">getMinDist(DBIDArrayIter, DistanceQuery&lt;?&gt;, DBIDArrayIter, WritableDoubleDataStore): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3261.5" y="332.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="355" x="3273.5" y="338.7764">shuffle(ArrayModifiableDBIDs, int, int, Random): void</text></g></a><!--MD5=[5bc5ef15a89d424034bcc4f091d5036b]
class elki.clustering.kmedoids.initialization.KMedoidsInitialization--><a href="KMedoidsInitialization.html" target="_top" title="KMedoidsInitialization.html" xlink:actuate="onRequest" xlink:href="KMedoidsInitialization.html" xlink:show="new" xlink:title="KMedoidsInitialization.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.KMedoidsInitialization"><rect codeLine="41" fill="#F1F1F1" height="64.2969" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="507" x="1968.5" y="41"/><ellipse cx="2134.75" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2130.6719,52.7656 L2130.6719,50.6094 L2138.0625,50.6094 L2138.0625,52.7656 L2135.5938,52.7656 L2135.5938,60.8438 L2138.0625,60.8438 L2138.0625,63 L2130.6719,63 L2130.6719,60.8438 L2133.1406,60.8438 L2133.1406,52.7656 L2130.6719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="2155.25" y="61.8467">KMedoidsInitialization</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="2468.5" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="2469.5" y="50.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1969.5" x2="2474.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="1969.5" x2="2474.5" y1="81" y2="81"/><ellipse cx="1979.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="481" x="1988.5" y="97.9951">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text></g></a><!--MD5=[ae8b617174c459aa622dcbab4d56b919]
class elki.clustering.kmedoids.initialization.AlternateRefinement--><a href="AlternateRefinement.html" target="_top" title="AlternateRefinement.html" xlink:actuate="onRequest" xlink:href="AlternateRefinement.html" xlink:show="new" xlink:title="AlternateRefinement.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.AlternateRefinement"><rect codeLine="45" fill="#F1F1F1" height="145.7813" id="elki.clustering.kmedoids.initialization.AlternateRefinement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="789" x="21.5" y="192"/><ellipse cx="334.75" cy="208" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M337.7188,213.6406 Q337.1406,213.9375 336.5,214.0781 Q335.8594,214.2344 335.1563,214.2344 Q332.6563,214.2344 331.3281,212.5938 Q330.0156,210.9375 330.0156,207.8125 Q330.0156,204.6875 331.3281,203.0313 Q332.6563,201.375 335.1563,201.375 Q335.8594,201.375 336.5,201.5313 Q337.1563,201.6875 337.7188,201.9844 L337.7188,204.7031 Q337.0938,204.125 336.5,203.8594 Q335.9063,203.5781 335.2813,203.5781 Q333.9375,203.5781 333.25,204.6563 Q332.5625,205.7188 332.5625,207.8125 Q332.5625,209.9063 333.25,210.9844 Q333.9375,212.0469 335.2813,212.0469 Q335.9063,212.0469 336.5,211.7813 Q337.0938,211.5 337.7188,210.9219 L337.7188,213.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="355.25" y="212.8467">AlternateRefinement</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="803.5" y="189"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="804.5" y="201.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="809.5" y1="224" y2="224"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="29.5" y="234.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="41.5" y="240.9951">LOG: Logging</text><polygon fill="none" points="32.5,249.9453,28.5,255.9453,36.5,255.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="41.5" y="257.292">maxiter: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="809.5" y1="264.5938" y2="264.5938"/><ellipse cx="32.5" cy="278.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="41.5" y="281.5889">AlternateRefinement(KMedoidsInitialization&lt;O&gt;, int)</text><ellipse cx="32.5" cy="294.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="41.5" y="297.8857">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text><ellipse cx="32.5" cy="310.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="663" x="41.5" y="314.1826">findMedoid(DBIDs, DistanceQuery&lt;?&gt;, IntegerDataStore, int, DBIDArrayMIter, double[]): boolean</text><ellipse cx="32.5" cy="327.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="763" x="41.5" y="330.4795">assignToNearestCluster(DBIDArrayIter, DBIDs, DistanceQuery&lt;?&gt;, WritableIntegerDataStore, double[]): double</text></g></a><!--MD5=[ef214930316094ca9fc0ed8d6d1f824f]
class elki.clustering.kmedoids.initialization.ParkJun--><a href="ParkJun.html" target="_top" title="ParkJun.html" xlink:actuate="onRequest" xlink:href="ParkJun.html" xlink:show="new" xlink:title="ParkJun.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.ParkJun"><rect codeLine="62" fill="#F1F1F1" height="96.8906" id="elki.clustering.kmedoids.initialization.ParkJun" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="711" x="3999.5" y="216.5"/><ellipse cx="4319.25" cy="232.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4322.2188,238.1406 Q4321.6406,238.4375 4321,238.5781 Q4320.3594,238.7344 4319.6563,238.7344 Q4317.1563,238.7344 4315.8281,237.0938 Q4314.5156,235.4375 4314.5156,232.3125 Q4314.5156,229.1875 4315.8281,227.5313 Q4317.1563,225.875 4319.6563,225.875 Q4320.3594,225.875 4321,226.0313 Q4321.6563,226.1875 4322.2188,226.4844 L4322.2188,229.2031 Q4321.5938,228.625 4321,228.3594 Q4320.4063,228.0781 4319.7813,228.0781 Q4318.4375,228.0781 4317.75,229.1563 Q4317.0625,230.2188 4317.0625,232.3125 Q4317.0625,234.4063 4317.75,235.4844 Q4318.4375,236.5469 4319.7813,236.5469 Q4320.4063,236.5469 4321,236.2813 Q4321.5938,236 4322.2188,235.4219 L4322.2188,238.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="4339.75" y="237.3467">ParkJun</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="4703.5" y="213.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="4704.5" y="225.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="4000.5" x2="4709.5" y1="248.5" y2="248.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4007.5" y="259.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="4019.5" y="265.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="4000.5" x2="4709.5" y1="272.7969" y2="272.7969"/><ellipse cx="4010.5" cy="286.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="4019.5" y="289.792">chooseInitialMeans(Relation&lt;? extends NumberVector&gt;, int, NumberVectorDistance&lt;?&gt;): double[]</text><ellipse cx="4010.5" cy="302.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="4019.5" y="306.0889">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text></g></a><!--MD5=[e1488402a8eb1cd0ebdbcecfeaba2a24]
class elki.clustering.kmedoids.initialization.GreedyG--><a href="GreedyG.html" target="_top" title="GreedyG.html" xlink:actuate="onRequest" xlink:href="GreedyG.html" xlink:show="new" xlink:title="GreedyG.html" xlink:type="simple"><g id="elem_elki.clustering.kmedoids.initialization.GreedyG"><rect codeLine="72" fill="#F1F1F1" height="96.8906" id="elki.clustering.kmedoids.initialization.GreedyG" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1091" x="845.5" y="216.5"/><ellipse cx="1350.25" cy="232.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1353.2188,238.1406 Q1352.6406,238.4375 1352,238.5781 Q1351.3594,238.7344 1350.6563,238.7344 Q1348.1563,238.7344 1346.8281,237.0938 Q1345.5156,235.4375 1345.5156,232.3125 Q1345.5156,229.1875 1346.8281,227.5313 Q1348.1563,225.875 1350.6563,225.875 Q1351.3594,225.875 1352,226.0313 Q1352.6563,226.1875 1353.2188,226.4844 L1353.2188,229.2031 Q1352.5938,228.625 1352,228.3594 Q1351.4063,228.0781 1350.7813,228.0781 Q1349.4375,228.0781 1348.75,229.1563 Q1348.0625,230.2188 1348.0625,232.3125 Q1348.0625,234.4063 1348.75,235.4844 Q1349.4375,236.5469 1350.7813,236.5469 Q1351.4063,236.5469 1352,236.2813 Q1352.5938,236 1353.2188,235.4219 L1353.2188,238.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1370.75" y="237.3467">GreedyG</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="1929.5" y="213.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="1930.5" y="225.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="846.5" x2="1935.5" y1="248.5" y2="248.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="853.5" y="259.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="865.5" y="265.4951">LOG: Logging</text><line style="stroke:#181818;stroke-width:0.5;" x1="846.5" x2="1935.5" y1="272.7969" y2="272.7969"/><ellipse cx="856.5" cy="286.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="865.5" y="289.792">chooseInitialMedoids(int, DBIDs, DistanceQuery&lt;? super O&gt;): DBIDs</text><ellipse cx="856.5" cy="302.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1065" x="865.5" y="306.0889">findMedoid(DBIDs, DistanceQuery&lt;?&gt;, int, DBIDArrayMIter, double, WritableDoubleDataStore, WritableDoubleDataStore, WritableDoubleDataStore): double</text></g></a><!--MD5=[8478ceb8b0debaf9b4af355048dc8d2c]
class elki.clustering.kmeans.initialization.KMeansInitialization--><a href="../../kmeans/initialization/KMeansInitialization.html" target="_top" title="../../kmeans/initialization/KMeansInitialization.html" xlink:actuate="onRequest" xlink:href="../../kmeans/initialization/KMeansInitialization.html" xlink:show="new" xlink:title="../../kmeans/initialization/KMeansInitialization.html" xlink:type="simple"><g id="elem_elki.clustering.kmeans.initialization.KMeansInitialization"><rect codeLine="108" fill="#F1F1F1" height="64.2969" id="elki.clustering.kmeans.initialization.KMeansInitialization" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="727" x="4767.5" y="41"/><ellipse cx="5056.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5052.1719,52.7656 L5052.1719,50.6094 L5059.5625,50.6094 L5059.5625,52.7656 L5057.0938,52.7656 L5057.0938,60.8438 L5059.5625,60.8438 L5059.5625,63 L5052.1719,63 L5052.1719,60.8438 L5054.6406,60.8438 L5054.6406,52.7656 L5052.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="141" x="5076.75" y="61.8467">KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="4768.5" x2="5493.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="4768.5" x2="5493.5" y1="81" y2="81"/><ellipse cx="4778.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="701" x="4787.5" y="97.9951">chooseInitialMeans(Relation&lt;? extends NumberVector&gt;, int, NumberVectorDistance&lt;?&gt;): double[]</text></g></a><!--MD5=[2d87ce62ad011e45b4b54b35aa2c4dd8]
reverse link elki.clustering.kmeans.initialization.KMeansInitialization to elki.clustering.kmedoids.initialization.BUILD--><g id="link_elki.clustering.kmeans.initialization.KMeansInitialization_elki.clustering.kmedoids.initialization.BUILD"><path codeLine="82" d="M4917.43,107.82 C4856.1,116.24 4789.04,124.22 4727,129 C4535.53,143.76 4486.94,130.96 4295,137 C3824.1,151.81 3703.29,123.95 3236,184 C3176.72,191.62 3112.87,203.81 3055.05,216.4 " fill="none" id="elki.clustering.kmeans.initialization.KMeansInitialization-backto-elki.clustering.kmedoids.initialization.BUILD" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4916.78,100.84,4937.56,105.01,4918.72,114.7,4916.78,100.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f5df134b6b02e9d07afc197aab6bd71]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.BUILD--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.BUILD"><path codeLine="83" d="M2346.19,110.81 C2447.83,140.94 2592.31,183.76 2702.68,216.48 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.BUILD" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2343.96,117.45,2326.77,105.06,2347.94,104.03,2343.96,117.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a502af6048424e6b03e7cc2d72fbd043]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization"><path codeLine="86" d="M2222,125.48 C2222,153.73 2222,188.53 2222,216.19 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2215,125.37,2222,105.37,2229,125.37,2215,125.37" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5e7fe2baefdac02b1718370e0404889c]
reverse link elki.clustering.kmeans.initialization.KMeansInitialization to elki.clustering.kmedoids.initialization.LAB--><g id="link_elki.clustering.kmeans.initialization.KMeansInitialization_elki.clustering.kmedoids.initialization.LAB"><path codeLine="89" d="M4901.64,107.72 C4844.66,115.41 4783.68,123.06 4727,129 C4396.8,163.63 4310.65,136.85 3982,184 C3976.26,184.82 3970.48,185.68 3964.67,186.58 " fill="none" id="elki.clustering.kmeans.initialization.KMeansInitialization-backto-elki.clustering.kmedoids.initialization.LAB" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4900.85,100.77,4921.61,105,4902.74,114.64,4900.85,100.77" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[00a8c6d63da698cab5c63ac10b3dcf6c]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.LAB--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.LAB"><path codeLine="90" d="M2495.77,95.99 C2700.41,114.29 2986.66,143.85 3236,184 C3241.72,184.92 3247.49,185.87 3253.29,186.85 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.LAB" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2494.9,102.94,2475.6,94.2,2496.14,88.99,2494.9,102.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0a7a88dfd4b6a8a603ae4414ea4c5a94]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.AlternateRefinement--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.AlternateRefinement"><path codeLine="93" d="M1948.32,84.31 C1666.31,97.57 1214.58,126.16 828,184 C811.43,186.48 794.5,189.16 777.43,191.98 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.AlternateRefinement" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1948.03,77.31,1968.33,83.38,1948.68,91.3,1948.03,77.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[578ccfd9c61574379a31164396af5c8a]
link elki.clustering.kmedoids.initialization.AlternateRefinement to elki.clustering.kmedoids.initialization.KMedoidsInitialization--><g id="link_elki.clustering.kmedoids.initialization.AlternateRefinement_elki.clustering.kmedoids.initialization.KMedoidsInitialization"><path codeLine="94" d="M774.01,191.96 C792.24,189.09 810.31,186.41 828,184 C937.05,169.16 1591.1,120.15 1963.3,92.82 " fill="none" id="elki.clustering.kmedoids.initialization.AlternateRefinement-to-elki.clustering.kmedoids.initialization.KMedoidsInitialization" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1968.49,92.44,1959.2177,89.1197,1963.5038,92.8115,1959.812,97.0976,1968.49,92.44" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="1347" y="150.0669">inner</text></g><!--MD5=[1fdebee3afec156e0abe0b6fe5d5a116]
reverse link elki.clustering.kmeans.initialization.KMeansInitialization to elki.clustering.kmedoids.initialization.ParkJun--><g id="link_elki.clustering.kmeans.initialization.KMeansInitialization_elki.clustering.kmedoids.initialization.ParkJun"><path codeLine="98" d="M4984.48,109.87 C4861.26,140.05 4684.09,183.42 4549.09,216.48 " fill="none" id="elki.clustering.kmeans.initialization.KMeansInitialization-backto-elki.clustering.kmedoids.initialization.ParkJun" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4983.07,103.01,5004.16,105.06,4986.4,116.61,4983.07,103.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2c258c448b7e0545b6cc0490eb3489d1]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.ParkJun--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.ParkJun"><path codeLine="99" d="M2495.82,78.51 C2843.03,87.11 3459.44,112.04 3982,184 C4040.23,192.02 4102.91,204.09 4159.97,216.45 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.ParkJun" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2495.47,85.5,2475.65,78.02,2495.81,71.51,2495.47,85.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a27ffc9111a5feb9e7d1d01dfac037a3]
reverse link elki.clustering.kmedoids.initialization.KMedoidsInitialization to elki.clustering.kmedoids.initialization.GreedyG--><g id="link_elki.clustering.kmedoids.initialization.KMedoidsInitialization_elki.clustering.kmedoids.initialization.GreedyG"><path codeLine="102" d="M2066.32,109.6 C1934.31,139.78 1743.86,183.32 1598.84,216.48 " fill="none" id="elki.clustering.kmedoids.initialization.KMedoidsInitialization-backto-elki.clustering.kmedoids.initialization.GreedyG" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2065.12,102.69,2086.17,105.06,2068.24,116.34,2065.12,102.69" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="2659" y="368"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="2659" y="377.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[3ff310de34fe2e13ede57c538d1f5e61]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.kmedoids.initialization {

        class BUILD<O> [[BUILD.html]] {
            {static} -LOG: Logging
            +chooseInitialMeans(Relation<? extends NumberVector>, int, NumberVectorDistance<?>): double[]
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
        }

        class elki.clustering.kmedoids.initialization.BUILD.Par<V> [[BUILD.Par.html]] {
            +make(): BUILD<V>
        }

        class KMedoidsKMedoidsInitialization<O> [[KMedoidsKMedoidsInitialization.html]] {
            -inner: KMedoidsClustering<O>
            +KMedoidsKMedoidsInitialization(KMedoidsClustering<O>)
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
        }

        class elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization.Par<O> [[KMedoidsKMedoidsInitialization.Par.html]] {
            {static} +INNER_ID: OptionID
            -inner: KMedoidsClustering<O>
            +configure(Parameterization): void
            +make(): KMedoidsKMedoidsInitialization<O>
        }

        class LAB<O> [[LAB.html]] {
            {static} -LOG: Logging
            -rnd: RandomFactory
            +LAB(RandomFactory)
            +chooseInitialMeans(Relation<? extends NumberVector>, int, NumberVectorDistance<?>): double[]
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
            {static} #getMinDist(DBIDArrayIter, DistanceQuery<?>, DBIDArrayIter, WritableDoubleDataStore): double
            {static} -shuffle(ArrayModifiableDBIDs, int, int, Random): void
        }

        class elki.clustering.kmedoids.initialization.LAB.Par<V> [[LAB.Par.html]] {
            +make(): LAB<V>
        }

        interface KMedoidsInitialization<O> [[KMedoidsInitialization.html]] {
            {abstract} +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
        }

        class AlternateRefinement<O> [[AlternateRefinement.html]] {
            {static} -LOG: Logging
            ~maxiter: int
            +AlternateRefinement(KMedoidsInitialization<O>, int)
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
            {static} +findMedoid(DBIDs, DistanceQuery<?>, IntegerDataStore, int, DBIDArrayMIter, double[]): boolean
            {static} +assignToNearestCluster(DBIDArrayIter, DBIDs, DistanceQuery<?>, WritableIntegerDataStore, double[]): double
        }

        class elki.clustering.kmedoids.initialization.AlternateRefinement.Par<O> [[AlternateRefinement.Par.html]] {
            {static} +INIT_P: OptionID
            {static} +MAXITER_P: OptionID
            ~maxiter: int
            +configure(Parameterization): void
            +make(): AlternateRefinement<O>
        }

        class ParkJun<O> [[ParkJun.html]] {
            {static} -LOG: Logging
            +chooseInitialMeans(Relation<? extends NumberVector>, int, NumberVectorDistance<?>): double[]
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
        }

        class elki.clustering.kmedoids.initialization.ParkJun.Par<V> [[ParkJun.Par.html]] {
            +make(): ParkJun<V>
        }

        class GreedyG<O> [[GreedyG.html]] {
            {static} -LOG: Logging
            +chooseInitialMedoids(int, DBIDs, DistanceQuery<? super O>): DBIDs
            {static} +findMedoid(DBIDs, DistanceQuery<?>, int, DBIDArrayMIter, double, WritableDoubleDataStore, WritableDoubleDataStore, WritableDoubleDataStore): double
        }

        class elki.clustering.kmedoids.initialization.GreedyG.Par<V> [[GreedyG.Par.html]] {
            +make(): GreedyG<V>
        }

        elki.clustering.kmeans.initialization.KMeansInitialization <|.. BUILD
        KMedoidsInitialization <|.. BUILD
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.kmedoids.initialization.BUILD.Par
        BUILD +- - elki.clustering.kmedoids.initialization.BUILD.Par
        KMedoidsInitialization <|.. KMedoidsKMedoidsInitialization
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization.Par
        KMedoidsKMedoidsInitialization +- - elki.clustering.kmedoids.initialization.KMedoidsKMedoidsInitialization.Par
        elki.clustering.kmeans.initialization.KMeansInitialization <|.. LAB
        KMedoidsInitialization <|.. LAB
        elki.clustering.kmeans.initialization.AbstractKMeansInitialization.Par <|- - elki.clustering.kmedoids.initialization.LAB.Par
        LAB +- - elki.clustering.kmedoids.initialization.LAB.Par
        KMedoidsInitialization <|.. AlternateRefinement
        AlternateRefinement - -> KMedoidsInitialization: inner
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.kmedoids.initialization.AlternateRefinement.Par
        AlternateRefinement +- - elki.clustering.kmedoids.initialization.AlternateRefinement.Par
        elki.clustering.kmedoids.initialization.AlternateRefinement.Par - -> KMedoidsInitialization: inner
        elki.clustering.kmeans.initialization.KMeansInitialization <|.. ParkJun
        KMedoidsInitialization <|.. ParkJun
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.kmedoids.initialization.ParkJun.Par
        ParkJun +- - elki.clustering.kmedoids.initialization.ParkJun.Par
        KMedoidsInitialization <|.. GreedyG
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.kmedoids.initialization.GreedyG.Par
        GreedyG +- - elki.clustering.kmedoids.initialization.GreedyG.Par
    }

    namespace elki.clustering.kmeans.initialization {
        interface KMeansInitialization [[../../kmeans/initialization/KMeansInitialization.html]] {
            {abstract} +chooseInitialMeans(Relation<? extends NumberVector>, int, NumberVectorDistance<?>): double[]
        }
        abstract class elki.clustering.kmeans.initialization.AbstractKMeansInitialization.Par [[../../kmeans/initialization/AbstractKMeansInitialization.Par.html]] {
            #rnd: RandomFactory
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>