<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1343px" preserveAspectRatio="none" style="width:7171px;height:1343px;background:#FFFFFF;" version="1.1" viewBox="0 0 7171 1343" width="7171px" zoomAndPan="magnify"><defs/><g><!--MD5=[e9c82999d3b804af41741a017e145407]
cluster elki.clustering.subspace--><g id="cluster_elki.clustering.subspace"><path d="M587.5,415 L780.5,415 A3.75,3.75 0 0 1 783,417.5 L790,437.2969 L6951.5,437.2969 A2.5,2.5 0 0 1 6954,439.7969 L6954,1315.5 A2.5,2.5 0 0 1 6951.5,1318 L587.5,1318 A2.5,2.5 0 0 1 585,1315.5 L585,417.5 A2.5,2.5 0 0 1 587.5,415 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="585" x2="790" y1="437.2969" y2="437.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="192" x="589" y="429.9951">elki.clustering.subspace</text></g><!--MD5=[7db3c59d38ae5b37b484eb2df9368145]
cluster java.util--><g id="cluster_java.util"><path d="M371.5,6 L432.5,6 A3.75,3.75 0 0 1 435,8.5 L442,28.2969 L1078.5,28.2969 A2.5,2.5 0 0 1 1081,30.7969 L1081,379.5 A2.5,2.5 0 0 1 1078.5,382 L371.5,382 A2.5,2.5 0 0 1 369,379.5 L369,8.5 A2.5,2.5 0 0 1 371.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="369" x2="442" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="60" x="373" y="20.9951">java.util</text></g><!--MD5=[86c4175aefb1ea94e7c3aa9e82fb9145]
cluster elki.clustering.optics--><g id="cluster_elki.clustering.optics"><path d="M8.5,817 L173.5,817 A3.75,3.75 0 0 1 176,819.5 L183,839.2969 L558.5,839.2969 A2.5,2.5 0 0 1 561,841.7969 L561,929.5 A2.5,2.5 0 0 1 558.5,932 L8.5,932 A2.5,2.5 0 0 1 6,929.5 L6,819.5 A2.5,2.5 0 0 1 8.5,817 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="183" y1="839.2969" y2="839.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="164" x="10" y="831.9951">elki.clustering.optics</text></g><!--MD5=[e61fc6e48eb479b0c8c8935c477c23e0]
cluster elki.clustering.dbscan--><g id="cluster_elki.clustering.dbscan"><path d="M1343.5,112 L1517.5,112 A3.75,3.75 0 0 1 1520,114.5 L1527,134.2969 L1606.5,134.2969 A2.5,2.5 0 0 1 1609,136.7969 L1609,273.5 A2.5,2.5 0 0 1 1606.5,276 L1343.5,276 A2.5,2.5 0 0 1 1341,273.5 L1341,114.5 A2.5,2.5 0 0 1 1343.5,112 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1341" x2="1527" y1="134.2969" y2="134.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="173" x="1345" y="126.9951">elki.clustering.dbscan</text></g><!--MD5=[5a16a86ac2d7d394fc35a681d34e2667]
cluster elki.clustering--><g id="cluster_elki.clustering"><path d="M4757.5,120 L4869.5,120 A3.75,3.75 0 0 1 4872,122.5 L4879,142.2969 L5645.5,142.2969 A2.5,2.5 0 0 1 5648,144.7969 L5648,265.5 A2.5,2.5 0 0 1 5645.5,268 L4757.5,268 A2.5,2.5 0 0 1 4755,265.5 L4755,122.5 A2.5,2.5 0 0 1 4757.5,120 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4755" x2="4879" y1="142.2969" y2="142.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="111" x="4759" y="134.9951">elki.clustering</text></g><!--MD5=[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id="cluster_java.lang"><path d="M6980.5,817 L7050.5,817 A3.75,3.75 0 0 1 7053,819.5 L7060,839.2969 L7161.5,839.2969 A2.5,2.5 0 0 1 7164,841.7969 L7164,929.5 A2.5,2.5 0 0 1 7161.5,932 L6980.5,932 A2.5,2.5 0 0 1 6978,929.5 L6978,819.5 A2.5,2.5 0 0 1 6980.5,817 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6978" x2="7060" y1="839.2969" y2="839.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="6982" y="831.9951">java.lang</text></g><!--MD5=[d8a46e2d2904317245c471960227aed2]
class elki.clustering.subspace.DiSH--><a href="DiSH.html" target="_top" title="DiSH.html" xlink:actuate="onRequest" xlink:href="DiSH.html" xlink:show="new" xlink:title="DiSH.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.DiSH"><rect codeLine="4" fill="#F1F1F1" height="308.75" id="elki.clustering.subspace.DiSH" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1261" x="2463.5" y="729.5"/><ellipse cx="3073.25" cy="745.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3076.2188,751.1406 Q3075.6406,751.4375 3075,751.5781 Q3074.3594,751.7344 3073.6563,751.7344 Q3071.1563,751.7344 3069.8281,750.0938 Q3068.5156,748.4375 3068.5156,745.3125 Q3068.5156,742.1875 3069.8281,740.5313 Q3071.1563,738.875 3073.6563,738.875 Q3074.3594,738.875 3075,739.0313 Q3075.6563,739.1875 3076.2188,739.4844 L3076.2188,742.2031 Q3075.5938,741.625 3075,741.3594 Q3074.4063,741.0781 3073.7813,741.0781 Q3072.4375,741.0781 3071.75,742.1563 Q3071.0625,743.2188 3071.0625,745.3125 Q3071.0625,747.4063 3071.75,748.4844 Q3072.4375,749.5469 3073.7813,749.5469 Q3074.4063,749.5469 3075,749.2813 Q3075.5938,749 3076.2188,748.4219 L3076.2188,751.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="3093.75" y="750.3467">DiSH</text><line style="stroke:#181818;stroke-width:0.5;" x1="2464.5" x2="3723.5" y1="761.5" y2="761.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="772.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2483.5" y="778.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="788.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2483.5" y="794.792">epsilon: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="804.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="2483.5" y="811.0889">minpts: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2464.5" x2="3723.5" y1="818.3906" y2="818.3906"/><ellipse cx="2474.5" cy="832.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="2483.5" y="835.3857">DiSH(double, int, Strategy)</text><ellipse cx="2474.5" cy="848.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2483.5" y="851.6826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2474.5" cy="864.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="2483.5" y="867.9795">run(Relation&lt;? extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="877.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="723" x="2483.5" y="884.2764">computeClusters(Relation&lt;? extends NumberVector&gt;, DiSHClusterOrder): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="894.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="747" x="2483.5" y="900.5732">logClusterSizes(String, int, Object2ObjectOpenCustomHashMap&lt;long[], List&lt;ArrayModifiableDBIDs&gt;&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="910.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1023" x="2483.5" y="916.8701">extractClusters(Relation&lt;? extends NumberVector&gt;, DiSHClusterOrder): Object2ObjectOpenCustomHashMap&lt;long[], List&lt;ArrayModifiableDBIDs&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="926.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="986" x="2483.5" y="933.167">sortClusters(Relation&lt;? extends NumberVector&gt;, Object2ObjectMap&lt;long[], List&lt;ArrayModifiableDBIDs&gt;&gt;): List&lt;Cluster&lt;SubspaceModel&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="943.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="798" x="2483.5" y="949.4639">checkClusters(Relation&lt;? extends NumberVector&gt;, Object2ObjectMap&lt;long[], List&lt;ArrayModifiableDBIDs&gt;&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="959.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1235" x="2483.5" y="965.7607">findParent(Relation&lt;? extends NumberVector&gt;, Pair&lt;long[], ArrayModifiableDBIDs&gt;, Object2ObjectMap&lt;long[], List&lt;ArrayModifiableDBIDs&gt;&gt;): Pair&lt;long[], ArrayModifiableDBIDs&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="975.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="872" x="2483.5" y="982.0576">buildHierarchy(Relation&lt;? extends NumberVector&gt;, Clustering&lt;SubspaceModel&gt;, List&lt;Cluster&lt;SubspaceModel&gt;&gt;, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="992.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="823" x="2483.5" y="998.3545">isParent(Relation&lt;? extends NumberVector&gt;, Cluster&lt;SubspaceModel&gt;, It&lt;Cluster&lt;SubspaceModel&gt;&gt;, int): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2471.5" y="1008.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="556" x="2483.5" y="1014.6514">subspaceDimensionality(NumberVector, NumberVector, long[], long[], long[]): int</text><polygon fill="#FFFF44" points="2474.5,1022.6016,2478.5,1026.6016,2474.5,1030.6016,2470.5,1026.6016" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="448" x="2483.5" y="1030.9482">weightedDistance(NumberVector, NumberVector, long[]): double</text></g></a><!--MD5=[36daff610cfb729811593f06318acfd4]
class elki.clustering.subspace.DiSH.Strategy--><a href="DiSH.Strategy.html" target="_top" title="DiSH.Strategy.html" xlink:actuate="onRequest" xlink:href="DiSH.Strategy.html" xlink:show="new" xlink:title="DiSH.Strategy.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.DiSH.Strategy"><rect codeLine="23" fill="#F1F1F1" height="80.5938" id="elki.clustering.subspace.DiSH.Strategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="3009.5" y="1188.5"/><ellipse cx="3042.95" cy="1204.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3047.0594,1210.5 L3039.3406,1210.5 L3039.3406,1198.1094 L3047.0594,1198.1094 L3047.0594,1200.2656 L3041.7938,1200.2656 L3041.7938,1202.9375 L3046.5594,1202.9375 L3046.5594,1205.0938 L3041.7938,1205.0938 L3041.7938,1208.3438 L3047.0594,1208.3438 L3047.0594,1210.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3061.05" y="1209.3467">DiSH.Strategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="3010.5" x2="3175.5" y1="1220.5" y2="1220.5"/><ellipse cx="3020.5" cy="1234.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="55" x="3029.5" y="1237.4951">APRIORI</text><ellipse cx="3020.5" cy="1250.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="141" x="3029.5" y="1253.792">MAX_INTERSECTION</text><line style="stroke:#181818;stroke-width:0.5;" x1="3010.5" x2="3175.5" y1="1261.0938" y2="1261.0938"/></g></a><!--MD5=[1f01f0b02d37d4985cc81e669c863892]
class elki.clustering.subspace.DiSH.Instance.Sorter--><a href="DiSH.Instance.Sorter.html" target="_top" title="DiSH.Instance.Sorter.html" xlink:actuate="onRequest" xlink:href="DiSH.Instance.Sorter.html" xlink:show="new" xlink:title="DiSH.Instance.Sorter.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.DiSH.Instance.Sorter"><rect codeLine="53" fill="#F1F1F1" height="64.2969" id="elki.clustering.subspace.DiSH.Instance.Sorter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="247" x="601.5" y="507"/><ellipse cx="649.75" cy="523" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M652.7188,528.6406 Q652.1406,528.9375 651.5,529.0781 Q650.8594,529.2344 650.1563,529.2344 Q647.6563,529.2344 646.3281,527.5938 Q645.0156,525.9375 645.0156,522.8125 Q645.0156,519.6875 646.3281,518.0313 Q647.6563,516.375 650.1563,516.375 Q650.8594,516.375 651.5,516.5313 Q652.1563,516.6875 652.7188,516.9844 L652.7188,519.7031 Q652.0938,519.125 651.5,518.8594 Q650.9063,518.5781 650.2813,518.5781 Q648.9375,518.5781 648.25,519.6563 Q647.5625,520.7188 647.5625,522.8125 Q647.5625,524.9063 648.25,525.9844 Q648.9375,527.0469 650.2813,527.0469 Q650.9063,527.0469 651.5,526.7813 Q652.0938,526.5 652.7188,525.9219 L652.7188,528.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="670.25" y="527.8467">DiSH.Instance.Sorter</text><line style="stroke:#181818;stroke-width:0.5;" x1="602.5" x2="847.5" y1="539" y2="539"/><line style="stroke:#181818;stroke-width:0.5;" x1="602.5" x2="847.5" y1="547" y2="547"/><ellipse cx="612.5" cy="560.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="621.5" y="563.9951">compare(DBIDRef, DBIDRef): int</text></g></a><!--MD5=[5dc9c3d19125d1f45257dbb90d45c074]
class elki.clustering.subspace.DiSH.DiSHClusterOrder--><a href="DiSH.DiSHClusterOrder.html" target="_top" title="DiSH.DiSHClusterOrder.html" xlink:actuate="onRequest" xlink:href="DiSH.DiSHClusterOrder.html" xlink:show="new" xlink:title="DiSH.DiSHClusterOrder.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.DiSH.DiSHClusterOrder"><rect codeLine="57" fill="#F1F1F1" height="96.8906" id="elki.clustering.subspace.DiSH.DiSHClusterOrder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1029" x="1303.5" y="1180.5"/><ellipse cx="1734.75" cy="1196.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1737.7188,1202.1406 Q1737.1406,1202.4375 1736.5,1202.5781 Q1735.8594,1202.7344 1735.1563,1202.7344 Q1732.6563,1202.7344 1731.3281,1201.0938 Q1730.0156,1199.4375 1730.0156,1196.3125 Q1730.0156,1193.1875 1731.3281,1191.5313 Q1732.6563,1189.875 1735.1563,1189.875 Q1735.8594,1189.875 1736.5,1190.0313 Q1737.1563,1190.1875 1737.7188,1190.4844 L1737.7188,1193.2031 Q1737.0938,1192.625 1736.5,1192.3594 Q1735.9063,1192.0781 1735.2813,1192.0781 Q1733.9375,1192.0781 1733.25,1193.1563 Q1732.5625,1194.2188 1732.5625,1196.3125 Q1732.5625,1198.4063 1733.25,1199.4844 Q1733.9375,1200.5469 1735.2813,1200.5469 Q1735.9063,1200.5469 1736.5,1200.2813 Q1737.0938,1200 1737.7188,1199.4219 L1737.7188,1202.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="1755.25" y="1201.3467">DiSH.DiSHClusterOrder</text><line style="stroke:#181818;stroke-width:0.5;" x1="1304.5" x2="2331.5" y1="1212.5" y2="1212.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1311.5" y="1223.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="387" x="1323.5" y="1229.4951">commonPreferenceVectors: WritableDataStore&lt;long[]&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1304.5" x2="2331.5" y1="1236.7969" y2="1236.7969"/><ellipse cx="1314.5" cy="1250.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1003" x="1323.5" y="1253.792">DiSHClusterOrder(ArrayModifiableDBIDs, WritableDoubleDataStore, WritableDBIDDataStore, WritableIntegerDataStore, WritableDataStore&lt;long[]&gt;)</text><ellipse cx="1314.5" cy="1266.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="1323.5" y="1270.0889">getCommonPreferenceVector(DBIDRef): long[]</text></g></a><!--MD5=[19c018060261987a85b17eb38c687989]
class elki.clustering.subspace.P3C--><a href="P3C.html" target="_top" title="P3C.html" xlink:actuate="onRequest" xlink:href="P3C.html" xlink:show="new" xlink:title="P3C.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.P3C"><rect codeLine="75" fill="#F1F1F1" height="373.9375" id="elki.clustering.subspace.P3C" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1264" x="3760" y="697"/><ellipse cx="4373.75" cy="713" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4376.7188,718.6406 Q4376.1406,718.9375 4375.5,719.0781 Q4374.8594,719.2344 4374.1563,719.2344 Q4371.6563,719.2344 4370.3281,717.5938 Q4369.0156,715.9375 4369.0156,712.8125 Q4369.0156,709.6875 4370.3281,708.0313 Q4371.6563,706.375 4374.1563,706.375 Q4374.8594,706.375 4375.5,706.5313 Q4376.1563,706.6875 4376.7188,706.9844 L4376.7188,709.7031 Q4376.0938,709.125 4375.5,708.8594 Q4374.9063,708.5781 4374.2813,708.5781 Q4372.9375,708.5781 4372.25,709.6563 Q4371.5625,710.7188 4371.5625,712.8125 Q4371.5625,714.9063 4372.25,715.9844 Q4372.9375,717.0469 4374.2813,717.0469 Q4374.9063,717.0469 4375.5,716.7813 Q4376.0938,716.5 4376.7188,715.9219 L4376.7188,718.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="4394.25" y="717.8467">P3C</text><line style="stroke:#181818;stroke-width:0.5;" x1="3761" x2="5023" y1="729" y2="729"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="739.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3780" y="745.9951">LOG: Logging</text><polygon fill="none" points="3771,753.9453,3775,757.9453,3771,761.9453,3767,757.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="3780" y="762.292">poissonThreshold: double</text><polygon fill="none" points="3771,770.2422,3775,774.2422,3771,778.2422,3767,774.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="3780" y="778.5889">maxEmIterations: int</text><polygon fill="none" points="3771,786.5391,3775,790.5391,3771,794.5391,3767,790.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="3780" y="794.8857">emDelta: double</text><polygon fill="none" points="3771,802.8359,3775,806.8359,3771,810.8359,3767,806.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="3780" y="811.1826">minClusterSize: int</text><polygon fill="none" points="3771,819.1328,3775,823.1328,3771,827.1328,3767,823.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3780" y="827.4795">alpha: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="3761" x2="5023" y1="834.7813" y2="834.7813"/><ellipse cx="3771" cy="848.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="3780" y="851.7764">P3C(double, double, int, double, int)</text><ellipse cx="3771" cy="864.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="3780" y="868.0732">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="3771" cy="881.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="3780" y="884.3701">run(Relation&lt;? extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="894.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="459" x="3780" y="900.667">constructOneSignatures(SetDBIDs[], long[]): ArrayList&lt;Signature&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="910.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="473" x="3780" y="916.9639">mergeClusterCores(int, ArrayList&lt;Signature&gt;): ArrayList&lt;Signature&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="926.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="521" x="3780" y="933.2607">pruneRedundantClusterCores(ArrayList&lt;Signature&gt;): ArrayList&lt;Signature&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="943.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="459" x="3780" y="949.5576">partitionData(Relation&lt;? extends NumberVector&gt;, int): SetDBIDs[]</text><polygon fill="#FFFF44" points="3771,957.5078,3775,961.5078,3771,965.5078,3767,961.5078" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="3780" y="965.8545">unionDBIDs(DBIDs[], int, int): HashSetModifiableDBIDs</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="975.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="347" x="3780" y="982.1514">chiSquaredUniformTest(SetDBIDs[], long[], int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="992.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1238" x="3780" y="998.4482">computeFuzzyMembership(Relation&lt;? extends NumberVector&gt;, ArrayList&lt;Signature&gt;, ModifiableDBIDs, WritableDataStore&lt;double[]&gt;, List&lt;MultivariateGaussianModel&gt;, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="1008.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="997" x="3780" y="1014.7451">assignUnassigned(Relation&lt;? extends NumberVector&gt;, WritableDataStore&lt;double[]&gt;, List&lt;MultivariateGaussianModel&gt;, ModifiableDBIDs): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="1024.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="3780" y="1031.042">hardClustering(WritableDataStore&lt;double[]&gt;, List&lt;Signature&gt;, DBIDs): ArrayList&lt;ClusterCandidate&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3768" y="1040.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="942" x="3780" y="1047.3389">findOutliers(Relation&lt;? extends NumberVector&gt;, List&lt;MultivariateGaussianModel&gt;, ArrayList&lt;ClusterCandidate&gt;, ModifiableDBIDs): void</text><polygon fill="#FFFF44" points="3771,1055.2891,3775,1059.2891,3771,1063.2891,3767,1059.2891" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="3780" y="1063.6357">mergeSignatures(Signature, Signature, int): Signature</text></g></a><!--MD5=[367d7b27ce9de1e6ffd78abbdc126a2c]
class elki.clustering.subspace.P3C.Signature--><a href="P3C.Signature.html" target="_top" title="P3C.Signature.html" xlink:actuate="onRequest" xlink:href="P3C.Signature.html" xlink:show="new" xlink:title="P3C.Signature.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.P3C.Signature"><rect codeLine="98" fill="#F1F1F1" height="145.7813" id="elki.clustering.subspace.P3C.Signature" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="241" x="4138.5" y="1156"/><ellipse cx="4205.75" cy="1172" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4208.7188,1177.6406 Q4208.1406,1177.9375 4207.5,1178.0781 Q4206.8594,1178.2344 4206.1563,1178.2344 Q4203.6563,1178.2344 4202.3281,1176.5938 Q4201.0156,1174.9375 4201.0156,1171.8125 Q4201.0156,1168.6875 4202.3281,1167.0313 Q4203.6563,1165.375 4206.1563,1165.375 Q4206.8594,1165.375 4207.5,1165.5313 Q4208.1563,1165.6875 4208.7188,1165.9844 L4208.7188,1168.7031 Q4208.0938,1168.125 4207.5,1167.8594 Q4206.9063,1167.5781 4206.2813,1167.5781 Q4204.9375,1167.5781 4204.25,1168.6563 Q4203.5625,1169.7188 4203.5625,1171.8125 Q4203.5625,1173.9063 4204.25,1174.9844 Q4204.9375,1176.0469 4206.2813,1176.0469 Q4206.9063,1176.0469 4207.5,1175.7813 Q4208.0938,1175.5 4208.7188,1174.9219 L4208.7188,1177.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="4226.25" y="1176.8467">P3C.Signature</text><line style="stroke:#181818;stroke-width:0.5;" x1="4139.5" x2="4378.5" y1="1188" y2="1188"/><polygon fill="none" points="4149.5,1197.6484,4145.5,1203.6484,4153.5,1203.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="4158.5" y="1204.9951">spec: int[]</text><polygon fill="none" points="4149.5,1213.9453,4145.5,1219.9453,4153.5,1219.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="4158.5" y="1221.292">ids: DBIDs</text><polygon fill="none" points="4149.5,1230.2422,4145.5,1236.2422,4153.5,1236.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4158.5" y="1237.5889">prune: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="4139.5" x2="4378.5" y1="1244.8906" y2="1244.8906"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4146.5" y="1255.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="4158.5" y="1261.8857">Signature(int[], DBIDs)</text><ellipse cx="4149.5" cy="1274.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="4158.5" y="1278.1826">isSuperset(Signature): boolean</text><ellipse cx="4149.5" cy="1291.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="4158.5" y="1294.4795">getFirstDim(): int</text></g></a><!--MD5=[20e206bf8cdffdb53c500b783d585cbd]
class elki.clustering.subspace.P3C.ClusterCandidate--><a href="P3C.ClusterCandidate.html" target="_top" title="P3C.ClusterCandidate.html" xlink:actuate="onRequest" xlink:href="P3C.ClusterCandidate.html" xlink:show="new" xlink:title="P3C.ClusterCandidate.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.P3C.ClusterCandidate"><rect codeLine="107" fill="#F1F1F1" height="96.8906" id="elki.clustering.subspace.P3C.ClusterCandidate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="221" x="4414.5" y="1180.5"/><ellipse cx="4446.6" cy="1196.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4449.5688,1202.1406 Q4448.9906,1202.4375 4448.35,1202.5781 Q4447.7094,1202.7344 4447.0063,1202.7344 Q4444.5063,1202.7344 4443.1781,1201.0938 Q4441.8656,1199.4375 4441.8656,1196.3125 Q4441.8656,1193.1875 4443.1781,1191.5313 Q4444.5063,1189.875 4447.0063,1189.875 Q4447.7094,1189.875 4448.35,1190.0313 Q4449.0063,1190.1875 4449.5688,1190.4844 L4449.5688,1193.2031 Q4448.9438,1192.625 4448.35,1192.3594 Q4447.7563,1192.0781 4447.1313,1192.0781 Q4445.7875,1192.0781 4445.1,1193.1563 Q4444.4125,1194.2188 4444.4125,1196.3125 Q4444.4125,1198.4063 4445.1,1199.4844 Q4445.7875,1200.5469 4447.1313,1200.5469 Q4447.7563,1200.5469 4448.35,1200.2813 Q4448.9438,1200 4449.5688,1199.4219 L4449.5688,1202.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="4464.4" y="1201.3467">P3C.ClusterCandidate</text><line style="stroke:#181818;stroke-width:0.5;" x1="4415.5" x2="4634.5" y1="1212.5" y2="1212.5"/><ellipse cx="4425.5" cy="1226.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4434.5" y="1229.4951">dimensions: long[]</text><ellipse cx="4425.5" cy="1242.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="4434.5" y="1245.792">ids: ModifiableDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="4415.5" x2="4634.5" y1="1253.0938" y2="1253.0938"/><ellipse cx="4425.5" cy="1266.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="4434.5" y="1270.0889">ClusterCandidate(Signature)</text></g></a><!--MD5=[602ddcd3f239076c509782392b29b7d0]
class elki.clustering.subspace.PreDeCon--><a href="PreDeCon.html" target="_top" title="PreDeCon.html" xlink:actuate="onRequest" xlink:href="PreDeCon.html" xlink:show="new" xlink:title="PreDeCon.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.PreDeCon"><rect codeLine="128" fill="#F1F1F1" height="64.2969" id="elki.clustering.subspace.PreDeCon" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="1393" y="507"/><ellipse cx="1435.45" cy="523" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1438.4188,528.6406 Q1437.8406,528.9375 1437.2,529.0781 Q1436.5594,529.2344 1435.8563,529.2344 Q1433.3563,529.2344 1432.0281,527.5938 Q1430.7156,525.9375 1430.7156,522.8125 Q1430.7156,519.6875 1432.0281,518.0313 Q1433.3563,516.375 1435.8563,516.375 Q1436.5594,516.375 1437.2,516.5313 Q1437.8563,516.6875 1438.4188,516.9844 L1438.4188,519.7031 Q1437.7938,519.125 1437.2,518.8594 Q1436.6063,518.5781 1435.9813,518.5781 Q1434.6375,518.5781 1433.95,519.6563 Q1433.2625,520.7188 1433.2625,522.8125 Q1433.2625,524.9063 1433.95,525.9844 Q1434.6375,527.0469 1435.9813,527.0469 Q1436.6063,527.0469 1437.2,526.7813 Q1437.7938,526.5 1438.4188,525.9219 L1438.4188,528.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1455.55" y="527.8467">PreDeCon</text><line style="stroke:#181818;stroke-width:0.5;" x1="1394" x2="1556" y1="539" y2="539"/><line style="stroke:#181818;stroke-width:0.5;" x1="1394" x2="1556" y1="547" y2="547"/><ellipse cx="1404" cy="560.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1413" y="563.9951">PreDeCon(Settings)</text></g></a><!--MD5=[c76d04c5837a6d19d998a2c3f4037e18]
class elki.clustering.subspace.PreDeCon.Settings--><a href="PreDeCon.Settings.html" target="_top" title="PreDeCon.Settings.html" xlink:actuate="onRequest" xlink:href="PreDeCon.Settings.html" xlink:show="new" xlink:title="PreDeCon.Settings.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.PreDeCon.Settings"><rect codeLine="132" fill="#F1F1F1" height="129.4844" id="elki.clustering.subspace.PreDeCon.Settings" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="601" y="819.5"/><ellipse cx="616" cy="835.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M618.9688,841.1406 Q618.3906,841.4375 617.75,841.5781 Q617.1094,841.7344 616.4063,841.7344 Q613.9063,841.7344 612.5781,840.0938 Q611.2656,838.4375 611.2656,835.3125 Q611.2656,832.1875 612.5781,830.5313 Q613.9063,828.875 616.4063,828.875 Q617.1094,828.875 617.75,829.0313 Q618.4063,829.1875 618.9688,829.4844 L618.9688,832.2031 Q618.3438,831.625 617.75,831.3594 Q617.1563,831.0781 616.5313,831.0781 Q615.1875,831.0781 614.5,832.1563 Q613.8125,833.2188 613.8125,835.3125 Q613.8125,837.4063 614.5,838.4844 Q615.1875,839.5469 616.5313,839.5469 Q617.1563,839.5469 617.75,839.2813 Q618.3438,839 618.9688,838.4219 L618.9688,841.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="630" y="840.3467">PreDeCon.Settings</text><line style="stroke:#181818;stroke-width:0.5;" x1="602" x2="764" y1="851.5" y2="851.5"/><ellipse cx="612" cy="865.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="621" y="868.4951">epsilon: double</text><ellipse cx="612" cy="881.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="621" y="884.792">delta: double</text><ellipse cx="612" cy="897.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="621" y="901.0889">kappa: double</text><ellipse cx="612" cy="914.0391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="621" y="917.3857">minpts: int</text><ellipse cx="612" cy="930.3359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="621" y="933.6826">lambda: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="602" x2="764" y1="940.9844" y2="940.9844"/></g></a><!--MD5=[54ef629a61d1a6b06e80da5b33060846]
class elki.clustering.subspace.HiSC--><a href="HiSC.html" target="_top" title="HiSC.html" xlink:actuate="onRequest" xlink:href="HiSC.html" xlink:show="new" xlink:title="HiSC.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.HiSC"><rect codeLine="159" fill="#F1F1F1" height="178.375" id="elki.clustering.subspace.HiSC" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="474" x="884" y="450"/><ellipse cx="1100.75" cy="466" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1103.7188,471.6406 Q1103.1406,471.9375 1102.5,472.0781 Q1101.8594,472.2344 1101.1563,472.2344 Q1098.6563,472.2344 1097.3281,470.5938 Q1096.0156,468.9375 1096.0156,465.8125 Q1096.0156,462.6875 1097.3281,461.0313 Q1098.6563,459.375 1101.1563,459.375 Q1101.8594,459.375 1102.5,459.5313 Q1103.1563,459.6875 1103.7188,459.9844 L1103.7188,462.7031 Q1103.0938,462.125 1102.5,461.8594 Q1101.9063,461.5781 1101.2813,461.5781 Q1099.9375,461.5781 1099.25,462.6563 Q1098.5625,463.7188 1098.5625,465.8125 Q1098.5625,467.9063 1099.25,468.9844 Q1099.9375,470.0469 1101.2813,470.0469 Q1101.9063,470.0469 1102.5,469.7813 Q1103.0938,469.5 1103.7188,468.9219 L1103.7188,471.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1121.25" y="470.8467">HiSC</text><line style="stroke:#181818;stroke-width:0.5;" x1="885" x2="1357" y1="482" y2="482"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="892" y="492.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="904" y="498.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="892" y="508.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="904" y="515.292">alpha: double</text><polygon fill="none" points="895,523.2422,899,527.2422,895,531.2422,891,527.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="904" y="531.5889">k: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="885" x2="1357" y1="538.8906" y2="538.8906"/><ellipse cx="895" cy="552.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="904" y="555.8857">HiSC(double, int)</text><ellipse cx="895" cy="568.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="904" y="572.1826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="895" cy="585.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="904" y="588.4795">run(Relation&lt;? extends NumberVector&gt;): ClusterOrder</text><ellipse cx="895" cy="601.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="904" y="604.7764">weightedDistance(NumberVector, NumberVector, long[]): double</text><ellipse cx="895" cy="617.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="904" y="621.0732">getMinPts(): int</text></g></a><!--MD5=[74ff4a2390377e0f7e51bf95e16e424b]
class elki.clustering.subspace.FastDOC--><a href="FastDOC.html" target="_top" title="FastDOC.html" xlink:actuate="onRequest" xlink:href="FastDOC.html" xlink:show="new" xlink:title="FastDOC.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.FastDOC"><rect codeLine="197" fill="#F1F1F1" height="113.1875" id="elki.clustering.subspace.FastDOC" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="814" x="5059" y="1172.5"/><ellipse cx="5431.25" cy="1188.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5434.2188,1194.1406 Q5433.6406,1194.4375 5433,1194.5781 Q5432.3594,1194.7344 5431.6563,1194.7344 Q5429.1563,1194.7344 5427.8281,1193.0938 Q5426.5156,1191.4375 5426.5156,1188.3125 Q5426.5156,1185.1875 5427.8281,1183.5313 Q5429.1563,1181.875 5431.6563,1181.875 Q5432.3594,1181.875 5433,1182.0313 Q5433.6563,1182.1875 5434.2188,1182.4844 L5434.2188,1185.2031 Q5433.5938,1184.625 5433,1184.3594 Q5432.4063,1184.0781 5431.7813,1184.0781 Q5430.4375,1184.0781 5429.75,1185.1563 Q5429.0625,1186.2188 5429.0625,1188.3125 Q5429.0625,1190.4063 5429.75,1191.4844 Q5430.4375,1192.5469 5431.7813,1192.5469 Q5432.4063,1192.5469 5433,1192.2813 Q5433.5938,1192 5434.2188,1191.4219 L5434.2188,1194.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="5451.75" y="1193.3467">FastDOC</text><line style="stroke:#181818;stroke-width:0.5;" x1="5060" x2="5872" y1="1204.5" y2="1204.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5067" y="1215.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="5079" y="1221.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5067" y="1231.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="5079" y="1237.792">d_zero: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="5060" x2="5872" y1="1245.0938" y2="1245.0938"/><ellipse cx="5070" cy="1258.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="5079" y="1262.0889">FastDOC(double, double, double, int, RandomFactory)</text><polygon fill="#FFFF44" points="5070,1270.0391,5074,1274.0391,5070,1278.0391,5066,1274.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="788" x="5079" y="1278.3857">runDOC(Relation&lt;? extends NumberVector&gt;, ArrayModifiableDBIDs, int, int, int, int, int): Cluster&lt;SubspaceModel&gt;</text></g></a><!--MD5=[242809516fbc5e876670a00cf92ef2ff]
class elki.clustering.subspace.SubspaceClusteringAlgorithm--><a href="SubspaceClusteringAlgorithm.html" target="_top" title="SubspaceClusteringAlgorithm.html" xlink:actuate="onRequest" xlink:href="SubspaceClusteringAlgorithm.html" xlink:show="new" xlink:title="SubspaceClusteringAlgorithm.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.SubspaceClusteringAlgorithm"><rect codeLine="211" fill="#F1F1F1" height="48" id="elki.clustering.subspace.SubspaceClusteringAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="404" x="4190" y="515"/><ellipse cx="4205" cy="531" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4200.9219,526.7656 L4200.9219,524.6094 L4208.3125,524.6094 L4208.3125,526.7656 L4205.8438,526.7656 L4205.8438,534.8438 L4208.3125,534.8438 L4208.3125,537 L4200.9219,537 L4200.9219,534.8438 L4203.3906,534.8438 L4203.3906,526.7656 L4200.9219,526.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="209" x="4219" y="535.8467">SubspaceClusteringAlgorithm</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="161" x="4436" y="512"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="159" x="4437" y="524.1387">M extends SubspaceModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="4191" x2="4593" y1="547" y2="547"/><line style="stroke:#181818;stroke-width:0.5;" x1="4191" x2="4593" y1="555" y2="555"/></g></a><!--MD5=[73e98d47fb3c149319018d64ff9fc0ac]
class elki.clustering.subspace.PROCLUS--><a href="PROCLUS.html" target="_top" title="PROCLUS.html" xlink:actuate="onRequest" xlink:href="PROCLUS.html" xlink:show="new" xlink:title="PROCLUS.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.PROCLUS"><rect codeLine="213" fill="#F1F1F1" height="390.2344" id="elki.clustering.subspace.PROCLUS" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1030" x="5908" y="689"/><ellipse cx="6385.75" cy="705" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6388.7188,710.6406 Q6388.1406,710.9375 6387.5,711.0781 Q6386.8594,711.2344 6386.1563,711.2344 Q6383.6563,711.2344 6382.3281,709.5938 Q6381.0156,707.9375 6381.0156,704.8125 Q6381.0156,701.6875 6382.3281,700.0313 Q6383.6563,698.375 6386.1563,698.375 Q6386.8594,698.375 6387.5,698.5313 Q6388.1563,698.6875 6388.7188,698.9844 L6388.7188,701.7031 Q6388.0938,701.125 6387.5,700.8594 Q6386.9063,700.5781 6386.2813,700.5781 Q6384.9375,700.5781 6384.25,701.6563 Q6383.5625,702.7188 6383.5625,704.8125 Q6383.5625,706.9063 6384.25,707.9844 Q6384.9375,709.0469 6386.2813,709.0469 Q6386.9063,709.0469 6387.5,708.7813 Q6388.0938,708.5 6388.7188,707.9219 L6388.7188,710.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="6406.25" y="709.8467">PROCLUS</text><line style="stroke:#181818;stroke-width:0.5;" x1="5909" x2="6937" y1="721" y2="721"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="731.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="5928" y="737.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="747.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="5928" y="754.292">m_i: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="764.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5928" y="770.5889">rnd: RandomFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="5909" x2="6937" y1="777.8906" y2="777.8906"/><ellipse cx="5919" cy="791.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="5928" y="794.8857">PROCLUS(int, int, int, int, RandomFactory)</text><ellipse cx="5919" cy="807.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="5928" y="811.1826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="5919" cy="824.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="500" x="5928" y="827.4795">run(Relation&lt;V extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="837.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="583" x="5928" y="843.7764">greedy(DistanceQuery&lt;? extends NumberVector&gt;, DBIDs, int, Random): ArrayDBIDs</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="853.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="5928" y="860.0732">initialSet(DBIDs, int, Random): ArrayDBIDs</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="870.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="438" x="5928" y="876.3701">computeM_current(DBIDs, DBIDs, DBIDs, Random): ArrayDBIDs</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="886.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="786" x="5928" y="892.667">getLocalities(DBIDs, DistanceQuery&lt;? extends NumberVector&gt;, RangeSearcher&lt;DBIDRef&gt;): DataStore&lt;DBIDs&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="902.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1004" x="5928" y="908.9639">findDimensions(ArrayDBIDs, Relation&lt;? extends NumberVector&gt;, DistanceQuery&lt;? extends NumberVector&gt;, RangeSearcher&lt;DBIDRef&gt;): long[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="918.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="783" x="5928" y="925.2607">findDimensions(ArrayList&lt;PROCLUSCluster&gt;, Relation&lt;? extends NumberVector&gt;): List&lt;Pair&lt;double[], long[]&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="935.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="5928" y="941.5576">computeZijs(double[], int): List&lt;DoubleIntInt&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="951.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="5928" y="957.8545">computeDimensionMap(List&lt;DoubleIntInt&gt;, int, int): long[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="967.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="687" x="5928" y="974.1514">assignPoints(ArrayDBIDs, long[], Relation&lt;? extends NumberVector&gt;): ArrayList&lt;PROCLUSCluster&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="984.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="751" x="5928" y="990.4482">finalAssignment(List&lt;Pair&lt;double[], long[]&gt;&gt;, Relation&lt;? extends NumberVector&gt;): List&lt;PROCLUSCluster&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="1000.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="532" x="5928" y="1006.7451">manhattanSegmentalDistance(NumberVector, NumberVector, long[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="1016.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="5928" y="1023.042">manhattanSegmentalDistance(NumberVector, double[], long[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="1032.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="5928" y="1039.3389">evaluateClusters(ArrayList&lt;PROCLUSCluster&gt;, long[], Relation&lt;? extends NumberVector&gt;): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="1049.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="5928" y="1055.6357">avgDistance(double[], DBIDs, Relation&lt;? extends NumberVector&gt;, int): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5916" y="1065.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516" x="5928" y="1071.9326">computeBadMedoids(ArrayDBIDs, ArrayList&lt;PROCLUSCluster&gt;, int): DBIDs</text></g></a><!--MD5=[f952c4068e744393c8e508c8fff49506]
class elki.clustering.subspace.PROCLUS.DoubleIntInt--><a href="PROCLUS.DoubleIntInt.html" target="_top" title="PROCLUS.DoubleIntInt.html" xlink:actuate="onRequest" xlink:href="PROCLUS.DoubleIntInt.html" xlink:show="new" xlink:title="PROCLUS.DoubleIntInt.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.PROCLUS.DoubleIntInt"><rect codeLine="237" fill="#F1F1F1" height="129.4844" id="elki.clustering.subspace.PROCLUS.DoubleIntInt" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="6679.5" y="1164.5"/><ellipse cx="6712.05" cy="1180.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6715.0188,1186.1406 Q6714.4406,1186.4375 6713.8,1186.5781 Q6713.1594,1186.7344 6712.4563,1186.7344 Q6709.9563,1186.7344 6708.6281,1185.0938 Q6707.3156,1183.4375 6707.3156,1180.3125 Q6707.3156,1177.1875 6708.6281,1175.5313 Q6709.9563,1173.875 6712.4563,1173.875 Q6713.1594,1173.875 6713.8,1174.0313 Q6714.4563,1174.1875 6715.0188,1174.4844 L6715.0188,1177.2031 Q6714.3938,1176.625 6713.8,1176.3594 Q6713.2063,1176.0781 6712.5813,1176.0781 Q6711.2375,1176.0781 6710.55,1177.1563 Q6709.8625,1178.2188 6709.8625,1180.3125 Q6709.8625,1182.4063 6710.55,1183.4844 Q6711.2375,1184.5469 6712.5813,1184.5469 Q6713.2063,1184.5469 6713.8,1184.2813 Q6714.3938,1184 6715.0188,1183.4219 L6715.0188,1186.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="6729.95" y="1185.3467">PROCLUS.DoubleIntInt</text><line style="stroke:#181818;stroke-width:0.5;" x1="6680.5" x2="6903.5" y1="1196.5" y2="1196.5"/><polygon fill="none" points="6690.5,1205.1484,6694.5,1209.1484,6690.5,1213.1484,6686.5,1209.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="6699.5" y="1213.4951">first: double</text><polygon fill="none" points="6690.5,1221.4453,6694.5,1225.4453,6690.5,1229.4453,6686.5,1225.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="6699.5" y="1229.792">dimi: int</text><polygon fill="none" points="6690.5,1237.7422,6694.5,1241.7422,6690.5,1245.7422,6686.5,1241.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="6699.5" y="1246.0889">dimj: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6680.5" x2="6903.5" y1="1253.3906" y2="1253.3906"/><ellipse cx="6690.5" cy="1267.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="6699.5" y="1270.3857">DoubleIntInt(double, int, int)</text><ellipse cx="6690.5" cy="1283.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="6699.5" y="1286.6826">compareTo(DoubleIntInt): int</text></g></a><!--MD5=[d72b145819e4acd22d5cbdc5946f7229]
class elki.clustering.subspace.PROCLUS.PROCLUSCluster--><a href="PROCLUS.PROCLUSCluster.html" target="_top" title="PROCLUS.PROCLUSCluster.html" xlink:actuate="onRequest" xlink:href="PROCLUS.PROCLUSCluster.html" xlink:show="new" xlink:title="PROCLUS.PROCLUSCluster.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.PROCLUS.PROCLUSCluster"><rect codeLine="245" fill="#F1F1F1" height="129.4844" id="elki.clustering.subspace.PROCLUS.PROCLUSCluster" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="377" x="6234.5" y="1164.5"/><ellipse cx="6326.25" cy="1180.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6329.2188,1186.1406 Q6328.6406,1186.4375 6328,1186.5781 Q6327.3594,1186.7344 6326.6563,1186.7344 Q6324.1563,1186.7344 6322.8281,1185.0938 Q6321.5156,1183.4375 6321.5156,1180.3125 Q6321.5156,1177.1875 6322.8281,1175.5313 Q6324.1563,1173.875 6326.6563,1173.875 Q6327.3594,1173.875 6328,1174.0313 Q6328.6563,1174.1875 6329.2188,1174.4844 L6329.2188,1177.2031 Q6328.5938,1176.625 6328,1176.3594 Q6327.4063,1176.0781 6326.7813,1176.0781 Q6325.4375,1176.0781 6324.75,1177.1563 Q6324.0625,1178.2188 6324.0625,1180.3125 Q6324.0625,1182.4063 6324.75,1183.4844 Q6325.4375,1184.5469 6326.7813,1184.5469 Q6327.4063,1184.5469 6328,1184.2813 Q6328.5938,1184 6329.2188,1183.4219 L6329.2188,1186.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="6346.75" y="1185.3467">PROCLUS.PROCLUSCluster</text><line style="stroke:#181818;stroke-width:0.5;" x1="6235.5" x2="6610.5" y1="1196.5" y2="1196.5"/><polygon fill="none" points="6245.5,1206.1484,6241.5,1212.1484,6249.5,1212.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="6254.5" y="1213.4951">objectIDs: ModifiableDBIDs</text><polygon fill="none" points="6245.5,1222.4453,6241.5,1228.4453,6249.5,1228.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="6254.5" y="1229.792">dimensions: long[]</text><polygon fill="none" points="6245.5,1238.7422,6241.5,1244.7422,6249.5,1244.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="6254.5" y="1246.0889">centroid: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="6235.5" x2="6610.5" y1="1253.3906" y2="1253.3906"/><ellipse cx="6245.5" cy="1267.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="6254.5" y="1270.3857">PROCLUSCluster(ModifiableDBIDs, long[], double[])</text><ellipse cx="6245.5" cy="1283.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="6254.5" y="1286.6826">getDimensions(): long[]</text></g></a><!--MD5=[84206823b8718bca416799a6283e8fdd]
class elki.clustering.subspace.DOC--><a href="DOC.html" target="_top" title="DOC.html" xlink:actuate="onRequest" xlink:href="DOC.html" xlink:show="new" xlink:title="DOC.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.DOC"><rect codeLine="262" fill="#F1F1F1" height="259.8594" id="elki.clustering.subspace.DOC" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="814" x="5059" y="754"/><ellipse cx="5445.75" cy="770" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5448.7188,775.6406 Q5448.1406,775.9375 5447.5,776.0781 Q5446.8594,776.2344 5446.1563,776.2344 Q5443.6563,776.2344 5442.3281,774.5938 Q5441.0156,772.9375 5441.0156,769.8125 Q5441.0156,766.6875 5442.3281,765.0313 Q5443.6563,763.375 5446.1563,763.375 Q5446.8594,763.375 5447.5,763.5313 Q5448.1563,763.6875 5448.7188,763.9844 L5448.7188,766.7031 Q5448.0938,766.125 5447.5,765.8594 Q5446.9063,765.5781 5446.2813,765.5781 Q5444.9375,765.5781 5444.25,766.6563 Q5443.5625,767.7188 5443.5625,769.8125 Q5443.5625,771.9063 5444.25,772.9844 Q5444.9375,774.0469 5446.2813,774.0469 Q5446.9063,774.0469 5447.5,773.7813 Q5448.0938,773.5 5448.7188,772.9219 L5448.7188,775.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="5466.25" y="774.8467">DOC</text><line style="stroke:#181818;stroke-width:0.5;" x1="5060" x2="5872" y1="786" y2="786"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5067" y="796.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="5079" y="802.9951">LOG: Logging</text><polygon fill="none" points="5070,810.9453,5074,814.9453,5070,818.9453,5066,814.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="5079" y="819.292">alpha: double</text><polygon fill="none" points="5070,827.2422,5074,831.2422,5070,835.2422,5066,831.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="5079" y="835.5889">beta: double</text><polygon fill="none" points="5070,843.5391,5074,847.5391,5070,851.5391,5066,847.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="5079" y="851.8857">w: double</text><polygon fill="none" points="5070,859.8359,5074,863.8359,5070,867.8359,5066,863.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5079" y="868.1826">rnd: RandomFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="5060" x2="5872" y1="875.4844" y2="875.4844"/><ellipse cx="5070" cy="889.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="5079" y="892.4795">DOC(double, double, double, RandomFactory)</text><ellipse cx="5070" cy="905.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="5079" y="908.7764">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="5070" cy="921.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="5079" y="925.0732">run(Relation&lt;? extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><polygon fill="#FFFF44" points="5070,933.0234,5074,937.0234,5070,941.0234,5066,937.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="788" x="5079" y="941.3701">runDOC(Relation&lt;? extends NumberVector&gt;, ArrayModifiableDBIDs, int, int, int, int, int): Cluster&lt;SubspaceModel&gt;</text><polygon fill="#FFFF44" points="5070,949.3203,5074,953.3203,5070,957.3203,5066,953.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="677" x="5079" y="957.667">findNeighbors(DBIDRef, long[], ArrayModifiableDBIDs, Relation&lt;? extends NumberVector&gt;): DBIDs</text><polygon fill="#FFFF44" points="5070,965.6172,5074,969.6172,5070,973.6172,5066,969.6172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="5079" y="973.9639">dimensionIsRelevant(int, Relation&lt;? extends NumberVector&gt;, DBIDs): boolean</text><polygon fill="#FFFF44" points="5070,981.9141,5074,985.9141,5070,989.9141,5066,985.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="5079" y="990.2607">makeCluster(Relation&lt;? extends NumberVector&gt;, DBIDs, long[]): Cluster&lt;SubspaceModel&gt;</text><polygon fill="#FFFF44" points="5070,998.2109,5074,1002.2109,5070,1006.2109,5066,1002.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="5079" y="1006.5576">computeClusterQuality(int, int): double</text></g></a><!--MD5=[c1da6822887b1d3ad0fffcdfc8004acd]
class elki.clustering.subspace.SUBCLU--><a href="SUBCLU.html" target="_top" title="SUBCLU.html" xlink:actuate="onRequest" xlink:href="SUBCLU.html" xlink:show="new" xlink:title="SUBCLU.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.SUBCLU"><rect codeLine="291" fill="#F1F1F1" height="243.5625" id="elki.clustering.subspace.SUBCLU" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="739" x="799.5" y="762"/><ellipse cx="1059.75" cy="778" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1062.7188,783.6406 Q1062.1406,783.9375 1061.5,784.0781 Q1060.8594,784.2344 1060.1563,784.2344 Q1057.6563,784.2344 1056.3281,782.5938 Q1055.0156,780.9375 1055.0156,777.8125 Q1055.0156,774.6875 1056.3281,773.0313 Q1057.6563,771.375 1060.1563,771.375 Q1060.8594,771.375 1061.5,771.5313 Q1062.1563,771.6875 1062.7188,771.9844 L1062.7188,774.7031 Q1062.0938,774.125 1061.5,773.8594 Q1060.9063,773.5781 1060.2813,773.5781 Q1058.9375,773.5781 1058.25,774.6563 Q1057.5625,775.7188 1057.5625,777.8125 Q1057.5625,779.9063 1058.25,780.9844 Q1058.9375,782.0469 1060.2813,782.0469 Q1060.9063,782.0469 1061.5,781.7813 Q1062.0938,781.5 1062.7188,780.9219 L1062.7188,783.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1080.25" y="782.8467">SUBCLU</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="1389.5" y="759"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="1390.5" y="771.1387">V extends NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="800.5" x2="1537.5" y1="794" y2="794"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="807.5" y="804.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="819.5" y="810.9951">LOG: Logging</text><polygon fill="none" points="810.5,818.9453,814.5,822.9453,810.5,826.9453,806.5,822.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="533" x="819.5" y="827.292">distance: DimensionSelectingSubspaceDistance&lt;V extends NumberVector&gt;</text><polygon fill="none" points="810.5,835.2422,814.5,839.2422,810.5,843.2422,806.5,839.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="819.5" y="843.5889">epsilon: double</text><polygon fill="none" points="810.5,851.5391,814.5,855.5391,810.5,859.5391,806.5,855.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="819.5" y="859.8857">minpts: int</text><polygon fill="none" points="810.5,867.8359,814.5,871.8359,810.5,875.8359,806.5,871.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="819.5" y="876.1826">mindim: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="800.5" x2="1537.5" y1="883.4844" y2="883.4844"/><ellipse cx="810.5" cy="897.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="637" x="819.5" y="900.4795">SUBCLU(DimensionSelectingSubspaceDistance&lt;V extends NumberVector&gt;, double, int, int)</text><ellipse cx="810.5" cy="913.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="819.5" y="916.7764">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="810.5" cy="929.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="500" x="819.5" y="933.0732">run(Relation&lt;V extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="807.5" y="943.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="644" x="819.5" y="949.3701">runDBSCAN(Relation&lt;V extends NumberVector&gt;, DBIDs, Subspace): List&lt;Cluster&lt;Model&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="807.5" y="959.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="819.5" y="965.667">generateSubspaceCandidates(List&lt;Subspace&gt;): List&lt;Subspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="807.5" y="975.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="819.5" y="981.9639">checkLower(Subspace, List&lt;Subspace&gt;): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="807.5" y="991.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="713" x="819.5" y="998.2607">bestSubspace(List&lt;Subspace&gt;, Subspace, TreeMap&lt;Subspace, List&lt;Cluster&lt;Model&gt;&gt;&gt;): Subspace</text></g></a><!--MD5=[a5a904de4589b5b255f1081e87a962d7]
class elki.clustering.subspace.CLIQUE--><a href="CLIQUE.html" target="_top" title="CLIQUE.html" xlink:actuate="onRequest" xlink:href="CLIQUE.html" xlink:show="new" xlink:title="CLIQUE.html" xlink:type="simple"><g id="elem_elki.clustering.subspace.CLIQUE"><rect codeLine="319" fill="#F1F1F1" height="341.3438" id="elki.clustering.subspace.CLIQUE" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="854" x="1574" y="713.5"/><ellipse cx="1971.75" cy="729.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1974.7188,735.1406 Q1974.1406,735.4375 1973.5,735.5781 Q1972.8594,735.7344 1972.1563,735.7344 Q1969.6563,735.7344 1968.3281,734.0938 Q1967.0156,732.4375 1967.0156,729.3125 Q1967.0156,726.1875 1968.3281,724.5313 Q1969.6563,722.875 1972.1563,722.875 Q1972.8594,722.875 1973.5,723.0313 Q1974.1563,723.1875 1974.7188,723.4844 L1974.7188,726.2031 Q1974.0938,725.625 1973.5,725.3594 Q1972.9063,725.0781 1972.2813,725.0781 Q1970.9375,725.0781 1970.25,726.1563 Q1969.5625,727.2188 1969.5625,729.3125 Q1969.5625,731.4063 1970.25,732.4844 Q1970.9375,733.5469 1972.2813,733.5469 Q1972.9063,733.5469 1973.5,733.2813 Q1974.0938,733 1974.7188,732.4219 L1974.7188,735.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1992.25" y="734.3467">CLIQUE</text><line style="stroke:#181818;stroke-width:0.5;" x1="1575" x2="2427" y1="745.5" y2="745.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="756.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1594" y="762.4951">LOG: Logging</text><polygon fill="none" points="1585,770.4453,1589,774.4453,1585,778.4453,1581,774.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="1594" y="778.792">xsi: int</text><polygon fill="none" points="1585,786.7422,1589,790.7422,1585,794.7422,1581,790.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1594" y="795.0889">tau: double</text><polygon fill="none" points="1585,803.0391,1589,807.0391,1585,811.0391,1581,807.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1594" y="811.3857">prune: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1575" x2="2427" y1="818.6875" y2="818.6875"/><ellipse cx="1585" cy="832.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="1594" y="835.6826">CLIQUE(int, double, boolean)</text><ellipse cx="1585" cy="848.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="1594" y="851.9795">run(Relation&lt;? extends NumberVector&gt;): Clustering&lt;SubspaceModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="861.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="598" x="1594" y="868.2764">determineClusters(List&lt;CLIQUESubspace&gt;): List&lt;Pair&lt;Subspace, ModifiableDBIDs&gt;&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="878.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="1594" y="884.5732">findOneDimensionalDenseSubspaces(Relation&lt;? extends NumberVector&gt;): List&lt;CLIQUESubspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="894.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="758" x="1594" y="900.8701">findDenseSubspaces(Relation&lt;? extends NumberVector&gt;, List&lt;CLIQUESubspace&gt;): List&lt;CLIQUESubspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="910.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="608" x="1594" y="917.167">initOneDimensionalUnits(Relation&lt;? extends NumberVector&gt;): Collection&lt;CLIQUEUnit&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="927.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="1594" y="933.4639">updateMinMax(NumberVector, double[], double[]): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="943.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="768" x="1594" y="949.7607">findOneDimensionalDenseSubspaceCandidates(Relation&lt;? extends NumberVector&gt;): List&lt;CLIQUESubspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="959.7109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="828" x="1594" y="966.0576">findDenseSubspaceCandidates(Relation&lt;? extends NumberVector&gt;, List&lt;CLIQUESubspace&gt;): List&lt;CLIQUESubspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="976.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="515" x="1594" y="982.3545">pruneDenseSubspaces(List&lt;CLIQUESubspace&gt;): List&lt;CLIQUESubspace&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="992.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="1594" y="998.6514">computeMeans(List&lt;CLIQUESubspace&gt;): int[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="1008.6016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="1594" y="1014.9482">computeDiffs(List&lt;CLIQUESubspace&gt;, int[], int[]): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1582" y="1024.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="194" x="1594" y="1031.2451">log2OrZero(double): double</text><ellipse cx="1585" cy="1044.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1594" y="1047.542">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[ab8fa349a1e2e86ca8104897b03d4899]
class java.util.Comparator--><g id="elem_java.util.Comparator"><rect codeLine="423" fill="#F1F1F1" height="325.0469" id="java.util.Comparator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="681" x="384.5" y="41"/><ellipse cx="673.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M669.1719,52.7656 L669.1719,50.6094 L676.5625,50.6094 L676.5625,52.7656 L674.0938,52.7656 L674.0938,60.8438 L676.5625,60.8438 L676.5625,63 L669.1719,63 L669.1719,60.8438 L671.6406,60.8438 L671.6406,52.7656 L669.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="693.75" y="61.8467">Comparator</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="1059.5" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="1060.5" y="50.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="385.5" x2="1064.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="385.5" x2="1064.5" y1="81" y2="81"/><ellipse cx="395.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="404.5" y="97.9951">compare(T, T): int</text><ellipse cx="395.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="404.5" y="114.292">reversed(): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="404.5" y="130.5889">thenComparing(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="143.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="655" x="404.5" y="146.8857">thenComparing(Function&lt;? super T, ? extends U&gt;, Comparator&lt;? super U&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="159.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="639" x="404.5" y="163.1826">thenComparing(Function&lt;? super T, ? extends Comparable&lt;? super U&gt;&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="176.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="440" x="404.5" y="179.4795">thenComparingInt(ToIntFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="192.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="404.5" y="195.7764">thenComparingLong(ToLongFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="208.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="506" x="404.5" y="212.0732">thenComparingDouble(ToDoubleFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="225.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="459" x="404.5" y="228.3701">reverseOrder(): Comparator&lt;T extends Comparable&lt;? super T&gt;&gt;</text><ellipse cx="395.5" cy="241.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="454" x="404.5" y="244.667">naturalOrder(): Comparator&lt;T extends Comparable&lt;? super T&gt;&gt;</text><ellipse cx="395.5" cy="257.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="363" x="404.5" y="260.9639">nullsFirst(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="273.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="362" x="404.5" y="277.2607">nullsLast(Comparator&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="290.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="621" x="404.5" y="293.5576">comparing(Function&lt;? super T, ? extends U&gt;, Comparator&lt;? super U&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="306.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="605" x="404.5" y="309.8545">comparing(Function&lt;? super T, ? extends Comparable&lt;? super U&gt;&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="322.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="406" x="404.5" y="326.1514">comparingInt(ToIntFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="339.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="440" x="404.5" y="342.4482">comparingLong(ToLongFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text><ellipse cx="395.5" cy="355.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="472" x="404.5" y="358.7451">comparingDouble(ToDoubleFunction&lt;? super T&gt;): Comparator&lt;T&gt;</text></g><!--MD5=[656738dc916969870167297045146576]
class elki.clustering.optics.CorrelationClusterOrder--><a href="../optics/CorrelationClusterOrder.html" target="_top" title="../optics/CorrelationClusterOrder.html" xlink:actuate="onRequest" xlink:href="../optics/CorrelationClusterOrder.html" xlink:show="new" xlink:title="../optics/CorrelationClusterOrder.html" xlink:type="simple"><g id="elem_elki.clustering.optics.CorrelationClusterOrder"><rect codeLine="416" fill="#F1F1F1" height="64.2969" id="elki.clustering.optics.CorrelationClusterOrder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="225.5" y="852"/><ellipse cx="299.25" cy="868" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M302.2188,873.6406 Q301.6406,873.9375 301,874.0781 Q300.3594,874.2344 299.6563,874.2344 Q297.1563,874.2344 295.8281,872.5938 Q294.5156,870.9375 294.5156,867.8125 Q294.5156,864.6875 295.8281,863.0313 Q297.1563,861.375 299.6563,861.375 Q300.3594,861.375 301,861.5313 Q301.6563,861.6875 302.2188,861.9844 L302.2188,864.7031 Q301.5938,864.125 301,863.8594 Q300.4063,863.5781 299.7813,863.5781 Q298.4375,863.5781 297.75,864.6563 Q297.0625,865.7188 297.0625,867.8125 Q297.0625,869.9063 297.75,870.9844 Q298.4375,872.0469 299.7813,872.0469 Q300.4063,872.0469 301,871.7813 Q301.5938,871.5 302.2188,870.9219 L302.2188,873.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="319.75" y="872.8467">CorrelationClusterOrder</text><line style="stroke:#181818;stroke-width:0.5;" x1="226.5" x2="543.5" y1="884" y2="884"/><polygon fill="none" points="236.5,892.6484,240.5,896.6484,236.5,900.6484,232.5,896.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="245.5" y="900.9951">correlationValue: WritableIntegerDataStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="226.5" x2="543.5" y1="908.2969" y2="908.2969"/></g></a><!--MD5=[87a0541892a526bb32710a1bfb53930f]
class elki.clustering.optics.GeneralizedOPTICS--><a href="../optics/GeneralizedOPTICS.html" target="_top" title="../optics/GeneralizedOPTICS.html" xlink:actuate="onRequest" xlink:href="../optics/GeneralizedOPTICS.html" xlink:show="new" xlink:title="../optics/GeneralizedOPTICS.html" xlink:type="simple"><g id="elem_elki.clustering.optics.GeneralizedOPTICS"><rect codeLine="419" fill="#F1F1F1" height="48" id="elki.clustering.optics.GeneralizedOPTICS" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="22" y="860"/><ellipse cx="37" cy="876" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M32.9219,871.7656 L32.9219,869.6094 L40.3125,869.6094 L40.3125,871.7656 L37.8438,871.7656 L37.8438,879.8438 L40.3125,879.8438 L40.3125,882 L32.9219,882 L32.9219,879.8438 L35.3906,879.8438 L35.3906,871.7656 L32.9219,871.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="136" x="51" y="880.8467">GeneralizedOPTICS</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="189" y1="892" y2="892"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="189" y1="900" y2="900"/></g></a><!--MD5=[3a5abaacbbafbc9999cf7307530d49b3]
class elki.clustering.dbscan.GeneralizedDBSCAN--><a href="../dbscan/GeneralizedDBSCAN.html" target="_top" title="../dbscan/GeneralizedDBSCAN.html" xlink:actuate="onRequest" xlink:href="../dbscan/GeneralizedDBSCAN.html" xlink:show="new" xlink:title="../dbscan/GeneralizedDBSCAN.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.GeneralizedDBSCAN"><rect codeLine="452" fill="#F1F1F1" height="113.1875" id="elki.clustering.dbscan.GeneralizedDBSCAN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="235" x="1357.5" y="147"/><ellipse cx="1399.95" cy="163" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1402.9188,168.6406 Q1402.3406,168.9375 1401.7,169.0781 Q1401.0594,169.2344 1400.3563,169.2344 Q1397.8563,169.2344 1396.5281,167.5938 Q1395.2156,165.9375 1395.2156,162.8125 Q1395.2156,159.6875 1396.5281,158.0313 Q1397.8563,156.375 1400.3563,156.375 Q1401.0594,156.375 1401.7,156.5313 Q1402.3563,156.6875 1402.9188,156.9844 L1402.9188,159.7031 Q1402.2938,159.125 1401.7,158.8594 Q1401.1063,158.5781 1400.4813,158.5781 Q1399.1375,158.5781 1398.45,159.6563 Q1397.7625,160.7188 1397.7625,162.8125 Q1397.7625,164.9063 1398.45,165.9844 Q1399.1375,167.0469 1400.4813,167.0469 Q1401.1063,167.0469 1401.7,166.7813 Q1402.2938,166.5 1402.9188,165.9219 L1402.9188,168.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1420.05" y="167.8467">GeneralizedDBSCAN</text><line style="stroke:#181818;stroke-width:0.5;" x1="1358.5" x2="1591.5" y1="179" y2="179"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1365.5" y="189.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1377.5" y="195.9951">LOG: Logging</text><polygon fill="none" points="1368.5,203.9453,1372.5,207.9453,1368.5,211.9453,1364.5,207.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1377.5" y="212.292">npred: NeighborPredicate&lt;?&gt;</text><polygon fill="none" points="1368.5,220.2422,1372.5,224.2422,1368.5,228.2422,1364.5,224.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="1377.5" y="228.5889">corepred: CorePredicate&lt;?&gt;</text><polygon fill="none" points="1368.5,236.5391,1372.5,240.5391,1368.5,244.5391,1364.5,240.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1377.5" y="244.8857">coremodel: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1358.5" x2="1591.5" y1="252.1875" y2="252.1875"/></g></a><!--MD5=[4fc33484231348e70db2dde04bb5858c]
class elki.clustering.ClusteringAlgorithm--><a href="../ClusteringAlgorithm.html" target="_top" title="../ClusteringAlgorithm.html" xlink:actuate="onRequest" xlink:href="../ClusteringAlgorithm.html" xlink:show="new" xlink:title="../ClusteringAlgorithm.html" xlink:type="simple"><g id="elem_elki.clustering.ClusteringAlgorithm"><rect codeLine="461" fill="#F1F1F1" height="64.2969" id="elki.clustering.ClusteringAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="446" x="4771" y="171.5"/><ellipse cx="4799.95" cy="187.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4795.8719,183.2656 L4795.8719,181.1094 L4803.2625,181.1094 L4803.2625,183.2656 L4800.7938,183.2656 L4800.7938,191.3438 L4803.2625,191.3438 L4803.2625,193.5 L4795.8719,193.5 L4795.8719,191.3438 L4798.3406,191.3438 L4798.3406,183.2656 L4795.8719,183.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="4817.05" y="192.3467">ClusteringAlgorithm</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="241" x="4979" y="168.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="239" x="4980" y="180.6387">C extends Clustering&lt;? extends Model&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4772" x2="5216" y1="203.5" y2="203.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4772" x2="5216" y1="211.5" y2="211.5"/><ellipse cx="4782" cy="225.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="4791" y="228.4951">autorun(Database): C extends Clustering&lt;? extends Model&gt;</text></g></a><!--MD5=[63d495ed84ad769999667a091a4a1b7f]
class elki.clustering.AbstractProjectedClustering--><a href="../AbstractProjectedClustering.html" target="_top" title="../AbstractProjectedClustering.html" xlink:actuate="onRequest" xlink:href="../AbstractProjectedClustering.html" xlink:show="new" xlink:title="../AbstractProjectedClustering.html" xlink:type="simple"><g id="elem_elki.clustering.AbstractProjectedClustering"><rect codeLine="464" fill="#F1F1F1" height="96.8906" id="elki.clustering.AbstractProjectedClustering" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="380" x="5252" y="155"/><ellipse cx="5267" cy="171" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5267.1094,166.3438 L5265.9531,171.4219 L5268.2813,171.4219 L5267.1094,166.3438 Z M5265.625,164.1094 L5268.6094,164.1094 L5271.9688,176.5 L5269.5156,176.5 L5268.75,173.4375 L5265.4688,173.4375 L5264.7188,176.5 L5262.2813,176.5 L5265.625,164.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="195" x="5281" y="175.8467">AbstractProjectedClustering</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="151" x="5484" y="152"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="149" x="5485" y="164.1387">R extends Clustering&lt;?&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="5253" x2="5631" y1="187" y2="187"/><polygon fill="none" points="5263,195.6484,5267,199.6484,5263,203.6484,5259,199.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="5272" y="203.9951">k: int</text><polygon fill="none" points="5263,211.9453,5267,215.9453,5263,219.9453,5259,215.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="5272" y="220.292">k_i: int</text><polygon fill="none" points="5263,228.2422,5267,232.2422,5263,236.2422,5259,232.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="5272" y="236.5889">l: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="5253" x2="5631" y1="243.8906" y2="243.8906"/></g></a><!--MD5=[008d82c49f85b4d489e041917c99c847]
class java.lang.Comparable--><g id="elem_java.lang.Comparable"><rect codeLine="480" fill="#F1F1F1" height="64.2969" id="java.lang.Comparable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="6994.5" y="852"/><ellipse cx="7019.85" cy="868" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7015.7719,863.7656 L7015.7719,861.6094 L7023.1625,861.6094 L7023.1625,863.7656 L7020.6938,863.7656 L7020.6938,871.8438 L7023.1625,871.8438 L7023.1625,874 L7015.7719,874 L7015.7719,871.8438 L7018.2406,871.8438 L7018.2406,863.7656 L7015.7719,863.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="7036.15" y="872.8467">Comparable</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="7141.5" y="849"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="7142.5" y="861.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="6995.5" x2="7146.5" y1="884" y2="884"/><line style="stroke:#181818;stroke-width:0.5;" x1="6995.5" x2="7146.5" y1="892" y2="892"/><ellipse cx="7005.5" cy="905.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="7014.5" y="908.9951">compareTo(T): int</text></g><!--MD5=[276ae39eee5754101a1f4c225edb3449]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.DiSH--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.DiSH"><path codeLine="351" d="M4262.19,567.21 C4130.74,595.37 3921.88,641.78 3743,689 C3695.24,701.61 3645.69,715.3 3596.21,729.38 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.DiSH" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4260.78,560.35,4281.8,563.02,4263.71,574.04,4260.78,560.35" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c19371d408830970d156f0c2f65d44f7]
link elki.clustering.subspace.DiSH to elki.clustering.subspace.DiSH.Strategy--><g id="link_elki.clustering.subspace.DiSH_elki.clustering.subspace.DiSH.Strategy"><path codeLine="352" d="M3058.62,1038.75 C3055.82,1067.76 3055.56,1097.83 3060,1126 C3063.05,1145.33 3069.16,1165.98 3075.3,1183.61 " fill="none" id="elki.clustering.subspace.DiSH-to-elki.clustering.subspace.DiSH.Strategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3077.03,1188.5,3077.7926,1178.6807,3075.3592,1183.7874,3070.2525,1181.354,3077.03,1188.5" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="3061" y="1122.0669">strategy</text></g><!--MD5=[e56017796202603bd8e5914d76ba1218]
reverse link elki.clustering.subspace.DiSH to elki.clustering.subspace.DiSH.Strategy--><g id="link_elki.clustering.subspace.DiSH_elki.clustering.subspace.DiSH.Strategy"><path codeLine="353" d="M3121.31,1053.78 C3122.38,1078.04 3121.93,1102.67 3119,1126 C3116.38,1146.85 3110.87,1169.55 3105.59,1188.23 " fill="none" id="elki.clustering.subspace.DiSH-backto-elki.clustering.subspace.DiSH.Strategy" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3120.9068" cy="1046.7369" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3121.3637" x2="3120.45" y1="1054.7239" y2="1038.75"/><line style="stroke:#181818;stroke-width:1.0;" x1="3112.9199" x2="3128.8938" y1="1047.1938" y2="1046.2801"/></g><!--MD5=[c4579c47d06b36556a065d7a256d20a8]
reverse link java.util.Comparator to elki.clustering.subspace.DiSH.Instance.Sorter--><g id="link_java.util.Comparator_elki.clustering.subspace.DiSH.Instance.Sorter"><path codeLine="356" d="M725,386.39 C725,433 725,478.01 725,506.71 " fill="none" id="java.util.Comparator-backto-elki.clustering.subspace.DiSH.Instance.Sorter" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="718,386.37,725,366.37,732,386.37,718,386.37" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6555eb3fbd951ea9b6587b5fe1c0c69f]
reverse link elki.clustering.optics.CorrelationClusterOrder to elki.clustering.subspace.DiSH.DiSHClusterOrder--><g id="link_elki.clustering.optics.CorrelationClusterOrder_elki.clustering.subspace.DiSH.DiSHClusterOrder"><path codeLine="358" d="M418.84,932.35 C454.51,978.25 515.16,1045.68 585,1079 C710.82,1139.04 1024.14,1176.44 1303.42,1198.76 " fill="none" id="elki.clustering.optics.CorrelationClusterOrder-backto-elki.clustering.subspace.DiSH.DiSHClusterOrder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="413.12,936.4,406.64,916.23,424.29,927.95,413.12,936.4" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dc297407fe66f67f7ca06cfe9532603b]
reverse link elki.clustering.subspace.DiSH to elki.clustering.subspace.DiSH.DiSHClusterOrder--><g id="link_elki.clustering.subspace.DiSH_elki.clustering.subspace.DiSH.DiSHClusterOrder"><path codeLine="359" d="M2576.92,1042.72 C2532.73,1055.31 2488.64,1067.57 2446,1079 C2308.95,1115.74 2153.83,1152.59 2032.05,1180.45 " fill="none" id="elki.clustering.subspace.DiSH-backto-elki.clustering.subspace.DiSH.DiSHClusterOrder" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2583.8967" cy="1040.7237" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2576.2033" x2="2591.59" y1="1042.9175" y2="1038.53"/><line style="stroke:#181818;stroke-width:1.0;" x1="2581.7029" x2="2586.0904" y1="1033.0304" y2="1048.4171"/></g><!--MD5=[06333a8bc4c70d21bd99fdd2d080d230]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.P3C--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.P3C"><path codeLine="363" d="M4392,583.14 C4392,612.7 4392,654.14 4392,696.81 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.P3C" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4385,583.04,4392,563.04,4399,583.04,4385,583.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3385cd54089b0a68904960127c623371]
reverse link elki.clustering.subspace.P3C to elki.clustering.subspace.P3C.Signature--><g id="link_elki.clustering.subspace.P3C_elki.clustering.subspace.P3C.Signature"><path codeLine="364" d="M4314.41,1085.1 C4304.66,1110.24 4295.24,1134.54 4287.01,1155.75 " fill="none" id="elki.clustering.subspace.P3C-backto-elki.clustering.subspace.P3C.Signature" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4316.9652" cy="1078.5179" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4314.0704" x2="4319.86" y1="1085.9758" y2="1071.06"/><line style="stroke:#181818;stroke-width:1.0;" x1="4309.5073" x2="4324.4231" y1="1075.6231" y2="1081.4127"/></g><!--MD5=[cff5a9ea2b378ae55c2ca82f222c9eaf]
reverse link elki.clustering.subspace.P3C to elki.clustering.subspace.P3C.ClusterCandidate--><g id="link_elki.clustering.subspace.P3C_elki.clustering.subspace.P3C.ClusterCandidate"><path codeLine="365" d="M4469.66,1085.28 C4483.44,1120.81 4496.56,1154.65 4506.56,1180.45 " fill="none" id="elki.clustering.subspace.P3C-backto-elki.clustering.subspace.P3C.ClusterCandidate" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="4467.0348" cy="1078.5179" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="4469.9296" x2="4464.14" y1="1085.9758" y2="1071.06"/><line style="stroke:#181818;stroke-width:1.0;" x1="4459.5769" x2="4474.4927" y1="1081.4127" y2="1075.6231"/></g><!--MD5=[25b565e0107517107282c946b6742564]
reverse link elki.clustering.dbscan.GeneralizedDBSCAN to elki.clustering.subspace.PreDeCon--><g id="link_elki.clustering.dbscan.GeneralizedDBSCAN_elki.clustering.subspace.PreDeCon"><path codeLine="368" d="M1475,280.46 C1475,351.89 1475,455.3 1475,506.64 " fill="none" id="elki.clustering.dbscan.GeneralizedDBSCAN-backto-elki.clustering.subspace.PreDeCon" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1468,280.32,1475,260.32,1482,280.32,1468,280.32" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f77c9ce76bb7d81dae2e8130bfd9525d]
reverse link elki.clustering.subspace.PreDeCon to elki.clustering.subspace.PreDeCon.Settings--><g id="link_elki.clustering.subspace.PreDeCon_elki.clustering.subspace.PreDeCon.Settings"><path codeLine="369" d="M1438.82,582.19 C1421.62,599.36 1399.66,617.59 1376,628 C1133.08,734.88 1000.94,539.01 782,689 C737.86,719.24 712.27,775.32 698.21,819.44 " fill="none" id="elki.clustering.subspace.PreDeCon-backto-elki.clustering.subspace.PreDeCon.Settings" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1443.8764" cy="576.9175" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1438.3428" x2="1449.41" y1="582.695" y2="571.14"/><line style="stroke:#181818;stroke-width:1.0;" x1="1438.0989" x2="1449.6539" y1="571.3839" y2="582.4511"/></g><!--MD5=[c8084aae2c1eecda42b5f26aefc83675]
reverse link elki.clustering.subspace.DOC to elki.clustering.subspace.FastDOC--><g id="link_elki.clustering.subspace.DOC_elki.clustering.subspace.FastDOC"><path codeLine="381" d="M5466,1034.28 C5466,1083.34 5466,1134.87 5466,1172.44 " fill="none" id="elki.clustering.subspace.DOC-backto-elki.clustering.subspace.FastDOC" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5459,1034.18,5466,1014.18,5473,1034.18,5459,1034.18" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[346b3278edfa27ac8c1bac26db2d2d89]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.subspace.SubspaceClusteringAlgorithm--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.subspace.SubspaceClusteringAlgorithm"><path codeLine="384" d="M4920.04,245.47 C4792.35,316.21 4534.53,459.04 4433.73,514.88 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.subspace.SubspaceClusteringAlgorithm" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4917.02,239.14,4937.91,235.58,4923.8,251.39,4917.02,239.14" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7080253d9993e140793e77f343cd9805]
reverse link elki.clustering.AbstractProjectedClustering to elki.clustering.subspace.PROCLUS--><g id="link_elki.clustering.AbstractProjectedClustering_elki.clustering.subspace.PROCLUS"><path codeLine="385" d="M5527.65,263.74 C5663.45,357.66 5934.12,544.87 6142.48,688.98 " fill="none" id="elki.clustering.AbstractProjectedClustering-backto-elki.clustering.subspace.PROCLUS" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5523.45,269.34,5510.98,252.21,5531.41,257.83,5523.45,269.34" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a5c28c3655f5d2a3c8293a88b43e44ad]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.PROCLUS--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.PROCLUS"><path codeLine="386" d="M4614.31,560.62 C5016.62,598.15 5829.78,675.03 5891,689 C5896.63,690.29 5902.28,691.61 5907.95,692.98 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.PROCLUS" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4613.55,567.58,4594.29,558.76,4614.85,553.64,4613.55,567.58" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[730c6a8b3075b53a7fb9acf94395b736]
reverse link java.lang.Comparable to elki.clustering.subspace.PROCLUS.DoubleIntInt--><g id="link_java.lang.Comparable_elki.clustering.subspace.PROCLUS.DoubleIntInt"><path codeLine="387" d="M7046.35,934.27 C7024.78,975.07 6991.16,1033.51 6954,1079 C6929.22,1109.33 6898.31,1139.26 6870.16,1164.25 " fill="none" id="java.lang.Comparable-backto-elki.clustering.subspace.PROCLUS.DoubleIntInt" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7040.23,930.87,7055.65,916.34,7052.66,937.31,7040.23,930.87" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f2860d01ce7ba9ff9f0408c73224e1e1]
reverse link elki.clustering.subspace.PROCLUS to elki.clustering.subspace.PROCLUS.DoubleIntInt--><g id="link_elki.clustering.subspace.PROCLUS_elki.clustering.subspace.PROCLUS.DoubleIntInt"><path codeLine="388" d="M6642.96,1089.47 C6672.05,1116.51 6699.92,1142.41 6723.53,1164.35 " fill="none" id="elki.clustering.subspace.PROCLUS-backto-elki.clustering.subspace.PROCLUS.DoubleIntInt" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6637.6188" cy="1084.4974" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6643.4776" x2="6631.76" y1="1089.9448" y2="1079.05"/><line style="stroke:#181818;stroke-width:1.0;" x1="6632.1714" x2="6643.0662" y1="1090.3562" y2="1078.6386"/></g><!--MD5=[b2cc7d1a16d773f3efcb1af401d04c33]
reverse link elki.clustering.subspace.PROCLUS to elki.clustering.subspace.PROCLUS.PROCLUSCluster--><g id="link_elki.clustering.subspace.PROCLUS_elki.clustering.subspace.PROCLUS.PROCLUSCluster"><path codeLine="389" d="M6423,1094.1 C6423,1119.46 6423,1143.67 6423,1164.35 " fill="none" id="elki.clustering.subspace.PROCLUS-backto-elki.clustering.subspace.PROCLUS.PROCLUSCluster" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="6423" cy="1087.05" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="6423" x2="6423" y1="1095.05" y2="1079.05"/><line style="stroke:#181818;stroke-width:1.0;" x1="6415" x2="6431" y1="1087.05" y2="1087.05"/></g><!--MD5=[f5d7977066abcba6c987e5a94725ab9a]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.DOC--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.DOC"><path codeLine="392" d="M4549.33,566.75 C4682.53,591.59 4877.5,633.16 5042,689 C5096.04,707.34 5152.47,730.3 5205.88,753.93 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.DOC" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4547.71,573.57,4529.31,563.06,4550.25,559.8,4547.71,573.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[407220f6405bb316c4de6c807efe0cfa]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.SUBCLU--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.SUBCLU"><path codeLine="395" d="M4169.58,539.99 C3590.84,541.84 2048.86,559.17 1557,689 C1494.29,705.55 1429.85,732.93 1371.96,761.97 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.SUBCLU" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4169.74,532.99,4189.76,539.93,4169.78,546.99,4169.74,532.99" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[084270f98ce2c74c3db60e7339f27924]
reverse link elki.clustering.subspace.SubspaceClusteringAlgorithm to elki.clustering.subspace.CLIQUE--><g id="link_elki.clustering.subspace.SubspaceClusteringAlgorithm_elki.clustering.subspace.CLIQUE"><path codeLine="398" d="M4169.57,547.7 C3730.47,564.43 2767.03,609.16 2446,689 C2418.7,695.79 2390.96,704.11 2363.35,713.43 " fill="none" id="elki.clustering.subspace.SubspaceClusteringAlgorithm-backto-elki.clustering.subspace.CLIQUE" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4169.51,540.7,4189.76,546.94,4170.03,554.69,4169.51,540.7" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="3485.5" y="1324"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="3485.5" y="1333.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[c2d55dfa1c90e97342e77257513fa354]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.subspace {

        class DiSH [[DiSH.html]] {
            {static} -LOG: Logging
            -epsilon: double
            -minpts: int
            +DiSH(double, int, Strategy)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<? extends NumberVector>): Clustering<SubspaceModel>
            -computeClusters(Relation<? extends NumberVector>, DiSHClusterOrder): Clustering<SubspaceModel>
            -logClusterSizes(String, int, Object2ObjectOpenCustomHashMap<long[], List<ArrayModifiableDBIDs>>): void
            -extractClusters(Relation<? extends NumberVector>, DiSHClusterOrder): Object2ObjectOpenCustomHashMap<long[], List<ArrayModifiableDBIDs>>
            -sortClusters(Relation<? extends NumberVector>, Object2ObjectMap<long[], List<ArrayModifiableDBIDs>>): List<Cluster<SubspaceModel>>
            -checkClusters(Relation<? extends NumberVector>, Object2ObjectMap<long[], List<ArrayModifiableDBIDs>>): void
            -findParent(Relation<? extends NumberVector>, Pair<long[], ArrayModifiableDBIDs>, Object2ObjectMap<long[], List<ArrayModifiableDBIDs>>): Pair<long[], ArrayModifiableDBIDs>
            -buildHierarchy(Relation<? extends NumberVector>, Clustering<SubspaceModel>, List<Cluster<SubspaceModel>>, int): void
            -isParent(Relation<? extends NumberVector>, Cluster<SubspaceModel>, It<Cluster<SubspaceModel>>, int): boolean
            -subspaceDimensionality(NumberVector, NumberVector, long[], long[], long[]): int
            {static} #weightedDistance(NumberVector, NumberVector, long[]): double
        }

        enum elki.clustering.subspace.DiSH.Strategy [[DiSH.Strategy.html]] {
            {static} +APRIORI
            {static} +MAX_INTERSECTION
        }

        class elki.clustering.subspace.DiSH.Instance [[DiSH.Instance.html]] {
            -relation: Relation<? extends NumberVector>
            -clusterOrder: ArrayModifiableDBIDs
            -correlationValue: WritableIntegerDataStore
            -commonPreferenceVectors: WritableDataStore<long[]>
            -tmpIds: ArrayModifiableDBIDs
            -tmpCorrelation: WritableIntegerDataStore
            -tmpDistance: WritableDoubleDataStore
            ~tmpcomp: Comparator<DBIDRef>
            #preferenceVectors: WritableDataStore<long[]>
            -tmpPreferenceVectors: WritableDataStore<long[]>
            +Instance(Relation<? extends NumberVector>)
            +run(): DiSHClusterOrder
            -determinePreferenceVector(ModifiableDBIDs[], StringBuilder): long[]
            -determinePreferenceVectorByApriori(ModifiableDBIDs[], StringBuilder): long[]
            -determinePreferenceVectorByMaxIntersection(ModifiableDBIDs[], StringBuilder): long[]
            -max(Map<Integer, ModifiableDBIDs>): int
            -maxIntersection(Map<Integer, ModifiableDBIDs>, ModifiableDBIDs): int
            #buildResult(): DiSHClusterOrder
            #initialDBID(DBIDRef): void
            #expandDBID(DBIDRef): void
            +compare(DBIDRef, DBIDRef): int
            #getLogger(): Logging
        }

        class elki.clustering.subspace.DiSH.Instance.Sorter [[DiSH.Instance.Sorter.html]] {
            +compare(DBIDRef, DBIDRef): int
        }

        class elki.clustering.subspace.DiSH.DiSHClusterOrder [[DiSH.DiSHClusterOrder.html]] {
            -commonPreferenceVectors: WritableDataStore<long[]>
            +DiSHClusterOrder(ArrayModifiableDBIDs, WritableDoubleDataStore, WritableDBIDDataStore, WritableIntegerDataStore, WritableDataStore<long[]>)
            +getCommonPreferenceVector(DBIDRef): long[]
        }

        class elki.clustering.subspace.DiSH.Par [[DiSH.Par.html]] {
            {static} +DEFAULT_EPSILON: double
            {static} +EPSILON_ID: OptionID
            {static} +MINPTS_ID: OptionID
            {static} +STRATEGY_ID: OptionID
            {static} +MU_ID: OptionID
            #epsilon: double
            #minpts: int
            +configure(Parameterization): void
            +make(): DiSH
        }

        class P3C [[P3C.html]] {
            {static} -LOG: Logging
            #poissonThreshold: double
            #maxEmIterations: int
            #emDelta: double
            #minClusterSize: int
            #alpha: double
            +P3C(double, double, int, double, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<? extends NumberVector>): Clustering<SubspaceModel>
            -constructOneSignatures(SetDBIDs[], long[]): ArrayList<Signature>
            -mergeClusterCores(int, ArrayList<Signature>): ArrayList<Signature>
            -pruneRedundantClusterCores(ArrayList<Signature>): ArrayList<Signature>
            -partitionData(Relation<? extends NumberVector>, int): SetDBIDs[]
            #unionDBIDs(DBIDs[], int, int): HashSetModifiableDBIDs
            -chiSquaredUniformTest(SetDBIDs[], long[], int): int
            -computeFuzzyMembership(Relation<? extends NumberVector>, ArrayList<Signature>, ModifiableDBIDs, WritableDataStore<double[]>, List<MultivariateGaussianModel>, int): void
            -assignUnassigned(Relation<? extends NumberVector>, WritableDataStore<double[]>, List<MultivariateGaussianModel>, ModifiableDBIDs): void
            -hardClustering(WritableDataStore<double[]>, List<Signature>, DBIDs): ArrayList<ClusterCandidate>
            -findOutliers(Relation<? extends NumberVector>, List<MultivariateGaussianModel>, ArrayList<ClusterCandidate>, ModifiableDBIDs): void
            #mergeSignatures(Signature, Signature, int): Signature
        }

        class elki.clustering.subspace.P3C.Signature [[P3C.Signature.html]] {
            ~spec: int[]
            ~ids: DBIDs
            ~prune: boolean
            -Signature(int[], DBIDs)
            +isSuperset(Signature): boolean
            +getFirstDim(): int
        }

        class elki.clustering.subspace.P3C.ClusterCandidate [[P3C.ClusterCandidate.html]] {
            +dimensions: long[]
            +ids: ModifiableDBIDs
            +ClusterCandidate(Signature)
        }

        class elki.clustering.subspace.P3C.Par [[P3C.Par.html]] {
            {static} +ALPHA_THRESHOLD_ID: OptionID
            {static} +POISSON_THRESHOLD_ID: OptionID
            {static} +MAX_EM_ITERATIONS_ID: OptionID
            {static} +EM_DELTA_ID: OptionID
            {static} +MIN_CLUSTER_SIZE_ID: OptionID
            #alpha: double
            #poissonThreshold: double
            #maxEmIterations: int
            #emDelta: double
            #minClusterSize: int
            +configure(Parameterization): void
            +make(): P3C
        }

        class PreDeCon [[PreDeCon.html]] {
            +PreDeCon(Settings)
        }

        class elki.clustering.subspace.PreDeCon.Settings [[PreDeCon.Settings.html]] {
            +epsilon: double
            +delta: double
            +kappa: double
            +minpts: int
            +lambda: int
        }

        class elki.clustering.subspace.PreDeCon.Settings.Par [[PreDeCon.Settings.Par.html]] {
            {static} +DELTA_ID: OptionID
            {static} +KAPPA_ID: OptionID
            {static} +KAPPA_DEFAULT: double
            {static} +LAMBDA_ID: OptionID
            +configure(Parameterization): void
            #configEpsilon(Parameterization): void
            #configMinPts(Parameterization): void
            #configDelta(Parameterization): void
            #configKappa(Parameterization): void
            #configLambda(Parameterization): void
            +make(): Settings
        }

        class elki.clustering.subspace.PreDeCon.Par [[PreDeCon.Par.html]] {
            +configure(Parameterization): void
            +make(): PreDeCon
        }

        class HiSC [[HiSC.html]] {
            {static} -LOG: Logging
            -alpha: double
            #k: int
            +HiSC(double, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<? extends NumberVector>): ClusterOrder
            +weightedDistance(NumberVector, NumberVector, long[]): double
            +getMinPts(): int
        }

        class elki.clustering.subspace.HiSC.Instance [[HiSC.Instance.html]] {
            #preferenceVectors: WritableDataStore<long[]>
            -clusterOrder: ArrayModifiableDBIDs
            -relation: Relation<? extends NumberVector>
            -correlationValue: WritableIntegerDataStore
            -commonPreferenceVectors: WritableDataStore<long[]>
            +Instance(Relation<? extends NumberVector>)
            +run(): CorrelationClusterOrder
            -determinePreferenceVector(DBIDRef, DBIDs): long[]
            #buildResult(): CorrelationClusterOrder
            #initialDBID(DBIDRef): void
            #expandDBID(DBIDRef): void
            +compare(DBIDRef, DBIDRef): int
            #getLogger(): Logging
        }

        class elki.clustering.subspace.HiSC.Par [[HiSC.Par.html]] {
            {static} +EPSILON_ID: OptionID
            {static} +ALPHA_ID: OptionID
            {static} +DEFAULT_ALPHA: double
            {static} +K_ID: OptionID
            #alpha: double
            #k: int
            +configure(Parameterization): void
            +make(): HiSC
        }

        class FastDOC [[FastDOC.html]] {
            {static} -LOG: Logging
            -d_zero: int
            +FastDOC(double, double, double, int, RandomFactory)
            #runDOC(Relation<? extends NumberVector>, ArrayModifiableDBIDs, int, int, int, int, int): Cluster<SubspaceModel>
        }

        class elki.clustering.subspace.FastDOC.Par [[FastDOC.Par.html]] {
            {static} +D_ZERO_ID: OptionID
            #d_zero: int
            +configure(Parameterization): void
            +make(): FastDOC
        }

        interface SubspaceClusteringAlgorithm<M extends SubspaceModel> [[SubspaceClusteringAlgorithm.html]]

        class PROCLUS [[PROCLUS.html]] {
            {static} -LOG: Logging
            -m_i: int
            -rnd: RandomFactory
            +PROCLUS(int, int, int, int, RandomFactory)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<V extends NumberVector>): Clustering<SubspaceModel>
            -greedy(DistanceQuery<? extends NumberVector>, DBIDs, int, Random): ArrayDBIDs
            -initialSet(DBIDs, int, Random): ArrayDBIDs
            -computeM_current(DBIDs, DBIDs, DBIDs, Random): ArrayDBIDs
            -getLocalities(DBIDs, DistanceQuery<? extends NumberVector>, RangeSearcher<DBIDRef>): DataStore<DBIDs>
            -findDimensions(ArrayDBIDs, Relation<? extends NumberVector>, DistanceQuery<? extends NumberVector>, RangeSearcher<DBIDRef>): long[]
            -findDimensions(ArrayList<PROCLUSCluster>, Relation<? extends NumberVector>): List<Pair<double[], long[]>>
            -computeZijs(double[], int): List<DoubleIntInt>
            -computeDimensionMap(List<DoubleIntInt>, int, int): long[]
            -assignPoints(ArrayDBIDs, long[], Relation<? extends NumberVector>): ArrayList<PROCLUSCluster>
            -finalAssignment(List<Pair<double[], long[]>>, Relation<? extends NumberVector>): List<PROCLUSCluster>
            -manhattanSegmentalDistance(NumberVector, NumberVector, long[]): double
            -manhattanSegmentalDistance(NumberVector, double[], long[]): double
            -evaluateClusters(ArrayList<PROCLUSCluster>, long[], Relation<? extends NumberVector>): double
            -avgDistance(double[], DBIDs, Relation<? extends NumberVector>, int): double
            -computeBadMedoids(ArrayDBIDs, ArrayList<PROCLUSCluster>, int): DBIDs
        }

        class elki.clustering.subspace.PROCLUS.DoubleIntInt [[PROCLUS.DoubleIntInt.html]] {
            #first: double
            #dimi: int
            #dimj: int
            +DoubleIntInt(double, int, int)
            +compareTo(DoubleIntInt): int
        }

        class elki.clustering.subspace.PROCLUS.PROCLUSCluster [[PROCLUS.PROCLUSCluster.html]] {
            ~objectIDs: ModifiableDBIDs
            ~dimensions: long[]
            ~centroid: double[]
            +PROCLUSCluster(ModifiableDBIDs, long[], double[])
            +getDimensions(): long[]
        }

        class elki.clustering.subspace.PROCLUS.Par [[PROCLUS.Par.html]] {
            {static} +M_I_ID: OptionID
            {static} +SEED_ID: OptionID
            #m_i: int
            #rnd: RandomFactory
            +configure(Parameterization): void
            +make(): PROCLUS
        }

        class DOC [[DOC.html]] {
            {static} -LOG: Logging
            #alpha: double
            #beta: double
            #w: double
            #rnd: RandomFactory
            +DOC(double, double, double, RandomFactory)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<? extends NumberVector>): Clustering<SubspaceModel>
            #runDOC(Relation<? extends NumberVector>, ArrayModifiableDBIDs, int, int, int, int, int): Cluster<SubspaceModel>
            #findNeighbors(DBIDRef, long[], ArrayModifiableDBIDs, Relation<? extends NumberVector>): DBIDs
            #dimensionIsRelevant(int, Relation<? extends NumberVector>, DBIDs): boolean
            #makeCluster(Relation<? extends NumberVector>, DBIDs, long[]): Cluster<SubspaceModel>
            #computeClusterQuality(int, int): double
        }

        class elki.clustering.subspace.DOC.Par [[DOC.Par.html]] {
            {static} +ALPHA_ID: OptionID
            {static} +BETA_ID: OptionID
            {static} +W_ID: OptionID
            {static} +RANDOM_ID: OptionID
            #alpha: double
            #beta: double
            #w: double
            #random: RandomFactory
            +configure(Parameterization): void
            +make(): DOC
        }

        class SUBCLU<V extends NumberVector> [[SUBCLU.html]] {
            {static} -LOG: Logging
            #distance: DimensionSelectingSubspaceDistance<V extends NumberVector>
            #epsilon: double
            #minpts: int
            #mindim: int
            +SUBCLU(DimensionSelectingSubspaceDistance<V extends NumberVector>, double, int, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<V extends NumberVector>): Clustering<SubspaceModel>
            -runDBSCAN(Relation<V extends NumberVector>, DBIDs, Subspace): List<Cluster<Model>>
            -generateSubspaceCandidates(List<Subspace>): List<Subspace>
            -checkLower(Subspace, List<Subspace>): boolean
            -bestSubspace(List<Subspace>, Subspace, TreeMap<Subspace, List<Cluster<Model>>>): Subspace
        }

        class elki.clustering.subspace.SUBCLU.Par<V extends NumberVector> [[SUBCLU.Par.html]] {
            {static} +DISTANCE_FUNCTION_ID: OptionID
            {static} +EPSILON_ID: OptionID
            {static} +MINPTS_ID: OptionID
            {static} +MINDIM_ID: OptionID
            #distance: DimensionSelectingSubspaceDistance<V extends NumberVector>
            #epsilon: double
            #minpts: int
            #mindim: int
            +configure(Parameterization): void
            +make(): SUBCLU<V extends NumberVector>
        }

        class CLIQUE [[CLIQUE.html]] {
            {static} -LOG: Logging
            #xsi: int
            #tau: double
            #prune: boolean
            +CLIQUE(int, double, boolean)
            +run(Relation<? extends NumberVector>): Clustering<SubspaceModel>
            -determineClusters(List<CLIQUESubspace>): List<Pair<Subspace, ModifiableDBIDs>>
            -findOneDimensionalDenseSubspaces(Relation<? extends NumberVector>): List<CLIQUESubspace>
            -findDenseSubspaces(Relation<? extends NumberVector>, List<CLIQUESubspace>): List<CLIQUESubspace>
            -initOneDimensionalUnits(Relation<? extends NumberVector>): Collection<CLIQUEUnit>
            -updateMinMax(NumberVector, double[], double[]): void
            -findOneDimensionalDenseSubspaceCandidates(Relation<? extends NumberVector>): List<CLIQUESubspace>
            -findDenseSubspaceCandidates(Relation<? extends NumberVector>, List<CLIQUESubspace>): List<CLIQUESubspace>
            -pruneDenseSubspaces(List<CLIQUESubspace>): List<CLIQUESubspace>
            -computeMeans(List<CLIQUESubspace>): int[]
            -computeDiffs(List<CLIQUESubspace>, int[], int[]): double[]
            {static} -log2OrZero(double): double
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.subspace.CLIQUE.Par [[CLIQUE.Par.html]] {
            {static} +XSI_ID: OptionID
            {static} +TAU_ID: OptionID
            {static} +PRUNE_ID: OptionID
            #xsi: int
            #tau: double
            #prune: boolean
            +configure(Parameterization): void
            +make(): CLIQUE
        }

        SubspaceClusteringAlgorithm <|.. DiSH
        DiSH - -> elki.clustering.subspace.DiSH.Strategy: strategy
        DiSH +- - elki.clustering.subspace.DiSH.Strategy
        elki.clustering.optics.GeneralizedOPTICS.Instance <|- - elki.clustering.subspace.DiSH.Instance
        DiSH +- - elki.clustering.subspace.DiSH.Instance
        java.util.Comparator <|.. elki.clustering.subspace.DiSH.Instance.Sorter
        elki.clustering.subspace.DiSH.Instance +- - elki.clustering.subspace.DiSH.Instance.Sorter
        elki.clustering.optics.CorrelationClusterOrder <|- - elki.clustering.subspace.DiSH.DiSHClusterOrder
        DiSH +- - elki.clustering.subspace.DiSH.DiSHClusterOrder
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.DiSH.Par
        DiSH +- - elki.clustering.subspace.DiSH.Par
        elki.clustering.subspace.DiSH.Par - -> elki.clustering.subspace.DiSH.Strategy: DEFAULT_STRATEGY\nstrategy
        SubspaceClusteringAlgorithm <|.. P3C
        P3C +- - elki.clustering.subspace.P3C.Signature
        P3C +- - elki.clustering.subspace.P3C.ClusterCandidate
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.P3C.Par
        P3C +- - elki.clustering.subspace.P3C.Par
        elki.clustering.dbscan.GeneralizedDBSCAN <|- - PreDeCon
        PreDeCon +- - elki.clustering.subspace.PreDeCon.Settings
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.PreDeCon.Settings.Par
        elki.clustering.subspace.PreDeCon.Settings +- - elki.clustering.subspace.PreDeCon.Settings.Par
        elki.clustering.subspace.PreDeCon.Settings.Par - -> elki.clustering.subspace.PreDeCon.Settings: settings
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.PreDeCon.Par
        PreDeCon +- - elki.clustering.subspace.PreDeCon.Par
        elki.clustering.subspace.PreDeCon.Par - -> elki.clustering.subspace.PreDeCon.Settings: settings
        elki.clustering.optics.GeneralizedOPTICS <|.. HiSC
        elki.clustering.optics.GeneralizedOPTICS.Instance <|- - elki.clustering.subspace.HiSC.Instance
        HiSC +- - elki.clustering.subspace.HiSC.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.HiSC.Par
        HiSC +- - elki.clustering.subspace.HiSC.Par
        DOC <|- - FastDOC
        elki.clustering.subspace.DOC.Par <|- - elki.clustering.subspace.FastDOC.Par
        FastDOC +- - elki.clustering.subspace.FastDOC.Par
        elki.clustering.ClusteringAlgorithm <|- - SubspaceClusteringAlgorithm
        elki.clustering.AbstractProjectedClustering <|- - PROCLUS
        SubspaceClusteringAlgorithm <|.. PROCLUS
        java.lang.Comparable <|.. elki.clustering.subspace.PROCLUS.DoubleIntInt
        PROCLUS +- - elki.clustering.subspace.PROCLUS.DoubleIntInt
        PROCLUS +- - elki.clustering.subspace.PROCLUS.PROCLUSCluster
        elki.clustering.AbstractProjectedClustering.Par <|- - elki.clustering.subspace.PROCLUS.Par
        PROCLUS +- - elki.clustering.subspace.PROCLUS.Par
        SubspaceClusteringAlgorithm <|.. DOC
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.DOC.Par
        DOC +- - elki.clustering.subspace.DOC.Par
        SubspaceClusteringAlgorithm <|.. SUBCLU
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.SUBCLU.Par
        SUBCLU +- - elki.clustering.subspace.SUBCLU.Par
        SubspaceClusteringAlgorithm <|.. CLIQUE
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.subspace.CLIQUE.Par
        CLIQUE +- - elki.clustering.subspace.CLIQUE.Par
    }

    namespace elki.clustering.optics {
        abstract class elki.clustering.optics.GeneralizedOPTICS.Instance<R> [[../optics/GeneralizedOPTICS.Instance.html]] {
            #processedIDs: ModifiableDBIDs
            #candidates: ArrayModifiableDBIDs
            #predecessor: WritableDBIDDataStore
            #reachability: WritableDoubleDataStore
            ~ids: DBIDs
            ~progress: FiniteProgress
            {abstract} #initialDBID(DBIDRef): void
            {abstract} #expandDBID(DBIDRef): void
            {abstract} #buildResult(): R
            {abstract} #getLogger(): Logging
        }
        class CorrelationClusterOrder [[../optics/CorrelationClusterOrder.html]] {
            #correlationValue: WritableIntegerDataStore
        }
        interface GeneralizedOPTICS [[../optics/GeneralizedOPTICS.html]]
    }

    namespace java.util {
        interface Comparator<T> {
            {abstract} +compare(T, T): int
            +reversed(): Comparator<T>
            +thenComparing(Comparator<? super T>): Comparator<T>
            +thenComparing(Function<? super T, ? extends U>, Comparator<? super U>): Comparator<T>
            +thenComparing(Function<? super T, ? extends Comparable<? super U>>): Comparator<T>
            +thenComparingInt(ToIntFunction<? super T>): Comparator<T>
            +thenComparingLong(ToLongFunction<? super T>): Comparator<T>
            +thenComparingDouble(ToDoubleFunction<? super T>): Comparator<T>
            {static} +reverseOrder(): Comparator<T extends Comparable<? super T>>
            {static} +naturalOrder(): Comparator<T extends Comparable<? super T>>
            {static} +nullsFirst(Comparator<? super T>): Comparator<T>
            {static} +nullsLast(Comparator<? super T>): Comparator<T>
            {static} +comparing(Function<? super T, ? extends U>, Comparator<? super U>): Comparator<T>
            {static} +comparing(Function<? super T, ? extends Comparable<? super U>>): Comparator<T>
            {static} +comparingInt(ToIntFunction<? super T>): Comparator<T>
            {static} +comparingLong(ToLongFunction<? super T>): Comparator<T>
            {static} +comparingDouble(ToDoubleFunction<? super T>): Comparator<T>
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    namespace elki.clustering.dbscan {
        class GeneralizedDBSCAN [[../dbscan/GeneralizedDBSCAN.html]] {
            {static} -LOG: Logging
            #npred: NeighborPredicate<?>
            #corepred: CorePredicate<?>
            #coremodel: boolean
        }
    }

    namespace elki.clustering {
        interface ClusteringAlgorithm<C extends Clustering<? extends Model>> [[../ClusteringAlgorithm.html]] {
            +autorun(Database): C extends Clustering<? extends Model>
        }
        abstract class AbstractProjectedClustering<R extends Clustering<?>> [[../AbstractProjectedClustering.html]] {
            #k: int
            #k_i: int
            #l: int
        }
        abstract class elki.clustering.AbstractProjectedClustering.Par [[../AbstractProjectedClustering.Par.html]] {
            {static} +K_ID: OptionID
            {static} +K_I_ID: OptionID
            {static} +L_ID: OptionID
            #k: int
            #k_i: int
            #l: int
        }
    }

    namespace java.lang {
        interface Comparable<T> {
            {abstract} +compareTo(T): int
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>