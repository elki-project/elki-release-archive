<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="559px" preserveAspectRatio="none" style="width:436px;height:559px;background:#FFFFFF;" version="1.1" viewBox="0 0 436 559" width="436px" zoomAndPan="magnify"><defs/><g><!--MD5=[642ed9327a917bfda2558fab7914bfa2]
class elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate--><a href="ChengAndChurch.BiclusterCandidate.html" target="_top" title="ChengAndChurch.BiclusterCandidate.html" xlink:actuate="onRequest" xlink:href="ChengAndChurch.BiclusterCandidate.html" xlink:show="new" xlink:title="ChengAndChurch.BiclusterCandidate.html" xlink:type="simple"><g id="elem_elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate"><rect codeLine="6" fill="#F1F1F1" height="428.7656" id="elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="420" x="9" y="105"/><ellipse cx="86.25" cy="123.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M89.2188,129.6094 Q88.6406,129.9063 88,130.0469 Q87.3594,130.2031 86.6563,130.2031 Q84.1563,130.2031 82.8281,128.5625 Q81.5156,126.9063 81.5156,123.7813 Q81.5156,120.6563 82.8281,119 Q84.1563,117.3438 86.6563,117.3438 Q87.3594,117.3438 88,117.5 Q88.6563,117.6563 89.2188,117.9531 L89.2188,120.6719 Q88.5938,120.0938 88,119.8281 Q87.4063,119.5469 86.7813,119.5469 Q85.4375,119.5469 84.75,120.625 Q84.0625,121.6875 84.0625,123.7813 Q84.0625,125.875 84.75,126.9531 Q85.4375,128.0156 86.7813,128.0156 Q87.4063,128.0156 88,127.75 Q88.5938,127.4688 89.2188,126.8906 L89.2188,129.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="106.75" y="122.9951">ChengAndChurch.BiclusterCandidate</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="121" x="174.75" y="135.5791">elki.clustering.biclustering</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="428" y1="142.9375" y2="142.9375"/><polygon fill="none" points="20,152.5859,16,158.5859,24,158.5859" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="29" y="159.9326">rowcard: int</text><polygon fill="none" points="20,168.8828,16,174.8828,24,174.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="29" y="176.2295">colcard: int</text><polygon fill="none" points="20,185.1797,16,191.1797,24,191.1797" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="29" y="192.5264">rowM: double[]</text><polygon fill="none" points="20,201.4766,16,207.4766,24,207.4766" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="29" y="208.8232">colM: double[]</text><polygon fill="none" points="20,217.7734,16,223.7734,24,223.7734" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="29" y="225.1201">rows: long[]</text><polygon fill="none" points="20,234.0703,16,240.0703,24,240.0703" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="29" y="241.417">irow: long[]</text><polygon fill="none" points="20,250.3672,16,256.3672,24,256.3672" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="29" y="257.7139">cols: long[]</text><polygon fill="none" points="20,266.6641,16,272.6641,24,272.6641" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="29" y="274.0107">allM: double</text><polygon fill="none" points="20,282.9609,16,288.9609,24,288.9609" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="29" y="290.3076">residue: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="300.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="29" y="306.6045">MEANVISITOR: CellVisitor</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="428" y1="313.9063" y2="313.9063"/><polygon fill="#FFFF44" points="20,322.5547,24,326.5547,20,330.5547,16,326.5547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="29" y="330.9014">BiclusterCandidate(int, int)</text><polygon fill="#FFFF44" points="20,338.8516,24,342.8516,20,346.8516,16,342.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="29" y="347.1982">reset(): void</text><polygon fill="#FFFF44" points="20,355.1484,24,359.1484,20,363.1484,16,359.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="29" y="363.4951">visitAll(double[], int, CellVisitor): void</text><polygon fill="#FFFF44" points="20,371.4453,24,375.4453,20,379.4453,16,375.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="29" y="379.792">visitColumn(double[], int, int, CellVisitor): void</text><polygon fill="#FFFF44" points="20,387.7422,24,391.7422,20,395.7422,16,391.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="29" y="396.0889">visitRow(double[], int, int, CellVisitor): void</text><polygon fill="#FFFF44" points="20,404.0391,24,408.0391,20,412.0391,16,408.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="29" y="412.3857">updateRowAndColumnMeans(double[], boolean): double</text><polygon fill="#FFFF44" points="20,420.3359,24,424.3359,20,428.3359,16,424.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="347" x="29" y="428.6826">computeMeanSquaredDeviation(double[]): double</text><polygon fill="#FFFF44" points="20,436.6328,24,440.6328,20,444.6328,16,440.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="29" y="444.9795">computeRowResidue(double[], int, boolean): double</text><polygon fill="#FFFF44" points="20,452.9297,24,456.9297,20,460.9297,16,456.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="29" y="461.2764">computeColResidue(double[], int): double</text><polygon fill="#FFFF44" points="20,469.2266,24,473.2266,20,477.2266,16,473.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="29" y="477.5732">maskMatrix(double[], Distribution, Random): void</text><polygon fill="#FFFF44" points="20,485.5234,24,489.5234,20,493.5234,16,489.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="29" y="493.8701">selectColumn(int, boolean): void</text><polygon fill="#FFFF44" points="20,501.8203,24,505.8203,20,509.8203,16,505.8203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="29" y="510.167">selectRow(int, boolean): void</text><polygon fill="#FFFF44" points="20,518.1172,24,522.1172,20,526.1172,16,522.1172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="29" y="526.4639">invertRow(int, boolean): void</text></g></a><!--MD5=[f7047111e5cf60f4c1c24a7412ea7cb7]
class elki.clustering.biclustering.ChengAndChurch--><a href="ChengAndChurch.html" target="_top" title="ChengAndChurch.html" xlink:actuate="onRequest" xlink:href="ChengAndChurch.html" xlink:show="new" xlink:title="ChengAndChurch.html" xlink:type="simple"><g id="elem_elki.clustering.biclustering.ChengAndChurch"><rect codeLine="32" fill="#F1F1F1" height="37.9375" id="elki.clustering.biclustering.ChengAndChurch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="141.5" y="7"/><ellipse cx="156.5" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M159.4688,31.6094 Q158.8906,31.9063 158.25,32.0469 Q157.6094,32.2031 156.9063,32.2031 Q154.4063,32.2031 153.0781,30.5625 Q151.7656,28.9063 151.7656,25.7813 Q151.7656,22.6563 153.0781,21 Q154.4063,19.3438 156.9063,19.3438 Q157.6094,19.3438 158.25,19.5 Q158.9063,19.6563 159.4688,19.9531 L159.4688,22.6719 Q158.8438,22.0938 158.25,21.8281 Q157.6563,21.5469 157.0313,21.5469 Q155.6875,21.5469 155,22.625 Q154.3125,23.6875 154.3125,25.7813 Q154.3125,27.875 155,28.9531 Q155.6875,30.0156 157.0313,30.0156 Q157.6563,30.0156 158.25,29.75 Q158.8438,29.4688 159.4688,28.8906 L159.4688,31.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="170.5" y="24.9951">ChengAndChurch</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="121" x="171.5" y="37.5791">elki.clustering.biclustering</text></g></a><!--MD5=[4d42f35a3835f34548302ccf588a2c0b]
reverse link elki.clustering.biclustering.ChengAndChurch to elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate--><g id="link_elki.clustering.biclustering.ChengAndChurch_elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate"><path codeLine="34" d="M219,60.4 C219,72.88 219,88.14 219,104.95 " fill="none" id="elki.clustering.biclustering.ChengAndChurch-backto-elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="219" cy="53.23" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="219" x2="219" y1="61.23" y2="45.23"/><line style="stroke:#181818;stroke-width:1.0;" x1="211" x2="227" y1="53.23" y2="53.23"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="118" y="539.7656"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="118" y="549.0479">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[7f3d127eae8b52cc553a91b246835487]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>ChengAndChurch.BiclusterCandidate\n<size:10>elki.clustering.biclustering" as elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate [[ChengAndChurch.BiclusterCandidate.html]] {
        ~rowcard: int
        ~colcard: int
        ~rowM: double[]
        ~colM: double[]
        ~rows: long[]
        ~irow: long[]
        ~cols: long[]
        ~allM: double
        ~residue: double
        -MEANVISITOR: CellVisitor
        #BiclusterCandidate(int, int)
        #reset(): void
        #visitAll(double[], int, CellVisitor): void
        #visitColumn(double[], int, int, CellVisitor): void
        #visitRow(double[], int, int, CellVisitor): void
        #updateRowAndColumnMeans(double[], boolean): double
        #computeMeanSquaredDeviation(double[]): double
        #computeRowResidue(double[], int, boolean): double
        #computeColResidue(double[], int): double
        #maskMatrix(double[], Distribution, Random): void
        #selectColumn(int, boolean): void
        #selectRow(int, boolean): void
        #invertRow(int, boolean): void
    }

    class "<size:14>ChengAndChurch\n<size:10>elki.clustering.biclustering" as elki.clustering.biclustering.ChengAndChurch [[ChengAndChurch.html]]

    elki.clustering.biclustering.ChengAndChurch +- - elki.clustering.biclustering.ChengAndChurch.BiclusterCandidate

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>