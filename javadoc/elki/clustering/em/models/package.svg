<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1292px" preserveAspectRatio="none" style="width:8861px;height:1292px;background:#FFFFFF;" version="1.1" viewBox="0 0 8861 1292" width="8861px" zoomAndPan="magnify"><defs/><g><!--MD5=[5797ad8d31766a57b5befdca74719702]
cluster elki.clustering.em.models--><g id="cluster_elki.clustering.em.models"><path d="M8.5,6 L211.5,6 A3.75,3.75 0 0 1 214,8.5 L221,28.2969 L8851.5,28.2969 A2.5,2.5 0 0 1 8854,30.7969 L8854,1264.5 A2.5,2.5 0 0 1 8851.5,1267 L8.5,1267 A2.5,2.5 0 0 1 6,1264.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="221" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="202" x="10" y="20.9951">elki.clustering.em.models</text></g><!--MD5=[cecbe970d5f040c0fe9a9f8059a38b51]
class elki.clustering.em.models.EMClusterModelFactory--><a href="EMClusterModelFactory.html" target="_top" title="EMClusterModelFactory.html" xlink:actuate="onRequest" xlink:href="EMClusterModelFactory.html" xlink:show="new" xlink:title="EMClusterModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.EMClusterModelFactory"><rect codeLine="4" fill="#F1F1F1" height="80.5938" id="elki.clustering.em.models.EMClusterModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="754" x="6277" y="106"/><ellipse cx="6507.25" cy="122" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6503.1719,117.7656 L6503.1719,115.6094 L6510.5625,115.6094 L6510.5625,117.7656 L6508.0938,117.7656 L6508.0938,125.8438 L6510.5625,125.8438 L6510.5625,128 L6503.1719,128 L6503.1719,125.8438 L6505.6406,125.8438 L6505.6406,117.7656 L6503.1719,117.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="165" x="6527.75" y="126.8467">EMClusterModelFactory</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="118" x="6916" y="103"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="116" x="6917" y="115.1387">O, M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="6278" x2="7030" y1="138" y2="138"/><ellipse cx="6288" cy="151.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="115" x="6297" y="154.9951">INIT_ID: OptionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="6278" x2="7030" y1="162.2969" y2="162.2969"/><ellipse cx="6288" cy="175.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="728" x="6297" y="179.292">buildInitialModels(Relation&lt;? extends O&gt;, int): List&lt;? extends EMClusterModel&lt;O, M extends Model&gt;&gt;</text></g></a><!--MD5=[fbdb4644d64b4eeb5a0659dbc1a9732f]
class elki.clustering.em.models.BetulaClusterModel--><a href="BetulaClusterModel.html" target="_top" title="BetulaClusterModel.html" xlink:actuate="onRequest" xlink:href="BetulaClusterModel.html" xlink:show="new" xlink:title="BetulaClusterModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.BetulaClusterModel"><rect codeLine="9" fill="#F1F1F1" height="80.5938" id="elki.clustering.em.models.BetulaClusterModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="22" y="475"/><ellipse cx="117.75" cy="491" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M113.6719,486.7656 L113.6719,484.6094 L121.0625,484.6094 L121.0625,486.7656 L118.5938,486.7656 L118.5938,494.8438 L121.0625,494.8438 L121.0625,497 L113.6719,497 L113.6719,494.8438 L116.1406,494.8438 L116.1406,486.7656 L113.6719,486.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="138" x="138.25" y="495.8467">BetulaClusterModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="359" y1="507" y2="507"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="359" y1="515" y2="515"/><ellipse cx="33" cy="528.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="312" x="42" y="531.9951">estimateLogDensity(ClusterFeature): double</text><ellipse cx="33" cy="544.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="268" x="42" y="548.292">updateE(ClusterFeature, double): void</text></g></a><!--MD5=[cbb47f40d2c019143c2a536cde1a2cca]
class elki.clustering.em.models.TextbookSphericalGaussianModelFactory--><a href="TextbookSphericalGaussianModelFactory.html" target="_top" title="TextbookSphericalGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="TextbookSphericalGaussianModelFactory.html" xlink:show="new" xlink:title="TextbookSphericalGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TextbookSphericalGaussianModelFactory"><rect codeLine="14" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.TextbookSphericalGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="719" x="4505.5" y="467"/><ellipse cx="4718.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4721.7188,488.6406 Q4721.1406,488.9375 4720.5,489.0781 Q4719.8594,489.2344 4719.1563,489.2344 Q4716.6563,489.2344 4715.3281,487.5938 Q4714.0156,485.9375 4714.0156,482.8125 Q4714.0156,479.6875 4715.3281,478.0313 Q4716.6563,476.375 4719.1563,476.375 Q4719.8594,476.375 4720.5,476.5313 Q4721.1563,476.6875 4721.7188,476.9844 L4721.7188,479.7031 Q4721.0938,479.125 4720.5,478.8594 Q4719.9063,478.5781 4719.2813,478.5781 Q4717.9375,478.5781 4717.25,479.6563 Q4716.5625,480.7188 4716.5625,482.8125 Q4716.5625,484.9063 4717.25,485.9844 Q4717.9375,487.0469 4719.2813,487.0469 Q4719.9063,487.0469 4720.5,486.7813 Q4721.0938,486.5 4721.7188,485.9219 L4721.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="4739.25" y="487.8467">TextbookSphericalGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="4506.5" x2="5223.5" y1="499" y2="499"/><polygon fill="none" points="4516.5,507.6484,4520.5,511.6484,4516.5,515.6484,4512.5,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="4525.5" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="4506.5" x2="5223.5" y1="523.2969" y2="523.2969"/><ellipse cx="4516.5" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="428" x="4525.5" y="540.292">TextbookSphericalGaussianModelFactory(KMeansInitialization)</text><ellipse cx="4516.5" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="693" x="4525.5" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;TextbookSphericalGaussianModel&gt;</text></g></a><!--MD5=[0daf028cef858da20e8975117b14f034]
class elki.clustering.em.models.BetulaDiagonalGaussianModelFactory--><a href="BetulaDiagonalGaussianModelFactory.html" target="_top" title="BetulaDiagonalGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="BetulaDiagonalGaussianModelFactory.html" xlink:show="new" xlink:title="BetulaDiagonalGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.BetulaDiagonalGaussianModelFactory"><rect codeLine="26" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.BetulaDiagonalGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="709" x="2252.5" y="467"/><ellipse cx="2472.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2475.7188,488.6406 Q2475.1406,488.9375 2474.5,489.0781 Q2473.8594,489.2344 2473.1563,489.2344 Q2470.6563,489.2344 2469.3281,487.5938 Q2468.0156,485.9375 2468.0156,482.8125 Q2468.0156,479.6875 2469.3281,478.0313 Q2470.6563,476.375 2473.1563,476.375 Q2473.8594,476.375 2474.5,476.5313 Q2475.1563,476.6875 2475.7188,476.9844 L2475.7188,479.7031 Q2475.0938,479.125 2474.5,478.8594 Q2473.9063,478.5781 2473.2813,478.5781 Q2471.9375,478.5781 2471.25,479.6563 Q2470.5625,480.7188 2470.5625,482.8125 Q2470.5625,484.9063 2471.25,485.9844 Q2471.9375,487.0469 2473.2813,487.0469 Q2473.9063,487.0469 2474.5,486.7813 Q2475.0938,486.5 2475.7188,485.9219 L2475.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="2493.25" y="487.8467">BetulaDiagonalGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="2253.5" x2="2960.5" y1="499" y2="499"/><polygon fill="none" points="2263.5,507.6484,2267.5,511.6484,2263.5,515.6484,2259.5,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="2272.5" y="515.9951">initializer: AbstractCFKMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="2253.5" x2="2960.5" y1="523.2969" y2="523.2969"/><ellipse cx="2263.5" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="479" x="2272.5" y="540.292">BetulaDiagonalGaussianModelFactory(AbstractCFKMeansInitialization)</text><ellipse cx="2263.5" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="683" x="2272.5" y="556.5889">buildInitialModels(List&lt;? extends ClusterFeature&gt;, int, CFTree&lt;?&gt;): List&lt;DiagonalGaussianModel&gt;</text></g></a><!--MD5=[9557d105eea116ca26a94b3637485646]
class elki.clustering.em.models.MultivariateGaussianModelFactory--><a href="MultivariateGaussianModelFactory.html" target="_top" title="MultivariateGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="MultivariateGaussianModelFactory.html" xlink:show="new" xlink:title="MultivariateGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.MultivariateGaussianModelFactory"><rect codeLine="38" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.MultivariateGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="668" x="5260" y="467"/><ellipse cx="5473.25" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5476.2188,488.6406 Q5475.6406,488.9375 5475,489.0781 Q5474.3594,489.2344 5473.6563,489.2344 Q5471.1563,489.2344 5469.8281,487.5938 Q5468.5156,485.9375 5468.5156,482.8125 Q5468.5156,479.6875 5469.8281,478.0313 Q5471.1563,476.375 5473.6563,476.375 Q5474.3594,476.375 5475,476.5313 Q5475.6563,476.6875 5476.2188,476.9844 L5476.2188,479.7031 Q5475.5938,479.125 5475,478.8594 Q5474.4063,478.5781 5473.7813,478.5781 Q5472.4375,478.5781 5471.75,479.6563 Q5471.0625,480.7188 5471.0625,482.8125 Q5471.0625,484.9063 5471.75,485.9844 Q5472.4375,487.0469 5473.7813,487.0469 Q5474.4063,487.0469 5475,486.7813 Q5475.5938,486.5 5476.2188,485.9219 L5476.2188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="5493.75" y="487.8467">MultivariateGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="5261" x2="5927" y1="499" y2="499"/><polygon fill="none" points="5271,507.6484,5275,511.6484,5271,515.6484,5267,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="5280" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="5261" x2="5927" y1="523.2969" y2="523.2969"/><ellipse cx="5271" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="5280" y="540.292">MultivariateGaussianModelFactory(KMeansInitialization)</text><ellipse cx="5271" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="642" x="5280" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;MultivariateGaussianModel&gt;</text></g></a><!--MD5=[2654acdd9ef49369393edec2ef2a1d0b]
class elki.clustering.em.models.TwoPassMultivariateGaussianModel--><a href="TwoPassMultivariateGaussianModel.html" target="_top" title="TwoPassMultivariateGaussianModel.html" xlink:actuate="onRequest" xlink:href="TwoPassMultivariateGaussianModel.html" xlink:show="new" xlink:title="TwoPassMultivariateGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TwoPassMultivariateGaussianModel"><rect codeLine="50" fill="#F1F1F1" height="406.5313" id="elki.clustering.em.models.TwoPassMultivariateGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="461" x="395.5" y="312"/><ellipse cx="499.25" cy="328" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M502.2188,333.6406 Q501.6406,333.9375 501,334.0781 Q500.3594,334.2344 499.6563,334.2344 Q497.1563,334.2344 495.8281,332.5938 Q494.5156,330.9375 494.5156,327.8125 Q494.5156,324.6875 495.8281,323.0313 Q497.1563,321.375 499.6563,321.375 Q500.3594,321.375 501,321.5313 Q501.6563,321.6875 502.2188,321.9844 L502.2188,324.7031 Q501.5938,324.125 501,323.8594 Q500.4063,323.5781 499.7813,323.5781 Q498.4375,323.5781 497.75,324.6563 Q497.0625,325.7188 497.0625,327.8125 Q497.0625,329.9063 497.75,330.9844 Q498.4375,332.0469 499.7813,332.0469 Q500.4063,332.0469 501,331.7813 Q501.5938,331.5 502.2188,330.9219 L502.2188,333.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="519.75" y="332.8467">TwoPassMultivariateGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="396.5" x2="855.5" y1="344" y2="344"/><polygon fill="none" points="406.5,353.6484,402.5,359.6484,410.5,359.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="415.5" y="360.9951">mean: double[]</text><polygon fill="none" points="406.5,369.9453,402.5,375.9453,410.5,375.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="415.5" y="377.292">covariance: double[]</text><polygon fill="none" points="406.5,386.2422,402.5,392.2422,410.5,392.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="415.5" y="393.5889">chol: CholeskyDecomposition</text><polygon fill="none" points="406.5,402.5391,402.5,408.5391,410.5,408.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="415.5" y="409.8857">tmp: double[]</text><polygon fill="none" points="406.5,418.8359,402.5,424.8359,410.5,424.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="415.5" y="426.1826">logNorm: double</text><polygon fill="none" points="406.5,435.1328,402.5,441.1328,410.5,441.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="415.5" y="442.4795">logNormDet: double</text><polygon fill="none" points="406.5,451.4297,402.5,457.4297,410.5,457.4297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="415.5" y="458.7764">weight: double</text><polygon fill="none" points="406.5,467.7266,402.5,473.7266,410.5,473.7266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="415.5" y="475.0732">wsum: double</text><polygon fill="none" points="406.5,484.0234,402.5,490.0234,410.5,490.0234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="415.5" y="491.3701">priormatrix: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="396.5" x2="855.5" y1="498.6719" y2="498.6719"/><ellipse cx="406.5" cy="512.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="415.5" y="515.667">TwoPassMultivariateGaussianModel(double, double[])</text><ellipse cx="406.5" cy="528.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="435" x="415.5" y="531.9639">TwoPassMultivariateGaussianModel(double, double[], double[])</text><ellipse cx="406.5" cy="544.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="415.5" y="548.2607">beginEStep(): void</text><ellipse cx="406.5" cy="561.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="415.5" y="564.5576">needsTwoPass(): boolean</text><ellipse cx="406.5" cy="577.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="415.5" y="580.8545">firstPassE(NumberVector, double): void</text><ellipse cx="406.5" cy="593.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="415.5" y="597.1514">finalizeFirstPassE(): void</text><ellipse cx="406.5" cy="610.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="415.5" y="613.4482">updateE(NumberVector, double): void</text><ellipse cx="406.5" cy="626.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="415.5" y="629.7451">finalizeEStep(double, double): void</text><ellipse cx="406.5" cy="642.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="415.5" y="646.042">mahalanobisDistance(NumberVector): double</text><ellipse cx="406.5" cy="658.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="415.5" y="662.3389">estimateLogDensity(NumberVector): double</text><ellipse cx="406.5" cy="675.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="415.5" y="678.6357">getWeight(): double</text><ellipse cx="406.5" cy="691.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="415.5" y="694.9326">setWeight(double): void</text><ellipse cx="406.5" cy="707.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="415.5" y="711.2295">finalizeCluster(): EMModel</text></g></a><!--MD5=[1e36d250094a068e1730aa517c5daa2f]
class elki.clustering.em.models.DiagonalGaussianModel--><a href="DiagonalGaussianModel.html" target="_top" title="DiagonalGaussianModel.html" xlink:actuate="onRequest" xlink:href="DiagonalGaussianModel.html" xlink:show="new" xlink:title="DiagonalGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.DiagonalGaussianModel"><rect codeLine="75" fill="#F1F1F1" height="406.5313" id="elki.clustering.em.models.DiagonalGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="382" x="22" y="811.5"/><ellipse cx="125.75" cy="827.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M128.7188,833.1406 Q128.1406,833.4375 127.5,833.5781 Q126.8594,833.7344 126.1563,833.7344 Q123.6563,833.7344 122.3281,832.0938 Q121.0156,830.4375 121.0156,827.3125 Q121.0156,824.1875 122.3281,822.5313 Q123.6563,820.875 126.1563,820.875 Q126.8594,820.875 127.5,821.0313 Q128.1563,821.1875 128.7188,821.4844 L128.7188,824.2031 Q128.0938,823.625 127.5,823.3594 Q126.9063,823.0781 126.2813,823.0781 Q124.9375,823.0781 124.25,824.1563 Q123.5625,825.2188 123.5625,827.3125 Q123.5625,829.4063 124.25,830.4844 Q124.9375,831.5469 126.2813,831.5469 Q126.9063,831.5469 127.5,831.2813 Q128.0938,831 128.7188,830.4219 L128.7188,833.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="146.25" y="832.3467">DiagonalGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="403" y1="843.5" y2="843.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="854.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="42" y="860.4951">SINGULARITY_CHEAT: double</text><polygon fill="none" points="33,869.4453,29,875.4453,37,875.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="42" y="876.792">mean: double[]</text><polygon fill="none" points="33,885.7422,29,891.7422,37,891.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="42" y="893.0889">variances: double[]</text><polygon fill="none" points="33,902.0391,29,908.0391,37,908.0391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="42" y="909.3857">nmea: double[]</text><polygon fill="none" points="33,918.3359,29,924.3359,37,924.3359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="42" y="925.6826">logNorm: double</text><polygon fill="none" points="33,934.6328,29,940.6328,37,940.6328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="42" y="941.9795">logNormDet: double</text><polygon fill="none" points="33,950.9297,29,956.9297,37,956.9297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="42" y="958.2764">weight: double</text><polygon fill="none" points="33,967.2266,29,973.2266,37,973.2266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="42" y="974.5732">wsum: double</text><polygon fill="none" points="33,983.5234,29,989.5234,37,989.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="42" y="990.8701">priordiag: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="403" y1="998.1719" y2="998.1719"/><ellipse cx="33" cy="1011.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="42" y="1015.167">DiagonalGaussianModel(double, double[])</text><ellipse cx="33" cy="1028.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="42" y="1031.4639">DiagonalGaussianModel(double, double[], double[])</text><ellipse cx="33" cy="1044.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="42" y="1047.7607">beginEStep(): void</text><ellipse cx="33" cy="1060.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="42" y="1064.0576">updateE(NumberVector, double): void</text><ellipse cx="33" cy="1077.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="42" y="1080.3545">finalizeEStep(double, double): void</text><ellipse cx="33" cy="1093.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="42" y="1096.6514">mahalanobisDistance(double[]): double</text><ellipse cx="33" cy="1109.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="42" y="1112.9482">mahalanobisDistance(NumberVector): double</text><ellipse cx="33" cy="1125.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="42" y="1129.2451">estimateLogDensity(NumberVector): double</text><ellipse cx="33" cy="1142.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="42" y="1145.542">getWeight(): double</text><ellipse cx="33" cy="1158.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="42" y="1161.8389">setWeight(double): void</text><ellipse cx="33" cy="1174.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="42" y="1178.1357">finalizeCluster(): EMModel</text><ellipse cx="33" cy="1191.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="42" y="1194.4326">estimateLogDensity(ClusterFeature): double</text><ellipse cx="33" cy="1207.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="42" y="1210.7295">updateE(ClusterFeature, double): void</text></g></a><!--MD5=[f96593bbd1b4de4d47e9a23ec7a7e03d]
class elki.clustering.em.models.BetulaClusterModelFactory--><a href="BetulaClusterModelFactory.html" target="_top" title="BetulaClusterModelFactory.html" xlink:actuate="onRequest" xlink:href="BetulaClusterModelFactory.html" xlink:show="new" xlink:title="BetulaClusterModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.BetulaClusterModelFactory"><rect codeLine="100" fill="#F1F1F1" height="80.5938" id="elki.clustering.em.models.BetulaClusterModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="768" x="2969" y="106"/><ellipse cx="3161.75" cy="122" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3157.6719,117.7656 L3157.6719,115.6094 L3165.0625,115.6094 L3165.0625,117.7656 L3162.5938,117.7656 L3162.5938,125.8438 L3165.0625,125.8438 L3165.0625,128 L3157.6719,128 L3157.6719,125.8438 L3160.1406,125.8438 L3160.1406,117.7656 L3157.6719,117.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="3182.25" y="126.8467">BetulaClusterModelFactory</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="182" x="3558" y="103"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="180" x="3559" y="115.1387">M extends BetulaClusterModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="2970" x2="3736" y1="138" y2="138"/><ellipse cx="2980" cy="151.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="115" x="2989" y="154.9951">INIT_ID: OptionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="2970" x2="3736" y1="162.2969" y2="162.2969"/><ellipse cx="2980" cy="175.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="742" x="2989" y="179.292">buildInitialModels(List&lt;? extends ClusterFeature&gt;, int, CFTree&lt;?&gt;): List&lt;M extends BetulaClusterModel&gt;</text></g></a><!--MD5=[8252f982df678e0290a212d2afb4fad5]
class elki.clustering.em.models.SphericalGaussianModelFactory--><a href="SphericalGaussianModelFactory.html" target="_top" title="SphericalGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="SphericalGaussianModelFactory.html" xlink:show="new" xlink:title="SphericalGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.SphericalGaussianModelFactory"><rect codeLine="105" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.SphericalGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="654" x="5963" y="467"/><ellipse cx="6176.25" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6179.2188,488.6406 Q6178.6406,488.9375 6178,489.0781 Q6177.3594,489.2344 6176.6563,489.2344 Q6174.1563,489.2344 6172.8281,487.5938 Q6171.5156,485.9375 6171.5156,482.8125 Q6171.5156,479.6875 6172.8281,478.0313 Q6174.1563,476.375 6176.6563,476.375 Q6177.3594,476.375 6178,476.5313 Q6178.6563,476.6875 6179.2188,476.9844 L6179.2188,479.7031 Q6178.5938,479.125 6178,478.8594 Q6177.4063,478.5781 6176.7813,478.5781 Q6175.4375,478.5781 6174.75,479.6563 Q6174.0625,480.7188 6174.0625,482.8125 Q6174.0625,484.9063 6174.75,485.9844 Q6175.4375,487.0469 6176.7813,487.0469 Q6177.4063,487.0469 6178,486.7813 Q6178.5938,486.5 6179.2188,485.9219 L6179.2188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="6196.75" y="487.8467">SphericalGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="5964" x2="6616" y1="499" y2="499"/><polygon fill="none" points="5974,507.6484,5978,511.6484,5974,515.6484,5970,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="5983" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="5964" x2="6616" y1="523.2969" y2="523.2969"/><ellipse cx="5974" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="5983" y="540.292">SphericalGaussianModelFactory(KMeansInitialization)</text><ellipse cx="5974" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="628" x="5983" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;SphericalGaussianModel&gt;</text></g></a><!--MD5=[b3d1f868989c6ffd57add2ff87c02431]
class elki.clustering.em.models.BetulaSphericalGaussianModelFactory--><a href="BetulaSphericalGaussianModelFactory.html" target="_top" title="BetulaSphericalGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="BetulaSphericalGaussianModelFactory.html" xlink:show="new" xlink:title="BetulaSphericalGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.BetulaSphericalGaussianModelFactory"><rect codeLine="117" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.BetulaSphericalGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="712" x="2997" y="467"/><ellipse cx="3217.25" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3220.2188,488.6406 Q3219.6406,488.9375 3219,489.0781 Q3218.3594,489.2344 3217.6563,489.2344 Q3215.1563,489.2344 3213.8281,487.5938 Q3212.5156,485.9375 3212.5156,482.8125 Q3212.5156,479.6875 3213.8281,478.0313 Q3215.1563,476.375 3217.6563,476.375 Q3218.3594,476.375 3219,476.5313 Q3219.6563,476.6875 3220.2188,476.9844 L3220.2188,479.7031 Q3219.5938,479.125 3219,478.8594 Q3218.4063,478.5781 3217.7813,478.5781 Q3216.4375,478.5781 3215.75,479.6563 Q3215.0625,480.7188 3215.0625,482.8125 Q3215.0625,484.9063 3215.75,485.9844 Q3216.4375,487.0469 3217.7813,487.0469 Q3218.4063,487.0469 3219,486.7813 Q3219.5938,486.5 3220.2188,485.9219 L3220.2188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="3237.75" y="487.8467">BetulaSphericalGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="2998" x2="3708" y1="499" y2="499"/><polygon fill="none" points="3008,507.6484,3012,511.6484,3008,515.6484,3004,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="3017" y="515.9951">initializer: AbstractCFKMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="2998" x2="3708" y1="523.2969" y2="523.2969"/><ellipse cx="3008" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="482" x="3017" y="540.292">BetulaSphericalGaussianModelFactory(AbstractCFKMeansInitialization)</text><ellipse cx="3008" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="686" x="3017" y="556.5889">buildInitialModels(List&lt;? extends ClusterFeature&gt;, int, CFTree&lt;?&gt;): List&lt;SphericalGaussianModel&gt;</text></g></a><!--MD5=[62debefa9d1ecf319664a2ddb0b12a15]
class elki.clustering.em.models.MultivariateGaussianModel--><a href="MultivariateGaussianModel.html" target="_top" title="MultivariateGaussianModel.html" xlink:actuate="onRequest" xlink:href="MultivariateGaussianModel.html" xlink:show="new" xlink:title="MultivariateGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.MultivariateGaussianModel"><rect codeLine="129" fill="#F1F1F1" height="471.7188" id="elki.clustering.em.models.MultivariateGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="559" x="439.5" y="779"/><ellipse cx="623.25" cy="795" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M626.2188,800.6406 Q625.6406,800.9375 625,801.0781 Q624.3594,801.2344 623.6563,801.2344 Q621.1563,801.2344 619.8281,799.5938 Q618.5156,797.9375 618.5156,794.8125 Q618.5156,791.6875 619.8281,790.0313 Q621.1563,788.375 623.6563,788.375 Q624.3594,788.375 625,788.5313 Q625.6563,788.6875 626.2188,788.9844 L626.2188,791.7031 Q625.5938,791.125 625,790.8594 Q624.4063,790.5781 623.7813,790.5781 Q622.4375,790.5781 621.75,791.6563 Q621.0625,792.7188 621.0625,794.8125 Q621.0625,796.9063 621.75,797.9844 Q622.4375,799.0469 623.7813,799.0469 Q624.4063,799.0469 625,798.7813 Q625.5938,798.5 626.2188,797.9219 L626.2188,800.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="643.75" y="799.8467">MultivariateGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="440.5" x2="997.5" y1="811" y2="811"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="447.5" y="821.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="459.5" y="827.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="447.5" y="837.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="459.5" y="844.292">SINGULARITY_CHEAT: double</text><polygon fill="none" points="450.5,853.2422,446.5,859.2422,454.5,859.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="459.5" y="860.5889">mean: double[]</text><polygon fill="none" points="450.5,869.5391,446.5,875.5391,454.5,875.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="459.5" y="876.8857">covariance: double[]</text><polygon fill="none" points="450.5,885.8359,446.5,891.8359,454.5,891.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="459.5" y="893.1826">chol: CholeskyDecomposition</text><polygon fill="none" points="450.5,902.1328,446.5,908.1328,454.5,908.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="459.5" y="909.4795">nmea: double[]</text><polygon fill="none" points="450.5,918.4297,446.5,924.4297,454.5,924.4297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="459.5" y="925.7764">logNorm: double</text><polygon fill="none" points="450.5,934.7266,446.5,940.7266,454.5,940.7266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="459.5" y="942.0732">logNormDet: double</text><polygon fill="none" points="450.5,951.0234,446.5,957.0234,454.5,957.0234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="459.5" y="958.3701">weight: double</text><polygon fill="none" points="450.5,967.3203,446.5,973.3203,454.5,973.3203" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="459.5" y="974.667">wsum: double</text><polygon fill="none" points="450.5,983.6172,446.5,989.6172,454.5,989.6172" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="459.5" y="990.9639">priormatrix: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="440.5" x2="997.5" y1="998.2656" y2="998.2656"/><ellipse cx="450.5" cy="1011.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="459.5" y="1015.2607">MultivariateGaussianModel(double, double[])</text><ellipse cx="450.5" cy="1028.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="459.5" y="1031.5576">MultivariateGaussianModel(double, double[], double[])</text><ellipse cx="450.5" cy="1044.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="459.5" y="1047.8545">beginEStep(): void</text><ellipse cx="450.5" cy="1060.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="459.5" y="1064.1514">updateE(NumberVector, double): void</text><ellipse cx="450.5" cy="1077.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="459.5" y="1080.4482">finalizeEStep(double, double): void</text><polygon fill="#FFFF44" points="450.5,1088.3984,454.5,1092.3984,450.5,1096.3984,446.5,1092.3984" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="533" x="459.5" y="1096.7451">updateCholesky(double[], CholeskyDecomposition): CholeskyDecomposition</text><polygon fill="#FFFF44" points="450.5,1104.6953,454.5,1108.6953,450.5,1112.6953,446.5,1108.6953" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="394" x="459.5" y="1113.042">getHalfLogDeterminant(CholeskyDecomposition): double</text><ellipse cx="450.5" cy="1125.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="459.5" y="1129.3389">mahalanobisDistance(double[]): double</text><ellipse cx="450.5" cy="1142.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="459.5" y="1145.6357">mahalanobisDistance(NumberVector): double</text><ellipse cx="450.5" cy="1158.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="459.5" y="1161.9326">estimateLogDensity(NumberVector): double</text><ellipse cx="450.5" cy="1174.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="459.5" y="1178.2295">getWeight(): double</text><ellipse cx="450.5" cy="1191.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="459.5" y="1194.5264">setWeight(double): void</text><ellipse cx="450.5" cy="1207.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="459.5" y="1210.8232">finalizeCluster(): EMModel</text><ellipse cx="450.5" cy="1223.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="459.5" y="1227.1201">estimateLogDensity(ClusterFeature): double</text><ellipse cx="450.5" cy="1240.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="459.5" y="1243.417">updateE(ClusterFeature, double): void</text></g></a><!--MD5=[347e51fc846265a4949787d11bdac0a4]
class elki.clustering.em.models.TextbookMultivariateGaussianModel--><a href="TextbookMultivariateGaussianModel.html" target="_top" title="TextbookMultivariateGaussianModel.html" xlink:actuate="onRequest" xlink:href="TextbookMultivariateGaussianModel.html" xlink:show="new" xlink:title="TextbookMultivariateGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TextbookMultivariateGaussianModel"><rect codeLine="158" fill="#F1F1F1" height="406.5313" id="elki.clustering.em.models.TextbookMultivariateGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="850" x="892" y="312"/><ellipse cx="1188.75" cy="328" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1191.7188,333.6406 Q1191.1406,333.9375 1190.5,334.0781 Q1189.8594,334.2344 1189.1563,334.2344 Q1186.6563,334.2344 1185.3281,332.5938 Q1184.0156,330.9375 1184.0156,327.8125 Q1184.0156,324.6875 1185.3281,323.0313 Q1186.6563,321.375 1189.1563,321.375 Q1189.8594,321.375 1190.5,321.5313 Q1191.1563,321.6875 1191.7188,321.9844 L1191.7188,324.7031 Q1191.0938,324.125 1190.5,323.8594 Q1189.9063,323.5781 1189.2813,323.5781 Q1187.9375,323.5781 1187.25,324.6563 Q1186.5625,325.7188 1186.5625,327.8125 Q1186.5625,329.9063 1187.25,330.9844 Q1187.9375,332.0469 1189.2813,332.0469 Q1189.9063,332.0469 1190.5,331.7813 Q1191.0938,331.5 1191.7188,330.9219 L1191.7188,333.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="1209.25" y="332.8467">TextbookMultivariateGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="893" x2="1741" y1="344" y2="344"/><polygon fill="none" points="903,353.6484,899,359.6484,907,359.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="912" y="360.9951">mean: double[]</text><polygon fill="none" points="903,369.9453,899,375.9453,907,375.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="912" y="377.292">covariance: double[]</text><polygon fill="none" points="903,386.2422,899,392.2422,907,392.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="912" y="393.5889">chol: CholeskyDecomposition</text><polygon fill="none" points="903,402.5391,899,408.5391,907,408.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="912" y="409.8857">tmp: double[]</text><polygon fill="none" points="903,418.8359,899,424.8359,907,424.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="912" y="426.1826">logNorm: double</text><polygon fill="none" points="903,435.1328,899,441.1328,907,441.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="912" y="442.4795">logNormDet: double</text><polygon fill="none" points="903,451.4297,899,457.4297,907,457.4297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="912" y="458.7764">weight: double</text><polygon fill="none" points="903,467.7266,899,473.7266,907,473.7266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="912" y="475.0732">wsum: double</text><polygon fill="none" points="903,484.0234,899,490.0234,907,490.0234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="912" y="491.3701">priormatrix: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="893" x2="1741" y1="498.6719" y2="498.6719"/><ellipse cx="903" cy="512.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="912" y="515.667">TextbookMultivariateGaussianModel(double, double[])</text><ellipse cx="903" cy="528.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="438" x="912" y="531.9639">TextbookMultivariateGaussianModel(double, double[], double[])</text><ellipse cx="903" cy="544.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="912" y="548.2607">beginEStep(): void</text><ellipse cx="903" cy="561.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="912" y="564.5576">updateE(NumberVector, double): void</text><ellipse cx="903" cy="577.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="912" y="580.8545">updateE(double[], double[], double, double): void</text><ellipse cx="903" cy="593.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="912" y="597.1514">finalizeEStep(double, double): void</text><ellipse cx="903" cy="610.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="912" y="613.4482">mahalanobisDistance(NumberVector): double</text><ellipse cx="903" cy="626.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="912" y="629.7451">estimateLogDensity(NumberVector): double</text><ellipse cx="903" cy="642.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="912" y="646.042">getWeight(): double</text><ellipse cx="903" cy="658.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="912" y="662.3389">setWeight(double): void</text><ellipse cx="903" cy="675.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="912" y="678.6357">finalizeCluster(): EMModel</text><ellipse cx="903" cy="691.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="912" y="694.9326">clone(TextbookMultivariateGaussianModel): void</text><ellipse cx="903" cy="707.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="824" x="912" y="711.2295">calculateModelLimits(double[], double[], ConstrainedQuadraticProblemSolver, double, double[], double[], double[]): void</text></g></a><!--MD5=[2a0e4a4ea4f417b0e57b4e220ab0a029]
class elki.clustering.em.models.TextbookMultivariateGaussianModelFactory--><a href="TextbookMultivariateGaussianModelFactory.html" target="_top" title="TextbookMultivariateGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="TextbookMultivariateGaussianModelFactory.html" xlink:show="new" xlink:title="TextbookMultivariateGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TextbookMultivariateGaussianModelFactory"><rect codeLine="183" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.TextbookMultivariateGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="733" x="6652.5" y="467"/><ellipse cx="6865.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6868.7188,488.6406 Q6868.1406,488.9375 6867.5,489.0781 Q6866.8594,489.2344 6866.1563,489.2344 Q6863.6563,489.2344 6862.3281,487.5938 Q6861.0156,485.9375 6861.0156,482.8125 Q6861.0156,479.6875 6862.3281,478.0313 Q6863.6563,476.375 6866.1563,476.375 Q6866.8594,476.375 6867.5,476.5313 Q6868.1563,476.6875 6868.7188,476.9844 L6868.7188,479.7031 Q6868.0938,479.125 6867.5,478.8594 Q6866.9063,478.5781 6866.2813,478.5781 Q6864.9375,478.5781 6864.25,479.6563 Q6863.5625,480.7188 6863.5625,482.8125 Q6863.5625,484.9063 6864.25,485.9844 Q6864.9375,487.0469 6866.2813,487.0469 Q6866.9063,487.0469 6867.5,486.7813 Q6868.0938,486.5 6868.7188,485.9219 L6868.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="6886.25" y="487.8467">TextbookMultivariateGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="6653.5" x2="7384.5" y1="499" y2="499"/><polygon fill="none" points="6663.5,507.6484,6667.5,511.6484,6663.5,515.6484,6659.5,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="6672.5" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="6653.5" x2="7384.5" y1="523.2969" y2="523.2969"/><ellipse cx="6663.5" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="6672.5" y="540.292">TextbookMultivariateGaussianModelFactory(KMeansInitialization)</text><ellipse cx="6663.5" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="707" x="6672.5" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;TextbookMultivariateGaussianModel&gt;</text></g></a><!--MD5=[d369e4cc10d96864ec3e16996acd9e58]
class elki.clustering.em.models.EMClusterModel--><a href="EMClusterModel.html" target="_top" title="EMClusterModel.html" xlink:actuate="onRequest" xlink:href="EMClusterModel.html" xlink:show="new" xlink:title="EMClusterModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.EMClusterModel"><rect codeLine="195" fill="#F1F1F1" height="210.9688" id="elki.clustering.em.models.EMClusterModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="273" x="834.5" y="41"/><ellipse cx="853.1" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M849.0219,52.7656 L849.0219,50.6094 L856.4125,50.6094 L856.4125,52.7656 L853.9438,52.7656 L853.9438,60.8438 L856.4125,60.8438 L856.4125,63 L849.0219,63 L849.0219,60.8438 L851.4906,60.8438 L851.4906,52.7656 L849.0219,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="867.9" y="61.8467">EMClusterModel</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="118" x="992.5" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="116" x="993.5" y="50.1387">O, M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="835.5" x2="1106.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="835.5" x2="1106.5" y1="81" y2="81"/><ellipse cx="845.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="854.5" y="97.9951">beginEStep(): void</text><ellipse cx="845.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="854.5" y="114.292">needsTwoPass(): boolean</text><ellipse cx="845.5" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="854.5" y="130.5889">firstPassE(O, double): void</text><ellipse cx="845.5" cy="143.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="854.5" y="146.8857">finalizeFirstPassE(): void</text><ellipse cx="845.5" cy="159.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="854.5" y="163.1826">updateE(O, double): void</text><ellipse cx="845.5" cy="176.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="247" x="854.5" y="179.4795">finalizeEStep(double, double): void</text><ellipse cx="845.5" cy="192.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="220" x="854.5" y="195.7764">estimateLogDensity(O): double</text><ellipse cx="845.5" cy="208.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="238" x="854.5" y="212.0732">finalizeCluster(): M extends Model</text><ellipse cx="845.5" cy="225.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="141" x="854.5" y="228.3701">getWeight(): double</text><ellipse cx="845.5" cy="241.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="169" x="854.5" y="244.667">setWeight(double): void</text></g></a><!--MD5=[6f300476e5dc345168a9191bd34d7ffc]
class elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory--><a href="TwoPassMultivariateGaussianModelFactory.html" target="_top" title="TwoPassMultivariateGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="TwoPassMultivariateGaussianModelFactory.html" xlink:show="new" xlink:title="TwoPassMultivariateGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory"><rect codeLine="208" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730" x="7421" y="467"/><ellipse cx="7634.25" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7637.2188,488.6406 Q7636.6406,488.9375 7636,489.0781 Q7635.3594,489.2344 7634.6563,489.2344 Q7632.1563,489.2344 7630.8281,487.5938 Q7629.5156,485.9375 7629.5156,482.8125 Q7629.5156,479.6875 7630.8281,478.0313 Q7632.1563,476.375 7634.6563,476.375 Q7635.3594,476.375 7636,476.5313 Q7636.6563,476.6875 7637.2188,476.9844 L7637.2188,479.7031 Q7636.5938,479.125 7636,478.8594 Q7635.4063,478.5781 7634.7813,478.5781 Q7633.4375,478.5781 7632.75,479.6563 Q7632.0625,480.7188 7632.0625,482.8125 Q7632.0625,484.9063 7632.75,485.9844 Q7633.4375,487.0469 7634.7813,487.0469 Q7635.4063,487.0469 7636,486.7813 Q7636.5938,486.5 7637.2188,485.9219 L7637.2188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="7654.75" y="487.8467">TwoPassMultivariateGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="7422" x2="8150" y1="499" y2="499"/><polygon fill="none" points="7432,507.6484,7436,511.6484,7432,515.6484,7428,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="7441" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="7422" x2="8150" y1="523.2969" y2="523.2969"/><ellipse cx="7432" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439" x="7441" y="540.292">TwoPassMultivariateGaussianModelFactory(KMeansInitialization)</text><ellipse cx="7432" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="704" x="7441" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;TwoPassMultivariateGaussianModel&gt;</text></g></a><!--MD5=[0c4a1eaf65519c84cbb707ff28b9708b]
class elki.clustering.em.models.TextbookSphericalGaussianModel--><a href="TextbookSphericalGaussianModel.html" target="_top" title="TextbookSphericalGaussianModel.html" xlink:actuate="onRequest" xlink:href="TextbookSphericalGaussianModel.html" xlink:show="new" xlink:title="TextbookSphericalGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TextbookSphericalGaussianModel"><rect codeLine="220" fill="#F1F1F1" height="357.6406" id="elki.clustering.em.models.TextbookSphericalGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="440" x="1777" y="336.5"/><ellipse cx="1875.75" cy="352.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1878.7188,358.1406 Q1878.1406,358.4375 1877.5,358.5781 Q1876.8594,358.7344 1876.1563,358.7344 Q1873.6563,358.7344 1872.3281,357.0938 Q1871.0156,355.4375 1871.0156,352.3125 Q1871.0156,349.1875 1872.3281,347.5313 Q1873.6563,345.875 1876.1563,345.875 Q1876.8594,345.875 1877.5,346.0313 Q1878.1563,346.1875 1878.7188,346.4844 L1878.7188,349.2031 Q1878.0938,348.625 1877.5,348.3594 Q1876.9063,348.0781 1876.2813,348.0781 Q1874.9375,348.0781 1874.25,349.1563 Q1873.5625,350.2188 1873.5625,352.3125 Q1873.5625,354.4063 1874.25,355.4844 Q1874.9375,356.5469 1876.2813,356.5469 Q1876.9063,356.5469 1877.5,356.2813 Q1878.0938,356 1878.7188,355.4219 L1878.7188,358.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1896.25" y="357.3467">TextbookSphericalGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="1778" x2="2216" y1="368.5" y2="368.5"/><polygon fill="none" points="1788,378.1484,1784,384.1484,1792,384.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1797" y="385.4951">mean: double[]</text><polygon fill="none" points="1788,394.4453,1784,400.4453,1792,400.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1797" y="401.792">variance: double</text><polygon fill="none" points="1788,410.7422,1784,416.7422,1792,416.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1797" y="418.0889">nmea: double[]</text><polygon fill="none" points="1788,427.0391,1784,433.0391,1792,433.0391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1797" y="434.3857">logNorm: double</text><polygon fill="none" points="1788,443.3359,1784,449.3359,1792,449.3359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1797" y="450.6826">logNormDet: double</text><polygon fill="none" points="1788,459.6328,1784,465.6328,1792,465.6328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1797" y="466.9795">weight: double</text><polygon fill="none" points="1788,475.9297,1784,481.9297,1792,481.9297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1797" y="483.2764">wsum: double</text><polygon fill="none" points="1788,492.2266,1784,498.2266,1792,498.2266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1797" y="499.5732">priorvar: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="1778" x2="2216" y1="506.875" y2="506.875"/><ellipse cx="1788" cy="520.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="1797" y="523.8701">TextbookSphericalGaussianModel(double, double[])</text><ellipse cx="1788" cy="536.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="414" x="1797" y="540.167">TextbookSphericalGaussianModel(double, double[], double)</text><ellipse cx="1788" cy="553.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1797" y="556.4639">beginEStep(): void</text><ellipse cx="1788" cy="569.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="1797" y="572.7607">updateE(NumberVector, double): void</text><ellipse cx="1788" cy="585.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="1797" y="589.0576">finalizeEStep(double, double): void</text><ellipse cx="1788" cy="602.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="1797" y="605.3545">mahalanobisDistance(double[]): double</text><ellipse cx="1788" cy="618.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="1797" y="621.6514">mahalanobisDistance(NumberVector): double</text><ellipse cx="1788" cy="634.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="1797" y="637.9482">estimateLogDensity(NumberVector): double</text><ellipse cx="1788" cy="650.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1797" y="654.2451">getWeight(): double</text><ellipse cx="1788" cy="667.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1797" y="670.542">setWeight(double): void</text><ellipse cx="1788" cy="683.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1797" y="686.8389">finalizeCluster(): EMModel</text></g></a><!--MD5=[d7f4eca853ef9154df47c0d4d98ede34]
class elki.clustering.em.models.BetulaMultivariateGaussianModelFactory--><a href="BetulaMultivariateGaussianModelFactory.html" target="_top" title="BetulaMultivariateGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="BetulaMultivariateGaussianModelFactory.html" xlink:show="new" xlink:title="BetulaMultivariateGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.BetulaMultivariateGaussianModelFactory"><rect codeLine="242" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.BetulaMultivariateGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="726" x="3744" y="467"/><ellipse cx="3964.25" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3967.2188,488.6406 Q3966.6406,488.9375 3966,489.0781 Q3965.3594,489.2344 3964.6563,489.2344 Q3962.1563,489.2344 3960.8281,487.5938 Q3959.5156,485.9375 3959.5156,482.8125 Q3959.5156,479.6875 3960.8281,478.0313 Q3962.1563,476.375 3964.6563,476.375 Q3965.3594,476.375 3966,476.5313 Q3966.6563,476.6875 3967.2188,476.9844 L3967.2188,479.7031 Q3966.5938,479.125 3966,478.8594 Q3965.4063,478.5781 3964.7813,478.5781 Q3963.4375,478.5781 3962.75,479.6563 Q3962.0625,480.7188 3962.0625,482.8125 Q3962.0625,484.9063 3962.75,485.9844 Q3963.4375,487.0469 3964.7813,487.0469 Q3965.4063,487.0469 3966,486.7813 Q3966.5938,486.5 3967.2188,485.9219 L3967.2188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="3984.75" y="487.8467">BetulaMultivariateGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="3745" x2="4469" y1="499" y2="499"/><polygon fill="none" points="3755,507.6484,3759,511.6484,3755,515.6484,3751,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="3764" y="515.9951">initializer: AbstractCFKMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="3745" x2="4469" y1="523.2969" y2="523.2969"/><ellipse cx="3755" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="3764" y="540.292">BetulaMultivariateGaussianModelFactory(AbstractCFKMeansInitialization)</text><ellipse cx="3755" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="700" x="3764" y="556.5889">buildInitialModels(List&lt;? extends ClusterFeature&gt;, int, CFTree&lt;?&gt;): List&lt;MultivariateGaussianModel&gt;</text></g></a><!--MD5=[8b8baf528793dd3cf6befd0a7f9b2f45]
class elki.clustering.em.models.DiagonalGaussianModelFactory--><a href="DiagonalGaussianModelFactory.html" target="_top" title="DiagonalGaussianModelFactory.html" xlink:actuate="onRequest" xlink:href="DiagonalGaussianModelFactory.html" xlink:show="new" xlink:title="DiagonalGaussianModelFactory.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.DiagonalGaussianModelFactory"><rect codeLine="254" fill="#F1F1F1" height="96.8906" id="elki.clustering.em.models.DiagonalGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="651" x="8186.5" y="467"/><ellipse cx="8399.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8402.7188,488.6406 Q8402.1406,488.9375 8401.5,489.0781 Q8400.8594,489.2344 8400.1563,489.2344 Q8397.6563,489.2344 8396.3281,487.5938 Q8395.0156,485.9375 8395.0156,482.8125 Q8395.0156,479.6875 8396.3281,478.0313 Q8397.6563,476.375 8400.1563,476.375 Q8400.8594,476.375 8401.5,476.5313 Q8402.1563,476.6875 8402.7188,476.9844 L8402.7188,479.7031 Q8402.0938,479.125 8401.5,478.8594 Q8400.9063,478.5781 8400.2813,478.5781 Q8398.9375,478.5781 8398.25,479.6563 Q8397.5625,480.7188 8397.5625,482.8125 Q8397.5625,484.9063 8398.25,485.9844 Q8398.9375,487.0469 8400.2813,487.0469 Q8400.9063,487.0469 8401.5,486.7813 Q8402.0938,486.5 8402.7188,485.9219 L8402.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="8420.25" y="487.8467">DiagonalGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="8187.5" x2="8836.5" y1="499" y2="499"/><polygon fill="none" points="8197.5,507.6484,8201.5,511.6484,8197.5,515.6484,8193.5,511.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="8206.5" y="515.9951">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="8187.5" x2="8836.5" y1="523.2969" y2="523.2969"/><ellipse cx="8197.5" cy="536.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="8206.5" y="540.292">DiagonalGaussianModelFactory(KMeansInitialization)</text><ellipse cx="8197.5" cy="553.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="625" x="8206.5" y="556.5889">buildInitialModels(Relation&lt;? extends NumberVector&gt;, int): List&lt;DiagonalGaussianModel&gt;</text></g></a><!--MD5=[16625460f0f7e297306eb8ae0e3c0c34]
class elki.clustering.em.models.SphericalGaussianModel--><a href="SphericalGaussianModel.html" target="_top" title="SphericalGaussianModel.html" xlink:actuate="onRequest" xlink:href="SphericalGaussianModel.html" xlink:show="new" xlink:title="SphericalGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.SphericalGaussianModel"><rect codeLine="266" fill="#F1F1F1" height="406.5313" id="elki.clustering.em.models.SphericalGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="375" x="1033.5" y="811.5"/><ellipse cx="1132.25" cy="827.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1135.2188,833.1406 Q1134.6406,833.4375 1134,833.5781 Q1133.3594,833.7344 1132.6563,833.7344 Q1130.1563,833.7344 1128.8281,832.0938 Q1127.5156,830.4375 1127.5156,827.3125 Q1127.5156,824.1875 1128.8281,822.5313 Q1130.1563,820.875 1132.6563,820.875 Q1133.3594,820.875 1134,821.0313 Q1134.6563,821.1875 1135.2188,821.4844 L1135.2188,824.2031 Q1134.5938,823.625 1134,823.3594 Q1133.4063,823.0781 1132.7813,823.0781 Q1131.4375,823.0781 1130.75,824.1563 Q1130.0625,825.2188 1130.0625,827.3125 Q1130.0625,829.4063 1130.75,830.4844 Q1131.4375,831.5469 1132.7813,831.5469 Q1133.4063,831.5469 1134,831.2813 Q1134.5938,831 1135.2188,830.4219 L1135.2188,833.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1152.75" y="832.3467">SphericalGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="1034.5" x2="1407.5" y1="843.5" y2="843.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1041.5" y="854.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="1053.5" y="860.4951">SINGULARITY_CHEAT: double</text><polygon fill="none" points="1044.5,869.4453,1040.5,875.4453,1048.5,875.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1053.5" y="876.792">mean: double[]</text><polygon fill="none" points="1044.5,885.7422,1040.5,891.7422,1048.5,891.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1053.5" y="893.0889">variance: double</text><polygon fill="none" points="1044.5,902.0391,1040.5,908.0391,1048.5,908.0391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1053.5" y="909.3857">nmea: double[]</text><polygon fill="none" points="1044.5,918.3359,1040.5,924.3359,1048.5,924.3359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1053.5" y="925.6826">logNorm: double</text><polygon fill="none" points="1044.5,934.6328,1040.5,940.6328,1048.5,940.6328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1053.5" y="941.9795">logNormDet: double</text><polygon fill="none" points="1044.5,950.9297,1040.5,956.9297,1048.5,956.9297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="1053.5" y="958.2764">weight: double</text><polygon fill="none" points="1044.5,967.2266,1040.5,973.2266,1048.5,973.2266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1053.5" y="974.5732">wsum: double</text><polygon fill="none" points="1044.5,983.5234,1040.5,989.5234,1048.5,989.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1053.5" y="990.8701">priorvar: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="1034.5" x2="1407.5" y1="998.1719" y2="998.1719"/><ellipse cx="1044.5" cy="1011.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="1053.5" y="1015.167">SphericalGaussianModel(double, double[])</text><ellipse cx="1044.5" cy="1028.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="1053.5" y="1031.4639">SphericalGaussianModel(double, double[], double)</text><ellipse cx="1044.5" cy="1044.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1053.5" y="1047.7607">beginEStep(): void</text><ellipse cx="1044.5" cy="1060.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="1053.5" y="1064.0576">updateE(NumberVector, double): void</text><ellipse cx="1044.5" cy="1077.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="1053.5" y="1080.3545">finalizeEStep(double, double): void</text><ellipse cx="1044.5" cy="1093.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="1053.5" y="1096.6514">mahalanobisDistance(double[]): double</text><ellipse cx="1044.5" cy="1109.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="1053.5" y="1112.9482">mahalanobisDistance(NumberVector): double</text><ellipse cx="1044.5" cy="1125.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="1053.5" y="1129.2451">estimateLogDensity(NumberVector): double</text><ellipse cx="1044.5" cy="1142.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1053.5" y="1145.542">getWeight(): double</text><ellipse cx="1044.5" cy="1158.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1053.5" y="1161.8389">setWeight(double): void</text><ellipse cx="1044.5" cy="1174.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1053.5" y="1178.1357">finalizeCluster(): EMModel</text><ellipse cx="1044.5" cy="1191.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1053.5" y="1194.4326">estimateLogDensity(ClusterFeature): double</text><ellipse cx="1044.5" cy="1207.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="1053.5" y="1210.7295">updateE(ClusterFeature, double): void</text></g></a><!--MD5=[568a868e3da584a6eb819c18d2048f98]
reverse link elki.clustering.em.models.EMClusterModel to elki.clustering.em.models.BetulaClusterModel--><g id="link_elki.clustering.em.models.EMClusterModel_elki.clustering.em.models.BetulaClusterModel"><path codeLine="291" d="M814.4,166.84 C689.06,187.77 512.59,229.88 378,312 C308.97,354.13 249.58,428.88 217.19,474.83 " fill="none" id="elki.clustering.em.models.EMClusterModel-backto-elki.clustering.em.models.BetulaClusterModel" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="813.59,159.88,834.46,163.59,815.83,173.7,813.59,159.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7e7020080ecadc5ca4082fe5c45aa202]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.TextbookSphericalGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.TextbookSphericalGaussianModelFactory"><path codeLine="292" d="M6256.68,177.14 C5907,206.27 5425.91,254.63 5243,312 C5128.28,347.98 5007.86,419.16 4934.6,466.8 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.TextbookSphericalGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6256.12,170.16,6276.63,175.49,6257.27,184.12,6256.12,170.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[860c5ce21aceb48bb5551df46bb16b50]
reverse link elki.clustering.em.models.BetulaClusterModelFactory to elki.clustering.em.models.BetulaDiagonalGaussianModelFactory--><g id="link_elki.clustering.em.models.BetulaClusterModelFactory_elki.clustering.em.models.BetulaDiagonalGaussianModelFactory"><path codeLine="295" d="M3238.5,195.11 C3164.13,226.75 3065.47,270.04 2980,312 C2878.63,361.76 2764.96,424.51 2690.04,466.87 " fill="none" id="elki.clustering.em.models.BetulaClusterModelFactory-backto-elki.clustering.em.models.BetulaDiagonalGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3236.2,188.49,3257.35,187.13,3241.66,201.38,3236.2,188.49" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9262a21ba5a21f50191d70b25f203ba4]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.MultivariateGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.MultivariateGaussianModelFactory"><path codeLine="298" d="M6383.64,190.96 C6249.23,217.39 6086.02,256.86 5946,312 C5841.86,353.01 5731.52,421.03 5662.71,466.79 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.MultivariateGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6382.71,184.01,6403.68,187.08,6385.38,197.76,6382.71,184.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3a34e6e164a248e1911a1a5008748778]
reverse link elki.clustering.em.models.EMClusterModel to elki.clustering.em.models.TwoPassMultivariateGaussianModel--><g id="link_elki.clustering.em.models.EMClusterModel_elki.clustering.em.models.TwoPassMultivariateGaussianModel"><path codeLine="301" d="M858.65,267.02 C845.05,281.48 830.88,296.56 816.54,311.81 " fill="none" id="elki.clustering.em.models.EMClusterModel-backto-elki.clustering.em.models.TwoPassMultivariateGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="853.8,261.95,872.6,252.18,864,271.54,853.8,261.95" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7bb10c65c3fd43fff0e95069534d605e]
reverse link elki.clustering.em.models.BetulaClusterModel to elki.clustering.em.models.DiagonalGaussianModel--><g id="link_elki.clustering.em.models.BetulaClusterModel_elki.clustering.em.models.DiagonalGaussianModel"><path codeLine="302" d="M193.66,576.63 C196.24,634.94 200.3,726.74 204.03,811.21 " fill="none" id="elki.clustering.em.models.BetulaClusterModel-backto-elki.clustering.em.models.DiagonalGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="186.65,576.66,192.76,556.37,200.64,576.04,186.65,576.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3a4b9ae99c22bb7585d332d200e14ff6]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.SphericalGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.SphericalGaussianModelFactory"><path codeLine="303" d="M6600.37,201.57 C6529.25,273.28 6404.84,398.71 6337.14,466.97 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.SphericalGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6595.65,196.39,6614.7,187.12,6605.59,206.25,6595.65,196.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2fc2a70f67c00c59fe20e39f1f25480c]
reverse link elki.clustering.em.models.BetulaClusterModelFactory to elki.clustering.em.models.BetulaSphericalGaussianModelFactory--><g id="link_elki.clustering.em.models.BetulaClusterModelFactory_elki.clustering.em.models.BetulaSphericalGaussianModelFactory"><path codeLine="306" d="M3353,207.54 C3353,280.06 3353,400.57 3353,466.97 " fill="none" id="elki.clustering.em.models.BetulaClusterModelFactory-backto-elki.clustering.em.models.BetulaSphericalGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3346,207.12,3353,187.12,3360,207.12,3346,207.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a544ff4a0f07ddfcc238310a13bda764]
reverse link elki.clustering.em.models.BetulaClusterModel to elki.clustering.em.models.MultivariateGaussianModel--><g id="link_elki.clustering.em.models.BetulaClusterModel_elki.clustering.em.models.MultivariateGaussianModel"><path codeLine="309" d="M238.56,571.26 C275.44,612.92 328.46,671.04 378,719 C398.39,738.74 419.84,758.8 441.64,778.7 " fill="none" id="elki.clustering.em.models.BetulaClusterModel-backto-elki.clustering.em.models.MultivariateGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="233.22,575.8,225.26,556.16,243.73,566.54,233.22,575.8" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d9f8f91d7e80898cfe60f115c68913ac]
reverse link elki.clustering.em.models.EMClusterModel to elki.clustering.em.models.TextbookMultivariateGaussianModel--><g id="link_elki.clustering.em.models.EMClusterModel_elki.clustering.em.models.TextbookMultivariateGaussianModel"><path codeLine="310" d="M1083.68,267.02 C1097.32,281.48 1111.53,296.56 1125.91,311.81 " fill="none" id="elki.clustering.em.models.EMClusterModel-backto-elki.clustering.em.models.TextbookMultivariateGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1078.31,271.53,1069.69,252.18,1088.5,261.93,1078.31,271.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[60a0d1421b11d3c303ae7739e7ca358c]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.TextbookMultivariateGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.TextbookMultivariateGaussianModelFactory"><path codeLine="311" d="M6707.78,201.57 C6779.09,273.28 6903.84,398.71 6971.73,466.97 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.TextbookMultivariateGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6702.55,206.24,6693.41,187.12,6712.47,196.37,6702.55,206.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5444d59bf70ea1cfe1b64a8357545cf8]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory"><path codeLine="314" d="M6935.35,190.68 C7078.06,217.22 7252.57,256.87 7403,312 C7515.11,353.09 7635.46,421.09 7710.72,466.82 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="6933.83,197.52,6915.43,187.02,6936.36,183.75,6933.83,197.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c5471202598fa2b77a92504d79fb502f]
reverse link elki.clustering.em.models.EMClusterModel to elki.clustering.em.models.TextbookSphericalGaussianModel--><g id="link_elki.clustering.em.models.EMClusterModel_elki.clustering.em.models.TextbookSphericalGaussianModel"><path codeLine="317" d="M1127.9,157.18 C1292.69,172.49 1555.77,211.75 1760,312 C1774.57,319.15 1788.99,327.41 1803.08,336.42 " fill="none" id="elki.clustering.em.models.EMClusterModel-backto-elki.clustering.em.models.TextbookSphericalGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1127.1,164.14,1107.8,155.39,1128.35,150.19,1127.1,164.14" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0b331d1acab0be66b6f31f6e596df4f1]
reverse link elki.clustering.em.models.BetulaClusterModelFactory to elki.clustering.em.models.BetulaMultivariateGaussianModelFactory--><g id="link_elki.clustering.em.models.BetulaClusterModelFactory_elki.clustering.em.models.BetulaMultivariateGaussianModelFactory"><path codeLine="318" d="M3466.85,194.94 C3541.48,226.68 3640.82,270.16 3727,312 C3829.89,361.95 3945.53,424.53 4021.92,466.8 " fill="none" id="elki.clustering.em.models.BetulaClusterModelFactory-backto-elki.clustering.em.models.BetulaMultivariateGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3464.11,201.38,3448.43,187.13,3469.58,188.49,3464.11,201.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cfaedbaa883011901f0ef5588dc1223c]
reverse link elki.clustering.em.models.EMClusterModelFactory to elki.clustering.em.models.DiagonalGaussianModelFactory--><g id="link_elki.clustering.em.models.EMClusterModelFactory_elki.clustering.em.models.DiagonalGaussianModelFactory"><path codeLine="321" d="M7051.15,171.57 C7428.97,197.91 7968.59,245.42 8169,312 C8275.31,347.32 8384.43,419.03 8450.23,466.93 " fill="none" id="elki.clustering.em.models.EMClusterModelFactory-backto-elki.clustering.em.models.DiagonalGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="7050.49,178.55,7031.02,170.18,7051.46,164.58,7050.49,178.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[39eee34345b71569b30b14f8d3b3c808]
reverse link elki.clustering.em.models.BetulaClusterModel to elki.clustering.em.models.SphericalGaussianModel--><g id="link_elki.clustering.em.models.BetulaClusterModel_elki.clustering.em.models.SphericalGaussianModel"><path codeLine="324" d="M225.75,572.94 C258.58,620.76 312.49,686.59 378,719 C633.27,845.3 762.54,649.1 1016,779 C1033.35,787.89 1049.87,798.93 1065.45,811.33 " fill="none" id="elki.clustering.em.models.BetulaClusterModel-backto-elki.clustering.em.models.SphericalGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="219.88,576.75,214.63,556.23,231.54,569,219.88,576.75" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="4330.5" y="1273"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="4330.5" y="1282.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[58a4433da822d4ec705a556f0792e0bd]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.em.models {

        interface EMClusterModelFactory<O, M extends Model> [[EMClusterModelFactory.html]] {
            {static} +INIT_ID: OptionID
            {abstract} +buildInitialModels(Relation<? extends O>, int): List<? extends EMClusterModel<O, M extends Model>>
        }

        interface BetulaClusterModel [[BetulaClusterModel.html]] {
            {abstract} +estimateLogDensity(ClusterFeature): double
            {abstract} +updateE(ClusterFeature, double): void
        }

        class TextbookSphericalGaussianModelFactory [[TextbookSphericalGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +TextbookSphericalGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<TextbookSphericalGaussianModel>
        }

        class elki.clustering.em.models.TextbookSphericalGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): TextbookSphericalGaussianModelFactory
        }

        class BetulaDiagonalGaussianModelFactory [[BetulaDiagonalGaussianModelFactory.html]] {
            #initializer: AbstractCFKMeansInitialization
            +BetulaDiagonalGaussianModelFactory(AbstractCFKMeansInitialization)
            +buildInitialModels(List<? extends ClusterFeature>, int, CFTree<?>): List<DiagonalGaussianModel>
        }

        class elki.clustering.em.models.BetulaDiagonalGaussianModelFactory.Par [[BetulaDiagonalGaussianModelFactory.Par.html]] {
            #initializer: AbstractCFKMeansInitialization
            +configure(Parameterization): void
            +make(): BetulaDiagonalGaussianModelFactory
        }

        class MultivariateGaussianModelFactory [[MultivariateGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +MultivariateGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<MultivariateGaussianModel>
        }

        class elki.clustering.em.models.MultivariateGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): MultivariateGaussianModelFactory
        }

        class TwoPassMultivariateGaussianModel [[TwoPassMultivariateGaussianModel.html]] {
            ~mean: double[]
            ~covariance: double[]
            ~chol: CholeskyDecomposition
            ~tmp: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priormatrix: double[]
            +TwoPassMultivariateGaussianModel(double, double[])
            +TwoPassMultivariateGaussianModel(double, double[], double[])
            +beginEStep(): void
            +needsTwoPass(): boolean
            +firstPassE(NumberVector, double): void
            +finalizeFirstPassE(): void
            +updateE(NumberVector, double): void
            +finalizeEStep(double, double): void
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
        }

        class DiagonalGaussianModel [[DiagonalGaussianModel.html]] {
            {static} -SINGULARITY_CHEAT: double
            ~mean: double[]
            ~variances: double[]
            ~nmea: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priordiag: double[]
            +DiagonalGaussianModel(double, double[])
            +DiagonalGaussianModel(double, double[], double[])
            +beginEStep(): void
            +updateE(NumberVector, double): void
            +finalizeEStep(double, double): void
            +mahalanobisDistance(double[]): double
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
            +estimateLogDensity(ClusterFeature): double
            +updateE(ClusterFeature, double): void
        }

        interface BetulaClusterModelFactory<M extends BetulaClusterModel> [[BetulaClusterModelFactory.html]] {
            {static} +INIT_ID: OptionID
            {abstract} +buildInitialModels(List<? extends ClusterFeature>, int, CFTree<?>): List<M extends BetulaClusterModel>
        }

        class SphericalGaussianModelFactory [[SphericalGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +SphericalGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<SphericalGaussianModel>
        }

        class elki.clustering.em.models.SphericalGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): SphericalGaussianModelFactory
        }

        class BetulaSphericalGaussianModelFactory [[BetulaSphericalGaussianModelFactory.html]] {
            #initializer: AbstractCFKMeansInitialization
            +BetulaSphericalGaussianModelFactory(AbstractCFKMeansInitialization)
            +buildInitialModels(List<? extends ClusterFeature>, int, CFTree<?>): List<SphericalGaussianModel>
        }

        class elki.clustering.em.models.BetulaSphericalGaussianModelFactory.Par [[BetulaSphericalGaussianModelFactory.Par.html]] {
            #initializer: AbstractCFKMeansInitialization
            +configure(Parameterization): void
            +make(): BetulaSphericalGaussianModelFactory
        }

        class MultivariateGaussianModel [[MultivariateGaussianModel.html]] {
            {static} -LOG: Logging
            {static} -SINGULARITY_CHEAT: double
            ~mean: double[]
            ~covariance: double[]
            ~chol: CholeskyDecomposition
            ~nmea: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priormatrix: double[]
            +MultivariateGaussianModel(double, double[])
            +MultivariateGaussianModel(double, double[], double[])
            +beginEStep(): void
            +updateE(NumberVector, double): void
            +finalizeEStep(double, double): void
            {static} #updateCholesky(double[], CholeskyDecomposition): CholeskyDecomposition
            {static} #getHalfLogDeterminant(CholeskyDecomposition): double
            +mahalanobisDistance(double[]): double
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
            +estimateLogDensity(ClusterFeature): double
            +updateE(ClusterFeature, double): void
        }

        class TextbookMultivariateGaussianModel [[TextbookMultivariateGaussianModel.html]] {
            ~mean: double[]
            ~covariance: double[]
            ~chol: CholeskyDecomposition
            ~tmp: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priormatrix: double[]
            +TextbookMultivariateGaussianModel(double, double[])
            +TextbookMultivariateGaussianModel(double, double[], double[])
            +beginEStep(): void
            +updateE(NumberVector, double): void
            +updateE(double[], double[], double, double): void
            +finalizeEStep(double, double): void
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
            +clone(TextbookMultivariateGaussianModel): void
            +calculateModelLimits(double[], double[], ConstrainedQuadraticProblemSolver, double, double[], double[], double[]): void
        }

        class TextbookMultivariateGaussianModelFactory [[TextbookMultivariateGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +TextbookMultivariateGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<TextbookMultivariateGaussianModel>
        }

        class elki.clustering.em.models.TextbookMultivariateGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): TextbookMultivariateGaussianModelFactory
        }

        interface EMClusterModel<O, M extends Model> [[EMClusterModel.html]] {
            {abstract} +beginEStep(): void
            +needsTwoPass(): boolean
            +firstPassE(O, double): void
            +finalizeFirstPassE(): void
            {abstract} +updateE(O, double): void
            {abstract} +finalizeEStep(double, double): void
            {abstract} +estimateLogDensity(O): double
            {abstract} +finalizeCluster(): M extends Model
            {abstract} +getWeight(): double
            {abstract} +setWeight(double): void
        }

        class TwoPassMultivariateGaussianModelFactory [[TwoPassMultivariateGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +TwoPassMultivariateGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<TwoPassMultivariateGaussianModel>
        }

        class elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): TwoPassMultivariateGaussianModelFactory
        }

        class TextbookSphericalGaussianModel [[TextbookSphericalGaussianModel.html]] {
            ~mean: double[]
            ~variance: double
            ~nmea: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priorvar: double
            +TextbookSphericalGaussianModel(double, double[])
            +TextbookSphericalGaussianModel(double, double[], double)
            +beginEStep(): void
            +updateE(NumberVector, double): void
            +finalizeEStep(double, double): void
            +mahalanobisDistance(double[]): double
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
        }

        class BetulaMultivariateGaussianModelFactory [[BetulaMultivariateGaussianModelFactory.html]] {
            #initializer: AbstractCFKMeansInitialization
            +BetulaMultivariateGaussianModelFactory(AbstractCFKMeansInitialization)
            +buildInitialModels(List<? extends ClusterFeature>, int, CFTree<?>): List<MultivariateGaussianModel>
        }

        class elki.clustering.em.models.BetulaMultivariateGaussianModelFactory.Par [[BetulaMultivariateGaussianModelFactory.Par.html]] {
            #initializer: AbstractCFKMeansInitialization
            +configure(Parameterization): void
            +make(): BetulaMultivariateGaussianModelFactory
        }

        class DiagonalGaussianModelFactory [[DiagonalGaussianModelFactory.html]] {
            #initializer: KMeansInitialization
            +DiagonalGaussianModelFactory(KMeansInitialization)
            +buildInitialModels(Relation<? extends NumberVector>, int): List<DiagonalGaussianModel>
        }

        class elki.clustering.em.models.DiagonalGaussianModelFactory.Par {
            #initializer: KMeansInitialization
            +configure(Parameterization): void
            +make(): DiagonalGaussianModelFactory
        }

        class SphericalGaussianModel [[SphericalGaussianModel.html]] {
            {static} -SINGULARITY_CHEAT: double
            ~mean: double[]
            ~variance: double
            ~nmea: double[]
            ~logNorm: double
            ~logNormDet: double
            ~weight: double
            ~wsum: double
            ~priorvar: double
            +SphericalGaussianModel(double, double[])
            +SphericalGaussianModel(double, double[], double)
            +beginEStep(): void
            +updateE(NumberVector, double): void
            +finalizeEStep(double, double): void
            +mahalanobisDistance(double[]): double
            +mahalanobisDistance(NumberVector): double
            +estimateLogDensity(NumberVector): double
            +getWeight(): double
            +setWeight(double): void
            +finalizeCluster(): EMModel
            +estimateLogDensity(ClusterFeature): double
            +updateE(ClusterFeature, double): void
        }

        EMClusterModel <|- - BetulaClusterModel
        EMClusterModelFactory <|.. TextbookSphericalGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.TextbookSphericalGaussianModelFactory.Par
        TextbookSphericalGaussianModelFactory +- - elki.clustering.em.models.TextbookSphericalGaussianModelFactory.Par
        BetulaClusterModelFactory <|.. BetulaDiagonalGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.BetulaDiagonalGaussianModelFactory.Par
        BetulaDiagonalGaussianModelFactory +- - elki.clustering.em.models.BetulaDiagonalGaussianModelFactory.Par
        EMClusterModelFactory <|.. MultivariateGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.MultivariateGaussianModelFactory.Par
        MultivariateGaussianModelFactory +- - elki.clustering.em.models.MultivariateGaussianModelFactory.Par
        EMClusterModel <|.. TwoPassMultivariateGaussianModel
        BetulaClusterModel <|.. DiagonalGaussianModel
        EMClusterModelFactory <|.. SphericalGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.SphericalGaussianModelFactory.Par
        SphericalGaussianModelFactory +- - elki.clustering.em.models.SphericalGaussianModelFactory.Par
        BetulaClusterModelFactory <|.. BetulaSphericalGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.BetulaSphericalGaussianModelFactory.Par
        BetulaSphericalGaussianModelFactory +- - elki.clustering.em.models.BetulaSphericalGaussianModelFactory.Par
        BetulaClusterModel <|.. MultivariateGaussianModel
        EMClusterModel <|.. TextbookMultivariateGaussianModel
        EMClusterModelFactory <|.. TextbookMultivariateGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.TextbookMultivariateGaussianModelFactory.Par
        TextbookMultivariateGaussianModelFactory +- - elki.clustering.em.models.TextbookMultivariateGaussianModelFactory.Par
        EMClusterModelFactory <|.. TwoPassMultivariateGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory.Par
        TwoPassMultivariateGaussianModelFactory +- - elki.clustering.em.models.TwoPassMultivariateGaussianModelFactory.Par
        EMClusterModel <|.. TextbookSphericalGaussianModel
        BetulaClusterModelFactory <|.. BetulaMultivariateGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.BetulaMultivariateGaussianModelFactory.Par
        BetulaMultivariateGaussianModelFactory +- - elki.clustering.em.models.BetulaMultivariateGaussianModelFactory.Par
        EMClusterModelFactory <|.. DiagonalGaussianModelFactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.models.DiagonalGaussianModelFactory.Par
        DiagonalGaussianModelFactory +- - elki.clustering.em.models.DiagonalGaussianModelFactory.Par
        BetulaClusterModel <|.. SphericalGaussianModel
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>