<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="668px" preserveAspectRatio="none" style="width:866px;height:668px;background:#FFFFFF;" version="1.1" viewBox="0 0 866 668" width="866px" zoomAndPan="magnify"><defs/><g><!--MD5=[347e51fc846265a4949787d11bdac0a4]
class elki.clustering.em.models.TextbookMultivariateGaussianModel--><a href="TextbookMultivariateGaussianModel.html" target="_top" title="TextbookMultivariateGaussianModel.html" xlink:actuate="onRequest" xlink:href="TextbookMultivariateGaussianModel.html" xlink:show="new" xlink:title="TextbookMultivariateGaussianModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.TextbookMultivariateGaussianModel"><rect codeLine="6" fill="#F1F1F1" height="412.4688" id="elki.clustering.em.models.TextbookMultivariateGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="850" x="9" y="230"/><ellipse cx="305.75" cy="248.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M308.7188,254.6094 Q308.1406,254.9063 307.5,255.0469 Q306.8594,255.2031 306.1563,255.2031 Q303.6563,255.2031 302.3281,253.5625 Q301.0156,251.9063 301.0156,248.7813 Q301.0156,245.6563 302.3281,244 Q303.6563,242.3438 306.1563,242.3438 Q306.8594,242.3438 307.5,242.5 Q308.1563,242.6563 308.7188,242.9531 L308.7188,245.6719 Q308.0938,245.0938 307.5,244.8281 Q306.9063,244.5469 306.2813,244.5469 Q304.9375,244.5469 304.25,245.625 Q303.5625,246.6875 303.5625,248.7813 Q303.5625,250.875 304.25,251.9531 Q304.9375,253.0156 306.2813,253.0156 Q306.9063,253.0156 307.5,252.75 Q308.0938,252.4688 308.7188,251.8906 L308.7188,254.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="326.25" y="247.9951">TextbookMultivariateGaussianModel</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="121" x="389.75" y="260.5791">elki.clustering.em.models</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="858" y1="267.9375" y2="267.9375"/><polygon fill="none" points="20,277.5859,16,283.5859,24,283.5859" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="29" y="284.9326">mean: double[]</text><polygon fill="none" points="20,293.8828,16,299.8828,24,299.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="29" y="301.2295">covariance: double[]</text><polygon fill="none" points="20,310.1797,16,316.1797,24,316.1797" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="29" y="317.5264">chol: CholeskyDecomposition</text><polygon fill="none" points="20,326.4766,16,332.4766,24,332.4766" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="29" y="333.8232">tmp: double[]</text><polygon fill="none" points="20,342.7734,16,348.7734,24,348.7734" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="29" y="350.1201">logNorm: double</text><polygon fill="none" points="20,359.0703,16,365.0703,24,365.0703" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="29" y="366.417">logNormDet: double</text><polygon fill="none" points="20,375.3672,16,381.3672,24,381.3672" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="29" y="382.7139">weight: double</text><polygon fill="none" points="20,391.6641,16,397.6641,24,397.6641" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="29" y="399.0107">wsum: double</text><polygon fill="none" points="20,407.9609,16,413.9609,24,413.9609" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="29" y="415.3076">priormatrix: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="858" y1="422.6094" y2="422.6094"/><ellipse cx="20" cy="436.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="29" y="439.6045">TextbookMultivariateGaussianModel(double, double[])</text><ellipse cx="20" cy="452.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="438" x="29" y="455.9014">TextbookMultivariateGaussianModel(double, double[], double[])</text><ellipse cx="20" cy="468.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="29" y="472.1982">beginEStep(): void</text><ellipse cx="20" cy="485.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="29" y="488.4951">updateE(NumberVector, double): void</text><ellipse cx="20" cy="501.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="341" x="29" y="504.792">updateE(double[], double[], double, double): void</text><ellipse cx="20" cy="517.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="29" y="521.0889">finalizeEStep(double, double): void</text><ellipse cx="20" cy="534.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="29" y="537.3857">mahalanobisDistance(NumberVector): double</text><ellipse cx="20" cy="550.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="29" y="553.6826">estimateLogDensity(NumberVector): double</text><ellipse cx="20" cy="566.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="29" y="569.9795">getWeight(): double</text><ellipse cx="20" cy="582.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="29" y="586.2764">setWeight(double): void</text><ellipse cx="20" cy="599.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="29" y="602.5732">finalizeCluster(): EMModel</text><ellipse cx="20" cy="615.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="29" y="618.8701">clone(TextbookMultivariateGaussianModel): void</text><ellipse cx="20" cy="631.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="824" x="29" y="635.167">calculateModelLimits(double[], double[], ConstrainedQuadraticProblemSolver, double, double[], double[], double[]): void</text></g></a><!--MD5=[d369e4cc10d96864ec3e16996acd9e58]
class elki.clustering.em.models.EMClusterModel--><a href="EMClusterModel.html" target="_top" title="EMClusterModel.html" xlink:actuate="onRequest" xlink:href="EMClusterModel.html" xlink:show="new" xlink:title="EMClusterModel.html" xlink:type="simple"><g id="elem_elki.clustering.em.models.EMClusterModel"><rect codeLine="31" fill="#F1F1F1" height="160.0156" id="elki.clustering.em.models.EMClusterModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="265" y="10"/><ellipse cx="291.7" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M287.6219,24.7344 L287.6219,22.5781 L295.0125,22.5781 L295.0125,24.7344 L292.5438,24.7344 L292.5438,32.8125 L295.0125,32.8125 L295.0125,34.9688 L287.6219,34.9688 L287.6219,32.8125 L290.0906,32.8125 L290.0906,24.7344 L287.6219,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="315.8" y="27.9951">EMClusterModel</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="128" x="308.3" y="40.5791">elki.clustering.em.models</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="150" x="456" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="457" y="19.1387">NumberVector, EMModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="266" x2="602" y1="47.9375" y2="47.9375"/><ellipse cx="276" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="285" y="64.9326">beginEStep(): void</text><ellipse cx="276" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="268" x="285" y="81.2295">updateE(NumberVector, double): void</text><ellipse cx="276" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="247" x="285" y="97.5264">finalizeEStep(double, double): void</text><ellipse cx="276" cy="110.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="312" x="285" y="113.8232">estimateLogDensity(NumberVector): double</text><ellipse cx="276" cy="126.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="183" x="285" y="130.1201">finalizeCluster(): EMModel</text><ellipse cx="276" cy="143.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="141" x="285" y="146.417">getWeight(): double</text><ellipse cx="276" cy="159.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="169" x="285" y="162.7139">setWeight(double): void</text></g></a><!--MD5=[d9f8f91d7e80898cfe60f115c68913ac]
reverse link elki.clustering.em.models.EMClusterModel to elki.clustering.em.models.TextbookMultivariateGaussianModel--><g id="link_elki.clustering.em.models.EMClusterModel_elki.clustering.em.models.TextbookMultivariateGaussianModel"><path codeLine="41" d="M434,190.74 C434,203.24 434,216.37 434,229.77 " fill="none" id="elki.clustering.em.models.EMClusterModel-backto-elki.clustering.em.models.TextbookMultivariateGaussianModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="427,190.35,434,170.35,441,190.35,427,190.35" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="333" y="648.4688"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="333" y="657.751">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[5d19c7430d6c701cd6366a43310784a9]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>TextbookMultivariateGaussianModel\n<size:10>elki.clustering.em.models" as elki.clustering.em.models.TextbookMultivariateGaussianModel [[TextbookMultivariateGaussianModel.html]] {
        ~mean: double[]
        ~covariance: double[]
        ~chol: CholeskyDecomposition
        ~tmp: double[]
        ~logNorm: double
        ~logNormDet: double
        ~weight: double
        ~wsum: double
        ~priormatrix: double[]
        +TextbookMultivariateGaussianModel(double, double[])
        +TextbookMultivariateGaussianModel(double, double[], double[])
        +beginEStep(): void
        +updateE(NumberVector, double): void
        +updateE(double[], double[], double, double): void
        +finalizeEStep(double, double): void
        +mahalanobisDistance(NumberVector): double
        +estimateLogDensity(NumberVector): double
        +getWeight(): double
        +setWeight(double): void
        +finalizeCluster(): EMModel
        +clone(TextbookMultivariateGaussianModel): void
        +calculateModelLimits(double[], double[], ConstrainedQuadraticProblemSolver, double, double[], double[], double[]): void
    }

    interface "<size:14>EMClusterModel\n<size:10>elki.clustering.em.models" as elki.clustering.em.models.EMClusterModel<NumberVector, EMModel> [[EMClusterModel.html]] {
        {abstract} +beginEStep(): void
        {abstract} +updateE(NumberVector, double): void
        {abstract} +finalizeEStep(double, double): void
        {abstract} +estimateLogDensity(NumberVector): double
        {abstract} +finalizeCluster(): EMModel
        {abstract} +getWeight(): double
        {abstract} +setWeight(double): void
    }

    elki.clustering.em.models.EMClusterModel <|.. elki.clustering.em.models.TextbookMultivariateGaussianModel

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>