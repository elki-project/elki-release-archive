<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="924px" preserveAspectRatio="none" style="width:4448px;height:924px;background:#FFFFFF;" version="1.1" viewBox="0 0 4448 924" width="4448px" zoomAndPan="magnify"><defs/><g><!--MD5=[f0ef69011ef2b60bcf15787d5b17deb7]
cluster elki.clustering.em--><g id="cluster_elki.clustering.em"><path d="M8.5,154 L149.5,154 A3.75,3.75 0 0 1 152,156.5 L159,176.2969 L3255.5,176.2969 A2.5,2.5 0 0 1 3258,178.7969 L3258,896.5 A2.5,2.5 0 0 1 3255.5,899 L8.5,899 A2.5,2.5 0 0 1 6,896.5 L6,156.5 A2.5,2.5 0 0 1 8.5,154 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="159" y1="176.2969" y2="176.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="140" x="10" y="168.9951">elki.clustering.em</text></g><!--MD5=[5a16a86ac2d7d394fc35a681d34e2667]
cluster elki.clustering--><g id="cluster_elki.clustering"><path d="M1345.5,6 L1457.5,6 A3.75,3.75 0 0 1 1460,8.5 L1467,28.2969 L1818.5,28.2969 A2.5,2.5 0 0 1 1821,30.7969 L1821,118.5 A2.5,2.5 0 0 1 1818.5,121 L1345.5,121 A2.5,2.5 0 0 1 1343,118.5 L1343,8.5 A2.5,2.5 0 0 1 1345.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1343" x2="1467" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="111" x="1347" y="20.9951">elki.clustering</text></g><!--MD5=[5797ad8d31766a57b5befdca74719702]
cluster elki.clustering.em.models--><g id="cluster_elki.clustering.em.models"><path d="M3284.5,726.5 L3487.5,726.5 A3.75,3.75 0 0 1 3490,729 L3497,748.7969 L4438.5,748.7969 A2.5,2.5 0 0 1 4441,751.2969 L4441,823 A2.5,2.5 0 0 1 4438.5,825.5 L3284.5,825.5 A2.5,2.5 0 0 1 3282,823 L3282,729 A2.5,2.5 0 0 1 3284.5,726.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3282" x2="3497" y1="748.7969" y2="748.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="202" x="3286" y="741.4951">elki.clustering.em.models</text></g><!--MD5=[027a3a694b0522c1440370b2f649859b]
class elki.clustering.em.BetulaGMM--><a href="BetulaGMM.html" target="_top" title="BetulaGMM.html" xlink:actuate="onRequest" xlink:href="BetulaGMM.html" xlink:show="new" xlink:title="BetulaGMM.html" xlink:type="simple"><g id="elem_elki.clustering.em.BetulaGMM"><rect codeLine="4" fill="#F1F1F1" height="308.75" id="elki.clustering.em.BetulaGMM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1108" x="22" y="238"/><ellipse cx="532.25" cy="254" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M535.2188,259.6406 Q534.6406,259.9375 534,260.0781 Q533.3594,260.2344 532.6563,260.2344 Q530.1563,260.2344 528.8281,258.5938 Q527.5156,256.9375 527.5156,253.8125 Q527.5156,250.6875 528.8281,249.0313 Q530.1563,247.375 532.6563,247.375 Q533.3594,247.375 534,247.5313 Q534.6563,247.6875 535.2188,247.9844 L535.2188,250.7031 Q534.5938,250.125 534,249.8594 Q533.4063,249.5781 532.7813,249.5781 Q531.4375,249.5781 530.75,250.6563 Q530.0625,251.7188 530.0625,253.8125 Q530.0625,255.9063 530.75,256.9844 Q531.4375,258.0469 532.7813,258.0469 Q533.4063,258.0469 534,257.7813 Q534.5938,257.5 535.2188,256.9219 L535.2188,259.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="552.75" y="258.8467">BetulaGMM</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="1129" y1="270" y2="270"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="280.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="42" y="286.9951">LOG: Logging</text><polygon fill="none" points="33,295.9453,29,301.9453,37,301.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="42" y="303.292">cffactory: Factory&lt;?&gt;</text><polygon fill="none" points="33,312.2422,29,318.2422,37,318.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="42" y="319.5889">k: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="329.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="42" y="335.8857">delta: double</text><polygon fill="none" points="33,344.8359,29,350.8359,37,350.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="42" y="352.1826">maxiter: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="362.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="42" y="368.4795">prior: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="378.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="42" y="384.7764">soft: boolean</text><polygon fill="none" points="33,392.7266,37,396.7266,33,400.7266,29,396.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="199" x="42" y="401.0732">MIN_LOGLIKELIHOOD: double</text><ellipse cx="33" cy="414.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="42" y="417.3701">SOFT_TYPE: SimpleTypeInformation&lt;double[]&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="1129" y1="424.6719" y2="424.6719"/><ellipse cx="33" cy="438.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="620" x="42" y="441.667">BetulaGMM(Factory&lt;?&gt;, double, int, int, boolean, BetulaClusterModelFactory&lt;?&gt;, double)</text><ellipse cx="33" cy="454.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="42" y="457.9639">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="33" cy="470.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="42" y="474.2607">run(Relation&lt;NumberVector&gt;): Clustering&lt;EMModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="484.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="42" y="490.5576">isSoft(): boolean</text><ellipse cx="33" cy="503.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1024" x="42" y="506.8545">assignProbabilitiesToInstances(ArrayList&lt;? extends ClusterFeature&gt;, List&lt;? extends BetulaClusterModel&gt;, Map&lt;ClusterFeature, double[]&gt;): double</text><ellipse cx="33" cy="519.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1006" x="42" y="523.1514">assignProbabilitiesToInstances(Relation&lt;? extends NumberVector&gt;, List&lt;? extends BetulaClusterModel&gt;, WritableDataStore&lt;double[]&gt;): double</text><ellipse cx="33" cy="536.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1082" x="42" y="539.4482">recomputeCovarianceMatrices(ArrayList&lt;? extends ClusterFeature&gt;, Map&lt;ClusterFeature, double[]&gt;, List&lt;? extends BetulaClusterModel&gt;, double, int): void</text></g></a><!--MD5=[a77cf34ff08e78f2190ab88c0c6e759f]
class elki.clustering.em.BetulaGMMWeighted--><a href="BetulaGMMWeighted.html" target="_top" title="BetulaGMMWeighted.html" xlink:actuate="onRequest" xlink:href="BetulaGMMWeighted.html" xlink:show="new" xlink:title="BetulaGMMWeighted.html" xlink:type="simple"><g id="elem_elki.clustering.em.BetulaGMMWeighted"><rect codeLine="37" fill="#F1F1F1" height="80.5938" id="elki.clustering.em.BetulaGMMWeighted" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1050" x="51" y="745"/><ellipse cx="499.25" cy="761" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M502.2188,766.6406 Q501.6406,766.9375 501,767.0781 Q500.3594,767.2344 499.6563,767.2344 Q497.1563,767.2344 495.8281,765.5938 Q494.5156,763.9375 494.5156,760.8125 Q494.5156,757.6875 495.8281,756.0313 Q497.1563,754.375 499.6563,754.375 Q500.3594,754.375 501,754.5313 Q501.6563,754.6875 502.2188,754.9844 L502.2188,757.7031 Q501.5938,757.125 501,756.8594 Q500.4063,756.5781 499.7813,756.5781 Q498.4375,756.5781 497.75,757.6563 Q497.0625,758.7188 497.0625,760.8125 Q497.0625,762.9063 497.75,763.9844 Q498.4375,765.0469 499.7813,765.0469 Q500.4063,765.0469 501,764.7813 Q501.5938,764.5 502.2188,763.9219 L502.2188,766.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="519.75" y="765.8467">BetulaGMMWeighted</text><line style="stroke:#181818;stroke-width:0.5;" x1="52" x2="1100" y1="777" y2="777"/><line style="stroke:#181818;stroke-width:0.5;" x1="52" x2="1100" y1="785" y2="785"/><ellipse cx="62" cy="798.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="686" x="71" y="801.9951">BetulaGMMWeighted(Factory&lt;?&gt;, double, int, int, boolean, BetulaClusterModelFactory&lt;?&gt;, double)</text><ellipse cx="62" cy="814.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1024" x="71" y="818.292">assignProbabilitiesToInstances(ArrayList&lt;? extends ClusterFeature&gt;, List&lt;? extends BetulaClusterModel&gt;, Map&lt;ClusterFeature, double[]&gt;): double</text></g></a><!--MD5=[2aada0a5f309679c925875cb7bceb6be]
class elki.clustering.em.KDTreeEM--><a href="KDTreeEM.html" target="_top" title="KDTreeEM.html" xlink:actuate="onRequest" xlink:href="KDTreeEM.html" xlink:show="new" xlink:title="KDTreeEM.html" xlink:type="simple"><g id="elem_elki.clustering.em.KDTreeEM"><rect codeLine="46" fill="#F1F1F1" height="406.5313" id="elki.clustering.em.KDTreeEM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="834" x="1165" y="189"/><ellipse cx="1541.25" cy="205" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1544.2188,210.6406 Q1543.6406,210.9375 1543,211.0781 Q1542.3594,211.2344 1541.6563,211.2344 Q1539.1563,211.2344 1537.8281,209.5938 Q1536.5156,207.9375 1536.5156,204.8125 Q1536.5156,201.6875 1537.8281,200.0313 Q1539.1563,198.375 1541.6563,198.375 Q1542.3594,198.375 1543,198.5313 Q1543.6563,198.6875 1544.2188,198.9844 L1544.2188,201.7031 Q1543.5938,201.125 1543,200.8594 Q1542.4063,200.5781 1541.7813,200.5781 Q1540.4375,200.5781 1539.75,201.6563 Q1539.0625,202.7188 1539.0625,204.8125 Q1539.0625,206.9063 1539.75,207.9844 Q1540.4375,209.0469 1541.7813,209.0469 Q1542.4063,209.0469 1543,208.7813 Q1543.5938,208.5 1544.2188,207.9219 L1544.2188,210.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="1561.75" y="209.8467">KDTreeEM</text><line style="stroke:#181818;stroke-width:0.5;" x1="1166" x2="1998" y1="221" y2="221"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="231.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1185" y="237.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="247.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="1185" y="254.292">soft: boolean</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="264.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="1185" y="270.5889">delta: double</text><ellipse cx="1176" cy="283.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="1185" y="286.8857">SOFT_TYPE: SimpleTypeInformation&lt;double[]&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="296.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="1185" y="303.1826">k: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="313.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1185" y="319.4795">mbw: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="329.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1185" y="335.7764">tau: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="345.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1185" y="352.0732">tauClass: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="362.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="1185" y="368.3701">miniter: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="378.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="1185" y="384.667">maxiter: int</text><polygon fill="none" points="1176,392.6172,1180,396.6172,1176,400.6172,1172,396.6172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="1185" y="400.9639">sorted: ArrayModifiableDBIDs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="410.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="1185" y="417.2607">solver: ConstrainedQuadraticProblemSolver</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="427.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1185" y="433.5576">ipiPow: double</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="443.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1185" y="449.8545">wsum: double[]</text><polygon fill="none" points="1176,457.8047,1180,461.8047,1176,465.8047,1172,461.8047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1185" y="466.1514">exactAssign: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1166" x2="1998" y1="473.4531" y2="473.4531"/><ellipse cx="1176" cy="487.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="808" x="1185" y="490.4482">KDTreeEM(int, double, double, double, double, TextbookMultivariateGaussianModelFactory, int, int, boolean, boolean)</text><ellipse cx="1176" cy="503.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="450" x="1185" y="506.7451">run(Relation&lt;? extends NumberVector&gt;): Clustering&lt;EMModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="516.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="446" x="1185" y="523.042">analyseDimWidth(Relation&lt;? extends NumberVector&gt;): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="532.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="1185" y="539.3389">checkStoppingCondition(KDTree, int[]): int[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="549.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="695" x="1185" y="555.6357">calculateModelLimits(KDTree, TextbookMultivariateGaussianModel, double[], double[], double[]): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1173" y="565.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="1185" y="571.9326">makeStats(KDTree, int[], WritableDataStore&lt;double[]&gt;): double</text><ellipse cx="1176" cy="584.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1185" y="588.2295">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[eb3510c205da61996c3352699eb5390d]
class elki.clustering.em.KDTreeEM.KDTree--><a href="KDTreeEM.KDTree.html" target="_top" title="KDTreeEM.KDTree.html" xlink:actuate="onRequest" xlink:href="KDTreeEM.KDTree.html" xlink:show="new" xlink:title="KDTreeEM.KDTree.html" xlink:type="simple"><g id="elem_elki.clustering.em.KDTreeEM.KDTree"><rect codeLine="71" fill="#F1F1F1" height="194.6719" id="elki.clustering.em.KDTreeEM.KDTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="665" x="1249.5" y="688"/><ellipse cx="1513.25" cy="704" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1516.2188,709.6406 Q1515.6406,709.9375 1515,710.0781 Q1514.3594,710.2344 1513.6563,710.2344 Q1511.1563,710.2344 1509.8281,708.5938 Q1508.5156,706.9375 1508.5156,703.8125 Q1508.5156,700.6875 1509.8281,699.0313 Q1511.1563,697.375 1513.6563,697.375 Q1514.3594,697.375 1515,697.5313 Q1515.6563,697.6875 1516.2188,697.9844 L1516.2188,700.7031 Q1515.5938,700.125 1515,699.8594 Q1514.4063,699.5781 1513.7813,699.5781 Q1512.4375,699.5781 1511.75,700.6563 Q1511.0625,701.7188 1511.0625,703.8125 Q1511.0625,705.9063 1511.75,706.9844 Q1512.4375,708.0469 1513.7813,708.0469 Q1514.4063,708.0469 1515,707.7813 Q1515.5938,707.5 1516.2188,706.9219 L1516.2188,709.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1533.75" y="708.8467">KDTreeEM.KDTree</text><line style="stroke:#181818;stroke-width:0.5;" x1="1250.5" x2="1913.5" y1="720" y2="720"/><polygon fill="none" points="1260.5,729.6484,1256.5,735.6484,1264.5,735.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="1269.5" y="736.9951">left: int</text><polygon fill="none" points="1260.5,745.9453,1256.5,751.9453,1264.5,751.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="1269.5" y="753.292">right: int</text><polygon fill="none" points="1260.5,762.2422,1256.5,768.2422,1264.5,768.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1269.5" y="769.5889">sum: double[]</text><polygon fill="none" points="1260.5,778.5391,1256.5,784.5391,1264.5,784.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1269.5" y="785.8857">sumSq: double[]</text><polygon fill="none" points="1260.5,794.8359,1256.5,800.8359,1264.5,800.8359" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1269.5" y="802.1826">midpoint: double[]</text><polygon fill="none" points="1260.5,811.1328,1256.5,817.1328,1264.5,817.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1269.5" y="818.4795">halfwidth: double[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="1250.5" x2="1913.5" y1="825.7813" y2="825.7813"/><ellipse cx="1260.5" cy="839.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="639" x="1269.5" y="842.7764">KDTree(Relation&lt;? extends NumberVector&gt;, ArrayModifiableDBIDs, int, int, double[], double)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1257.5" y="852.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="552" x="1269.5" y="859.0732">computeBoundingBox(Relation&lt;? extends NumberVector&gt;, DBIDArrayIter): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1257.5" y="869.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="528" x="1269.5" y="875.3701">aggregateStats(Relation&lt;? extends NumberVector&gt;, DBIDArrayIter, int): void</text></g></a><!--MD5=[876e18c2606df0c1d6a3e2b8882cd926]
class elki.clustering.em.EM--><a href="EM.html" target="_top" title="EM.html" xlink:actuate="onRequest" xlink:href="EM.html" xlink:show="new" xlink:title="EM.html" xlink:type="simple"><g id="elem_elki.clustering.em.EM"><rect codeLine="106" fill="#F1F1F1" height="373.9375" id="elki.clustering.em.EM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1207" x="2034.5" y="205.5"/><ellipse cx="2547.75" cy="221.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2550.7188,227.1406 Q2550.1406,227.4375 2549.5,227.5781 Q2548.8594,227.7344 2548.1563,227.7344 Q2545.6563,227.7344 2544.3281,226.0938 Q2543.0156,224.4375 2543.0156,221.3125 Q2543.0156,218.1875 2544.3281,216.5313 Q2545.6563,214.875 2548.1563,214.875 Q2548.8594,214.875 2549.5,215.0313 Q2550.1563,215.1875 2550.7188,215.4844 L2550.7188,218.2031 Q2550.0938,217.625 2549.5,217.3594 Q2548.9063,217.0781 2548.2813,217.0781 Q2546.9375,217.0781 2546.25,218.1563 Q2545.5625,219.2188 2545.5625,221.3125 Q2545.5625,223.4063 2546.25,224.4844 Q2546.9375,225.5469 2548.2813,225.5469 Q2548.9063,225.5469 2549.5,225.2813 Q2550.0938,225 2550.7188,224.4219 L2550.7188,227.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="21" x="2568.25" y="226.3467">EM</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="149" x="3095.5" y="202.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="147" x="3096.5" y="214.6387">O, M extends MeanModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="2035.5" x2="3240.5" y1="237.5" y2="237.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2042.5" y="248.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2054.5" y="254.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2042.5" y="264.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="2054.5" y="270.792">KEY: String</text><polygon fill="none" points="2045.5,278.7422,2049.5,282.7422,2045.5,286.7422,2041.5,282.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="2054.5" y="287.0889">k: int</text><polygon fill="none" points="2045.5,295.0391,2049.5,299.0391,2045.5,303.0391,2041.5,299.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="2054.5" y="303.3857">delta: double</text><polygon fill="none" points="2045.5,311.3359,2049.5,315.3359,2045.5,319.3359,2041.5,315.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="2054.5" y="319.6826">miniter: int</text><polygon fill="none" points="2045.5,327.6328,2049.5,331.6328,2045.5,335.6328,2041.5,331.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="2054.5" y="335.9795">maxiter: int</text><polygon fill="none" points="2045.5,343.9297,2049.5,347.9297,2045.5,351.9297,2041.5,347.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="2054.5" y="352.2764">prior: double</text><polygon fill="none" points="2045.5,360.2266,2049.5,364.2266,2045.5,368.2266,2041.5,364.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="2054.5" y="368.5732">soft: boolean</text><polygon fill="none" points="2045.5,376.5234,2049.5,380.5234,2045.5,384.5234,2041.5,380.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="199" x="2054.5" y="384.8701">MIN_LOGLIKELIHOOD: double</text><ellipse cx="2045.5" cy="397.8203" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="2054.5" y="401.167">SOFT_TYPE: SimpleTypeInformation&lt;double[]&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2035.5" x2="3240.5" y1="408.4688" y2="408.4688"/><ellipse cx="2045.5" cy="422.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="528" x="2054.5" y="425.4639">EM(int, double, EMClusterModelFactory&lt;? super O, M extends MeanModel&gt;)</text><ellipse cx="2045.5" cy="438.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="617" x="2054.5" y="441.7607">EM(int, double, EMClusterModelFactory&lt;? super O, M extends MeanModel&gt;, int, boolean)</text><ellipse cx="2045.5" cy="454.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="673" x="2054.5" y="458.0576">EM(int, double, EMClusterModelFactory&lt;? super O, M extends MeanModel&gt;, int, double, boolean)</text><ellipse cx="2045.5" cy="471.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="2054.5" y="474.3545">EM(int, double, EMClusterModelFactory&lt;? super O, M extends MeanModel&gt;, int, int, double, boolean)</text><ellipse cx="2045.5" cy="487.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2054.5" y="490.6514">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2045.5" cy="503.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="2054.5" y="506.9482">run(Relation&lt;O&gt;): Clustering&lt;M extends MeanModel&gt;</text><ellipse cx="2045.5" cy="519.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1032" x="2054.5" y="523.2451">recomputeCovarianceMatrices(Relation&lt;? extends O&gt;, WritableDataStore&lt;double[]&gt;, List&lt;? extends EMClusterModel&lt;? super O, ?&gt;&gt;, double): void</text><ellipse cx="2045.5" cy="536.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1181" x="2054.5" y="539.542">assignProbabilitiesToInstances(Relation&lt;? extends O&gt;, List&lt;? extends EMClusterModel&lt;? super O, ?&gt;&gt;, WritableDataStore&lt;double[]&gt;, WritableDoubleDataStore): double</text><ellipse cx="2045.5" cy="552.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="202" x="2054.5" y="555.8389">logSumExp(double[]): double</text><polygon fill="#FFFF44" points="2045.5,563.7891,2049.5,567.7891,2045.5,571.7891,2041.5,567.7891" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="248" x="2054.5" y="572.1357">logSumExp(double, double): double</text></g></a><!--MD5=[4fc33484231348e70db2dde04bb5858c]
class elki.clustering.ClusteringAlgorithm--><a href="../ClusteringAlgorithm.html" target="_top" title="../ClusteringAlgorithm.html" xlink:actuate="onRequest" xlink:href="../ClusteringAlgorithm.html" xlink:show="new" xlink:title="../ClusteringAlgorithm.html" xlink:type="simple"><g id="elem_elki.clustering.ClusteringAlgorithm"><rect codeLine="171" fill="#F1F1F1" height="64.2969" id="elki.clustering.ClusteringAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="446" x="1359" y="41"/><ellipse cx="1387.95" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1383.8719,52.7656 L1383.8719,50.6094 L1391.2625,50.6094 L1391.2625,52.7656 L1388.7938,52.7656 L1388.7938,60.8438 L1391.2625,60.8438 L1391.2625,63 L1383.8719,63 L1383.8719,60.8438 L1386.3406,60.8438 L1386.3406,52.7656 L1383.8719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="1405.05" y="61.8467">ClusteringAlgorithm</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="241" x="1567" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="239" x="1568" y="50.1387">C extends Clustering&lt;? extends Model&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1360" x2="1804" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="1360" x2="1804" y1="81" y2="81"/><ellipse cx="1370" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="1379" y="97.9951">autorun(Database): C extends Clustering&lt;? extends Model&gt;</text></g></a><!--MD5=[f96593bbd1b4de4d47e9a23ec7a7e03d]
class elki.clustering.em.models.BetulaClusterModelFactory--><g id="elem_elki.clustering.em.models.BetulaClusterModelFactory"><rect fill="#F1F1F1" height="48" id="elki.clustering.em.models.BetulaClusterModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="3298.5" y="761.5"/><ellipse cx="3313.5" cy="777.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3316.4688,783.1406 Q3315.8906,783.4375 3315.25,783.5781 Q3314.6094,783.7344 3313.9063,783.7344 Q3311.4063,783.7344 3310.0781,782.0938 Q3308.7656,780.4375 3308.7656,777.3125 Q3308.7656,774.1875 3310.0781,772.5313 Q3311.4063,770.875 3313.9063,770.875 Q3314.6094,770.875 3315.25,771.0313 Q3315.9063,771.1875 3316.4688,771.4844 L3316.4688,774.2031 Q3315.8438,773.625 3315.25,773.3594 Q3314.6563,773.0781 3314.0313,773.0781 Q3312.6875,773.0781 3312,774.1563 Q3311.3125,775.2188 3311.3125,777.3125 Q3311.3125,779.4063 3312,780.4844 Q3312.6875,781.5469 3314.0313,781.5469 Q3314.6563,781.5469 3315.25,781.2813 Q3315.8438,781 3316.4688,780.4219 L3316.4688,783.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="3327.5" y="782.3467">BetulaClusterModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="3299.5" x2="3514.5" y1="793.5" y2="793.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3299.5" x2="3514.5" y1="801.5" y2="801.5"/></g><!--MD5=[2a0e4a4ea4f417b0e57b4e220ab0a029]
class elki.clustering.em.models.TextbookMultivariateGaussianModelFactory--><g id="elem_elki.clustering.em.models.TextbookMultivariateGaussianModelFactory"><rect fill="#F1F1F1" height="48" id="elki.clustering.em.models.TextbookMultivariateGaussianModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="330" x="3551" y="761.5"/><ellipse cx="3566" cy="777.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3568.9688,783.1406 Q3568.3906,783.4375 3567.75,783.5781 Q3567.1094,783.7344 3566.4063,783.7344 Q3563.9063,783.7344 3562.5781,782.0938 Q3561.2656,780.4375 3561.2656,777.3125 Q3561.2656,774.1875 3562.5781,772.5313 Q3563.9063,770.875 3566.4063,770.875 Q3567.1094,770.875 3567.75,771.0313 Q3568.4063,771.1875 3568.9688,771.4844 L3568.9688,774.2031 Q3568.3438,773.625 3567.75,773.3594 Q3567.1563,773.0781 3566.5313,773.0781 Q3565.1875,773.0781 3564.5,774.1563 Q3563.8125,775.2188 3563.8125,777.3125 Q3563.8125,779.4063 3564.5,780.4844 Q3565.1875,781.5469 3566.5313,781.5469 Q3567.1563,781.5469 3567.75,781.2813 Q3568.3438,781 3568.9688,780.4219 L3568.9688,783.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="3580" y="782.3467">TextbookMultivariateGaussianModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="3552" x2="3880" y1="793.5" y2="793.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3552" x2="3880" y1="801.5" y2="801.5"/></g><!--MD5=[347e51fc846265a4949787d11bdac0a4]
class elki.clustering.em.models.TextbookMultivariateGaussianModel--><g id="elem_elki.clustering.em.models.TextbookMultivariateGaussianModel"><rect fill="#F1F1F1" height="48" id="elki.clustering.em.models.TextbookMultivariateGaussianModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="280" x="3916" y="761.5"/><ellipse cx="3931" cy="777.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3933.9688,783.1406 Q3933.3906,783.4375 3932.75,783.5781 Q3932.1094,783.7344 3931.4063,783.7344 Q3928.9063,783.7344 3927.5781,782.0938 Q3926.2656,780.4375 3926.2656,777.3125 Q3926.2656,774.1875 3927.5781,772.5313 Q3928.9063,770.875 3931.4063,770.875 Q3932.1094,770.875 3932.75,771.0313 Q3933.4063,771.1875 3933.9688,771.4844 L3933.9688,774.2031 Q3933.3438,773.625 3932.75,773.3594 Q3932.1563,773.0781 3931.5313,773.0781 Q3930.1875,773.0781 3929.5,774.1563 Q3928.8125,775.2188 3928.8125,777.3125 Q3928.8125,779.4063 3929.5,780.4844 Q3930.1875,781.5469 3931.5313,781.5469 Q3932.1563,781.5469 3932.75,781.2813 Q3933.3438,781 3933.9688,780.4219 L3933.9688,783.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="3945" y="782.3467">TextbookMultivariateGaussianModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="3917" x2="4195" y1="793.5" y2="793.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3917" x2="4195" y1="801.5" y2="801.5"/></g><!--MD5=[cecbe970d5f040c0fe9a9f8059a38b51]
class elki.clustering.em.models.EMClusterModelFactory--><g id="elem_elki.clustering.em.models.EMClusterModelFactory"><rect fill="#F1F1F1" height="48" id="elki.clustering.em.models.EMClusterModelFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="4231" y="761.5"/><ellipse cx="4246" cy="777.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4248.9688,783.1406 Q4248.3906,783.4375 4247.75,783.5781 Q4247.1094,783.7344 4246.4063,783.7344 Q4243.9063,783.7344 4242.5781,782.0938 Q4241.2656,780.4375 4241.2656,777.3125 Q4241.2656,774.1875 4242.5781,772.5313 Q4243.9063,770.875 4246.4063,770.875 Q4247.1094,770.875 4247.75,771.0313 Q4248.4063,771.1875 4248.9688,771.4844 L4248.9688,774.2031 Q4248.3438,773.625 4247.75,773.3594 Q4247.1563,773.0781 4246.5313,773.0781 Q4245.1875,773.0781 4244.5,774.1563 Q4243.8125,775.2188 4243.8125,777.3125 Q4243.8125,779.4063 4244.5,780.4844 Q4245.1875,781.5469 4246.5313,781.5469 Q4247.1563,781.5469 4247.75,781.2813 Q4248.3438,781 4248.9688,780.4219 L4248.9688,783.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="4260" y="782.3467">EMClusterModelFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="4232" x2="4424" y1="793.5" y2="793.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4232" x2="4424" y1="801.5" y2="801.5"/></g><!--MD5=[1668c4813e4344090d7509c81c602533]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.em.BetulaGMM--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.em.BetulaGMM"><path codeLine="147" d="M1339.07,103.72 C1276.16,114.28 1208.98,128.14 1148,146 C1064.64,170.41 977.25,203.7 896.56,237.87 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.em.BetulaGMM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1338.02,96.8,1358.89,100.47,1340.29,110.61,1338.02,96.8" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[666109e44f81d28865b4b4d9a15db3a8]
link elki.clustering.em.BetulaGMM to elki.clustering.em.models.BetulaClusterModelFactory--><g id="link_elki.clustering.em.BetulaGMM_elki.clustering.em.models.BetulaClusterModelFactory"><path codeLine="148" d="M961.33,547.11 C1022.94,566.65 1086.62,583.99 1148,596 C1733.1,710.49 1892.35,632.62 2488,658 C2573.54,661.65 3176.38,662.14 3258,688 C3303.5,702.42 3348.49,734.71 3376.92,757.97 " fill="none" id="elki.clustering.em.BetulaGMM-to-elki.clustering.em.models.BetulaClusterModelFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3381,761.34,3376.6241,752.5167,3377.1507,758.1489,3371.5184,758.6755,3381,761.34" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="2489" y="646.5669">initializer</text></g><!--MD5=[4158519da30bbad706140cd5c1c88943]
reverse link elki.clustering.em.BetulaGMM to elki.clustering.em.BetulaGMMWeighted--><g id="link_elki.clustering.em.BetulaGMM_elki.clustering.em.BetulaGMMWeighted"><path codeLine="152" d="M576,567.51 C576,633.44 576,702.66 576,744.71 " fill="none" id="elki.clustering.em.BetulaGMM-backto-elki.clustering.em.BetulaGMMWeighted" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="569,567.19,576,547.19,583,567.19,569,567.19" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9def6731d28ef3dbf87fa614c67c1782]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.em.KDTreeEM--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.em.KDTreeEM"><path codeLine="155" d="M1582,125.13 C1582,143.5 1582,165.51 1582,188.89 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.em.KDTreeEM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1575,125.02,1582,105.02,1589,125.02,1575,125.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d50ef4de3d78b0ed3f1cc8c38d8dcf5e]
link elki.clustering.em.KDTreeEM to elki.clustering.em.models.TextbookMultivariateGaussianModelFactory--><g id="link_elki.clustering.em.KDTreeEM_elki.clustering.em.models.TextbookMultivariateGaussianModelFactory"><path codeLine="156" d="M1999.08,591.28 C2005.06,592.93 2011.04,594.51 2017,596 C2132.93,625.08 2434.69,618.89 2554,626 C2581.2,627.62 3506.77,680.62 3533,688 C3586.82,703.14 3642.86,735.55 3678.51,758.63 " fill="none" id="elki.clustering.em.KDTreeEM-to-elki.clustering.em.models.TextbookMultivariateGaussianModelFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3682.76,761.4,3677.4049,753.1343,3678.5714,758.6695,3673.0361,759.8361,3682.76,761.4" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="3073" y="646.5669">mfactory</text></g><!--MD5=[c13101fc3a8862a075cc4351a71e9f93]
link elki.clustering.em.KDTreeEM to elki.clustering.em.models.TextbookMultivariateGaussianModel--><g id="link_elki.clustering.em.KDTreeEM_elki.clustering.em.models.TextbookMultivariateGaussianModel"><path codeLine="157" d="M1999.02,591.52 C2005.02,593.1 2011.02,594.59 2017,596 C2138.39,624.58 3014.47,619.26 3139,626 C3477.4,644.31 3576.91,582.6 3899,688 C3945.81,703.32 3993.09,735.1 4023.35,758.02 " fill="none" id="elki.clustering.em.KDTreeEM-to-elki.clustering.em.models.TextbookMultivariateGaussianModel" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4027.69,761.33,4022.9637,752.6893,4023.7158,758.2959,4018.1092,759.048,4027.69,761.33" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="47" x="3804.5" y="639.0669">models</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="72" x="3792" y="654.1997">newmodels</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="4012.5387" y="750.2985">*</text></g><!--MD5=[543de698c1a09b333cf0eeda0b7a1409]
reverse link elki.clustering.em.KDTreeEM to elki.clustering.em.KDTreeEM.KDTree--><g id="link_elki.clustering.em.KDTreeEM_elki.clustering.em.KDTreeEM.KDTree"><path codeLine="158" d="M1582,611.51 C1582,638.25 1582,664.43 1582,688 " fill="none" id="elki.clustering.em.KDTreeEM-backto-elki.clustering.em.KDTreeEM.KDTree" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="1582" cy="604.16" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1582" x2="1582" y1="612.16" y2="596.16"/><line style="stroke:#181818;stroke-width:1.0;" x1="1574" x2="1590" y1="604.16" y2="604.16"/></g><!--MD5=[7e6314d81eb7bdfdee8a268084b4823c]
link elki.clustering.em.KDTreeEM.KDTree to elki.clustering.em.KDTreeEM.KDTree--><g id="link_elki.clustering.em.KDTreeEM.KDTree_elki.clustering.em.KDTreeEM.KDTree"><path codeLine="159" d="M1914.68,766.56 C1936.38,770.97 1949.5,777.28 1949.5,785.5 C1949.5,793.07 1938.35,799.03 1919.61,803.37 " fill="none" id="elki.clustering.em.KDTreeEM.KDTree-to-elki.clustering.em.KDTreeEM.KDTree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1914.68,804.44,1924.3224,806.4462,1919.5669,803.3826,1922.6305,798.6271,1914.68,804.44" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="1960" y="782.5669">leftChild</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="1955.5" y="797.6997">rightChild</text></g><!--MD5=[38f77092d37193fad89ffa61ac33d531]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.em.EM--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.em.EM"><path codeLine="163" d="M1825.14,104.89 C1888.2,115.44 1955.63,129 2017,146 C2077.33,162.71 2139.84,183.3 2200.93,205.38 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.em.EM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1823.89,111.78,1805.28,101.64,1826.15,97.96,1823.89,111.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e824fc63a476fe4fc56841f212c35416]
link elki.clustering.em.EM to elki.clustering.em.models.EMClusterModelFactory--><g id="link_elki.clustering.em.EM_elki.clustering.em.models.EMClusterModelFactory"><path codeLine="164" d="M3241.51,432.81 C3544.88,470.51 3911.37,544.2 4214,688 C4249.42,704.83 4282.78,735.46 4304.15,757.71 " fill="none" id="elki.clustering.em.EM-to-elki.clustering.em.models.EMClusterModelFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4307.74,761.48,4304.4287,752.2045,4304.2914,757.8597,4298.6362,757.7223,4307.74,761.48" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="4136" y="646.5669">mfactory</text></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="2124" y="905"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="2124" y="914.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[2680d8f813900555b25f33077b9c322b]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.em {

        class BetulaGMM [[BetulaGMM.html]] {
            {static} -LOG: Logging
            ~cffactory: Factory<?>
            ~k: int
            -delta: double
            ~maxiter: int
            -prior: double
            -soft: boolean
            {static} #MIN_LOGLIKELIHOOD: double
            {static} +SOFT_TYPE: SimpleTypeInformation<double[]>
            +BetulaGMM(Factory<?>, double, int, int, boolean, BetulaClusterModelFactory<?>, double)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<NumberVector>): Clustering<EMModel>
            -isSoft(): boolean
            +assignProbabilitiesToInstances(ArrayList<? extends ClusterFeature>, List<? extends BetulaClusterModel>, Map<ClusterFeature, double[]>): double
            +assignProbabilitiesToInstances(Relation<? extends NumberVector>, List<? extends BetulaClusterModel>, WritableDataStore<double[]>): double
            +recomputeCovarianceMatrices(ArrayList<? extends ClusterFeature>, Map<ClusterFeature, double[]>, List<? extends BetulaClusterModel>, double, int): void
        }

        class elki.clustering.em.BetulaGMM.Par [[BetulaGMM.Par.html]] {
            {static} +INIT_ID: OptionID
            {static} +DELTA_ID: OptionID
            {static} +PRIOR_ID: OptionID
            ~cffactory: Factory<?>
            #k: int
            #maxiter: int
            #delta: double
            #soft: boolean
            #prior: double
            +configure(Parameterization): void
            +make(): BetulaGMM
        }

        class BetulaGMMWeighted [[BetulaGMMWeighted.html]] {
            +BetulaGMMWeighted(Factory<?>, double, int, int, boolean, BetulaClusterModelFactory<?>, double)
            +assignProbabilitiesToInstances(ArrayList<? extends ClusterFeature>, List<? extends BetulaClusterModel>, Map<ClusterFeature, double[]>): double
        }

        class elki.clustering.em.BetulaGMMWeighted.Par [[BetulaGMMWeighted.Par.html]] {
            +make(): BetulaGMMWeighted
        }

        class KDTreeEM [[KDTreeEM.html]] {
            {static} -LOG: Logging
            -soft: boolean
            -delta: double
            {static} +SOFT_TYPE: SimpleTypeInformation<double[]>
            -k: int
            -mbw: double
            -tau: double
            -tauClass: double
            -miniter: int
            -maxiter: int
            #sorted: ArrayModifiableDBIDs
            -solver: ConstrainedQuadraticProblemSolver
            -ipiPow: double
            -wsum: double[]
            #exactAssign: boolean
            +KDTreeEM(int, double, double, double, double, TextbookMultivariateGaussianModelFactory, int, int, boolean, boolean)
            +run(Relation<? extends NumberVector>): Clustering<EMModel>
            -analyseDimWidth(Relation<? extends NumberVector>): double[]
            -checkStoppingCondition(KDTree, int[]): int[]
            -calculateModelLimits(KDTree, TextbookMultivariateGaussianModel, double[], double[], double[]): void
            -makeStats(KDTree, int[], WritableDataStore<double[]>): double
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.em.KDTreeEM.KDTree [[KDTreeEM.KDTree.html]] {
            ~left: int
            ~right: int
            ~sum: double[]
            ~sumSq: double[]
            ~midpoint: double[]
            ~halfwidth: double[]
            +KDTree(Relation<? extends NumberVector>, ArrayModifiableDBIDs, int, int, double[], double)
            -computeBoundingBox(Relation<? extends NumberVector>, DBIDArrayIter): void
            -aggregateStats(Relation<? extends NumberVector>, DBIDArrayIter, int): void
        }

        class elki.clustering.em.KDTreeEM.Par [[KDTreeEM.Par.html]] {
            {static} +K_ID: OptionID
            {static} +DELTA_ID: OptionID
            {static} +MBW_ID: OptionID
            {static} +TAU_ID: OptionID
            {static} +TAU_CLASS_ID: OptionID
            {static} +MINITER_ID: OptionID
            {static} +MAXITER_ID: OptionID
            {static} +SOFT_ID: OptionID
            {static} +EXACT_ASSIGN_ID: OptionID
            #k: int
            #mbw: double
            #tau: double
            #tauclass: double
            #delta: double
            #miniter: int
            #maxiter: int
            ~soft: boolean
            ~exactAssign: boolean
            +configure(Parameterization): void
            +make(): KDTreeEM
        }

        class EM<O, M extends MeanModel> [[EM.html]] {
            {static} -LOG: Logging
            {static} -KEY: String
            #k: int
            #delta: double
            #miniter: int
            #maxiter: int
            #prior: double
            #soft: boolean
            {static} #MIN_LOGLIKELIHOOD: double
            {static} +SOFT_TYPE: SimpleTypeInformation<double[]>
            +EM(int, double, EMClusterModelFactory<? super O, M extends MeanModel>)
            +EM(int, double, EMClusterModelFactory<? super O, M extends MeanModel>, int, boolean)
            +EM(int, double, EMClusterModelFactory<? super O, M extends MeanModel>, int, double, boolean)
            +EM(int, double, EMClusterModelFactory<? super O, M extends MeanModel>, int, int, double, boolean)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): Clustering<M extends MeanModel>
            {static} +recomputeCovarianceMatrices(Relation<? extends O>, WritableDataStore<double[]>, List<? extends EMClusterModel<? super O, ?>>, double): void
            {static} +assignProbabilitiesToInstances(Relation<? extends O>, List<? extends EMClusterModel<? super O, ?>>, WritableDataStore<double[]>, WritableDoubleDataStore): double
            {static} +logSumExp(double[]): double
            {static} #logSumExp(double, double): double
        }

        class elki.clustering.em.EM.Par<O, M extends MeanModel> [[EM.Par.html]] {
            {static} +K_ID: OptionID
            {static} +DELTA_ID: OptionID
            {static} +MODEL_ID: OptionID
            {static} +MINITER_ID: OptionID
            {static} +MAXITER_ID: OptionID
            {static} +PRIOR_ID: OptionID
            {static} +SOFT_ID: OptionID
            #k: int
            #delta: double
            #miniter: int
            #maxiter: int
            ~prior: double
            ~soft: boolean
            +configure(Parameterization): void
            +make(): EM<O, M extends MeanModel>
        }

        elki.clustering.ClusteringAlgorithm <|.. BetulaGMM
        BetulaGMM - -> elki.clustering.em.models.BetulaClusterModelFactory: initializer
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.BetulaGMM.Par
        BetulaGMM +- - elki.clustering.em.BetulaGMM.Par
        elki.clustering.em.BetulaGMM.Par - -> elki.clustering.em.models.BetulaClusterModelFactory: initialization
        BetulaGMM <|- - BetulaGMMWeighted
        elki.clustering.em.BetulaGMM.Par <|- - elki.clustering.em.BetulaGMMWeighted.Par
        BetulaGMMWeighted +- - elki.clustering.em.BetulaGMMWeighted.Par
        elki.clustering.ClusteringAlgorithm <|.. KDTreeEM
        KDTreeEM - -> elki.clustering.em.models.TextbookMultivariateGaussianModelFactory: mfactory
        KDTreeEM - -> "*" elki.clustering.em.models.TextbookMultivariateGaussianModel: models\nnewmodels
        KDTreeEM +- - elki.clustering.em.KDTreeEM.KDTree
        elki.clustering.em.KDTreeEM.KDTree - -> elki.clustering.em.KDTreeEM.KDTree: leftChild\nrightChild
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.KDTreeEM.Par
        KDTreeEM +- - elki.clustering.em.KDTreeEM.Par
        elki.clustering.em.KDTreeEM.Par - -> elki.clustering.em.models.TextbookMultivariateGaussianModelFactory: mfactory
        elki.clustering.ClusteringAlgorithm <|.. EM
        EM - -> elki.clustering.em.models.EMClusterModelFactory: mfactory
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.em.EM.Par
        EM +- - elki.clustering.em.EM.Par
        elki.clustering.em.EM.Par - -> elki.clustering.em.models.EMClusterModelFactory: mfactory
    }

    namespace elki.clustering {
        interface ClusteringAlgorithm<C extends Clustering<? extends Model>> [[../ClusteringAlgorithm.html]] {
            +autorun(Database): C extends Clustering<? extends Model>
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>