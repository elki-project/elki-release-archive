<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="684px" preserveAspectRatio="none" style="width:750px;height:684px;background:#FFFFFF;" version="1.1" viewBox="0 0 750 684" width="750px" zoomAndPan="magnify"><defs/><g><!--MD5=[65741f9ab1d9b71be36c274839b2c01a]
class elki.clustering.kmeans.AbstractKMeans--><a href="AbstractKMeans.html" target="_top" title="AbstractKMeans.html" xlink:actuate="onRequest" xlink:href="AbstractKMeans.html" xlink:show="new" xlink:title="AbstractKMeans.html" xlink:type="simple"><g id="elem_elki.clustering.kmeans.AbstractKMeans"><rect codeLine="6" fill="#F1F1F1" height="461.3594" id="elki.clustering.kmeans.AbstractKMeans" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730" x="9" y="197"/><ellipse cx="182.25" cy="215.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.3594,211.3125 L181.2031,216.3906 L183.5313,216.3906 L182.3594,211.3125 Z M180.875,209.0781 L183.8594,209.0781 L187.2188,221.4688 L184.7656,221.4688 L184,218.4063 L180.7188,218.4063 L179.9688,221.4688 L177.5313,221.4688 L180.875,209.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="202.75" y="214.9951">AbstractKMeans</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="112" x="203.25" y="227.5791">elki.clustering.kmeans</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="260" x="482" y="194"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="258" x="483" y="206.1387">V extends NumberVector, M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="738" y1="234.9375" y2="234.9375"/><polygon fill="none" points="20,243.5859,24,247.5859,20,251.5859,16,247.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="29" y="251.9326">distance: NumberVectorDistance&lt;? super NumberVector&gt;</text><polygon fill="none" points="20,259.8828,24,263.8828,20,267.8828,16,263.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="29" y="268.2295">k: int</text><polygon fill="none" points="20,276.1797,24,280.1797,20,284.1797,16,280.1797" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="29" y="284.5264">maxiter: int</text><polygon fill="none" points="20,292.4766,24,296.4766,20,300.4766,16,296.4766" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="29" y="300.8232">initializer: KMeansInitialization</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="738" y1="308.125" y2="308.125"/><ellipse cx="20" cy="321.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="29" y="325.1201">AbstractKMeans(int, int, KMeansInitialization)</text><ellipse cx="20" cy="338.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="654" x="29" y="341.417">AbstractKMeans(NumberVectorDistance&lt;? super NumberVector&gt;, int, int, KMeansInitialization)</text><ellipse cx="20" cy="354.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="29" y="357.7139">getInputTypeRestriction(): TypeInformation[]</text><polygon fill="#FFFF44" points="20,365.6641,24,369.6641,20,373.6641,16,369.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="29" y="374.0107">initialMeans(Relation&lt;V extends NumberVector&gt;): double[]</text><polygon fill="#FFFF44" points="20,381.9609,24,385.9609,20,389.9609,16,385.9609" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="610" x="29" y="390.3076">means(List&lt;? extends DBIDs&gt;, double[], Relation&lt;? extends NumberVector&gt;): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="400.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="653" x="29" y="406.6045">denseMeans(List&lt;? extends DBIDs&gt;, double[], Relation&lt;? extends NumberVector&gt;): double[]</text><ellipse cx="20" cy="419.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="288" x="29" y="422.9014">plusEquals(double[], NumberVector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="432.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="332" x="29" y="439.1982">densePlusEquals(double[], NumberVector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="449.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="383" x="29" y="455.4951">sparsePlusEquals(double[], SparseNumberVector): void</text><ellipse cx="20" cy="468.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="301" x="29" y="471.792">minusEquals(double[], NumberVector): void</text><ellipse cx="20" cy="484.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="29" y="488.0889">plusMinusEquals(double[], double[], NumberVector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="498.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="439" x="29" y="504.3857">densePlusMinusEquals(double[], double[], NumberVector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="514.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="490" x="29" y="520.6826">sparsePlusMinusEquals(double[], double[], SparseNumberVector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="530.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="704" x="29" y="536.9795">sparseMeans(List&lt;? extends DBIDs&gt;, double[], Relation&lt;? extends SparseNumberVector&gt;): double[]</text><polygon fill="#FFFF44" points="20,544.9297,24,548.9297,20,552.9297,16,548.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="239" x="29" y="553.2764">nearestMeans(double[], int[]): void</text><polygon fill="#FFFF44" points="20,561.2266,24,565.2266,20,569.2266,16,565.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="463" x="29" y="569.5732">incrementalUpdateMean(double[], NumberVector, int, double): void</text><ellipse cx="20" cy="582.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="29" y="585.8701">setK(int): void</text><ellipse cx="20" cy="598.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="443" x="29" y="602.167">getDistance(): NumberVectorDistance&lt;? super NumberVector&gt;</text><ellipse cx="20" cy="615.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="470" x="29" y="618.4639">setDistance(NumberVectorDistance&lt;? super NumberVector&gt;): void</text><ellipse cx="20" cy="631.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="29" y="634.7607">setInitializer(KMeansInitialization): void</text><polygon fill="#FFFF44" points="20,642.7109,24,646.7109,20,650.7109,16,646.7109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="29" y="651.0576">getLogger(): Logging</text></g></a><!--MD5=[71e72c8caaeda77e4222b2f16d96f4d2]
class elki.clustering.kmeans.KMeans--><a href="KMeans.html" target="_top" title="KMeans.html" xlink:actuate="onRequest" xlink:href="KMeans.html" xlink:show="new" xlink:title="KMeans.html" xlink:type="simple"><g id="elem_elki.clustering.kmeans.KMeans"><rect codeLine="34" fill="#F1F1F1" height="127.4219" id="elki.clustering.kmeans.KMeans" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="542" x="103" y="10"/><ellipse cx="182.75" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M178.6719,24.7344 L178.6719,22.5781 L186.0625,22.5781 L186.0625,24.7344 L183.5938,24.7344 L183.5938,32.8125 L186.0625,32.8125 L186.0625,34.9688 L178.6719,34.9688 L178.6719,32.8125 L181.1406,32.8125 L181.1406,24.7344 L178.6719,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="55" x="231.75" y="27.9951">KMeans</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="112" x="203.25" y="40.5791">elki.clustering.kmeans</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="260" x="388" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="258" x="389" y="19.1387">V extends NumberVector, M extends Model</text><line style="stroke:#181818;stroke-width:0.5;" x1="104" x2="644" y1="47.9375" y2="47.9375"/><ellipse cx="114" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="516" x="123" y="64.9326">run(Relation&lt;V extends NumberVector&gt;): Clustering&lt;M extends Model&gt;</text><ellipse cx="114" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="97" x="123" y="81.2295">setK(int): void</text><ellipse cx="114" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="478" x="123" y="97.5264">setDistance(NumberVectorDistance&lt;? super NumberVector&gt;): void</text><ellipse cx="114" cy="110.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="450" x="123" y="113.8232">getDistance(): NumberVectorDistance&lt;? super NumberVector&gt;</text><ellipse cx="114" cy="126.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="275" x="123" y="130.1201">setInitializer(KMeansInitialization): void</text></g></a><!--MD5=[cf749b0a5fd798860dec876fcbfa13b1]
reverse link elki.clustering.kmeans.KMeans to elki.clustering.kmeans.AbstractKMeans--><g id="link_elki.clustering.kmeans.KMeans_elki.clustering.kmeans.AbstractKMeans"><path codeLine="44" d="M374,157.17 C374,169.68 374,183.07 374,196.95 " fill="none" id="elki.clustering.kmeans.KMeans-backto-elki.clustering.kmeans.AbstractKMeans" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="367,157.02,374,137.02,381,157.02,367,157.02" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="275" y="664.3594"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="275" y="673.6416">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[140850ffa8d450239a40c2a5149331eb]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    abstract class "<size:14>AbstractKMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.AbstractKMeans<V extends NumberVector, M extends Model> [[AbstractKMeans.html]] {
        #distance: NumberVectorDistance<? super NumberVector>
        #k: int
        #maxiter: int
        #initializer: KMeansInitialization
        +AbstractKMeans(int, int, KMeansInitialization)
        +AbstractKMeans(NumberVectorDistance<? super NumberVector>, int, int, KMeansInitialization)
        +getInputTypeRestriction(): TypeInformation[]
        #initialMeans(Relation<V extends NumberVector>): double[]
        {static} #means(List<? extends DBIDs>, double[], Relation<? extends NumberVector>): double[]
        {static} -denseMeans(List<? extends DBIDs>, double[], Relation<? extends NumberVector>): double[]
        {static} +plusEquals(double[], NumberVector): void
        {static} -densePlusEquals(double[], NumberVector): void
        {static} -sparsePlusEquals(double[], SparseNumberVector): void
        {static} +minusEquals(double[], NumberVector): void
        {static} +plusMinusEquals(double[], double[], NumberVector): void
        {static} -densePlusMinusEquals(double[], double[], NumberVector): void
        {static} -sparsePlusMinusEquals(double[], double[], SparseNumberVector): void
        {static} -sparseMeans(List<? extends DBIDs>, double[], Relation<? extends SparseNumberVector>): double[]
        {static} #nearestMeans(double[], int[]): void
        {static} #incrementalUpdateMean(double[], NumberVector, int, double): void
        +setK(int): void
        +getDistance(): NumberVectorDistance<? super NumberVector>
        +setDistance(NumberVectorDistance<? super NumberVector>): void
        +setInitializer(KMeansInitialization): void
        {abstract} #getLogger(): Logging
    }

    interface "<size:14>KMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.KMeans<V extends NumberVector, M extends Model> [[KMeans.html]] {
        {abstract} +run(Relation<V extends NumberVector>): Clustering<M extends Model>
        {abstract} +setK(int): void
        {abstract} +setDistance(NumberVectorDistance<? super NumberVector>): void
        {abstract} +getDistance(): NumberVectorDistance<? super NumberVector>
        {abstract} +setInitializer(KMeansInitialization): void
    }
    abstract class "<size:14>AbstractKMeans.Instance\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.AbstractKMeans.Instance [[AbstractKMeans.Instance.html]]
    abstract class "<size:14>AbstractKMeans.Par\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.AbstractKMeans.Par<V extends NumberVector> [[AbstractKMeans.Par.html]]

    elki.clustering.kmeans.KMeans <|.. elki.clustering.kmeans.AbstractKMeans
    elki.clustering.kmeans.AbstractKMeans +- - elki.clustering.kmeans.AbstractKMeans.Instance
    elki.clustering.kmeans.AbstractKMeans +- - elki.clustering.kmeans.AbstractKMeans.Par

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>