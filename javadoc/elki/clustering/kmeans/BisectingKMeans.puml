@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>BisectingKMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.BisectingKMeans<V extends NumberVector, M extends MeanModel> [[BisectingKMeans.html]] {
        {static} -LOG: Logging
        -innerkMeans: KMeans<V extends NumberVector, M extends MeanModel>
        -k: int
        +BisectingKMeans(int, KMeans<V extends NumberVector, M extends MeanModel>)
        +getInputTypeRestriction(): TypeInformation[]
        +run(Relation<V extends NumberVector>): Clustering<M extends MeanModel>
        +getDistance(): NumberVectorDistance<? super NumberVector>
        +setK(int): void
        +setDistance(NumberVectorDistance<? super NumberVector>): void
        +setInitializer(KMeansInitialization): void
    }

    interface "<size:14>KMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.KMeans<V extends NumberVector, M extends MeanModel> [[KMeans.html]] {
        {abstract} +run(Relation<V extends NumberVector>): Clustering<M extends Model>
        {abstract} +setK(int): void
        {abstract} +setDistance(NumberVectorDistance<? super NumberVector>): void
        {abstract} +getDistance(): NumberVectorDistance<? super NumberVector>
        {abstract} +setInitializer(KMeansInitialization): void
    }
    class "<size:14>BisectingKMeans.Par\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.BisectingKMeans.Par<V extends NumberVector, M extends MeanModel>

    elki.clustering.kmeans.KMeans <|.. elki.clustering.kmeans.BisectingKMeans
    elki.clustering.kmeans.BisectingKMeans +-- elki.clustering.kmeans.BisectingKMeans.Par

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml
