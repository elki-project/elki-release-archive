<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="456px" preserveAspectRatio="none" style="width:662px;height:456px;background:#FFFFFF;" version="1.1" viewBox="0 0 662 456" width="662px" zoomAndPan="magnify"><defs/><g><!--MD5=[7de66356723c5c81b2e8b8815b34b848]
class elki.clustering.kmeans.BetulaLloydKMeans--><a href="BetulaLloydKMeans.html" target="_top" title="BetulaLloydKMeans.html" xlink:actuate="onRequest" xlink:href="BetulaLloydKMeans.html" xlink:show="new" xlink:title="BetulaLloydKMeans.html" xlink:type="simple"><g id="elem_elki.clustering.kmeans.BetulaLloydKMeans"><rect codeLine="6" fill="#F1F1F1" height="298.3906" id="elki.clustering.kmeans.BetulaLloydKMeans" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="646" x="9" y="132"/><ellipse cx="260.75" cy="150.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M263.7188,156.6094 Q263.1406,156.9063 262.5,157.0469 Q261.8594,157.2031 261.1563,157.2031 Q258.6563,157.2031 257.3281,155.5625 Q256.0156,153.9063 256.0156,150.7813 Q256.0156,147.6563 257.3281,146 Q258.6563,144.3438 261.1563,144.3438 Q261.8594,144.3438 262.5,144.5 Q263.1563,144.6563 263.7188,144.9531 L263.7188,147.6719 Q263.0938,147.0938 262.5,146.8281 Q261.9063,146.5469 261.2813,146.5469 Q259.9375,146.5469 259.25,147.625 Q258.5625,148.6875 258.5625,150.7813 Q258.5625,152.875 259.25,153.9531 Q259.9375,155.0156 261.2813,155.0156 Q261.9063,155.0156 262.5,154.75 Q263.0938,154.4688 263.7188,153.8906 L263.7188,156.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="281.25" y="149.9951">BetulaLloydKMeans</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="105" x="295.75" y="162.5791">elki.clustering.kmeans</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="654" y1="169.9375" y2="169.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="180.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="29" y="186.9326">LOG: Logging</text><polygon fill="none" points="20,195.8828,16,201.8828,24,201.8828" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="29" y="203.2295">cffactory: Factory&lt;?&gt;</text><polygon fill="none" points="20,212.1797,16,218.1797,24,218.1797" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="29" y="219.5264">initialization: AbstractCFKMeansInitialization</text><polygon fill="none" points="20,228.4766,16,234.4766,24,234.4766" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="29" y="235.8232">storeIds: boolean</text><polygon fill="none" points="20,244.7734,16,250.7734,24,250.7734" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="29" y="252.1201">ignoreWeight: boolean</text><polygon fill="none" points="20,261.0703,16,267.0703,24,267.0703" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="29" y="268.417">diststat: long</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="654" y1="275.7188" y2="275.7188"/><ellipse cx="20" cy="289.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="620" x="29" y="292.7139">BetulaLloydKMeans(int, int, Factory&lt;?&gt;, AbstractCFKMeansInitialization, boolean, boolean)</text><ellipse cx="20" cy="305.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="29" y="309.0107">run(Relation&lt;NumberVector&gt;): Clustering&lt;KMeansModel&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="318.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="29" y="325.3076">kmeans(ArrayList&lt;? extends ClusterFeature&gt;, int[], int[], CFTree&lt;?&gt;): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="335.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="514" x="29" y="341.6045">means(int[], double[], ArrayList&lt;? extends ClusterFeature&gt;, int[]): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="351.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="592" x="29" y="357.9014">assignToNearestCluster(int[], double[], ArrayList&lt;? extends ClusterFeature&gt;, int[]): int</text><polygon fill="#FFFF44" points="20,365.8516,24,369.8516,20,373.8516,16,369.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="595" x="29" y="374.1982">calculateVariances(int[], double[], ArrayList&lt;? extends ClusterFeature&gt;, int[]): double[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="384.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="29" y="390.4951">distance(NumberVector, double[]): double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="400.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="29" y="406.792">distance(double[], double[]): double</text><polygon fill="#FFFF44" points="20,414.7422,24,418.7422,20,422.7422,16,418.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="29" y="423.0889">getLogger(): Logging</text></g></a><!--MD5=[65741f9ab1d9b71be36c274839b2c01a]
class elki.clustering.kmeans.AbstractKMeans--><a href="AbstractKMeans.html" target="_top" title="AbstractKMeans.html" xlink:actuate="onRequest" xlink:href="AbstractKMeans.html" xlink:show="new" xlink:title="AbstractKMeans.html" xlink:type="simple"><g id="elem_elki.clustering.kmeans.AbstractKMeans"><rect codeLine="24" fill="#F1F1F1" height="62.2344" id="elki.clustering.kmeans.AbstractKMeans" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="170" y="10"/><ellipse cx="185" cy="28.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M185.1094,24.3125 L183.9531,29.3906 L186.2813,29.3906 L185.1094,24.3125 Z M183.625,22.0781 L186.6094,22.0781 L189.9688,34.4688 L187.5156,34.4688 L186.75,31.4063 L183.4688,31.4063 L182.7188,34.4688 L180.2813,34.4688 L183.625,22.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="199" y="27.9951">AbstractKMeans</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="112" x="199.5" y="40.5791">elki.clustering.kmeans</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="177" x="320" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="175" x="321" y="19.1387">NumberVector, KMeansModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="171" x2="493" y1="47.9375" y2="47.9375"/><polygon fill="#FFFF44" points="181,56.5859,185,60.5859,181,64.5859,177,60.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="190" y="64.9326">getLogger(): Logging</text></g></a><!--MD5=[e841fe91a3be14c35d378f1bd2301917]
reverse link elki.clustering.kmeans.AbstractKMeans to elki.clustering.kmeans.BetulaLloydKMeans--><g id="link_elki.clustering.kmeans.AbstractKMeans_elki.clustering.kmeans.BetulaLloydKMeans"><path codeLine="29" d="M332,92.16 C332,104.25 332,117.78 332,131.9 " fill="none" id="elki.clustering.kmeans.AbstractKMeans-backto-elki.clustering.kmeans.BetulaLloydKMeans" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="325,92.14,332,72.14,339,92.14,325,92.14" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="231" y="436.3906"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="231" y="445.6729">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[4c41d5e3fb75118ea633605933e4a9fd]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>BetulaLloydKMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.BetulaLloydKMeans [[BetulaLloydKMeans.html]] {
        {static} -LOG: Logging
        ~cffactory: Factory<?>
        ~initialization: AbstractCFKMeansInitialization
        ~storeIds: boolean
        ~ignoreWeight: boolean
        ~diststat: long
        +BetulaLloydKMeans(int, int, Factory<?>, AbstractCFKMeansInitialization, boolean, boolean)
        +run(Relation<NumberVector>): Clustering<KMeansModel>
        -kmeans(ArrayList<? extends ClusterFeature>, int[], int[], CFTree<?>): double[]
        -means(int[], double[], ArrayList<? extends ClusterFeature>, int[]): double[]
        -assignToNearestCluster(int[], double[], ArrayList<? extends ClusterFeature>, int[]): int
        #calculateVariances(int[], double[], ArrayList<? extends ClusterFeature>, int[]): double[]
        -distance(NumberVector, double[]): double
        -distance(double[], double[]): double
        #getLogger(): Logging
    }

    abstract class "<size:14>AbstractKMeans\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.AbstractKMeans<NumberVector, KMeansModel> [[AbstractKMeans.html]] {
        {abstract} #getLogger(): Logging
    }
    class "<size:14>BetulaLloydKMeans.Par\n<size:10>elki.clustering.kmeans" as elki.clustering.kmeans.BetulaLloydKMeans.Par [[BetulaLloydKMeans.Par.html]]

    elki.clustering.kmeans.AbstractKMeans <|- - elki.clustering.kmeans.BetulaLloydKMeans
    elki.clustering.kmeans.BetulaLloydKMeans +- - elki.clustering.kmeans.BetulaLloydKMeans.Par

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>