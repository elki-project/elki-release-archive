<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="622px" preserveAspectRatio="none" style="width:2267px;height:622px;background:#FFFFFF;" version="1.1" viewBox="0 0 2267 622" width="2267px" zoomAndPan="magnify"><defs/><g><!--MD5=[e61fc6e48eb479b0c8c8935c477c23e0]
cluster elki.clustering.dbscan--><g id="cluster_elki.clustering.dbscan"><path d="M8.5,154 L182.5,154 A3.75,3.75 0 0 1 185,156.5 L192,176.2969 L2257.5,176.2969 A2.5,2.5 0 0 1 2260,178.7969 L2260,446.5 A2.5,2.5 0 0 1 2257.5,449 L8.5,449 A2.5,2.5 0 0 1 6,446.5 L6,156.5 A2.5,2.5 0 0 1 8.5,154 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="192" y1="176.2969" y2="176.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="173" x="10" y="168.9951">elki.clustering.dbscan</text></g><!--MD5=[5a16a86ac2d7d394fc35a681d34e2667]
cluster elki.clustering--><g id="cluster_elki.clustering"><path d="M864.5,6 L976.5,6 A3.75,3.75 0 0 1 979,8.5 L986,28.2969 L1337.5,28.2969 A2.5,2.5 0 0 1 1340,30.7969 L1340,118.5 A2.5,2.5 0 0 1 1337.5,121 L864.5,121 A2.5,2.5 0 0 1 862,118.5 L862,8.5 A2.5,2.5 0 0 1 864.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="862" x2="986" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="111" x="866" y="20.9951">elki.clustering</text></g><!--MD5=[c004b283215639cbf46c5e000861e099]
cluster elki.clustering.dbscan.predicates--><g id="cluster_elki.clustering.dbscan.predicates"><path d="M1253.5,498 L1516.5,498 A3.75,3.75 0 0 1 1519,500.5 L1526,520.2969 L1605.5,520.2969 A2.5,2.5 0 0 1 1608,522.7969 L1608,594.5 A2.5,2.5 0 0 1 1605.5,597 L1253.5,597 A2.5,2.5 0 0 1 1251,594.5 L1251,500.5 A2.5,2.5 0 0 1 1253.5,498 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1251" x2="1526" y1="520.2969" y2="520.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="262" x="1255" y="512.9951">elki.clustering.dbscan.predicates</text></g><!--MD5=[3de206ea742075a1182baabc441d3e7b]
cluster elki.clustering.dbscan.util--><g id="cluster_elki.clustering.dbscan.util"><path d="M1851.5,14 L2054.5,14 A3.75,3.75 0 0 1 2057,16.5 L2064,36.2969 L2064.5,36.2969 A2.5,2.5 0 0 1 2067,38.7969 L2067,110.5 A2.5,2.5 0 0 1 2064.5,113 L1851.5,113 A2.5,2.5 0 0 1 1849,110.5 L1849,16.5 A2.5,2.5 0 0 1 1851.5,14 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1849" x2="2064" y1="36.2969" y2="36.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="202" x="1853" y="28.9951">elki.clustering.dbscan.util</text></g><!--MD5=[4bb23527f4ef8c9452b34e708a7b7bf2]
class elki.clustering.dbscan.DBSCAN--><a href="DBSCAN.html" target="_top" title="DBSCAN.html" xlink:actuate="onRequest" xlink:href="DBSCAN.html" xlink:show="new" xlink:title="DBSCAN.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.DBSCAN"><rect codeLine="4" fill="#F1F1F1" height="162.0781" id="elki.clustering.dbscan.DBSCAN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="332" x="22" y="230"/><ellipse cx="148.25" cy="246" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M151.2188,251.6406 Q150.6406,251.9375 150,252.0781 Q149.3594,252.2344 148.6563,252.2344 Q146.1563,252.2344 144.8281,250.5938 Q143.5156,248.9375 143.5156,245.8125 Q143.5156,242.6875 144.8281,241.0313 Q146.1563,239.375 148.6563,239.375 Q149.3594,239.375 150,239.5313 Q150.6563,239.6875 151.2188,239.9844 L151.2188,242.7031 Q150.5938,242.125 150,241.8594 Q149.4063,241.5781 148.7813,241.5781 Q147.4375,241.5781 146.75,242.6563 Q146.0625,243.7188 146.0625,245.8125 Q146.0625,247.9063 146.75,248.9844 Q147.4375,250.0469 148.7813,250.0469 Q149.4063,250.0469 150,249.7813 Q150.5938,249.5 151.2188,248.9219 L151.2188,251.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="168.75" y="250.8467">DBSCAN</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="347" y="227"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="348" y="239.1387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="353" y1="262" y2="262"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="272.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="42" y="278.9951">LOG: Logging</text><polygon fill="none" points="33,286.9453,37,290.9453,33,294.9453,29,290.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="42" y="295.292">distance: Distance&lt;? super O&gt;</text><polygon fill="none" points="33,303.2422,37,307.2422,33,311.2422,29,307.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="42" y="311.5889">epsilon: double</text><polygon fill="none" points="33,319.5391,37,323.5391,33,327.5391,29,323.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="42" y="327.8857">minpts: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="353" y1="335.1875" y2="335.1875"/><ellipse cx="33" cy="348.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="42" y="352.1826">DBSCAN(Distance&lt;? super O&gt;, double, int)</text><ellipse cx="33" cy="365.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="42" y="368.4795">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="33" cy="381.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="42" y="384.7764">run(Relation&lt;O&gt;): Clustering&lt;Model&gt;</text></g></a><!--MD5=[41fe4718789e46c7eb710d27cb32cb7b]
class elki.clustering.dbscan.LSDBC--><a href="LSDBC.html" target="_top" title="LSDBC.html" xlink:actuate="onRequest" xlink:href="LSDBC.html" xlink:show="new" xlink:title="LSDBC.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.LSDBC"><rect codeLine="38" fill="#F1F1F1" height="243.5625" id="elki.clustering.dbscan.LSDBC" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="755" x="389.5" y="189"/><ellipse cx="662.25" cy="205" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M665.2188,210.6406 Q664.6406,210.9375 664,211.0781 Q663.3594,211.2344 662.6563,211.2344 Q660.1563,211.2344 658.8281,209.5938 Q657.5156,207.9375 657.5156,204.8125 Q657.5156,201.6875 658.8281,200.0313 Q660.1563,198.375 662.6563,198.375 Q663.3594,198.375 664,198.5313 Q664.6563,198.6875 665.2188,198.9844 L665.2188,201.7031 Q664.5938,201.125 664,200.8594 Q663.4063,200.5781 662.7813,200.5781 Q661.4375,200.5781 660.75,201.6563 Q660.0625,202.7188 660.0625,204.8125 Q660.0625,206.9063 660.75,207.9844 Q661.4375,209.0469 662.7813,209.0469 Q663.4063,209.0469 664,208.7813 Q664.5938,208.5 665.2188,207.9219 L665.2188,210.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="682.75" y="209.8467">LSDBC</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="995.5" y="186"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="996.5" y="198.1387">O extends NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="390.5" x2="1143.5" y1="221" y2="221"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="397.5" y="231.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="409.5" y="237.9951">LOG: Logging</text><polygon fill="none" points="400.5,245.9453,404.5,249.9453,400.5,253.9453,396.5,249.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="409.5" y="254.292">kplus: int</text><polygon fill="none" points="400.5,262.2422,404.5,266.2422,400.5,270.2422,396.5,266.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="409.5" y="270.5889">alpha: double</text><polygon fill="none" points="400.5,278.5391,404.5,282.5391,400.5,286.5391,396.5,282.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="409.5" y="286.8857">distance: Distance&lt;? super NumberVector&gt;</text><polygon fill="none" points="400.5,294.8359,404.5,298.8359,400.5,302.8359,396.5,298.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="409.5" y="303.1826">UNPROCESSED: int</text><polygon fill="none" points="400.5,311.1328,404.5,315.1328,400.5,319.1328,396.5,315.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="68" x="409.5" y="319.4795">NOISE: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="390.5" x2="1143.5" y1="326.7813" y2="326.7813"/><ellipse cx="400.5" cy="340.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="378" x="409.5" y="343.7764">LSDBC(Distance&lt;? super NumberVector&gt;, int, double)</text><ellipse cx="400.5" cy="356.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="409.5" y="360.0732">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="400.5" cy="373.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="433" x="409.5" y="376.3701">run(Relation&lt;O extends NumberVector&gt;): Clustering&lt;Model&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="397.5" y="386.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="467" x="409.5" y="392.667">isLocalMaximum(double, DBIDs, WritableDoubleDataStore): boolean</text><polygon fill="#FFFF44" points="400.5,400.6172,404.5,404.6172,400.5,408.6172,396.5,404.6172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="729" x="409.5" y="408.9639">expandCluster(int, WritableIntegerDataStore, KNNSearcher&lt;DBIDRef&gt;, DBIDs, double, FiniteProgress): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="397.5" y="418.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="531" x="409.5" y="425.2607">fillDensities(KNNSearcher&lt;DBIDRef&gt;, DBIDs, WritableDoubleDataStore): void</text></g></a><!--MD5=[3a5abaacbbafbc9999cf7307530d49b3]
class elki.clustering.dbscan.GeneralizedDBSCAN--><a href="GeneralizedDBSCAN.html" target="_top" title="GeneralizedDBSCAN.html" xlink:actuate="onRequest" xlink:href="GeneralizedDBSCAN.html" xlink:show="new" xlink:title="GeneralizedDBSCAN.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.GeneralizedDBSCAN"><rect codeLine="63" fill="#F1F1F1" height="129.4844" id="elki.clustering.dbscan.GeneralizedDBSCAN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="538" x="1180" y="246.5"/><ellipse cx="1373.75" cy="262.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1376.7188,268.1406 Q1376.1406,268.4375 1375.5,268.5781 Q1374.8594,268.7344 1374.1563,268.7344 Q1371.6563,268.7344 1370.3281,267.0938 Q1369.0156,265.4375 1369.0156,262.3125 Q1369.0156,259.1875 1370.3281,257.5313 Q1371.6563,255.875 1374.1563,255.875 Q1374.8594,255.875 1375.5,256.0313 Q1376.1563,256.1875 1376.7188,256.4844 L1376.7188,259.2031 Q1376.0938,258.625 1375.5,258.3594 Q1374.9063,258.0781 1374.2813,258.0781 Q1372.9375,258.0781 1372.25,259.1563 Q1371.5625,260.2188 1371.5625,262.3125 Q1371.5625,264.4063 1372.25,265.4844 Q1372.9375,266.5469 1374.2813,266.5469 Q1374.9063,266.5469 1375.5,266.2813 Q1376.0938,266 1376.7188,265.4219 L1376.7188,268.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1394.25" y="267.3467">GeneralizedDBSCAN</text><line style="stroke:#181818;stroke-width:0.5;" x1="1181" x2="1717" y1="278.5" y2="278.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1188" y="289.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1200" y="295.4951">LOG: Logging</text><polygon fill="none" points="1191,303.4453,1195,307.4453,1191,311.4453,1187,307.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1200" y="311.792">coremodel: boolean</text><line style="stroke:#181818;stroke-width:0.5;" x1="1181" x2="1717" y1="319.0938" y2="319.0938"/><ellipse cx="1191" cy="332.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="512" x="1200" y="336.0889">GeneralizedDBSCAN(NeighborPredicate&lt;?&gt;, CorePredicate&lt;?&gt;, boolean)</text><ellipse cx="1191" cy="349.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="1200" y="352.3857">autorun(Database): Clustering&lt;Model&gt;</text><ellipse cx="1191" cy="365.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1200" y="368.6826">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[041079769dca0b47d1a220b39cf9fbef]
class elki.clustering.dbscan.GriDBSCAN--><a href="GriDBSCAN.html" target="_top" title="GriDBSCAN.html" xlink:actuate="onRequest" xlink:href="GriDBSCAN.html" xlink:show="new" xlink:title="GriDBSCAN.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.GriDBSCAN"><rect codeLine="90" fill="#F1F1F1" height="178.375" id="elki.clustering.dbscan.GriDBSCAN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="491" x="1753.5" y="222"/><ellipse cx="1878.75" cy="238" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1881.7188,243.6406 Q1881.1406,243.9375 1880.5,244.0781 Q1879.8594,244.2344 1879.1563,244.2344 Q1876.6563,244.2344 1875.3281,242.5938 Q1874.0156,240.9375 1874.0156,237.8125 Q1874.0156,234.6875 1875.3281,233.0313 Q1876.6563,231.375 1879.1563,231.375 Q1879.8594,231.375 1880.5,231.5313 Q1881.1563,231.6875 1881.7188,231.9844 L1881.7188,234.7031 Q1881.0938,234.125 1880.5,233.8594 Q1879.9063,233.5781 1879.2813,233.5781 Q1877.9375,233.5781 1877.25,234.6563 Q1876.5625,235.7188 1876.5625,237.8125 Q1876.5625,239.9063 1877.25,240.9844 Q1877.9375,242.0469 1879.2813,242.0469 Q1879.9063,242.0469 1880.5,241.7813 Q1881.0938,241.5 1881.7188,240.9219 L1881.7188,243.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="1899.25" y="242.8467">GriDBSCAN</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="2095.5" y="219"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="2096.5" y="231.1387">V extends NumberVector</text><line style="stroke:#181818;stroke-width:0.5;" x1="1754.5" x2="2243.5" y1="254" y2="254"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1761.5" y="264.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1773.5" y="270.9951">LOG: Logging</text><polygon fill="none" points="1764.5,278.9453,1768.5,282.9453,1764.5,286.9453,1760.5,282.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="1773.5" y="287.292">distance: Distance&lt;? super NumberVector&gt;</text><polygon fill="none" points="1764.5,295.2422,1768.5,299.2422,1764.5,303.2422,1760.5,299.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1773.5" y="303.5889">epsilon: double</text><polygon fill="none" points="1764.5,311.5391,1768.5,315.5391,1764.5,319.5391,1760.5,315.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="1773.5" y="319.8857">minpts: int</text><polygon fill="none" points="1764.5,327.8359,1768.5,331.8359,1764.5,335.8359,1760.5,331.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="1773.5" y="336.1826">gridwidth: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="1754.5" x2="2243.5" y1="343.4844" y2="343.4844"/><ellipse cx="1764.5" cy="357.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="465" x="1773.5" y="360.4795">GriDBSCAN(Distance&lt;? super NumberVector&gt;, double, int, double)</text><ellipse cx="1764.5" cy="373.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1773.5" y="376.7764">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="1764.5" cy="389.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="431" x="1773.5" y="393.0732">run(Relation&lt;V extends NumberVector&gt;): Clustering&lt;Model&gt;</text></g></a><!--MD5=[4fc33484231348e70db2dde04bb5858c]
class elki.clustering.ClusteringAlgorithm--><a href="../ClusteringAlgorithm.html" target="_top" title="../ClusteringAlgorithm.html" xlink:actuate="onRequest" xlink:href="../ClusteringAlgorithm.html" xlink:show="new" xlink:title="../ClusteringAlgorithm.html" xlink:type="simple"><g id="elem_elki.clustering.ClusteringAlgorithm"><rect codeLine="166" fill="#F1F1F1" height="64.2969" id="elki.clustering.ClusteringAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="446" x="878" y="41"/><ellipse cx="906.95" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M902.8719,52.7656 L902.8719,50.6094 L910.2625,50.6094 L910.2625,52.7656 L907.7938,52.7656 L907.7938,60.8438 L910.2625,60.8438 L910.2625,63 L902.8719,63 L902.8719,60.8438 L905.3406,60.8438 L905.3406,52.7656 L902.8719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="924.05" y="61.8467">ClusteringAlgorithm</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="241" x="1086" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="239" x="1087" y="50.1387">C extends Clustering&lt;? extends Model&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="879" x2="1323" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="879" x2="1323" y1="81" y2="81"/><ellipse cx="889" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="898" y="97.9951">autorun(Database): C extends Clustering&lt;? extends Model&gt;</text></g></a><!--MD5=[dc2f1f18b4a80662db4d20a3774e6bfc]
class elki.clustering.dbscan.predicates.NeighborPredicate--><g id="elem_elki.clustering.dbscan.predicates.NeighborPredicate"><rect fill="#F1F1F1" height="48" id="elki.clustering.dbscan.predicates.NeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="1267" y="533"/><ellipse cx="1282" cy="549" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1284.9688,554.6406 Q1284.3906,554.9375 1283.75,555.0781 Q1283.1094,555.2344 1282.4063,555.2344 Q1279.9063,555.2344 1278.5781,553.5938 Q1277.2656,551.9375 1277.2656,548.8125 Q1277.2656,545.6875 1278.5781,544.0313 Q1279.9063,542.375 1282.4063,542.375 Q1283.1094,542.375 1283.75,542.5313 Q1284.4063,542.6875 1284.9688,542.9844 L1284.9688,545.7031 Q1284.3438,545.125 1283.75,544.8594 Q1283.1563,544.5781 1282.5313,544.5781 Q1281.1875,544.5781 1280.5,545.6563 Q1279.8125,546.7188 1279.8125,548.8125 Q1279.8125,550.9063 1280.5,551.9844 Q1281.1875,553.0469 1282.5313,553.0469 Q1283.1563,553.0469 1283.75,552.7813 Q1284.3438,552.5 1284.9688,551.9219 L1284.9688,554.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1296" y="553.8467">NeighborPredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="1268" x2="1426" y1="565" y2="565"/><line style="stroke:#181818;stroke-width:0.5;" x1="1268" x2="1426" y1="573" y2="573"/></g><!--MD5=[76e5e1acbac95d53f1c254e7b3dc20c7]
class elki.clustering.dbscan.predicates.CorePredicate--><g id="elem_elki.clustering.dbscan.predicates.CorePredicate"><rect fill="#F1F1F1" height="48" id="elki.clustering.dbscan.predicates.CorePredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="1462" y="533"/><ellipse cx="1477" cy="549" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1479.9688,554.6406 Q1479.3906,554.9375 1478.75,555.0781 Q1478.1094,555.2344 1477.4063,555.2344 Q1474.9063,555.2344 1473.5781,553.5938 Q1472.2656,551.9375 1472.2656,548.8125 Q1472.2656,545.6875 1473.5781,544.0313 Q1474.9063,542.375 1477.4063,542.375 Q1478.1094,542.375 1478.75,542.5313 Q1479.4063,542.6875 1479.9688,542.9844 L1479.9688,545.7031 Q1479.3438,545.125 1478.75,544.8594 Q1478.1563,544.5781 1477.5313,544.5781 Q1476.1875,544.5781 1475.5,545.6563 Q1474.8125,546.7188 1474.8125,548.8125 Q1474.8125,550.9063 1475.5,551.9844 Q1476.1875,553.0469 1477.5313,553.0469 Q1478.1563,553.0469 1478.75,552.7813 Q1479.3438,552.5 1479.9688,551.9219 L1479.9688,554.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1491" y="553.8467">CorePredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="1463" x2="1591" y1="565" y2="565"/><line style="stroke:#181818;stroke-width:0.5;" x1="1463" x2="1591" y1="573" y2="573"/></g><!--MD5=[19a9c625b62f1c5e7acd7e0144abd848]
class elki.clustering.dbscan.util.Core--><g id="elem_elki.clustering.dbscan.util.Core"><rect fill="#F1F1F1" height="48" id="elki.clustering.dbscan.util.Core" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="1981.5" y="49"/><ellipse cx="1996.5" cy="65" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1999.4688,70.6406 Q1998.8906,70.9375 1998.25,71.0781 Q1997.6094,71.2344 1996.9063,71.2344 Q1994.4063,71.2344 1993.0781,69.5938 Q1991.7656,67.9375 1991.7656,64.8125 Q1991.7656,61.6875 1993.0781,60.0313 Q1994.4063,58.375 1996.9063,58.375 Q1997.6094,58.375 1998.25,58.5313 Q1998.9063,58.6875 1999.4688,58.9844 L1999.4688,61.7031 Q1998.8438,61.125 1998.25,60.8594 Q1997.6563,60.5781 1997.0313,60.5781 Q1995.6875,60.5781 1995,61.6563 Q1994.3125,62.7188 1994.3125,64.8125 Q1994.3125,66.9063 1995,67.9844 Q1995.6875,69.0469 1997.0313,69.0469 Q1997.6563,69.0469 1998.25,68.7813 Q1998.8438,68.5 1999.4688,67.9219 L1999.4688,70.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="2010.5" y="69.8467">Core</text><line style="stroke:#181818;stroke-width:0.5;" x1="1982.5" x2="2045.5" y1="81" y2="81"/><line style="stroke:#181818;stroke-width:0.5;" x1="1982.5" x2="2045.5" y1="89" y2="89"/></g><!--MD5=[6eb7a8879c5b8c279d6f5e57d513c62f]
class elki.clustering.dbscan.util.Border--><g id="elem_elki.clustering.dbscan.util.Border"><rect fill="#F1F1F1" height="48" id="elki.clustering.dbscan.util.Border" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="79" x="1867.5" y="49"/><ellipse cx="1882.5" cy="65" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1885.4688,70.6406 Q1884.8906,70.9375 1884.25,71.0781 Q1883.6094,71.2344 1882.9063,71.2344 Q1880.4063,71.2344 1879.0781,69.5938 Q1877.7656,67.9375 1877.7656,64.8125 Q1877.7656,61.6875 1879.0781,60.0313 Q1880.4063,58.375 1882.9063,58.375 Q1883.6094,58.375 1884.25,58.5313 Q1884.9063,58.6875 1885.4688,58.9844 L1885.4688,61.7031 Q1884.8438,61.125 1884.25,60.8594 Q1883.6563,60.5781 1883.0313,60.5781 Q1881.6875,60.5781 1881,61.6563 Q1880.3125,62.7188 1880.3125,64.8125 Q1880.3125,66.9063 1881,67.9844 Q1881.6875,69.0469 1883.0313,69.0469 Q1883.6563,69.0469 1884.25,68.7813 Q1884.8438,68.5 1885.4688,67.9219 L1885.4688,70.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="1896.5" y="69.8467">Border</text><line style="stroke:#181818;stroke-width:0.5;" x1="1868.5" x2="1945.5" y1="81" y2="81"/><line style="stroke:#181818;stroke-width:0.5;" x1="1868.5" x2="1945.5" y1="89" y2="89"/></g><!--MD5=[45ceb464026c3e7ef51625d2443e05d8]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.dbscan.DBSCAN--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.dbscan.DBSCAN"><path codeLine="140" d="M857.6,81.92 C680.18,90.71 456.65,108.89 372,146 C328.7,164.99 288.49,198.14 256.78,229.69 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.dbscan.DBSCAN" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="857.31,74.93,877.62,80.96,857.98,88.91,857.31,74.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e0271b0de6199f12e2169602e57531c7]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.dbscan.LSDBC--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.dbscan.LSDBC"><path codeLine="144" d="M1040.41,116.82 C1011.45,137.28 975.17,162.91 938.6,188.75 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.dbscan.LSDBC" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1036.62,110.92,1056.99,105.1,1044.7,122.35,1036.62,110.92" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2c48d3f54e3229ba955a9cf9abd1f64a]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.dbscan.GeneralizedDBSCAN--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.dbscan.GeneralizedDBSCAN"><path codeLine="147" d="M1163.62,116.47 C1216.98,152.66 1294.45,205.19 1355.21,246.4 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.dbscan.GeneralizedDBSCAN" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1159.48,122.11,1146.85,105.1,1167.33,110.53,1159.48,122.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[086c4647679303247640ed1ef41d320c]
link elki.clustering.dbscan.GeneralizedDBSCAN to elki.clustering.dbscan.predicates.NeighborPredicate--><g id="link_elki.clustering.dbscan.GeneralizedDBSCAN_elki.clustering.dbscan.predicates.NeighborPredicate"><path codeLine="148" d="M1422.33,375.79 C1401.71,425.11 1374.16,491.02 1358.74,527.92 " fill="none" id="elki.clustering.dbscan.GeneralizedDBSCAN-to-elki.clustering.dbscan.predicates.NeighborPredicate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1356.74,532.71,1363.9013,525.9486,1358.6681,528.0967,1356.52,522.8636,1356.74,532.71" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="37" x="1383" y="478.0669">npred</text></g><!--MD5=[4ae5b1bc5be09dc1dbd0ae47017fc137]
link elki.clustering.dbscan.GeneralizedDBSCAN to elki.clustering.dbscan.predicates.CorePredicate--><g id="link_elki.clustering.dbscan.GeneralizedDBSCAN_elki.clustering.dbscan.predicates.CorePredicate"><path codeLine="149" d="M1469.39,375.79 C1485.16,425.11 1506.23,491.02 1518.02,527.92 " fill="none" id="elki.clustering.dbscan.GeneralizedDBSCAN-to-elki.clustering.dbscan.predicates.CorePredicate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1519.55,532.71,1520.605,522.9178,1518.0204,527.9497,1512.9885,525.3651,1519.55,532.71" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="1502" y="478.0669">corepred</text></g><!--MD5=[a3bc0453504d5400ab5069f369a42b14]
reverse link elki.clustering.ClusteringAlgorithm to elki.clustering.dbscan.GriDBSCAN--><g id="link_elki.clustering.ClusteringAlgorithm_elki.clustering.dbscan.GriDBSCAN"><path codeLine="157" d="M1344.55,90.49 C1492.14,102.64 1665.19,121.33 1736,146 C1787.2,163.84 1838.83,193.03 1882.63,221.89 " fill="none" id="elki.clustering.ClusteringAlgorithm-backto-elki.clustering.dbscan.GriDBSCAN" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1343.74,97.45,1324.37,88.86,1344.87,83.5,1343.74,97.45" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="1033.5" y="603"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="1033.5" y="612.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[336a6cf9ab7750c14b44cd758ab1399d]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.dbscan {

        class DBSCAN<O> [[DBSCAN.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super O>
            #epsilon: double
            #minpts: int
            +DBSCAN(Distance<? super O>, double, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O>): Clustering<Model>
        }

        class elki.clustering.dbscan.DBSCAN.Instance [[DBSCAN.Instance.html]] {
            #resultList: List<ModifiableDBIDs>
            #noise: ModifiableDBIDs
            #processedIDs: ModifiableDBIDs
            #ncounter: long
            #objprog: FiniteProgress
            #clusprog: IndefiniteProgress
            #rangeQuery: RangeSearcher<DBIDRef>
            #neighbors: ModifiableDoubleDBIDList
            #run(Relation<O>, RangeSearcher<DBIDRef>): void
            #expandCluster(DBIDRef, ArrayModifiableDBIDs): void
            -processNeighbors(DoubleDBIDList, ModifiableDBIDs, ArrayModifiableDBIDs): void
        }

        class elki.clustering.dbscan.DBSCAN.Par<O> [[DBSCAN.Par.html]] {
            {static} +EPSILON_ID: OptionID
            {static} +MINPTS_ID: OptionID
            #epsilon: double
            #minpts: int
            #distance: Distance<? super O>
            +configure(Parameterization): void
            +make(): DBSCAN<O>
        }

        class LSDBC<O extends NumberVector> [[LSDBC.html]] {
            {static} -LOG: Logging
            #kplus: int
            #alpha: double
            #distance: Distance<? super NumberVector>
            {static} #UNPROCESSED: int
            {static} #NOISE: int
            +LSDBC(Distance<? super NumberVector>, int, double)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<O extends NumberVector>): Clustering<Model>
            -isLocalMaximum(double, DBIDs, WritableDoubleDataStore): boolean
            #expandCluster(int, WritableIntegerDataStore, KNNSearcher<DBIDRef>, DBIDs, double, FiniteProgress): int
            -fillDensities(KNNSearcher<DBIDRef>, DBIDs, WritableDoubleDataStore): void
        }

        class elki.clustering.dbscan.LSDBC.Par<O extends NumberVector> [[LSDBC.Par.html]] {
            {static} +K_ID: OptionID
            {static} +ALPHA_ID: OptionID
            #k: int
            #alpha: double
            #distance: Distance<? super NumberVector>
            +configure(Parameterization): void
            +make(): LSDBC<O extends NumberVector>
        }

        class GeneralizedDBSCAN [[GeneralizedDBSCAN.html]] {
            {static} -LOG: Logging
            #coremodel: boolean
            +GeneralizedDBSCAN(NeighborPredicate<?>, CorePredicate<?>, boolean)
            +autorun(Database): Clustering<Model>
            +getInputTypeRestriction(): TypeInformation[]
        }

        class elki.clustering.dbscan.GeneralizedDBSCAN.Instance<T> [[GeneralizedDBSCAN.Instance.html]] {
            {static} #UNPROCESSED: int
            {static} #NOISE: int
            #coremodel: boolean
            +Instance(Instance<T>, Instance<? super T>, boolean)
            +run(): Clustering<Model>
            #expandCluster(DBIDRef, int, WritableIntegerDataStore, T, ArrayModifiableDBIDs, FiniteProgress): int
            #processCorePoint(DBIDRef, T, int, WritableIntegerDataStore, ArrayModifiableDBIDs): int
        }

        class elki.clustering.dbscan.GeneralizedDBSCAN.Par [[GeneralizedDBSCAN.Par.html]] {
            {static} +NEIGHBORHOODPRED_ID: OptionID
            {static} +COREPRED_ID: OptionID
            {static} +COREMODEL_ID: OptionID
            #coremodel: boolean
            +configure(Parameterization): void
            +make(): GeneralizedDBSCAN
        }

        class GriDBSCAN<V extends NumberVector> [[GriDBSCAN.html]] {
            {static} -LOG: Logging
            #distance: Distance<? super NumberVector>
            #epsilon: double
            #minpts: int
            #gridwidth: double
            +GriDBSCAN(Distance<? super NumberVector>, double, int, double)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<V extends NumberVector>): Clustering<Model>
        }

        class elki.clustering.dbscan.GriDBSCAN.Instance<V extends NumberVector> [[GriDBSCAN.Instance.html]] {
            {static} #UNPROCESSED: int
            {static} #NOISE: int
            #distance: Distance<? super NumberVector>
            #epsilon: double
            #minpts: int
            #gridwidth: double
            #domain: double[]
            #dim: int
            #offset: double[]
            #cells: int[]
            ~grid: Long2ObjectOpenHashMap<ModifiableDBIDs>
            -clusterids: WritableDataStore<Assignment>
            -temporary: WritableIntegerDataStore
            -overflown: boolean
            +Instance(Distance<? super NumberVector>, double, int, double)
            +run(Relation<V extends NumberVector>): Clustering<Model>
            -runDBSCANOnCell(DBIDs, Relation<V extends NumberVector>, ModifiableDoubleDBIDList, ArrayModifiableDBIDs, int): int
            -updateCoreBorderObjects(int): void
            -computeGridBaseOffsets(int): long
            #buildGrid(Relation<V extends NumberVector>, int, double[]): void
            -insertIntoGrid(DBIDRef, V extends NumberVector, int, int): void
            #checkGridCellSizes(int, long): int
            #expandCluster(DBIDRef, int, WritableIntegerDataStore, ModifiableDoubleDBIDList, ArrayModifiableDBIDs, RangeSearcher<DBIDRef>, FiniteProgress): int
            #processCorePoint(DBIDRef, DoubleDBIDList, int, WritableIntegerDataStore, ArrayModifiableDBIDs): int
            #mergeClusterInformation(ModifiableDBIDs, WritableIntegerDataStore, WritableDataStore<Assignment>): void
            #buildResult(DBIDs, int): Clustering<Model>
        }

        class elki.clustering.dbscan.GriDBSCAN.Par<O extends NumberVector> {
            {static} +GRID_ID: OptionID
            #epsilon: double
            #minpts: int
            #gridwidth: double
            #distance: LPNormDistance
            +configure(Parameterization): void
            +make(): GriDBSCAN<O extends NumberVector>
        }

        elki.clustering.ClusteringAlgorithm <|.. DBSCAN
        DBSCAN +- - elki.clustering.dbscan.DBSCAN.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.DBSCAN.Par
        DBSCAN +- - elki.clustering.dbscan.DBSCAN.Par
        elki.clustering.ClusteringAlgorithm <|.. LSDBC
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.LSDBC.Par
        LSDBC +- - elki.clustering.dbscan.LSDBC.Par
        elki.clustering.ClusteringAlgorithm <|.. GeneralizedDBSCAN
        GeneralizedDBSCAN - -> elki.clustering.dbscan.predicates.NeighborPredicate: npred
        GeneralizedDBSCAN - -> elki.clustering.dbscan.predicates.CorePredicate: corepred
        GeneralizedDBSCAN +- - elki.clustering.dbscan.GeneralizedDBSCAN.Instance
        elki.clustering.dbscan.GeneralizedDBSCAN.Instance - -> elki.clustering.dbscan.predicates.NeighborPredicate.Instance: npred
        elki.clustering.dbscan.GeneralizedDBSCAN.Instance - -> elki.clustering.dbscan.predicates.CorePredicate.Instance: corepred
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.GeneralizedDBSCAN.Par
        GeneralizedDBSCAN +- - elki.clustering.dbscan.GeneralizedDBSCAN.Par
        elki.clustering.dbscan.GeneralizedDBSCAN.Par - -> elki.clustering.dbscan.predicates.NeighborPredicate: npred
        elki.clustering.dbscan.GeneralizedDBSCAN.Par - -> elki.clustering.dbscan.predicates.CorePredicate: corepred
        elki.clustering.ClusteringAlgorithm <|.. GriDBSCAN
        GriDBSCAN +- - elki.clustering.dbscan.GriDBSCAN.Instance
        elki.clustering.dbscan.GriDBSCAN.Instance - -> "*" elki.clustering.dbscan.util.Core: cores
        elki.clustering.dbscan.GriDBSCAN.Instance - -> "*" elki.clustering.dbscan.util.Border: borders
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.GriDBSCAN.Par
        GriDBSCAN +- - elki.clustering.dbscan.GriDBSCAN.Par
    }

    namespace elki.clustering {
        interface ClusteringAlgorithm<C extends Clustering<? extends Model>> [[../ClusteringAlgorithm.html]] {
            +autorun(Database): C extends Clustering<? extends Model>
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>