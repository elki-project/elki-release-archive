<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="358px" preserveAspectRatio="none" style="width:744px;height:358px;background:#FFFFFF;" version="1.1" viewBox="0 0 744 358" width="744px" zoomAndPan="magnify"><defs/><g><!--MD5=[d4b28d15ca62d37c236a3d5cad149579]
class elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate--><a href="AbstractRangeQueryNeighborPredicate.html" target="_top" title="AbstractRangeQueryNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="AbstractRangeQueryNeighborPredicate.html" xlink:show="new" xlink:title="AbstractRangeQueryNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate"><rect codeLine="6" fill="#F1F1F1" height="168.0156" id="elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="724" x="9" y="165"/><ellipse cx="204.75" cy="183.9688" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M204.8594,179.3125 L203.7031,184.3906 L206.0313,184.3906 L204.8594,179.3125 Z M203.375,177.0781 L206.3594,177.0781 L209.7188,189.4688 L207.2656,189.4688 L206.5,186.4063 L203.2188,186.4063 L202.4688,189.4688 L200.0313,189.4688 L203.375,177.0781 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="277" x="225.25" y="182.9951">AbstractRangeQueryNeighborPredicate</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="163" x="282.25" y="195.5791">elki.clustering.dbscan.predicates</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="691" y="162"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="692" y="174.1387">O, M, N</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="732" y1="202.9375" y2="202.9375"/><polygon fill="none" points="20,211.5859,24,215.5859,20,219.5859,16,215.5859" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="29" y="219.9326">epsilon: double</text><polygon fill="none" points="20,227.8828,24,231.8828,20,235.8828,16,231.8828" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="29" y="236.2295">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="732" y1="243.5313" y2="243.5313"/><ellipse cx="20" cy="257.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="488" x="29" y="260.5264">AbstractRangeQueryNeighborPredicate(double, Distance&lt;? super O&gt;)</text><ellipse cx="20" cy="273.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="29" y="276.8232">getInputTypeRestriction(): TypeInformation</text><ellipse cx="20" cy="289.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="29" y="293.1201">preprocess(Class&lt;? super M&gt;, Relation&lt;? extends O&gt;, RangeSearcher&lt;DBIDRef&gt;): DataStore&lt;M&gt;</text><polygon fill="#FFFF44" points="20,301.0703,24,305.0703,20,309.0703,16,305.0703" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="527" x="29" y="309.417">computeLocalModel(DBIDRef, DoubleDBIDList, Relation&lt;? extends O&gt;): M</text><polygon fill="#4177AF" points="20,318.3672,16,324.3672,24,324.3672" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="29" y="325.7139">getLogger(): Logging</text></g></a><!--MD5=[dc2f1f18b4a80662db4d20a3774e6bfc]
class elki.clustering.dbscan.predicates.NeighborPredicate--><a href="NeighborPredicate.html" target="_top" title="NeighborPredicate.html" xlink:actuate="onRequest" xlink:href="NeighborPredicate.html" xlink:show="new" xlink:title="NeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.NeighborPredicate"><rect codeLine="16" fill="#F1F1F1" height="94.8281" id="elki.clustering.dbscan.predicates.NeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="350" x="196" y="10"/><ellipse cx="278.75" cy="28.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M274.6719,24.7344 L274.6719,22.5781 L282.0625,22.5781 L282.0625,24.7344 L279.5938,24.7344 L279.5938,32.8125 L282.0625,32.8125 L282.0625,34.9688 L274.6719,34.9688 L274.6719,32.8125 L277.1406,32.8125 L277.1406,24.7344 L274.6719,24.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="315.25" y="27.9951">NeighborPredicate</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="163" x="299.25" y="40.5791">elki.clustering.dbscan.predicates</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="11" x="538" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="9" x="539" y="19.1387">N</text><line style="stroke:#181818;stroke-width:0.5;" x1="197" x2="545" y1="47.9375" y2="47.9375"/><ellipse cx="207" cy="61.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="216" y="64.9326">instantiate(Database): Instance&lt;T&gt;</text><ellipse cx="207" cy="77.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="305" x="216" y="81.2295">getInputTypeRestriction(): TypeInformation</text><ellipse cx="207" cy="94.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="324" x="216" y="97.5264">getOutputType(): SimpleTypeInformation&lt;T&gt;</text></g></a><!--MD5=[e8ca7bcf8cc69624675cb4acf1a57438]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate"><path codeLine="24" d="M371,125.75 C371,138.39 371,151.74 371,164.79 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="364,125.34,371,105.34,378,125.34,364,125.34" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="272" y="339.0156"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="272" y="348.2979">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[7fc0ac84ddd78f387c375f4b9addc455]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    abstract class "<size:14>AbstractRangeQueryNeighborPredicate\n<size:10>elki.clustering.dbscan.predicates" as elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate<O, M, N> [[AbstractRangeQueryNeighborPredicate.html]] {
        #epsilon: double
        #distance: Distance<? super O>
        +AbstractRangeQueryNeighborPredicate(double, Distance<? super O>)
        +getInputTypeRestriction(): TypeInformation
        +preprocess(Class<? super M>, Relation<? extends O>, RangeSearcher<DBIDRef>): DataStore<M>
        {abstract} #computeLocalModel(DBIDRef, DoubleDBIDList, Relation<? extends O>): M
        {abstract} ~getLogger(): Logging
    }

    interface "<size:14>NeighborPredicate\n<size:10>elki.clustering.dbscan.predicates" as elki.clustering.dbscan.predicates.NeighborPredicate<N> [[NeighborPredicate.html]] {
        {abstract} +instantiate(Database): Instance<T>
        {abstract} +getInputTypeRestriction(): TypeInformation
        {abstract} +getOutputType(): SimpleTypeInformation<T>
    }
    abstract class "<size:14>AbstractRangeQueryNeighborPredicate.Instance\n<size:10>elki.clustering.dbscan.predicates" as elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance<N, M> [[AbstractRangeQueryNeighborPredicate.Instance.html]]
    abstract class "<size:14>AbstractRangeQueryNeighborPredicate.Par\n<size:10>elki.clustering.dbscan.predicates" as elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Par<O>

    elki.clustering.dbscan.predicates.NeighborPredicate <|.. elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate
    elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate +- - elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance
    elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate +- - elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Par

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>