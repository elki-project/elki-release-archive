<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="911px" preserveAspectRatio="none" style="width:4797px;height:911px;background:#FFFFFF;" version="1.1" viewBox="0 0 4797 911" width="4797px" zoomAndPan="magnify"><defs/><g><!--MD5=[c004b283215639cbf46c5e000861e099]
cluster elki.clustering.dbscan.predicates--><g id="cluster_elki.clustering.dbscan.predicates"><path d="M180.5,6 L443.5,6 A3.75,3.75 0 0 1 446,8.5 L453,28.2969 L4787.5,28.2969 A2.5,2.5 0 0 1 4790,30.7969 L4790,883.5 A2.5,2.5 0 0 1 4787.5,886 L180.5,886 A2.5,2.5 0 0 1 178,883.5 L178,8.5 A2.5,2.5 0 0 1 180.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="178" x2="453" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="262" x="182" y="20.9951">elki.clustering.dbscan.predicates</text></g><!--MD5=[cf2144e26ba61392f3fe94b6e5994181]
cluster elki.database.ids--><g id="cluster_elki.database.ids"><path d="M8.5,236.5 L141.5,236.5 A3.75,3.75 0 0 1 144,239 L151,258.7969 L151.5,258.7969 A2.5,2.5 0 0 1 154,261.2969 L154,333 A2.5,2.5 0 0 1 151.5,335.5 L8.5,335.5 A2.5,2.5 0 0 1 6,333 L6,239 A2.5,2.5 0 0 1 8.5,236.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="151" y1="258.7969" y2="258.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="132" x="10" y="251.4951">elki.database.ids</text></g><!--MD5=[8b56fdcf44ae19913762d37654cb652e]
class elki.clustering.dbscan.predicates.MinPtsCorePredicate--><a href="MinPtsCorePredicate.html" target="_top" title="MinPtsCorePredicate.html" xlink:actuate="onRequest" xlink:href="MinPtsCorePredicate.html" xlink:show="new" xlink:title="MinPtsCorePredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.MinPtsCorePredicate"><rect codeLine="4" fill="#F1F1F1" height="129.4844" id="elki.clustering.dbscan.predicates.MinPtsCorePredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="485" x="3108.5" y="231"/><ellipse cx="3274.75" cy="247" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3277.7188,252.6406 Q3277.1406,252.9375 3276.5,253.0781 Q3275.8594,253.2344 3275.1563,253.2344 Q3272.6563,253.2344 3271.3281,251.5938 Q3270.0156,249.9375 3270.0156,246.8125 Q3270.0156,243.6875 3271.3281,242.0313 Q3272.6563,240.375 3275.1563,240.375 Q3275.8594,240.375 3276.5,240.5313 Q3277.1563,240.6875 3277.7188,240.9844 L3277.7188,243.7031 Q3277.0938,243.125 3276.5,242.8594 Q3275.9063,242.5781 3275.2813,242.5781 Q3273.9375,242.5781 3273.25,243.6563 Q3272.5625,244.7188 3272.5625,246.8125 Q3272.5625,248.9063 3273.25,249.9844 Q3273.9375,251.0469 3275.2813,251.0469 Q3275.9063,251.0469 3276.5,250.7813 Q3277.0938,250.5 3277.7188,249.9219 L3277.7188,252.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="3295.25" y="251.8467">MinPtsCorePredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="3109.5" x2="3592.5" y1="263" y2="263"/><ellipse cx="3119.5" cy="276.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3128.5" y="279.9951">LOG: Logging</text><polygon fill="none" points="3119.5,287.9453,3123.5,291.9453,3119.5,295.9453,3115.5,291.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3128.5" y="296.292">minpts: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="3109.5" x2="3592.5" y1="303.5938" y2="303.5938"/><ellipse cx="3119.5" cy="317.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="3128.5" y="320.5889">MinPtsCorePredicate(int)</text><ellipse cx="3119.5" cy="333.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="3128.5" y="336.8857">instantiate(Database): Instance</text><ellipse cx="3119.5" cy="349.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="459" x="3128.5" y="353.1826">acceptsType(SimpleTypeInformation&lt;? extends DBIDs&gt;): boolean</text></g></a><!--MD5=[2cd609e82fd3b8cb51ed33c427c4ed0e]
class elki.clustering.dbscan.predicates.PreDeConNeighborPredicate--><a href="PreDeConNeighborPredicate.html" target="_top" title="PreDeConNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="PreDeConNeighborPredicate.html" xlink:show="new" xlink:title="PreDeConNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.PreDeConNeighborPredicate"><rect codeLine="24" fill="#F1F1F1" height="194.6719" id="elki.clustering.dbscan.predicates.PreDeConNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730" x="1963" y="485.5"/><ellipse cx="2224.25" cy="501.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2227.2188,507.1406 Q2226.6406,507.4375 2226,507.5781 Q2225.3594,507.7344 2224.6563,507.7344 Q2222.1563,507.7344 2220.8281,506.0938 Q2219.5156,504.4375 2219.5156,501.3125 Q2219.5156,498.1875 2220.8281,496.5313 Q2222.1563,494.875 2224.6563,494.875 Q2225.3594,494.875 2226,495.0313 Q2226.6563,495.1875 2227.2188,495.4844 L2227.2188,498.2031 Q2226.5938,497.625 2226,497.3594 Q2225.4063,497.0781 2224.7813,497.0781 Q2223.4375,497.0781 2222.75,498.1563 Q2222.0625,499.2188 2222.0625,501.3125 Q2222.0625,503.4063 2222.75,504.4844 Q2223.4375,505.5469 2224.7813,505.5469 Q2225.4063,505.5469 2226,505.2813 Q2226.5938,505 2227.2188,504.4219 L2227.2188,507.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="2244.75" y="506.3467">PreDeConNeighborPredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="1964" x2="2692" y1="517.5" y2="517.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1971" y="528.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1983" y="534.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1971" y="544.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1983" y="550.792">mvSize: MeanVariance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1971" y="560.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1983" y="567.0889">mvVar: MeanVariance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1971" y="577.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1983" y="583.3857">settings: Settings</text><line style="stroke:#181818;stroke-width:0.5;" x1="1964" x2="2692" y1="590.6875" y2="590.6875"/><ellipse cx="1974" cy="604.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="1983" y="607.6826">PreDeConNeighborPredicate(Settings)</text><ellipse cx="1974" cy="620.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="1983" y="623.9795">instantiate(Database): Instance</text><polygon fill="#FFFF44" points="1974,631.9297,1978,635.9297,1974,639.9297,1970,635.9297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="704" x="1983" y="640.2764">computeLocalModel(DBIDRef, DoubleDBIDList, Relation&lt;? extends NumberVector&gt;): PreDeConModel</text><polygon fill="#4177AF" points="1974,649.2266,1970,655.2266,1978,655.2266" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="1983" y="656.5732">getLogger(): Logging</text><ellipse cx="1974" cy="669.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="1983" y="672.8701">getOutputType(): SimpleTypeInformation&lt;PreDeConModel&gt;</text></g></a><!--MD5=[402bf4017883e9d368ea3b6de799f2f3]
class elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel--><a href="PreDeConNeighborPredicate.PreDeConModel.html" target="_top" title="PreDeConNeighborPredicate.PreDeConModel.html" xlink:actuate="onRequest" xlink:href="PreDeConNeighborPredicate.PreDeConModel.html" xlink:show="new" xlink:title="PreDeConNeighborPredicate.PreDeConModel.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel"><rect codeLine="36" fill="#F1F1F1" height="96.8906" id="elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="348" x="2154" y="773"/><ellipse cx="2169" cy="789" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2171.9688,794.6406 Q2171.3906,794.9375 2170.75,795.0781 Q2170.1094,795.2344 2169.4063,795.2344 Q2166.9063,795.2344 2165.5781,793.5938 Q2164.2656,791.9375 2164.2656,788.8125 Q2164.2656,785.6875 2165.5781,784.0313 Q2166.9063,782.375 2169.4063,782.375 Q2170.1094,782.375 2170.75,782.5313 Q2171.4063,782.6875 2171.9688,782.9844 L2171.9688,785.7031 Q2171.3438,785.125 2170.75,784.8594 Q2170.1563,784.5781 2169.5313,784.5781 Q2168.1875,784.5781 2167.5,785.6563 Q2166.8125,786.7188 2166.8125,788.8125 Q2166.8125,790.9063 2167.5,791.9844 Q2168.1875,793.0469 2169.5313,793.0469 Q2170.1563,793.0469 2170.75,792.7813 Q2171.3438,792.5 2171.9688,791.9219 L2171.9688,794.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="2183" y="793.8467">PreDeConNeighborPredicate.PreDeConModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="2155" x2="2501" y1="805" y2="805"/><polygon fill="none" points="2165,814.6484,2161,820.6484,2169,820.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="2174" y="821.9951">pdim: int</text><polygon fill="none" points="2165,830.9453,2161,836.9453,2169,836.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2174" y="838.292">ids: SetDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="2155" x2="2501" y1="845.5938" y2="845.5938"/><ellipse cx="2165" cy="859.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="2174" y="862.5889">PreDeConModel(int, SetDBIDs)</text></g></a><!--MD5=[5c414fdc20104f62cfded922da3a9264]
class elki.clustering.dbscan.predicates.SimilarityNeighborPredicate--><a href="SimilarityNeighborPredicate.html" target="_top" title="SimilarityNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="SimilarityNeighborPredicate.html" xlink:show="new" xlink:title="SimilarityNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.SimilarityNeighborPredicate"><rect codeLine="54" fill="#F1F1F1" height="145.7813" id="elki.clustering.dbscan.predicates.SimilarityNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="439" x="194.5" y="222.5"/><ellipse cx="310.25" cy="238.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M313.2188,244.1406 Q312.6406,244.4375 312,244.5781 Q311.3594,244.7344 310.6563,244.7344 Q308.1563,244.7344 306.8281,243.0938 Q305.5156,241.4375 305.5156,238.3125 Q305.5156,235.1875 306.8281,233.5313 Q308.1563,231.875 310.6563,231.875 Q311.3594,231.875 312,232.0313 Q312.6563,232.1875 313.2188,232.4844 L313.2188,235.2031 Q312.5938,234.625 312,234.3594 Q311.4063,234.0781 310.7813,234.0781 Q309.4375,234.0781 308.75,235.1563 Q308.0625,236.2188 308.0625,238.3125 Q308.0625,240.4063 308.75,241.4844 Q309.4375,242.5469 310.7813,242.5469 Q311.4063,242.5469 312,242.2813 Q312.5938,242 313.2188,241.4219 L313.2188,244.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="330.75" y="243.3467">SimilarityNeighborPredicate</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="626.5" y="219.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="627.5" y="231.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="195.5" x2="632.5" y1="254.5" y2="254.5"/><polygon fill="none" points="205.5,263.1484,209.5,267.1484,205.5,271.1484,201.5,267.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="214.5" y="271.4951">epsilon: double</text><polygon fill="none" points="205.5,279.4453,209.5,283.4453,205.5,287.4453,201.5,283.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="214.5" y="287.792">simFunc: Similarity&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="195.5" x2="632.5" y1="295.0938" y2="295.0938"/><ellipse cx="205.5" cy="308.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="402" x="214.5" y="312.0889">SimilarityNeighborPredicate(double, Similarity&lt;? super O&gt;)</text><ellipse cx="205.5" cy="325.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="214.5" y="328.3857">instantiate(Database): Instance</text><ellipse cx="205.5" cy="341.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="214.5" y="344.6826">getOutputType(): SimpleTypeInformation&lt;DoubleDBIDList&gt;</text><ellipse cx="205.5" cy="357.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="214.5" y="360.9795">getInputTypeRestriction(): TypeInformation</text></g></a><!--MD5=[76e5e1acbac95d53f1c254e7b3dc20c7]
class elki.clustering.dbscan.predicates.CorePredicate--><a href="CorePredicate.html" target="_top" title="CorePredicate.html" xlink:actuate="onRequest" xlink:href="CorePredicate.html" xlink:show="new" xlink:title="CorePredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.CorePredicate"><rect codeLine="82" fill="#F1F1F1" height="80.5938" id="elki.clustering.dbscan.predicates.CorePredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="463" x="3674.5" y="49"/><ellipse cx="3846.75" cy="65" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3842.6719,60.7656 L3842.6719,58.6094 L3850.0625,58.6094 L3850.0625,60.7656 L3847.5938,60.7656 L3847.5938,68.8438 L3850.0625,68.8438 L3850.0625,71 L3842.6719,71 L3842.6719,68.8438 L3845.1406,68.8438 L3845.1406,60.7656 L3842.6719,60.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="99" x="3867.25" y="69.8467">CorePredicate</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="4131.5" y="46"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="4132.5" y="58.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="3675.5" x2="4136.5" y1="81" y2="81"/><line style="stroke:#181818;stroke-width:0.5;" x1="3675.5" x2="4136.5" y1="89" y2="89"/><ellipse cx="3685.5" cy="102.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="3694.5" y="105.9951">instantiate(Database): Instance&lt;T&gt;</text><ellipse cx="3685.5" cy="118.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="437" x="3694.5" y="122.292">acceptsType(SimpleTypeInformation&lt;? extends T&gt;): boolean</text></g></a><!--MD5=[ca564ca4c782598d75bcbaaa9fb05aa1]
class elki.clustering.dbscan.predicates.PreDeConCorePredicate--><a href="PreDeConCorePredicate.html" target="_top" title="PreDeConCorePredicate.html" xlink:actuate="onRequest" xlink:href="PreDeConCorePredicate.html" xlink:show="new" xlink:title="PreDeConCorePredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.PreDeConCorePredicate"><rect codeLine="91" fill="#F1F1F1" height="113.1875" id="elki.clustering.dbscan.predicates.PreDeConCorePredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="555" x="3628.5" y="239"/><ellipse cx="3817.25" cy="255" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3820.2188,260.6406 Q3819.6406,260.9375 3819,261.0781 Q3818.3594,261.2344 3817.6563,261.2344 Q3815.1563,261.2344 3813.8281,259.5938 Q3812.5156,257.9375 3812.5156,254.8125 Q3812.5156,251.6875 3813.8281,250.0313 Q3815.1563,248.375 3817.6563,248.375 Q3818.3594,248.375 3819,248.5313 Q3819.6563,248.6875 3820.2188,248.9844 L3820.2188,251.7031 Q3819.5938,251.125 3819,250.8594 Q3818.4063,250.5781 3817.7813,250.5781 Q3816.4375,250.5781 3815.75,251.6563 Q3815.0625,252.7188 3815.0625,254.8125 Q3815.0625,256.9063 3815.75,257.9844 Q3816.4375,259.0469 3817.7813,259.0469 Q3818.4063,259.0469 3819,258.7813 Q3819.5938,258.5 3820.2188,257.9219 L3820.2188,260.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="3837.75" y="259.8467">PreDeConCorePredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="3629.5" x2="4182.5" y1="271" y2="271"/><polygon fill="none" points="3639.5,279.6484,3643.5,283.6484,3639.5,287.6484,3635.5,283.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="3648.5" y="287.9951">settings: Settings</text><line style="stroke:#181818;stroke-width:0.5;" x1="3629.5" x2="4182.5" y1="295.2969" y2="295.2969"/><ellipse cx="3639.5" cy="308.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="3648.5" y="312.292">PreDeConCorePredicate(Settings)</text><ellipse cx="3639.5" cy="325.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="3648.5" y="328.5889">instantiate(Database): Instance</text><ellipse cx="3639.5" cy="341.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="529" x="3648.5" y="344.8857">acceptsType(SimpleTypeInformation&lt;? extends PreDeConModel&gt;): boolean</text></g></a><!--MD5=[83b8efd029fe51cffec22b7e7cbd70be]
class elki.clustering.dbscan.predicates.FourCCorePredicate--><a href="FourCCorePredicate.html" target="_top" title="FourCCorePredicate.html" xlink:actuate="onRequest" xlink:href="FourCCorePredicate.html" xlink:show="new" xlink:title="FourCCorePredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.FourCCorePredicate"><rect codeLine="110" fill="#F1F1F1" height="113.1875" id="elki.clustering.dbscan.predicates.FourCCorePredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="555" x="4218.5" y="239"/><ellipse cx="4422.25" cy="255" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4425.2188,260.6406 Q4424.6406,260.9375 4424,261.0781 Q4423.3594,261.2344 4422.6563,261.2344 Q4420.1563,261.2344 4418.8281,259.5938 Q4417.5156,257.9375 4417.5156,254.8125 Q4417.5156,251.6875 4418.8281,250.0313 Q4420.1563,248.375 4422.6563,248.375 Q4423.3594,248.375 4424,248.5313 Q4424.6563,248.6875 4425.2188,248.9844 L4425.2188,251.7031 Q4424.5938,251.125 4424,250.8594 Q4423.4063,250.5781 4422.7813,250.5781 Q4421.4375,250.5781 4420.75,251.6563 Q4420.0625,252.7188 4420.0625,254.8125 Q4420.0625,256.9063 4420.75,257.9844 Q4421.4375,259.0469 4422.7813,259.0469 Q4423.4063,259.0469 4424,258.7813 Q4424.5938,258.5 4425.2188,257.9219 L4425.2188,260.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="4442.75" y="259.8467">FourCCorePredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="4219.5" x2="4772.5" y1="271" y2="271"/><polygon fill="none" points="4229.5,279.6484,4233.5,283.6484,4229.5,287.6484,4225.5,283.6484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="4238.5" y="287.9951">settings: Settings</text><line style="stroke:#181818;stroke-width:0.5;" x1="4219.5" x2="4772.5" y1="295.2969" y2="295.2969"/><ellipse cx="4229.5" cy="308.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="4238.5" y="312.292">FourCCorePredicate(Settings)</text><ellipse cx="4229.5" cy="325.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="4238.5" y="328.5889">instantiate(Database): Instance</text><ellipse cx="4229.5" cy="341.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="529" x="4238.5" y="344.8857">acceptsType(SimpleTypeInformation&lt;? extends PreDeConModel&gt;): boolean</text></g></a><!--MD5=[97a186e84fede40ced7e9793b07107a5]
class elki.clustering.dbscan.predicates.COPACNeighborPredicate--><a href="COPACNeighborPredicate.html" target="_top" title="COPACNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="COPACNeighborPredicate.html" xlink:show="new" xlink:title="COPACNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.COPACNeighborPredicate"><rect codeLine="129" fill="#F1F1F1" height="194.6719" id="elki.clustering.dbscan.predicates.COPACNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="708" x="669" y="198"/><ellipse cx="930.25" cy="214" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M933.2188,219.6406 Q932.6406,219.9375 932,220.0781 Q931.3594,220.2344 930.6563,220.2344 Q928.1563,220.2344 926.8281,218.5938 Q925.5156,216.9375 925.5156,213.8125 Q925.5156,210.6875 926.8281,209.0313 Q928.1563,207.375 930.6563,207.375 Q931.3594,207.375 932,207.5313 Q932.6563,207.6875 933.2188,207.9844 L933.2188,210.7031 Q932.5938,210.125 932,209.8594 Q931.4063,209.5781 930.7813,209.5781 Q929.4375,209.5781 928.75,210.6563 Q928.0625,211.7188 928.0625,213.8125 Q928.0625,215.9063 928.75,216.9844 Q929.4375,218.0469 930.7813,218.0469 Q931.4063,218.0469 932,217.7813 Q932.5938,217.5 933.2188,216.9219 L933.2188,219.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="950.75" y="218.8467">COPACNeighborPredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="670" x2="1376" y1="230" y2="230"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="677" y="240.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="689" y="246.9951">LOG: Logging</text><polygon fill="none" points="680,254.9453,684,258.9453,680,262.9453,676,258.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="689" y="263.292">settings: Settings</text><polygon fill="none" points="680,271.2422,684,275.2422,680,279.2422,676,275.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="689" y="279.5889">epsilonsq: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="670" x2="1376" y1="286.8906" y2="286.8906"/><ellipse cx="680" cy="300.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="689" y="303.8857">COPACNeighborPredicate(Settings)</text><ellipse cx="680" cy="316.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="689" y="320.1826">instantiate(Database): Instance&lt;COPACModel&gt;</text><ellipse cx="680" cy="333.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="401" x="689" y="336.4795">instantiate(Relation&lt;? extends NumberVector&gt;): Instance</text><polygon fill="#FFFF44" points="680,344.4297,684,348.4297,680,352.4297,676,348.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="682" x="689" y="352.7764">computeLocalModel(DBIDRef, DoubleDBIDList, Relation&lt;? extends NumberVector&gt;): COPACModel</text><ellipse cx="680" cy="365.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="689" y="369.0732">getInputTypeRestriction(): TypeInformation</text><ellipse cx="680" cy="382.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="689" y="385.3701">getOutputType(): SimpleTypeInformation&lt;COPACModel&gt;</text></g></a><!--MD5=[b755b24e4f32501064c2fc8d8effc711]
class elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel--><a href="COPACNeighborPredicate.COPACModel.html" target="_top" title="COPACNeighborPredicate.COPACModel.html" xlink:actuate="onRequest" xlink:href="COPACNeighborPredicate.COPACModel.html" xlink:show="new" xlink:title="COPACNeighborPredicate.COPACModel.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel"><rect codeLine="141" fill="#F1F1F1" height="162.0781" id="elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="304" x="533" y="502"/><ellipse cx="548" cy="518" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M550.9688,523.6406 Q550.3906,523.9375 549.75,524.0781 Q549.1094,524.2344 548.4063,524.2344 Q545.9063,524.2344 544.5781,522.5938 Q543.2656,520.9375 543.2656,517.8125 Q543.2656,514.6875 544.5781,513.0313 Q545.9063,511.375 548.4063,511.375 Q549.1094,511.375 549.75,511.5313 Q550.4063,511.6875 550.9688,511.9844 L550.9688,514.7031 Q550.3438,514.125 549.75,513.8594 Q549.1563,513.5781 548.5313,513.5781 Q547.1875,513.5781 546.5,514.6563 Q545.8125,515.7188 545.8125,517.8125 Q545.8125,519.9063 546.5,520.9844 Q547.1875,522.0469 548.5313,522.0469 Q549.1563,522.0469 549.75,521.7813 Q550.3438,521.5 550.9688,520.9219 L550.9688,523.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="562" y="522.8467">COPACNeighborPredicate.COPACModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="534" x2="836" y1="534" y2="534"/><polygon fill="none" points="544,543.6484,540,549.6484,548,549.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="553" y="550.9951">cdim: int</text><polygon fill="none" points="544,559.9453,540,565.9453,548,565.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="553" y="567.292">ids: SetDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="534" x2="836" y1="574.5938" y2="574.5938"/><ellipse cx="544" cy="588.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="553" y="591.5889">COPACModel(int, SetDBIDs)</text><ellipse cx="544" cy="604.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="553" y="607.8857">iter(): DBIDIter</text><ellipse cx="544" cy="620.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="553" y="624.1826">size(): int</text><ellipse cx="544" cy="637.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="553" y="640.4795">contains(DBIDRef): boolean</text><ellipse cx="544" cy="653.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="553" y="656.7764">isEmpty(): boolean</text></g></a><!--MD5=[302ca4ed86e4489c8b21df1b07229c3f]
class elki.clustering.dbscan.predicates.EpsilonNeighborPredicate--><a href="EpsilonNeighborPredicate.html" target="_top" title="EpsilonNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="EpsilonNeighborPredicate.html" xlink:show="new" xlink:title="EpsilonNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.EpsilonNeighborPredicate"><rect codeLine="164" fill="#F1F1F1" height="145.7813" id="elki.clustering.dbscan.predicates.EpsilonNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="439" x="1412.5" y="222.5"/><ellipse cx="1532.75" cy="238.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1535.7188,244.1406 Q1535.1406,244.4375 1534.5,244.5781 Q1533.8594,244.7344 1533.1563,244.7344 Q1530.6563,244.7344 1529.3281,243.0938 Q1528.0156,241.4375 1528.0156,238.3125 Q1528.0156,235.1875 1529.3281,233.5313 Q1530.6563,231.875 1533.1563,231.875 Q1533.8594,231.875 1534.5,232.0313 Q1535.1563,232.1875 1535.7188,232.4844 L1535.7188,235.2031 Q1535.0938,234.625 1534.5,234.3594 Q1533.9063,234.0781 1533.2813,234.0781 Q1531.9375,234.0781 1531.25,235.1563 Q1530.5625,236.2188 1530.5625,238.3125 Q1530.5625,240.4063 1531.25,241.4844 Q1531.9375,242.5469 1533.2813,242.5469 Q1533.9063,242.5469 1534.5,242.2813 Q1535.0938,242 1535.7188,241.4219 L1535.7188,244.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1553.25" y="243.3467">EpsilonNeighborPredicate</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="10" x="1844.5" y="219.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="8" x="1845.5" y="231.6387">O</text><line style="stroke:#181818;stroke-width:0.5;" x1="1413.5" x2="1850.5" y1="254.5" y2="254.5"/><polygon fill="none" points="1423.5,263.1484,1427.5,267.1484,1423.5,271.1484,1419.5,267.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1432.5" y="271.4951">epsilon: double</text><polygon fill="none" points="1423.5,279.4453,1427.5,283.4453,1423.5,287.4453,1419.5,283.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1432.5" y="287.792">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1413.5" x2="1850.5" y1="295.0938" y2="295.0938"/><ellipse cx="1423.5" cy="308.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="395" x="1432.5" y="312.0889">EpsilonNeighborPredicate(double, Distance&lt;? super O&gt;)</text><ellipse cx="1423.5" cy="325.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="1432.5" y="328.3857">instantiate(Database): Instance</text><ellipse cx="1423.5" cy="341.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="1432.5" y="344.6826">getOutputType(): SimpleTypeInformation&lt;DoubleDBIDList&gt;</text><ellipse cx="1423.5" cy="357.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="1432.5" y="360.9795">getInputTypeRestriction(): TypeInformation</text></g></a><!--MD5=[665a4b5d83728f0d2251e43f5450bd87]
class elki.clustering.dbscan.predicates.ERiCNeighborPredicate--><a href="ERiCNeighborPredicate.html" target="_top" title="ERiCNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="ERiCNeighborPredicate.html" xlink:show="new" xlink:title="ERiCNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.ERiCNeighborPredicate"><rect codeLine="190" fill="#F1F1F1" height="178.375" id="elki.clustering.dbscan.predicates.ERiCNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="427" x="1886.5" y="206.5"/><ellipse cx="2015.75" cy="222.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2018.7188,228.1406 Q2018.1406,228.4375 2017.5,228.5781 Q2016.8594,228.7344 2016.1563,228.7344 Q2013.6563,228.7344 2012.3281,227.0938 Q2011.0156,225.4375 2011.0156,222.3125 Q2011.0156,219.1875 2012.3281,217.5313 Q2013.6563,215.875 2016.1563,215.875 Q2016.8594,215.875 2017.5,216.0313 Q2018.1563,216.1875 2018.7188,216.4844 L2018.7188,219.2031 Q2018.0938,218.625 2017.5,218.3594 Q2016.9063,218.0781 2016.2813,218.0781 Q2014.9375,218.0781 2014.25,219.1563 Q2013.5625,220.2188 2013.5625,222.3125 Q2013.5625,224.4063 2014.25,225.4844 Q2014.9375,226.5469 2016.2813,226.5469 Q2016.9063,226.5469 2017.5,226.2813 Q2018.0938,226 2018.7188,225.4219 L2018.7188,228.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2036.25" y="227.3467">ERiCNeighborPredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="1887.5" x2="2312.5" y1="238.5" y2="238.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1894.5" y="249.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="1906.5" y="255.4951">LOG: Logging</text><polygon fill="none" points="1897.5,263.4453,1901.5,267.4453,1897.5,271.4453,1893.5,267.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1906.5" y="271.792">settings: Settings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1894.5" y="281.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1906.5" y="288.0889">deltasq: double</text><line style="stroke:#181818;stroke-width:0.5;" x1="1887.5" x2="2312.5" y1="295.3906" y2="295.3906"/><ellipse cx="1897.5" cy="309.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="1906.5" y="312.3857">ERiCNeighborPredicate(Settings)</text><ellipse cx="1897.5" cy="325.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="1906.5" y="328.6826">instantiate(Database): Instance</text><ellipse cx="1897.5" cy="341.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="401" x="1906.5" y="344.9795">instantiate(Relation&lt;? extends NumberVector&gt;): Instance</text><ellipse cx="1897.5" cy="357.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="1906.5" y="361.2764">getInputTypeRestriction(): TypeInformation</text><ellipse cx="1897.5" cy="374.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="1906.5" y="377.5732">getOutputType(): SimpleTypeInformation&lt;DBIDs&gt;</text></g></a><!--MD5=[dc2f1f18b4a80662db4d20a3774e6bfc]
class elki.clustering.dbscan.predicates.NeighborPredicate--><a href="NeighborPredicate.html" target="_top" title="NeighborPredicate.html" xlink:actuate="onRequest" xlink:href="NeighborPredicate.html" xlink:show="new" xlink:title="NeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.NeighborPredicate"><rect codeLine="218" fill="#F1F1F1" height="96.8906" id="elki.clustering.dbscan.predicates.NeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="350" x="1457" y="41"/><ellipse cx="1556.75" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1552.6719,52.7656 L1552.6719,50.6094 L1560.0625,50.6094 L1560.0625,52.7656 L1557.5938,52.7656 L1557.5938,60.8438 L1560.0625,60.8438 L1560.0625,63 L1552.6719,63 L1552.6719,60.8438 L1555.1406,60.8438 L1555.1406,52.7656 L1552.6719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="1577.25" y="61.8467">NeighborPredicate</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="1801" y="38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="1802" y="50.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="1458" x2="1806" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="1458" x2="1806" y1="81" y2="81"/><ellipse cx="1468" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="255" x="1477" y="97.9951">instantiate(Database): Instance&lt;T&gt;</text><ellipse cx="1468" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="305" x="1477" y="114.292">getInputTypeRestriction(): TypeInformation</text><ellipse cx="1468" cy="127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="324" x="1477" y="130.5889">getOutputType(): SimpleTypeInformation&lt;T&gt;</text></g></a><!--MD5=[45f8970a006882fa468127cb4226ba29]
class elki.clustering.dbscan.predicates.FourCNeighborPredicate--><a href="FourCNeighborPredicate.html" target="_top" title="FourCNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="FourCNeighborPredicate.html" xlink:show="new" xlink:title="FourCNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.FourCNeighborPredicate"><rect codeLine="230" fill="#F1F1F1" height="259.8594" id="elki.clustering.dbscan.predicates.FourCNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730" x="2728" y="453"/><ellipse cx="3004.25" cy="469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3007.2188,474.6406 Q3006.6406,474.9375 3006,475.0781 Q3005.3594,475.2344 3004.6563,475.2344 Q3002.1563,475.2344 3000.8281,473.5938 Q2999.5156,471.9375 2999.5156,468.8125 Q2999.5156,465.6875 3000.8281,464.0313 Q3002.1563,462.375 3004.6563,462.375 Q3005.3594,462.375 3006,462.5313 Q3006.6563,462.6875 3007.2188,462.9844 L3007.2188,465.7031 Q3006.5938,465.125 3006,464.8594 Q3005.4063,464.5781 3004.7813,464.5781 Q3003.4375,464.5781 3002.75,465.6563 Q3002.0625,466.7188 3002.0625,468.8125 Q3002.0625,470.9063 3002.75,471.9844 Q3003.4375,473.0469 3004.7813,473.0469 Q3005.4063,473.0469 3006,472.7813 Q3006.5938,472.5 3007.2188,471.9219 L3007.2188,474.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="3024.75" y="473.8467">FourCNeighborPredicate</text><line style="stroke:#181818;stroke-width:0.5;" x1="2729" x2="3457" y1="485" y2="485"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="495.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2748" y="501.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="511.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2748" y="518.292">settings: Settings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="528.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2748" y="534.5889">mvSize: MeanVariance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="544.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="2748" y="550.8857">mvSize2: MeanVariance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="560.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="2748" y="567.1826">mvCorDim: MeanVariance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="577.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2748" y="583.4795">pca: PCARunner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2736" y="593.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="2748" y="599.7764">filter: EigenPairFilter</text><line style="stroke:#181818;stroke-width:0.5;" x1="2729" x2="3457" y1="607.0781" y2="607.0781"/><ellipse cx="2739" cy="620.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="2748" y="624.0732">FourCNeighborPredicate(Settings)</text><ellipse cx="2739" cy="637.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="2748" y="640.3701">instantiate(Database): Instance</text><polygon fill="#FFFF44" points="2739,648.3203,2743,652.3203,2739,656.3203,2735,652.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="704" x="2748" y="656.667">computeLocalModel(DBIDRef, DoubleDBIDList, Relation&lt;? extends NumberVector&gt;): PreDeConModel</text><polygon fill="#4177AF" points="2739,665.6172,2735,671.6172,2743,671.6172" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="2748" y="672.9639">getLogger(): Logging</text><ellipse cx="2739" cy="685.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="2748" y="689.2607">getInputTypeRestriction(): TypeInformation</text><ellipse cx="2739" cy="702.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="2748" y="705.5576">getOutputType(): SimpleTypeInformation&lt;PreDeConModel&gt;</text></g></a><!--MD5=[d4b28d15ca62d37c236a3d5cad149579]
class elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate--><a href="AbstractRangeQueryNeighborPredicate.html" target="_top" title="AbstractRangeQueryNeighborPredicate.html" xlink:actuate="onRequest" xlink:href="AbstractRangeQueryNeighborPredicate.html" xlink:show="new" xlink:title="AbstractRangeQueryNeighborPredicate.html" xlink:type="simple"><g id="elem_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate"><rect codeLine="258" fill="#F1F1F1" height="162.0781" id="elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="724" x="2349" y="214.5"/><ellipse cx="2544.75" cy="230.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2544.8594,225.8438 L2543.7031,230.9219 L2546.0313,230.9219 L2544.8594,225.8438 Z M2543.375,223.6094 L2546.3594,223.6094 L2549.7188,236 L2547.2656,236 L2546.5,232.9375 L2543.2188,232.9375 L2542.4688,236 L2540.0313,236 L2543.375,223.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="277" x="2565.25" y="235.3467">AbstractRangeQueryNeighborPredicate</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="3031" y="211.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="3032" y="223.6387">O, M, N</text><line style="stroke:#181818;stroke-width:0.5;" x1="2350" x2="3072" y1="246.5" y2="246.5"/><polygon fill="none" points="2360,255.1484,2364,259.1484,2360,263.1484,2356,259.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2369" y="263.4951">epsilon: double</text><polygon fill="none" points="2360,271.4453,2364,275.4453,2360,279.4453,2356,275.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="2369" y="279.792">distance: Distance&lt;? super O&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2350" x2="3072" y1="287.0938" y2="287.0938"/><ellipse cx="2360" cy="300.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="488" x="2369" y="304.0889">AbstractRangeQueryNeighborPredicate(double, Distance&lt;? super O&gt;)</text><ellipse cx="2360" cy="317.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="2369" y="320.3857">getInputTypeRestriction(): TypeInformation</text><ellipse cx="2360" cy="333.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="2369" y="336.6826">preprocess(Class&lt;? super M&gt;, Relation&lt;? extends O&gt;, RangeSearcher&lt;DBIDRef&gt;): DataStore&lt;M&gt;</text><polygon fill="#FFFF44" points="2360,344.6328,2364,348.6328,2360,352.6328,2356,348.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="527" x="2369" y="352.9795">computeLocalModel(DBIDRef, DoubleDBIDList, Relation&lt;? extends O&gt;): M</text><polygon fill="#4177AF" points="2360,361.9297,2356,367.9297,2364,367.9297" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="2369" y="369.2764">getLogger(): Logging</text></g></a><!--MD5=[64fb8f1c068d35f1735c6fa363479295]
class elki.database.ids.SetDBIDs--><a href="../../../database/ids/SetDBIDs.html" target="_top" title="../../../database/ids/SetDBIDs.html" xlink:actuate="onRequest" xlink:href="../../../database/ids/SetDBIDs.html" xlink:show="new" xlink:title="../../../database/ids/SetDBIDs.html" xlink:type="simple"><g id="elem_elki.database.ids.SetDBIDs"><rect codeLine="348" fill="#F1F1F1" height="48" id="elki.database.ids.SetDBIDs" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="98" x="40" y="271.5"/><ellipse cx="55" cy="287.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M50.9219,283.2656 L50.9219,281.1094 L58.3125,281.1094 L58.3125,283.2656 L55.8438,283.2656 L55.8438,291.3438 L58.3125,291.3438 L58.3125,293.5 L50.9219,293.5 L50.9219,291.3438 L53.3906,291.3438 L53.3906,283.2656 L50.9219,283.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="66" x="69" y="292.3467">SetDBIDs</text><line style="stroke:#181818;stroke-width:0.5;" x1="41" x2="137" y1="303.5" y2="303.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="41" x2="137" y1="311.5" y2="311.5"/></g></a><!--MD5=[baf30c3d480b9d57c80e281373ededb9]
reverse link elki.clustering.dbscan.predicates.CorePredicate to elki.clustering.dbscan.predicates.MinPtsCorePredicate--><g id="link_elki.clustering.dbscan.predicates.CorePredicate_elki.clustering.dbscan.predicates.MinPtsCorePredicate"><path codeLine="283" d="M3777.96,136.97 C3726.1,155.84 3665.67,177.89 3611,198 C3582.19,208.59 3551.61,219.9 3521.92,230.9 " fill="none" id="elki.clustering.dbscan.predicates.CorePredicate-backto-elki.clustering.dbscan.predicates.MinPtsCorePredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3775.83,130.3,3797.02,130.04,3780.61,143.45,3775.83,130.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[865f55aa05ae4b1484781af6fc16fa9c]
reverse link elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate to elki.clustering.dbscan.predicates.PreDeConNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate_elki.clustering.dbscan.predicates.PreDeConNeighborPredicate"><path codeLine="288" d="M2587.3,388.71 C2545.79,419.65 2499.41,454.23 2457.47,485.49 " fill="none" id="elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate-backto-elki.clustering.dbscan.predicates.PreDeConNeighborPredicate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2583.33,382.94,2603.55,376.6,2591.7,394.16,2583.33,382.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e8fec41be4176a7a8e152caeb1c130c0]
reverse link elki.clustering.dbscan.predicates.PreDeConNeighborPredicate to elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel--><g id="link_elki.clustering.dbscan.predicates.PreDeConNeighborPredicate_elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel"><path codeLine="289" d="M2328,695.56 C2328,722.77 2328,750.45 2328,772.82 " fill="none" id="elki.clustering.dbscan.predicates.PreDeConNeighborPredicate-backto-elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2328" cy="688.53" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2328" x2="2328" y1="696.53" y2="680.53"/><line style="stroke:#181818;stroke-width:1.0;" x1="2320" x2="2336" y1="688.53" y2="688.53"/></g><!--MD5=[57a2adb4505b687b6c292174675a1d24]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.SimilarityNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.SimilarityNeighborPredicate"><path codeLine="294" d="M1436.67,96.11 C1236.85,105.51 918.74,130.68 652,198 C626.49,204.44 600.1,213.03 574.59,222.45 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.SimilarityNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1436.54,89.11,1456.83,95.2,1437.17,103.1,1436.54,89.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[df01b6ef0712264734abc93cb9656b9c]
reverse link elki.clustering.dbscan.predicates.CorePredicate to elki.clustering.dbscan.predicates.PreDeConCorePredicate--><g id="link_elki.clustering.dbscan.predicates.CorePredicate_elki.clustering.dbscan.predicates.PreDeConCorePredicate"><path codeLine="300" d="M3906,150.53 C3906,178.51 3906,211.58 3906,238.96 " fill="none" id="elki.clustering.dbscan.predicates.CorePredicate-backto-elki.clustering.dbscan.predicates.PreDeConCorePredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3899,150.32,3906,130.32,3913,150.32,3899,150.32" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d692babce4f3aab06aac044d5d77125b]
reverse link elki.clustering.dbscan.predicates.CorePredicate to elki.clustering.dbscan.predicates.FourCCorePredicate--><g id="link_elki.clustering.dbscan.predicates.CorePredicate_elki.clustering.dbscan.predicates.FourCCorePredicate"><path codeLine="305" d="M4039.59,136.69 C4127.31,167.02 4242.55,206.87 4335.29,238.93 " fill="none" id="elki.clustering.dbscan.predicates.CorePredicate-backto-elki.clustering.dbscan.predicates.FourCCorePredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="4037.07,143.23,4020.46,130.08,4041.65,130,4037.07,143.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f2af119f6c5d1dd1af66aaf25cda9018]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.COPACNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.COPACNeighborPredicate"><path codeLine="310" d="M1470.77,144.51 C1421.61,160.98 1366,179.6 1311.1,197.99 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.COPACNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1468.8,137.79,1489.99,138.07,1473.24,151.06,1468.8,137.79" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b2bc72ac4624f7e52982a610d71a250c]
reverse link elki.database.ids.SetDBIDs to elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel--><g id="link_elki.database.ids.SetDBIDs_elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel"><path codeLine="311" d="M117.88,335.67 C133.82,355.07 155.02,377.57 178,393 C286.7,465.99 427.32,515.52 532.88,545.51 " fill="none" id="elki.database.ids.SetDBIDs-backto-elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="112.17,339.73,105.31,319.68,123.17,331.08,112.17,339.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c14dd3b831b9a0abc1b3eaa5e549801c]
reverse link elki.clustering.dbscan.predicates.COPACNeighborPredicate to elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel--><g id="link_elki.clustering.dbscan.predicates.COPACNeighborPredicate_elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel"><path codeLine="312" d="M896.68,403.2 C858,435.87 816.13,471.24 779.92,501.83 " fill="none" id="elki.clustering.dbscan.predicates.COPACNeighborPredicate-backto-elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="902.4606" cy="398.3248" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="896.3512" x2="908.57" y1="403.4896" y2="393.16"/><line style="stroke:#181818;stroke-width:1.0;" x1="897.2958" x2="907.6254" y1="392.2154" y2="404.4342"/></g><!--MD5=[15c7dc29b5b16b45dadd90bb6d4d1cbc]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.EpsilonNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.EpsilonNeighborPredicate"><path codeLine="317" d="M1632,158.22 C1632,178.82 1632,201.54 1632,222.42 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.EpsilonNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1625,158.07,1632,138.07,1639,158.07,1625,158.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f9bf255cc676a216fc8d7ced204ff924]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.ERiCNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.ERiCNeighborPredicate"><path codeLine="322" d="M1759.65,146.14 C1802.29,164.73 1850.92,185.93 1897.82,206.37 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.ERiCNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1756.67,152.48,1741.13,138.07,1762.27,139.65,1756.67,152.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[443ede4fc4bb1940c31d603b3b08e932]
reverse link elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate to elki.clustering.dbscan.predicates.FourCNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate_elki.clustering.dbscan.predicates.FourCNeighborPredicate"><path codeLine="328" d="M2834.43,388.75 C2861.75,409.16 2891.18,431.16 2920.05,452.74 " fill="none" id="elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate-backto-elki.clustering.dbscan.predicates.FourCNeighborPredicate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2830,394.18,2818.17,376.6,2838.38,382.96,2830,394.18" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e8ca7bcf8cc69624675cb4acf1a57438]
reverse link elki.clustering.dbscan.predicates.NeighborPredicate to elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate--><g id="link_elki.clustering.dbscan.predicates.NeighborPredicate_elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate"><path codeLine="333" d="M1827.26,115.41 C1967.94,134.6 2161.96,163.62 2331,198 C2355.68,203.02 2381.16,208.6 2406.7,214.48 " fill="none" id="elki.clustering.dbscan.predicates.NeighborPredicate-backto-elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1826.22,122.33,1807.34,112.71,1828.1,108.46,1826.22,122.33" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="2298.5" y="892"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="2298.5" y="901.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[945048dc043b48471898eea622df85d6]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.clustering.dbscan.predicates {

        class MinPtsCorePredicate [[MinPtsCorePredicate.html]] {
            {static} +LOG: Logging
            #minpts: int
            +MinPtsCorePredicate(int)
            +instantiate(Database): Instance
            +acceptsType(SimpleTypeInformation<? extends DBIDs>): boolean
        }

        class elki.clustering.dbscan.predicates.MinPtsCorePredicate.Instance [[MinPtsCorePredicate.Instance.html]] {
            #minpts: int
            +Instance(int)
            +isCorePoint(DBIDRef, DBIDs): boolean
        }

        class elki.clustering.dbscan.predicates.MinPtsCorePredicate.Par [[MinPtsCorePredicate.Par.html]] {
            #minpts: int
            +configure(Parameterization): void
            +make(): MinPtsCorePredicate
        }

        class PreDeConNeighborPredicate [[PreDeConNeighborPredicate.html]] {
            {static} -LOG: Logging
            -mvSize: MeanVariance
            -mvVar: MeanVariance
            -settings: Settings
            +PreDeConNeighborPredicate(Settings)
            +instantiate(Database): Instance
            #computeLocalModel(DBIDRef, DoubleDBIDList, Relation<? extends NumberVector>): PreDeConModel
            ~getLogger(): Logging
            +getOutputType(): SimpleTypeInformation<PreDeConModel>
        }

        class elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel [[PreDeConNeighborPredicate.PreDeConModel.html]] {
            ~pdim: int
            ~ids: SetDBIDs
            +PreDeConModel(int, SetDBIDs)
        }

        class elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Instance [[PreDeConNeighborPredicate.Instance.html]] {
            +Instance(DBIDs, DataStore<PreDeConModel>)
            +getNeighbors(DBIDRef): PreDeConModel
            +iterDBIDs(PreDeConModel): DBIDIter
        }

        class elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Par [[PreDeConNeighborPredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): PreDeConNeighborPredicate
        }

        class SimilarityNeighborPredicate<O> [[SimilarityNeighborPredicate.html]] {
            #epsilon: double
            #simFunc: Similarity<? super O>
            +SimilarityNeighborPredicate(double, Similarity<? super O>)
            +instantiate(Database): Instance
            +getOutputType(): SimpleTypeInformation<DoubleDBIDList>
            +getInputTypeRestriction(): TypeInformation
        }

        class elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Instance [[SimilarityNeighborPredicate.Instance.html]] {
            #epsilon: double
            #rq: RangeSearcher<DBIDRef>
            #ids: DBIDs
            +Instance(double, RangeSearcher<DBIDRef>, DBIDs)
            +getIDs(): DBIDs
            +getNeighbors(DBIDRef): DoubleDBIDList
            +iterDBIDs(DoubleDBIDList): DBIDIter
        }

        class elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Par<O> {
            {static} +SIMILARITY_FUNCTION_ID: OptionID
            {static} +EPSILON_ID: OptionID
            #epsilon: double
            #distfun: Similarity<O>
            +configure(Parameterization): void
            +make(): SimilarityNeighborPredicate<O>
        }

        interface CorePredicate<T> [[CorePredicate.html]] {
            {abstract} +instantiate(Database): Instance<T>
            {abstract} +acceptsType(SimpleTypeInformation<? extends T>): boolean
        }

        interface elki.clustering.dbscan.predicates.CorePredicate.Instance<T> [[CorePredicate.Instance.html]] {
            {abstract} +isCorePoint(DBIDRef, T): boolean
        }

        class PreDeConCorePredicate [[PreDeConCorePredicate.html]] {
            #settings: Settings
            +PreDeConCorePredicate(Settings)
            +instantiate(Database): Instance
            +acceptsType(SimpleTypeInformation<? extends PreDeConModel>): boolean
        }

        class elki.clustering.dbscan.predicates.PreDeConCorePredicate.Instance [[PreDeConCorePredicate.Instance.html]] {
            #settings: Settings
            +Instance(Settings)
            +isCorePoint(DBIDRef, PreDeConModel): boolean
        }

        class elki.clustering.dbscan.predicates.PreDeConCorePredicate.Par [[PreDeConCorePredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): PreDeConCorePredicate
        }

        class FourCCorePredicate [[FourCCorePredicate.html]] {
            #settings: Settings
            +FourCCorePredicate(Settings)
            +instantiate(Database): Instance
            +acceptsType(SimpleTypeInformation<? extends PreDeConModel>): boolean
        }

        class elki.clustering.dbscan.predicates.FourCCorePredicate.Instance [[FourCCorePredicate.Instance.html]] {
            #settings: Settings
            +Instance(Settings)
            +isCorePoint(DBIDRef, PreDeConModel): boolean
        }

        class elki.clustering.dbscan.predicates.FourCCorePredicate.Par [[FourCCorePredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): FourCCorePredicate
        }

        class COPACNeighborPredicate [[COPACNeighborPredicate.html]] {
            {static} -LOG: Logging
            #settings: Settings
            #epsilonsq: double
            +COPACNeighborPredicate(Settings)
            +instantiate(Database): Instance<COPACModel>
            +instantiate(Relation<? extends NumberVector>): Instance
            #computeLocalModel(DBIDRef, DoubleDBIDList, Relation<? extends NumberVector>): COPACModel
            +getInputTypeRestriction(): TypeInformation
            +getOutputType(): SimpleTypeInformation<COPACModel>
        }

        class elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel [[COPACNeighborPredicate.COPACModel.html]] {
            ~cdim: int
            ~ids: SetDBIDs
            +COPACModel(int, SetDBIDs)
            +iter(): DBIDIter
            +size(): int
            +contains(DBIDRef): boolean
            +isEmpty(): boolean
        }

        class elki.clustering.dbscan.predicates.COPACNeighborPredicate.Instance [[COPACNeighborPredicate.Instance.html]] {
            +Instance(DBIDs, DataStore<COPACModel>)
            +getNeighbors(DBIDRef): COPACModel
            +iterDBIDs(COPACModel): DBIDIter
            +dimensionality(DBIDRef): int
        }

        class elki.clustering.dbscan.predicates.COPACNeighborPredicate.Par [[COPACNeighborPredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): COPACNeighborPredicate
        }

        class EpsilonNeighborPredicate<O> [[EpsilonNeighborPredicate.html]] {
            #epsilon: double
            #distance: Distance<? super O>
            +EpsilonNeighborPredicate(double, Distance<? super O>)
            +instantiate(Database): Instance
            +getOutputType(): SimpleTypeInformation<DoubleDBIDList>
            +getInputTypeRestriction(): TypeInformation
        }

        class elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Instance [[EpsilonNeighborPredicate.Instance.html]] {
            #epsilon: double
            #rq: RangeSearcher<DBIDRef>
            #ids: DBIDs
            +Instance(double, RangeSearcher<DBIDRef>, DBIDs)
            +getIDs(): DBIDs
            +getNeighbors(DBIDRef): DoubleDBIDList
            +iterDBIDs(DoubleDBIDList): DBIDIter
        }

        class elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Par<O> {
            #epsilon: double
            #distfun: Distance<O>
            +configure(Parameterization): void
            +make(): EpsilonNeighborPredicate<O>
        }

        class ERiCNeighborPredicate [[ERiCNeighborPredicate.html]] {
            {static} -LOG: Logging
            #settings: Settings
            -deltasq: double
            +ERiCNeighborPredicate(Settings)
            +instantiate(Database): Instance
            +instantiate(Relation<? extends NumberVector>): Instance
            +getInputTypeRestriction(): TypeInformation
            +getOutputType(): SimpleTypeInformation<DBIDs>
        }

        class elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Instance [[ERiCNeighborPredicate.Instance.html]] {
            -relation: Relation<? extends NumberVector>
            +Instance(DBIDs, DataStore<PCAFilteredResult>, Relation<? extends NumberVector>)
            +getNeighbors(DBIDRef): DBIDs
            +iterDBIDs(DBIDs): DBIDIter
            +strongNeighbors(NumberVector, NumberVector, PCAFilteredResult, PCAFilteredResult): boolean
            +weakNeighbors(double[], double[], PCAFilteredResult, PCAFilteredResult): boolean
            #approximatelyLinearDependent(PCAFilteredResult, PCAFilteredResult): boolean
            +dimensionality(DBIDRef): int
        }

        class elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Par [[ERiCNeighborPredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): ERiCNeighborPredicate
        }

        interface NeighborPredicate<T> [[NeighborPredicate.html]] {
            {abstract} +instantiate(Database): Instance<T>
            {abstract} +getInputTypeRestriction(): TypeInformation
            {abstract} +getOutputType(): SimpleTypeInformation<T>
        }

        interface elki.clustering.dbscan.predicates.NeighborPredicate.Instance<T> [[NeighborPredicate.Instance.html]] {
            {abstract} +getNeighbors(DBIDRef): T
            {abstract} +getIDs(): DBIDs
            {abstract} +iterDBIDs(T): DBIDIter
        }

        class FourCNeighborPredicate [[FourCNeighborPredicate.html]] {
            {static} -LOG: Logging
            -settings: Settings
            -mvSize: MeanVariance
            -mvSize2: MeanVariance
            -mvCorDim: MeanVariance
            -pca: PCARunner
            -filter: EigenPairFilter
            +FourCNeighborPredicate(Settings)
            +instantiate(Database): Instance
            #computeLocalModel(DBIDRef, DoubleDBIDList, Relation<? extends NumberVector>): PreDeConModel
            ~getLogger(): Logging
            +getInputTypeRestriction(): TypeInformation
            +getOutputType(): SimpleTypeInformation<PreDeConModel>
        }

        class elki.clustering.dbscan.predicates.FourCNeighborPredicate.Instance [[FourCNeighborPredicate.Instance.html]] {
            +Instance(DBIDs, DataStore<PreDeConModel>)
            +getNeighbors(DBIDRef): PreDeConModel
            +iterDBIDs(PreDeConModel): DBIDIter
        }

        class elki.clustering.dbscan.predicates.FourCNeighborPredicate.Par [[FourCNeighborPredicate.Par.html]] {
            #settings: Settings
            +configure(Parameterization): void
            +make(): FourCNeighborPredicate
        }

        abstract class AbstractRangeQueryNeighborPredicate<O, M, N> [[AbstractRangeQueryNeighborPredicate.html]] {
            #epsilon: double
            #distance: Distance<? super O>
            +AbstractRangeQueryNeighborPredicate(double, Distance<? super O>)
            +getInputTypeRestriction(): TypeInformation
            +preprocess(Class<? super M>, Relation<? extends O>, RangeSearcher<DBIDRef>): DataStore<M>
            {abstract} #computeLocalModel(DBIDRef, DoubleDBIDList, Relation<? extends O>): M
            {abstract} ~getLogger(): Logging
        }

        abstract class elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance<N, M> [[AbstractRangeQueryNeighborPredicate.Instance.html]] {
            #ids: DBIDs
            #storage: DataStore<M>
            +Instance(DBIDs, DataStore<M>)
            +getIDs(): DBIDs
        }

        abstract class elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Par<O> {
            ~epsilon: double
            ~distfun: Distance<O>
            +configure(Parameterization): void
            #configDistance(Parameterization): void
            #configEpsilon(Parameterization): void
        }

        CorePredicate <|.. MinPtsCorePredicate
        elki.clustering.dbscan.predicates.CorePredicate.Instance <|.. elki.clustering.dbscan.predicates.MinPtsCorePredicate.Instance
        MinPtsCorePredicate +- - elki.clustering.dbscan.predicates.MinPtsCorePredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.MinPtsCorePredicate.Par
        MinPtsCorePredicate +- - elki.clustering.dbscan.predicates.MinPtsCorePredicate.Par
        AbstractRangeQueryNeighborPredicate <|- - PreDeConNeighborPredicate
        PreDeConNeighborPredicate +- - elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.PreDeConModel
        elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance <|- - elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Instance
        PreDeConNeighborPredicate +- - elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Par
        PreDeConNeighborPredicate +- - elki.clustering.dbscan.predicates.PreDeConNeighborPredicate.Par
        NeighborPredicate <|.. SimilarityNeighborPredicate
        elki.clustering.dbscan.predicates.NeighborPredicate.Instance <|.. elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Instance
        SimilarityNeighborPredicate +- - elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Par
        SimilarityNeighborPredicate +- - elki.clustering.dbscan.predicates.SimilarityNeighborPredicate.Par
        CorePredicate +- - elki.clustering.dbscan.predicates.CorePredicate.Instance
        CorePredicate <|.. PreDeConCorePredicate
        elki.clustering.dbscan.predicates.CorePredicate.Instance <|.. elki.clustering.dbscan.predicates.PreDeConCorePredicate.Instance
        PreDeConCorePredicate +- - elki.clustering.dbscan.predicates.PreDeConCorePredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.PreDeConCorePredicate.Par
        PreDeConCorePredicate +- - elki.clustering.dbscan.predicates.PreDeConCorePredicate.Par
        CorePredicate <|.. FourCCorePredicate
        elki.clustering.dbscan.predicates.CorePredicate.Instance <|.. elki.clustering.dbscan.predicates.FourCCorePredicate.Instance
        FourCCorePredicate +- - elki.clustering.dbscan.predicates.FourCCorePredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.FourCCorePredicate.Par
        FourCCorePredicate +- - elki.clustering.dbscan.predicates.FourCCorePredicate.Par
        NeighborPredicate <|.. COPACNeighborPredicate
        elki.database.ids.SetDBIDs <|.. elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel
        COPACNeighborPredicate +- - elki.clustering.dbscan.predicates.COPACNeighborPredicate.COPACModel
        elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance <|- - elki.clustering.dbscan.predicates.COPACNeighborPredicate.Instance
        COPACNeighborPredicate +- - elki.clustering.dbscan.predicates.COPACNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.COPACNeighborPredicate.Par
        COPACNeighborPredicate +- - elki.clustering.dbscan.predicates.COPACNeighborPredicate.Par
        NeighborPredicate <|.. EpsilonNeighborPredicate
        elki.clustering.dbscan.predicates.NeighborPredicate.Instance <|.. elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Instance
        EpsilonNeighborPredicate +- - elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Par
        EpsilonNeighborPredicate +- - elki.clustering.dbscan.predicates.EpsilonNeighborPredicate.Par
        NeighborPredicate <|.. ERiCNeighborPredicate
        elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance <|- - elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Instance
        ERiCNeighborPredicate +- - elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Par
        ERiCNeighborPredicate +- - elki.clustering.dbscan.predicates.ERiCNeighborPredicate.Par
        NeighborPredicate +- - elki.clustering.dbscan.predicates.NeighborPredicate.Instance
        AbstractRangeQueryNeighborPredicate <|- - FourCNeighborPredicate
        elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance <|- - elki.clustering.dbscan.predicates.FourCNeighborPredicate.Instance
        FourCNeighborPredicate +- - elki.clustering.dbscan.predicates.FourCNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.FourCNeighborPredicate.Par
        FourCNeighborPredicate +- - elki.clustering.dbscan.predicates.FourCNeighborPredicate.Par
        NeighborPredicate <|.. AbstractRangeQueryNeighborPredicate
        elki.clustering.dbscan.predicates.NeighborPredicate.Instance <|.. elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance
        AbstractRangeQueryNeighborPredicate +- - elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Instance
        elki.utilities.optionhandling.Parameterizer <|.. elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Par
        AbstractRangeQueryNeighborPredicate +- - elki.clustering.dbscan.predicates.AbstractRangeQueryNeighborPredicate.Par
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    namespace elki.database.ids {
        interface SetDBIDs [[../../../database/ids/SetDBIDs.html]]
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>