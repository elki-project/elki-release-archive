@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.datasource.filter.cleaning {

        class DropNaNFilter [[DropNaNFilter.html]] {
            {static} -LOG: Logging
            -densecols: long[]
            +getMeta(): BundleMeta
            +data(int): Object
            +nextEvent(): Event
            -updateMeta(BundleMeta): void
            +filter(MultipleObjectsBundle): MultipleObjectsBundle
        }

        class elki.datasource.filter.cleaning.DropNaNFilter.Par [[DropNaNFilter.Par.html]] {
            +make(): DropNaNFilter
        }

        class VectorDimensionalityFilter<V extends NumberVector> [[VectorDimensionalityFilter.html]] {
            {static} -LOG: Logging
            ~meta: BundleMeta
            ~column: int
            ~dim: int
            +VectorDimensionalityFilter(int)
            +getMeta(): BundleMeta
            +data(int): Object
            +nextEvent(): Event
            -updateMeta(): void
        }

        class elki.datasource.filter.cleaning.VectorDimensionalityFilter.Par<V extends NumberVector> {
            {static} +DIM_P: OptionID
            ~dim: int
            +configure(Parameterization): void
            +make(): VectorDimensionalityFilter<V extends NumberVector>
        }

        class ReplaceNaNWithRandomFilter [[ReplaceNaNWithRandomFilter.html]] {
            {static} -LOG: Logging
            -densecols: Factory<?>[]
            -dist: Distribution
            -rows: ArrayList<Object>
            -rnd: Random
            +ReplaceNaNWithRandomFilter(Distribution, RandomFactory)
            +getMeta(): BundleMeta
            +data(int): Object
            +nextEvent(): Event
            -updateMeta(BundleMeta): void
            +filter(MultipleObjectsBundle): MultipleObjectsBundle
        }

        class elki.datasource.filter.cleaning.ReplaceNaNWithRandomFilter.Par [[ReplaceNaNWithRandomFilter.Par.html]] {
            {static} +REPLACEMENT_DISTRIBUTION: OptionID
            {static} +RANDOM_ID: OptionID
            -dist: Distribution
            -rnd: RandomFactory
            +configure(Parameterization): void
            +make(): ReplaceNaNWithRandomFilter
        }

        class NoMissingValuesFilter [[NoMissingValuesFilter.html]] {
            {static} -LOG: Logging
            -cols: int
            +getMeta(): BundleMeta
            +data(int): Object
            +nextEvent(): Event
            +filter(MultipleObjectsBundle): MultipleObjectsBundle
        }

        class elki.datasource.filter.cleaning.NoMissingValuesFilter.Par [[NoMissingValuesFilter.Par.html]] {
            +make(): NoMissingValuesFilter
        }

        elki.datasource.filter.AbstractStreamFilter <|-- DropNaNFilter
        elki.utilities.optionhandling.Parameterizer <|.. elki.datasource.filter.cleaning.DropNaNFilter.Par
        DropNaNFilter +-- elki.datasource.filter.cleaning.DropNaNFilter.Par
        elki.datasource.filter.AbstractStreamFilter <|-- VectorDimensionalityFilter
        elki.utilities.optionhandling.Parameterizer <|.. elki.datasource.filter.cleaning.VectorDimensionalityFilter.Par
        VectorDimensionalityFilter +-- elki.datasource.filter.cleaning.VectorDimensionalityFilter.Par
        elki.datasource.filter.AbstractStreamFilter <|-- ReplaceNaNWithRandomFilter
        elki.utilities.optionhandling.Parameterizer <|.. elki.datasource.filter.cleaning.ReplaceNaNWithRandomFilter.Par
        ReplaceNaNWithRandomFilter +-- elki.datasource.filter.cleaning.ReplaceNaNWithRandomFilter.Par
        elki.datasource.filter.AbstractStreamFilter <|-- NoMissingValuesFilter
        elki.utilities.optionhandling.Parameterizer <|.. elki.datasource.filter.cleaning.NoMissingValuesFilter.Par
        NoMissingValuesFilter +-- elki.datasource.filter.cleaning.NoMissingValuesFilter.Par
    }

    namespace elki.datasource.filter {
        abstract class AbstractStreamFilter [[../AbstractStreamFilter.html]] {
            #source: BundleStreamSource
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../../../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml
