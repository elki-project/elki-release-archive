<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="526px" preserveAspectRatio="none" style="width:735px;height:526px;background:#FFFFFF;" version="1.1" viewBox="0 0 735 526" width="735px" zoomAndPan="magnify"><defs/><g><!--MD5=[c796253f3b2d752da3bc6c313b64a979]
class elki.database.query.EmpiricalQueryOptimizer--><a href="EmpiricalQueryOptimizer.html" target="_top" title="EmpiricalQueryOptimizer.html" xlink:actuate="onRequest" xlink:href="EmpiricalQueryOptimizer.html" xlink:show="new" xlink:title="EmpiricalQueryOptimizer.html" xlink:type="simple"><g id="elem_elki.database.query.EmpiricalQueryOptimizer"><rect codeLine="6" fill="#F1F1F1" height="396.1719" id="elki.database.query.EmpiricalQueryOptimizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="721" x="7" y="105"/><ellipse cx="279.25" cy="123.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M282.2188,129.6094 Q281.6406,129.9063 281,130.0469 Q280.3594,130.2031 279.6563,130.2031 Q277.1563,130.2031 275.8281,128.5625 Q274.5156,126.9063 274.5156,123.7813 Q274.5156,120.6563 275.8281,119 Q277.1563,117.3438 279.6563,117.3438 Q280.3594,117.3438 281,117.5 Q281.6563,117.6563 282.2188,117.9531 L282.2188,120.6719 Q281.5938,120.0938 281,119.8281 Q280.4063,119.5469 279.7813,119.5469 Q278.4375,119.5469 277.75,120.625 Q277.0625,121.6875 277.0625,123.7813 Q277.0625,125.875 277.75,126.9531 Q278.4375,128.0156 279.7813,128.0156 Q280.4063,128.0156 281,127.75 Q281.5938,127.4688 282.2188,126.8906 L282.2188,129.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="299.75" y="122.9951">EmpiricalQueryOptimizer</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="94" x="336.75" y="135.5791">elki.database.query</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="727" y1="142.9375" y2="142.9375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="153.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="27" y="159.9326">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="169.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="80" x="27" y="176.2295">MEGA: long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="186.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="27" y="192.5264">matrixIndex: Constructor&lt;? extends Index&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="202.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="346" x="27" y="208.8232">knnIndex: Constructor&lt;? extends KNNIndex&lt;?&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="218.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="27" y="225.1201">coverIndex: Constructor&lt;? extends Index&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="235.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="27" y="241.417">vpIndex: Constructor&lt;? extends Index&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="251.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="27" y="257.7139">kdIndex: Constructor&lt;? extends Index&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="727" y1="265.0156" y2="265.0156"/><ellipse cx="18" cy="278.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="627" x="27" y="282.0107">getDistanceQuery(Relation&lt;? extends O&gt;, Distance&lt;? super O&gt;, int): DistanceQuery&lt;O&gt;</text><ellipse cx="18" cy="294.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="592" x="27" y="298.3076">kNNByObject(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, int, int): KNNSearcher&lt;O&gt;</text><ellipse cx="18" cy="311.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="629" x="27" y="314.6045">kNNByDBID(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, int, int): KNNSearcher&lt;DBIDRef&gt;</text><ellipse cx="18" cy="327.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="651" x="27" y="330.9014">rangeByObject(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, double, int): RangeSearcher&lt;O&gt;</text><ellipse cx="18" cy="343.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="27" y="347.1982">rangeByDBID(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, double, int): RangeSearcher&lt;DBIDRef&gt;</text><ellipse cx="18" cy="360.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="658" x="27" y="363.4951">priorityByObject(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, double, int): PrioritySearcher&lt;O&gt;</text><ellipse cx="18" cy="376.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="695" x="27" y="379.792">priorityByDBID(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, double, int): PrioritySearcher&lt;DBIDRef&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="389.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="634" x="27" y="396.0889">makeMatrixIndex(Relation&lt;? extends O&gt;, Distance&lt;? super O&gt;): DistancePriorityIndex&lt;O&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="406.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="654" x="27" y="412.3857">makeCoverTree(Relation&lt;? extends O&gt;, Distance&lt;? super O&gt;, int): DistancePriorityIndex&lt;O&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="422.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="632" x="27" y="428.6826">makeVPTree(Relation&lt;? extends O&gt;, Distance&lt;? super O&gt;, int): DistancePriorityIndex&lt;O&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="438.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="634" x="27" y="444.9795">makeKDTree(Relation&lt;? extends O&gt;, Distance&lt;? super O&gt;, int): DistancePriorityIndex&lt;O&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="454.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="635" x="27" y="461.2764">makeKnnPreprocessor(Relation&lt;? extends O&gt;, DistanceQuery&lt;O&gt;, int, int): KNNIndex&lt;O&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="471.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="27" y="477.5732">getFreeMemory(): long</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="487.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="188" x="27" y="493.8701">formatMemory(long): String</text></g></a><!--MD5=[d591f7f34875115f143ac989af0be383]
class elki.database.query.QueryOptimizer--><a href="QueryOptimizer.html" target="_top" title="QueryOptimizer.html" xlink:actuate="onRequest" xlink:href="QueryOptimizer.html" xlink:show="new" xlink:title="QueryOptimizer.html" xlink:type="simple"><g id="elem_elki.database.query.QueryOptimizer"><rect codeLine="30" fill="#F1F1F1" height="37.9375" id="elki.database.query.QueryOptimizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="296.5" y="7"/><ellipse cx="311.5" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M307.4219,21.7344 L307.4219,19.5781 L314.8125,19.5781 L314.8125,21.7344 L312.3438,21.7344 L312.3438,29.8125 L314.8125,29.8125 L314.8125,31.9688 L307.4219,31.9688 L307.4219,29.8125 L309.8906,29.8125 L309.8906,21.7344 L307.4219,21.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="325.5" y="24.9951">QueryOptimizer</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacing" textLength="97" x="332" y="37.5791">elki.database.query</text></g></a><!--MD5=[212338381b216bf2e19b5134c7416927]
reverse link elki.database.query.QueryOptimizer to elki.database.query.EmpiricalQueryOptimizer--><g id="link_elki.database.query.QueryOptimizer_elki.database.query.EmpiricalQueryOptimizer"><path codeLine="32" d="M367.5,65.05 C367.5,76.57 367.5,90.1 367.5,104.75 " fill="none" id="elki.database.query.QueryOptimizer-backto-elki.database.query.EmpiricalQueryOptimizer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="360.5,65.04,367.5,45.04,374.5,65.04,360.5,65.04" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="267.5" y="507.1719"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="267.5" y="516.4541">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[8939d6cdf2de5783ca516a398bf20fca]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>EmpiricalQueryOptimizer\n<size:10>elki.database.query" as elki.database.query.EmpiricalQueryOptimizer [[EmpiricalQueryOptimizer.html]] {
        {static} -LOG: Logging
        {static} -MEGA: long
        -matrixIndex: Constructor<? extends Index>
        -knnIndex: Constructor<? extends KNNIndex<?>>
        -coverIndex: Constructor<? extends Index>
        -vpIndex: Constructor<? extends Index>
        -kdIndex: Constructor<? extends Index>
        +getDistanceQuery(Relation<? extends O>, Distance<? super O>, int): DistanceQuery<O>
        +kNNByObject(Relation<? extends O>, DistanceQuery<O>, int, int): KNNSearcher<O>
        +kNNByDBID(Relation<? extends O>, DistanceQuery<O>, int, int): KNNSearcher<DBIDRef>
        +rangeByObject(Relation<? extends O>, DistanceQuery<O>, double, int): RangeSearcher<O>
        +rangeByDBID(Relation<? extends O>, DistanceQuery<O>, double, int): RangeSearcher<DBIDRef>
        +priorityByObject(Relation<? extends O>, DistanceQuery<O>, double, int): PrioritySearcher<O>
        +priorityByDBID(Relation<? extends O>, DistanceQuery<O>, double, int): PrioritySearcher<DBIDRef>
        -makeMatrixIndex(Relation<? extends O>, Distance<? super O>): DistancePriorityIndex<O>
        -makeCoverTree(Relation<? extends O>, Distance<? super O>, int): DistancePriorityIndex<O>
        -makeVPTree(Relation<? extends O>, Distance<? super O>, int): DistancePriorityIndex<O>
        -makeKDTree(Relation<? extends O>, Distance<? super O>, int): DistancePriorityIndex<O>
        -makeKnnPreprocessor(Relation<? extends O>, DistanceQuery<O>, int, int): KNNIndex<O>
        {static} -getFreeMemory(): long
        {static} -formatMemory(long): String
    }

    interface "<size:14>QueryOptimizer\n<size:10>elki.database.query" as elki.database.query.QueryOptimizer [[QueryOptimizer.html]]

    elki.database.query.QueryOptimizer <|.. elki.database.query.EmpiricalQueryOptimizer

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>