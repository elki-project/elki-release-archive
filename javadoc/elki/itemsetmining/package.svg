<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1544px" preserveAspectRatio="none" style="width:4194px;height:1544px;background:#FFFFFF;" version="1.1" viewBox="0 0 4194 1544" width="4194px" zoomAndPan="magnify"><defs/><g><!--MD5=[b82336a4e091635c46068395ffb837d5]
cluster elki.itemsetmining--><g id="cluster_elki.itemsetmining"><path d="M8.5,171 L152.5,171 A3.75,3.75 0 0 1 155,173.5 L162,193.2969 L4184.5,193.2969 A2.5,2.5 0 0 1 4187,195.7969 L4187,1516.5 A2.5,2.5 0 0 1 4184.5,1519 L8.5,1519 A2.5,2.5 0 0 1 6,1516.5 L6,173.5 A2.5,2.5 0 0 1 8.5,171 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="162" y1="193.2969" y2="193.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="143" x="10" y="185.9951">elki.itemsetmining</text></g><!--MD5=[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id="cluster_java.lang"><path d="M920.5,14.5 L990.5,14.5 A3.75,3.75 0 0 1 993,17 L1000,36.7969 L1101.5,36.7969 A2.5,2.5 0 0 1 1104,39.2969 L1104,127 A2.5,2.5 0 0 1 1101.5,129.5 L920.5,129.5 A2.5,2.5 0 0 1 918,127 L918,17 A2.5,2.5 0 0 1 920.5,14.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="918" x2="1000" y1="36.7969" y2="36.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="922" y="29.4951">java.lang</text></g><!--MD5=[160e40e4de9325fe07c8e87e0e7695ed]
cluster elki--><g id="cluster_elki"><path d="M2849.5,6 L2877.5,6 A3.75,3.75 0 0 1 2880,8.5 L2887,28.2969 L3218.5,28.2969 A2.5,2.5 0 0 1 3221,30.7969 L3221,135.5 A2.5,2.5 0 0 1 3218.5,138 L2849.5,138 A2.5,2.5 0 0 1 2847,135.5 L2847,8.5 A2.5,2.5 0 0 1 2849.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2847" x2="2887" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="27" x="2851" y="20.9951">elki</text></g><!--MD5=[2ef7229513a23826e946f817c3c8e4f5]
class elki.itemsetmining.Itemset--><a href="Itemset.html" target="_top" title="Itemset.html" xlink:actuate="onRequest" xlink:href="Itemset.html" xlink:show="new" xlink:title="Itemset.html" xlink:type="simple"><g id="elem_elki.itemsetmining.Itemset"><rect codeLine="4" fill="#F1F1F1" height="276.1563" id="elki.itemsetmining.Itemset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="613" x="704.5" y="206"/><ellipse cx="980.25" cy="222" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M980.3594,217.3438 L979.2031,222.4219 L981.5313,222.4219 L980.3594,217.3438 Z M978.875,215.1094 L981.8594,215.1094 L985.2188,227.5 L982.7656,227.5 L982,224.4375 L978.7188,224.4375 L977.9688,227.5 L975.5313,227.5 L978.875,215.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="53" x="1000.75" y="226.8467">Itemset</text><line style="stroke:#181818;stroke-width:0.5;" x1="705.5" x2="1316.5" y1="238" y2="238"/><polygon fill="none" points="715.5,247.6484,711.5,253.6484,719.5,253.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="724.5" y="254.9951">support: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="705.5" x2="1316.5" y1="262.2969" y2="262.2969"/><ellipse cx="715.5" cy="275.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="724.5" y="279.292">increaseSupport(): int</text><ellipse cx="715.5" cy="292.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="724.5" y="295.5889">getSupport(): int</text><ellipse cx="715.5" cy="308.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="724.5" y="311.8857">containedIn(SparseNumberVector): boolean</text><ellipse cx="715.5" cy="324.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="724.5" y="328.1826">length(): int</text><ellipse cx="715.5" cy="341.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="213" x="724.5" y="344.4795">toBitset(Itemset, long[]): long[]</text><ellipse cx="715.5" cy="357.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="724.5" y="360.7764">iter(): int</text><ellipse cx="715.5" cy="373.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="724.5" y="377.0732">iterAdvance(int): int</text><ellipse cx="715.5" cy="390.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="724.5" y="393.3701">iterValid(int): boolean</text><ellipse cx="715.5" cy="406.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="107" x="724.5" y="409.667">iterDim(int): int</text><ellipse cx="715.5" cy="422.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="724.5" y="425.9639">compareTo(Itemset): int</text><polygon fill="#FFFF44" points="715.5,433.9141,719.5,437.9141,715.5,441.9141,711.5,437.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="314" x="724.5" y="442.2607">compareLexicographical(Itemset, Itemset): int</text><ellipse cx="715.5" cy="455.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="549" x="724.5" y="458.5576">appendTo(StringBuilder, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text><ellipse cx="715.5" cy="471.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="587" x="724.5" y="474.8545">appendItemsTo(StringBuilder, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text></g></a><!--MD5=[491052f8b6151a0668c0acecb9033319]
class elki.itemsetmining.FPGrowth--><a href="FPGrowth.html" target="_top" title="FPGrowth.html" xlink:actuate="onRequest" xlink:href="FPGrowth.html" xlink:show="new" xlink:title="FPGrowth.html" xlink:type="simple"><g id="elem_elki.itemsetmining.FPGrowth"><rect codeLine="21" fill="#F1F1F1" height="178.375" id="elki.itemsetmining.FPGrowth" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="379" x="2844.5" y="600"/><ellipse cx="2996.25" cy="616" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2999.2188,621.6406 Q2998.6406,621.9375 2998,622.0781 Q2997.3594,622.2344 2996.6563,622.2344 Q2994.1563,622.2344 2992.8281,620.5938 Q2991.5156,618.9375 2991.5156,615.8125 Q2991.5156,612.6875 2992.8281,611.0313 Q2994.1563,609.375 2996.6563,609.375 Q2997.3594,609.375 2998,609.5313 Q2998.6563,609.6875 2999.2188,609.9844 L2999.2188,612.7031 Q2998.5938,612.125 2998,611.8594 Q2997.4063,611.5781 2996.7813,611.5781 Q2995.4375,611.5781 2994.75,612.6563 Q2994.0625,613.7188 2994.0625,615.8125 Q2994.0625,617.9063 2994.75,618.9844 Q2995.4375,620.0469 2996.7813,620.0469 Q2997.4063,620.0469 2998,619.7813 Q2998.5938,619.5 2999.2188,618.9219 L2999.2188,621.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="3016.75" y="620.8467">FPGrowth</text><line style="stroke:#181818;stroke-width:0.5;" x1="2845.5" x2="3222.5" y1="632" y2="632"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2852.5" y="642.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2864.5" y="648.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2852.5" y="658.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="85" x="2864.5" y="665.292">STAT: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="2845.5" x2="3222.5" y1="672.5938" y2="672.5938"/><ellipse cx="2855.5" cy="686.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="2864.5" y="689.5889">FPGrowth(double, int, int)</text><ellipse cx="2855.5" cy="702.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2864.5" y="705.8857">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2855.5" cy="718.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="2864.5" y="722.1826">run(Relation&lt;BitVector&gt;): FrequentItemsetsResult</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2852.5" y="732.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="2864.5" y="738.4795">countItemSupport(Relation&lt;BitVector&gt;, int): int[]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2852.5" y="748.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="2864.5" y="754.7764">buildFPTree(Relation&lt;BitVector&gt;, int[], int): FPTree</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2852.5" y="764.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="2864.5" y="771.0732">buildIndex(int[], int[], int): int[]</text></g></a><!--MD5=[0304dac2e0616bd4ffadeb9ce9e374c5]
class elki.itemsetmining.FPGrowth.FPTree--><a href="FPGrowth.FPTree.html" target="_top" title="FPGrowth.FPTree.html" xlink:actuate="onRequest" xlink:href="FPGrowth.FPTree.html" xlink:show="new" xlink:title="FPGrowth.FPTree.html" xlink:type="simple"><g id="elem_elki.itemsetmining.FPGrowth.FPTree"><rect codeLine="32" fill="#F1F1F1" height="178.375" id="elki.itemsetmining.FPGrowth.FPTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="475" x="2592.5" y="896"/><ellipse cx="2765.75" cy="912" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2768.7188,917.6406 Q2768.1406,917.9375 2767.5,918.0781 Q2766.8594,918.2344 2766.1563,918.2344 Q2763.6563,918.2344 2762.3281,916.5938 Q2761.0156,914.9375 2761.0156,911.8125 Q2761.0156,908.6875 2762.3281,907.0313 Q2763.6563,905.375 2766.1563,905.375 Q2766.8594,905.375 2767.5,905.5313 Q2768.1563,905.6875 2768.7188,905.9844 L2768.7188,908.7031 Q2768.0938,908.125 2767.5,907.8594 Q2766.9063,907.5781 2766.2813,907.5781 Q2764.9375,907.5781 2764.25,908.6563 Q2763.5625,909.7188 2763.5625,911.8125 Q2763.5625,913.9063 2764.25,914.9844 Q2764.9375,916.0469 2766.2813,916.0469 Q2766.9063,916.0469 2767.5,915.7813 Q2768.0938,915.5 2768.7188,914.9219 L2768.7188,917.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="2786.25" y="916.8467">FPGrowth.FPTree</text><line style="stroke:#181818;stroke-width:0.5;" x1="2593.5" x2="3066.5" y1="928" y2="928"/><polygon fill="none" points="2603.5,937.6484,2599.5,943.6484,2607.5,943.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="2612.5" y="944.9951">nodes: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2593.5" x2="3066.5" y1="952.2969" y2="952.2969"/><ellipse cx="2603.5" cy="965.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="2612.5" y="969.292">FPTree(int)</text><ellipse cx="2603.5" cy="982.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2612.5" y="985.5889">insert(int[], int, int, int): void</text><ellipse cx="2603.5" cy="998.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="2612.5" y="1001.8857">newNode(FPNode, int): FPNode</text><ellipse cx="2603.5" cy="1014.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="294" x="2612.5" y="1018.1826">extract(int, int, int, boolean, Collector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2600.5" y="1028.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="2612.5" y="1034.4795">extract(int, int, int, int, int[], int, int[], int[], boolean, Collector): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2600.5" y="1044.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="2612.5" y="1050.7764">extractLinear(int, int, int, int, int[], int, int[], Collector): void</text><ellipse cx="2603.5" cy="1063.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="2612.5" y="1067.0732">logStatistics(): void</text></g></a><!--MD5=[4aeb3b629643b88e84a4985e7fd6a2c2]
class elki.itemsetmining.FPGrowth.FPTree.Collector--><a href="FPGrowth.FPTree.Collector.html" target="_top" title="FPGrowth.FPTree.Collector.html" xlink:actuate="onRequest" xlink:href="FPGrowth.FPTree.Collector.html" xlink:show="new" xlink:title="FPGrowth.FPTree.Collector.html" xlink:type="simple"><g id="elem_elki.itemsetmining.FPGrowth.FPTree.Collector"><rect codeLine="43" fill="#F1F1F1" height="64.2969" id="elki.itemsetmining.FPGrowth.FPTree.Collector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="228" x="2615" y="1232.5"/><ellipse cx="2634.95" cy="1248.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2630.8719,1244.2656 L2630.8719,1242.1094 L2638.2625,1242.1094 L2638.2625,1244.2656 L2635.7938,1244.2656 L2635.7938,1252.3438 L2638.2625,1252.3438 L2638.2625,1254.5 L2630.8719,1254.5 L2630.8719,1252.3438 L2633.3406,1252.3438 L2633.3406,1244.2656 L2630.8719,1244.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="185" x="2650.05" y="1253.3467">FPGrowth.FPTree.Collector</text><line style="stroke:#181818;stroke-width:0.5;" x1="2616" x2="2842" y1="1264.5" y2="1264.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="2616" x2="2842" y1="1272.5" y2="1272.5"/><ellipse cx="2626" cy="1286.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="202" x="2635" y="1289.4951">collect(int, int[], int, int): void</text></g></a><!--MD5=[b6f211782a51fea13f04a8856e1e16f6]
class elki.itemsetmining.FPGrowth.FPNode--><a href="FPGrowth.FPNode.html" target="_top" title="FPGrowth.FPNode.html" xlink:actuate="onRequest" xlink:href="FPGrowth.FPNode.html" xlink:show="new" xlink:title="FPGrowth.FPNode.html" xlink:type="simple"><g id="elem_elki.itemsetmining.FPGrowth.FPNode"><rect codeLine="47" fill="#F1F1F1" height="227.2656" id="elki.itemsetmining.FPGrowth.FPNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="394" x="2878" y="1151"/><ellipse cx="3008.25" cy="1167" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3011.2188,1172.6406 Q3010.6406,1172.9375 3010,1173.0781 Q3009.3594,1173.2344 3008.6563,1173.2344 Q3006.1563,1173.2344 3004.8281,1171.5938 Q3003.5156,1169.9375 3003.5156,1166.8125 Q3003.5156,1163.6875 3004.8281,1162.0313 Q3006.1563,1160.375 3008.6563,1160.375 Q3009.3594,1160.375 3010,1160.5313 Q3010.6563,1160.6875 3011.2188,1160.9844 L3011.2188,1163.7031 Q3010.5938,1163.125 3010,1162.8594 Q3009.4063,1162.5781 3008.7813,1162.5781 Q3007.4375,1162.5781 3006.75,1163.6563 Q3006.0625,1164.7188 3006.0625,1166.8125 Q3006.0625,1168.9063 3006.75,1169.9844 Q3007.4375,1171.0469 3008.7813,1171.0469 Q3009.4063,1171.0469 3010,1170.7813 Q3010.5938,1170.5 3011.2188,1169.9219 L3011.2188,1172.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="3028.75" y="1171.8467">FPGrowth.FPNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="2879" x2="3271" y1="1183" y2="1183"/><polygon fill="none" points="2889,1192.6484,2885,1198.6484,2893,1198.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="2898" y="1199.9951">key: int</text><polygon fill="none" points="2889,1208.9453,2885,1214.9453,2893,1214.9453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2898" y="1216.292">count: int</text><polygon fill="none" points="2889,1225.2422,2885,1231.2422,2893,1231.2422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="2898" y="1232.5889">numchildren: int</text><polygon fill="none" points="2889,1241.5391,2885,1247.5391,2893,1247.5391" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="2898" y="1248.8857">INITIAL_SIZE: int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2886" y="1258.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="104" x="2898" y="1265.1826">SPACES: char[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="2879" x2="3271" y1="1272.4844" y2="1272.4844"/><ellipse cx="2889" cy="1286.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="2898" y="1289.4795">FPNode(FPNode, int)</text><ellipse cx="2889" cy="1302.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="2898" y="1305.7764">insert(FPTree, int[], int, int, int): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2886" y="1315.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="2898" y="1322.0732">ensureSize(): void</text><ellipse cx="2889" cy="1335.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="2898" y="1338.3701">appendTo(StringBuilder, Translator): StringBuilder</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2886" y="1348.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="368" x="2898" y="1354.667">appendTo(StringBuilder, Translator, int): StringBuilder</text><ellipse cx="2889" cy="1367.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="2898" y="1370.9639">reduceMemory(): void</text></g></a><!--MD5=[21b65dbe15c6332482b82e50f1a829df]
class elki.itemsetmining.FPGrowth.FPNode.Translator--><a href="FPGrowth.FPNode.Translator.html" target="_top" title="FPGrowth.FPNode.Translator.html" xlink:actuate="onRequest" xlink:href="FPGrowth.FPNode.Translator.html" xlink:show="new" xlink:title="FPGrowth.FPNode.Translator.html" xlink:type="simple"><g id="elem_elki.itemsetmining.FPGrowth.FPNode.Translator"><rect codeLine="61" fill="#F1F1F1" height="64.2969" id="elki.itemsetmining.FPGrowth.FPNode.Translator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="325" x="2912.5" y="1439"/><ellipse cx="2971.25" cy="1455" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2967.1719,1450.7656 L2967.1719,1448.6094 L2974.5625,1448.6094 L2974.5625,1450.7656 L2972.0938,1450.7656 L2972.0938,1458.8438 L2974.5625,1458.8438 L2974.5625,1461 L2967.1719,1461 L2967.1719,1458.8438 L2969.6406,1458.8438 L2969.6406,1450.7656 L2967.1719,1450.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="199" x="2991.75" y="1459.8467">FPGrowth.FPNode.Translator</text><line style="stroke:#181818;stroke-width:0.5;" x1="2913.5" x2="3236.5" y1="1471" y2="1471"/><line style="stroke:#181818;stroke-width:0.5;" x1="2913.5" x2="3236.5" y1="1479" y2="1479"/><ellipse cx="2923.5" cy="1492.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="299" x="2932.5" y="1495.9951">appendTo(StringBuilder, int): StringBuilder</text></g></a><!--MD5=[7692e53c613784ea2079fc6c9a82d547]
class elki.itemsetmining.APRIORI--><a href="APRIORI.html" target="_top" title="APRIORI.html" xlink:actuate="onRequest" xlink:href="APRIORI.html" xlink:show="new" xlink:title="APRIORI.html" xlink:type="simple"><g id="elem_elki.itemsetmining.APRIORI"><rect codeLine="69" fill="#F1F1F1" height="292.4531" id="elki.itemsetmining.APRIORI" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="912" x="3259" y="543"/><ellipse cx="3683.25" cy="559" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3686.2188,564.6406 Q3685.6406,564.9375 3685,565.0781 Q3684.3594,565.2344 3683.6563,565.2344 Q3681.1563,565.2344 3679.8281,563.5938 Q3678.5156,561.9375 3678.5156,558.8125 Q3678.5156,555.6875 3679.8281,554.0313 Q3681.1563,552.375 3683.6563,552.375 Q3684.3594,552.375 3685,552.5313 Q3685.6563,552.6875 3686.2188,552.9844 L3686.2188,555.7031 Q3685.5938,555.125 3685,554.8594 Q3684.4063,554.5781 3683.7813,554.5781 Q3682.4375,554.5781 3681.75,555.6563 Q3681.0625,556.7188 3681.0625,558.8125 Q3681.0625,560.9063 3681.75,561.9844 Q3682.4375,563.0469 3683.7813,563.0469 Q3684.4063,563.0469 3685,562.7813 Q3685.5938,562.5 3686.2188,561.9219 L3686.2188,564.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="3703.75" y="563.8467">APRIORI</text><line style="stroke:#181818;stroke-width:0.5;" x1="3260" x2="4170" y1="575" y2="575"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="585.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="3279" y="591.9951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="601.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="3279" y="608.292">STAT: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="3260" x2="4170" y1="615.5938" y2="615.5938"/><ellipse cx="3270" cy="629.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="3279" y="632.5889">APRIORI(double, int, int)</text><ellipse cx="3270" cy="645.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="3279" y="648.8857">APRIORI(double)</text><ellipse cx="3270" cy="661.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="3279" y="665.1826">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="3270" cy="678.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="3279" y="681.4795">run(Relation&lt;BitVector&gt;): FrequentItemsetsResult</text><polygon fill="#FFFF44" points="3270,689.4297,3274,693.4297,3270,697.4297,3266,693.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="710" x="3279" y="697.7764">buildFrequentOneItemsets(Relation&lt;? extends SparseFeatureVector&lt;?&gt;&gt;, int, int): List&lt;OneItemset&gt;</text><polygon fill="#FFFF44" points="3270,705.7266,3274,709.7266,3270,713.7266,3266,709.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="885" x="3279" y="714.0732">buildFrequentTwoItemsets(List&lt;OneItemset&gt;, Relation&lt;BitVector&gt;, int, int, DBIDs, ArrayModifiableDBIDs): List&lt;SparseItemset&gt;</text><polygon fill="#FFFF44" points="3270,722.0234,3274,726.0234,3270,730.0234,3266,726.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="445" x="3279" y="730.3701">aprioriGenerate(List&lt;? extends Itemset&gt;, int, int): List&lt;Itemset&gt;</text><polygon fill="#FFFF44" points="3270,738.3203,3274,742.3203,3270,746.3203,3266,742.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="884" x="3279" y="746.667">frequentItemsets(List&lt;? extends Itemset&gt;, Relation&lt;BitVector&gt;, int, DBIDs, ArrayModifiableDBIDs, int): List&lt;? extends Itemset&gt;</text><polygon fill="#FFFF44" points="3270,754.6172,3274,758.6172,3270,762.6172,3266,758.6172" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="886" x="3279" y="762.9639">frequentItemsetsSparse(List&lt;SparseItemset&gt;, Relation&lt;BitVector&gt;, int, DBIDs, ArrayModifiableDBIDs, int): List&lt;SparseItemset&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="772.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="3279" y="779.2607">initializeSearchItemset(BitVector, int[], int[]): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="789.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="338" x="3279" y="795.5576">nextSearchItemset(BitVector, int[], int[]): boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="805.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="3279" y="811.8545">binarySearch(List&lt;SparseItemset&gt;, SparseItemset, int, int): int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3267" y="821.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="821" x="3279" y="828.1514">debugDumpCandidates(StringBuilder, List&lt;? extends Itemset&gt;, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text></g></a><!--MD5=[6f1cbed1a60f3691394b33368c389ed0]
class elki.itemsetmining.SparseItemset--><a href="SparseItemset.html" target="_top" title="SparseItemset.html" xlink:actuate="onRequest" xlink:href="SparseItemset.html" xlink:show="new" xlink:title="SparseItemset.html" xlink:type="simple"><g id="elem_elki.itemsetmining.SparseItemset"><rect codeLine="91" fill="#F1F1F1" height="227.2656" id="elki.itemsetmining.SparseItemset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="306" x="671" y="575.5"/><ellipse cx="769.75" cy="591.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M772.7188,597.1406 Q772.1406,597.4375 771.5,597.5781 Q770.8594,597.7344 770.1563,597.7344 Q767.6563,597.7344 766.3281,596.0938 Q765.0156,594.4375 765.0156,591.3125 Q765.0156,588.1875 766.3281,586.5313 Q767.6563,584.875 770.1563,584.875 Q770.8594,584.875 771.5,585.0313 Q772.1563,585.1875 772.7188,585.4844 L772.7188,588.2031 Q772.0938,587.625 771.5,587.3594 Q770.9063,587.0781 770.2813,587.0781 Q768.9375,587.0781 768.25,588.1563 Q767.5625,589.2188 767.5625,591.3125 Q767.5625,593.4063 768.25,594.4844 Q768.9375,595.5469 770.2813,595.5469 Q770.9063,595.5469 771.5,595.2813 Q772.0938,595 772.7188,594.4219 L772.7188,597.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="790.25" y="596.3467">SparseItemset</text><line style="stroke:#181818;stroke-width:0.5;" x1="672" x2="976" y1="607.5" y2="607.5"/><polygon fill="none" points="682,617.1484,678,623.1484,686,623.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="691" y="624.4951">indices: int[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="672" x2="976" y1="631.7969" y2="631.7969"/><ellipse cx="682" cy="645.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="691" y="648.792">SparseItemset(int[])</text><ellipse cx="682" cy="661.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="691" y="665.0889">SparseItemset(int[], int)</text><ellipse cx="682" cy="678.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="691" y="681.3857">SparseItemset(OneItemset, OneItemset)</text><ellipse cx="682" cy="694.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="691" y="697.6826">length(): int</text><ellipse cx="682" cy="710.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="691" y="713.9795">iter(): int</text><ellipse cx="682" cy="726.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="691" y="730.2764">iterValid(int): boolean</text><ellipse cx="682" cy="743.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="691" y="746.5732">iterAdvance(int): int</text><ellipse cx="682" cy="759.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="691" y="762.8701">iterDim(int): int</text><ellipse cx="682" cy="775.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="691" y="779.167">compareTo(Itemset): int</text><ellipse cx="682" cy="792.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="691" y="795.4639">prefixTest(SparseItemset): boolean</text></g></a><!--MD5=[8559677ee3cad4c2158a59dfa4a3bb38]
class elki.itemsetmining.AbstractFrequentItemsetAlgorithm--><a href="AbstractFrequentItemsetAlgorithm.html" target="_top" title="AbstractFrequentItemsetAlgorithm.html" xlink:actuate="onRequest" xlink:href="AbstractFrequentItemsetAlgorithm.html" xlink:show="new" xlink:title="AbstractFrequentItemsetAlgorithm.html" xlink:type="simple"><g id="elem_elki.itemsetmining.AbstractFrequentItemsetAlgorithm"><rect codeLine="105" fill="#F1F1F1" height="162.0781" id="elki.itemsetmining.AbstractFrequentItemsetAlgorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="371" x="2848.5" y="263"/><ellipse cx="2908.25" cy="279" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2908.3594,274.3438 L2907.2031,279.4219 L2909.5313,279.4219 L2908.3594,274.3438 Z M2906.875,272.1094 L2909.8594,272.1094 L2913.2188,284.5 L2910.7656,284.5 L2910,281.4375 L2906.7188,281.4375 L2905.9688,284.5 L2903.5313,284.5 L2906.875,272.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="243" x="2928.75" y="283.8467">AbstractFrequentItemsetAlgorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="2849.5" x2="3218.5" y1="295" y2="295"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2856.5" y="305.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="2868.5" y="311.9951">minsupp: double</text><polygon fill="none" points="2859.5,319.9453,2863.5,323.9453,2859.5,327.9453,2855.5,323.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2868.5" y="328.292">minlength: int</text><polygon fill="none" points="2859.5,336.2422,2863.5,340.2422,2859.5,344.2422,2855.5,340.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="2868.5" y="344.5889">maxlength: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="2849.5" x2="3218.5" y1="351.8906" y2="351.8906"/><ellipse cx="2859.5" cy="365.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="2868.5" y="368.8857">AbstractFrequentItemsetAlgorithm(double, int, int)</text><ellipse cx="2859.5" cy="381.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="2868.5" y="385.1826">AbstractFrequentItemsetAlgorithm(double)</text><ellipse cx="2859.5" cy="398.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2868.5" y="401.4795">autorun(Database): FrequentItemsetsResult</text><ellipse cx="2859.5" cy="414.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="2868.5" y="417.7764">getMinimumSupport(int): int</text></g></a><!--MD5=[b4867f5922ad3cb9181a40d44865821c]
class elki.itemsetmining.OneItemset--><a href="OneItemset.html" target="_top" title="OneItemset.html" xlink:actuate="onRequest" xlink:href="OneItemset.html" xlink:show="new" xlink:title="OneItemset.html" xlink:type="simple"><g id="elem_elki.itemsetmining.OneItemset"><rect codeLine="125" fill="#F1F1F1" height="227.2656" id="elki.itemsetmining.OneItemset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="613" x="1012.5" y="575.5"/><ellipse cx="1274.25" cy="591.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1277.2188,597.1406 Q1276.6406,597.4375 1276,597.5781 Q1275.3594,597.7344 1274.6563,597.7344 Q1272.1563,597.7344 1270.8281,596.0938 Q1269.5156,594.4375 1269.5156,591.3125 Q1269.5156,588.1875 1270.8281,586.5313 Q1272.1563,584.875 1274.6563,584.875 Q1275.3594,584.875 1276,585.0313 Q1276.6563,585.1875 1277.2188,585.4844 L1277.2188,588.2031 Q1276.5938,587.625 1276,587.3594 Q1275.4063,587.0781 1274.7813,587.0781 Q1273.4375,587.0781 1272.75,588.1563 Q1272.0625,589.2188 1272.0625,591.3125 Q1272.0625,593.4063 1272.75,594.4844 Q1273.4375,595.5469 1274.7813,595.5469 Q1275.4063,595.5469 1276,595.2813 Q1276.5938,595 1277.2188,594.4219 L1277.2188,597.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="1294.75" y="596.3467">OneItemset</text><line style="stroke:#181818;stroke-width:0.5;" x1="1013.5" x2="1624.5" y1="607.5" y2="607.5"/><polygon fill="none" points="1023.5,617.1484,1019.5,623.1484,1027.5,623.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1032.5" y="624.4951">item: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1013.5" x2="1624.5" y1="631.7969" y2="631.7969"/><ellipse cx="1023.5" cy="645.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1032.5" y="648.792">OneItemset(int)</text><ellipse cx="1023.5" cy="661.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1032.5" y="665.0889">OneItemset(int, int)</text><ellipse cx="1023.5" cy="678.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1032.5" y="681.3857">length(): int</text><ellipse cx="1023.5" cy="694.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="1032.5" y="697.6826">containedIn(SparseNumberVector): boolean</text><ellipse cx="1023.5" cy="710.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="1032.5" y="713.9795">iter(): int</text><ellipse cx="1023.5" cy="726.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1032.5" y="730.2764">iterValid(int): boolean</text><ellipse cx="1023.5" cy="743.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1032.5" y="746.5732">iterAdvance(int): int</text><ellipse cx="1023.5" cy="759.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1032.5" y="762.8701">iterDim(int): int</text><ellipse cx="1023.5" cy="775.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="1032.5" y="779.167">compareTo(Itemset): int</text><ellipse cx="1023.5" cy="792.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="587" x="1032.5" y="795.4639">appendItemsTo(StringBuilder, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text></g></a><!--MD5=[18788640d1408b08ec8bec61be6d69c0]
class elki.itemsetmining.SmallDenseItemset--><a href="SmallDenseItemset.html" target="_top" title="SmallDenseItemset.html" xlink:actuate="onRequest" xlink:href="SmallDenseItemset.html" xlink:show="new" xlink:title="SmallDenseItemset.html" xlink:type="simple"><g id="elem_elki.itemsetmining.SmallDenseItemset"><rect codeLine="139" fill="#F1F1F1" height="227.2656" id="elki.itemsetmining.SmallDenseItemset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="613" x="1660.5" y="575.5"/><ellipse cx="1895.75" cy="591.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1898.7188,597.1406 Q1898.1406,597.4375 1897.5,597.5781 Q1896.8594,597.7344 1896.1563,597.7344 Q1893.6563,597.7344 1892.3281,596.0938 Q1891.0156,594.4375 1891.0156,591.3125 Q1891.0156,588.1875 1892.3281,586.5313 Q1893.6563,584.875 1896.1563,584.875 Q1896.8594,584.875 1897.5,585.0313 Q1898.1563,585.1875 1898.7188,585.4844 L1898.7188,588.2031 Q1898.0938,587.625 1897.5,587.3594 Q1896.9063,587.0781 1896.2813,587.0781 Q1894.9375,587.0781 1894.25,588.1563 Q1893.5625,589.2188 1893.5625,591.3125 Q1893.5625,593.4063 1894.25,594.4844 Q1894.9375,595.5469 1896.2813,595.5469 Q1896.9063,595.5469 1897.5,595.2813 Q1898.0938,595 1898.7188,594.4219 L1898.7188,597.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1916.25" y="596.3467">SmallDenseItemset</text><line style="stroke:#181818;stroke-width:0.5;" x1="1661.5" x2="2272.5" y1="607.5" y2="607.5"/><polygon fill="none" points="1671.5,617.1484,1667.5,623.1484,1675.5,623.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="1680.5" y="624.4951">items: long</text><polygon fill="none" points="1671.5,633.4453,1667.5,639.4453,1675.5,639.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="1680.5" y="640.792">length: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1661.5" x2="2272.5" y1="648.0938" y2="648.0938"/><ellipse cx="1671.5" cy="661.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="1680.5" y="665.0889">SmallDenseItemset(long, int)</text><ellipse cx="1671.5" cy="678.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1680.5" y="681.3857">length(): int</text><ellipse cx="1671.5" cy="694.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="1680.5" y="697.6826">containedIn(SparseNumberVector): boolean</text><ellipse cx="1671.5" cy="710.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="1680.5" y="713.9795">iter(): int</text><ellipse cx="1671.5" cy="726.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1680.5" y="730.2764">iterValid(int): boolean</text><ellipse cx="1671.5" cy="743.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1680.5" y="746.5732">iterAdvance(int): int</text><ellipse cx="1671.5" cy="759.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1680.5" y="762.8701">iterDim(int): int</text><ellipse cx="1671.5" cy="775.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="1680.5" y="779.167">compareTo(Itemset): int</text><ellipse cx="1671.5" cy="792.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="587" x="1680.5" y="795.4639">appendItemsTo(StringBuilder, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text></g></a><!--MD5=[cd63b17fc28cb242a40bd7be69406668]
class elki.itemsetmining.Eclat--><a href="Eclat.html" target="_top" title="Eclat.html" xlink:actuate="onRequest" xlink:href="Eclat.html" xlink:show="new" xlink:title="Eclat.html" xlink:type="simple"><g id="elem_elki.itemsetmining.Eclat"><rect codeLine="153" fill="#F1F1F1" height="194.6719" id="elki.itemsetmining.Eclat" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="501" x="2308.5" y="591.5"/><ellipse cx="2538.25" cy="607.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2541.2188,613.1406 Q2540.6406,613.4375 2540,613.5781 Q2539.3594,613.7344 2538.6563,613.7344 Q2536.1563,613.7344 2534.8281,612.0938 Q2533.5156,610.4375 2533.5156,607.3125 Q2533.5156,604.1875 2534.8281,602.5313 Q2536.1563,600.875 2538.6563,600.875 Q2539.3594,600.875 2540,601.0313 Q2540.6563,601.1875 2541.2188,601.4844 L2541.2188,604.2031 Q2540.5938,603.625 2540,603.3594 Q2539.4063,603.0781 2538.7813,603.0781 Q2537.4375,603.0781 2536.75,604.1563 Q2536.0625,605.2188 2536.0625,607.3125 Q2536.0625,609.4063 2536.75,610.4844 Q2537.4375,611.5469 2538.7813,611.5469 Q2539.4063,611.5469 2540,611.2813 Q2540.5938,611 2541.2188,610.4219 L2541.2188,613.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="2558.75" y="612.3467">Eclat</text><line style="stroke:#181818;stroke-width:0.5;" x1="2309.5" x2="2808.5" y1="623.5" y2="623.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="634.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="2328.5" y="640.4951">LOG: Logging</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="650.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="85" x="2328.5" y="656.792">STAT: String</text><line style="stroke:#181818;stroke-width:0.5;" x1="2309.5" x2="2808.5" y1="664.0938" y2="664.0938"/><ellipse cx="2319.5" cy="677.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="2328.5" y="681.0889">Eclat(double, int, int)</text><ellipse cx="2319.5" cy="694.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="2328.5" y="697.3857">getInputTypeRestriction(): TypeInformation[]</text><ellipse cx="2319.5" cy="710.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="2328.5" y="713.6826">run(Relation&lt;BitVector&gt;): FrequentItemsetsResult</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="723.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="2328.5" y="729.9795">extractItemsets(DBIDs[], int, int, List&lt;Itemset&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="739.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="475" x="2328.5" y="746.2764">extractItemsets(DBIDs, DBIDs[], int[], int, int, int, List&lt;Itemset&gt;): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="756.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="2328.5" y="762.5732">mergeJoin(DBIDs, DBIDs): DBIDs</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2316.5" y="772.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="2328.5" y="778.8701">buildIndex(Relation&lt;BitVector&gt;, int, int): DBIDs[]</text></g></a><!--MD5=[8919ea5cc96c83a09390e5c5e3abdeaa]
class elki.itemsetmining.DenseItemset--><a href="DenseItemset.html" target="_top" title="DenseItemset.html" xlink:actuate="onRequest" xlink:href="DenseItemset.html" xlink:show="new" xlink:title="DenseItemset.html" xlink:type="simple"><g id="elem_elki.itemsetmining.DenseItemset"><rect codeLine="169" fill="#F1F1F1" height="227.2656" id="elki.itemsetmining.DenseItemset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="613" x="22.5" y="575.5"/><ellipse cx="275.75" cy="591.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M278.7188,597.1406 Q278.1406,597.4375 277.5,597.5781 Q276.8594,597.7344 276.1563,597.7344 Q273.6563,597.7344 272.3281,596.0938 Q271.0156,594.4375 271.0156,591.3125 Q271.0156,588.1875 272.3281,586.5313 Q273.6563,584.875 276.1563,584.875 Q276.8594,584.875 277.5,585.0313 Q278.1563,585.1875 278.7188,585.4844 L278.7188,588.2031 Q278.0938,587.625 277.5,587.3594 Q276.9063,587.0781 276.2813,587.0781 Q274.9375,587.0781 274.25,588.1563 Q273.5625,589.2188 273.5625,591.3125 Q273.5625,593.4063 274.25,594.4844 Q274.9375,595.5469 276.2813,595.5469 Q276.9063,595.5469 277.5,595.2813 Q278.0938,595 278.7188,594.4219 L278.7188,597.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="296.25" y="596.3467">DenseItemset</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="634.5" y1="607.5" y2="607.5"/><polygon fill="none" points="33.5,617.1484,29.5,623.1484,37.5,623.1484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="42.5" y="624.4951">items: long[]</text><polygon fill="none" points="33.5,633.4453,29.5,639.4453,37.5,639.4453" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="42.5" y="640.792">length: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="634.5" y1="648.0938" y2="648.0938"/><ellipse cx="33.5" cy="661.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="42.5" y="665.0889">DenseItemset(long[], int)</text><ellipse cx="33.5" cy="678.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="42.5" y="681.3857">length(): int</text><ellipse cx="33.5" cy="694.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="42.5" y="697.6826">containedIn(SparseNumberVector): boolean</text><ellipse cx="33.5" cy="710.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="42.5" y="713.9795">iter(): int</text><ellipse cx="33.5" cy="726.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="42.5" y="730.2764">iterValid(int): boolean</text><ellipse cx="33.5" cy="743.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="42.5" y="746.5732">iterAdvance(int): int</text><ellipse cx="33.5" cy="759.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="42.5" y="762.8701">iterDim(int): int</text><ellipse cx="33.5" cy="775.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="42.5" y="779.167">compareTo(Itemset): int</text><ellipse cx="33.5" cy="792.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="587" x="42.5" y="795.4639">appendItemsTo(StringBuilder, VectorFieldTypeInformation&lt;BitVector&gt;): StringBuilder</text></g></a><!--MD5=[008d82c49f85b4d489e041917c99c847]
class java.lang.Comparable--><g id="elem_java.lang.Comparable"><rect codeLine="211" fill="#F1F1F1" height="64.2969" id="java.lang.Comparable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="934.5" y="49.5"/><ellipse cx="959.85" cy="65.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M955.7719,61.2656 L955.7719,59.1094 L963.1625,59.1094 L963.1625,61.2656 L960.6938,61.2656 L960.6938,69.3438 L963.1625,69.3438 L963.1625,71.5 L955.7719,71.5 L955.7719,69.3438 L958.2406,69.3438 L958.2406,61.2656 L955.7719,61.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="976.15" y="70.3467">Comparable</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="1081.5" y="46.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="1082.5" y="58.6387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="935.5" x2="1086.5" y1="81.5" y2="81.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="935.5" x2="1086.5" y1="89.5" y2="89.5"/><ellipse cx="945.5" cy="103.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="954.5" y="106.4951">compareTo(T): int</text></g><!--MD5=[6617a5df6c1f5d3bd235afcb3413924f]
class elki.Algorithm--><a href="../Algorithm.html" target="_top" title="../Algorithm.html" xlink:actuate="onRequest" xlink:href="../Algorithm.html" xlink:show="new" xlink:title="../Algorithm.html" xlink:type="simple"><g id="elem_elki.Algorithm"><rect codeLine="217" fill="#F1F1F1" height="80.5938" id="elki.Algorithm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="341" x="2863.5" y="41"/><ellipse cx="2995.25" cy="57" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2991.1719,52.7656 L2991.1719,50.6094 L2998.5625,50.6094 L2998.5625,52.7656 L2996.0938,52.7656 L2996.0938,60.8438 L2998.5625,60.8438 L2998.5625,63 L2991.1719,63 L2991.1719,60.8438 L2993.6406,60.8438 L2993.6406,52.7656 L2991.1719,52.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="69" x="3015.75" y="61.8467">Algorithm</text><line style="stroke:#181818;stroke-width:0.5;" x1="2864.5" x2="3203.5" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="2864.5" x2="3203.5" y1="81" y2="81"/><ellipse cx="2874.5" cy="94.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="2883.5" y="97.9951">autorun(Database): Object</text><ellipse cx="2874.5" cy="110.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="315" x="2883.5" y="114.292">getInputTypeRestriction(): TypeInformation[]</text></g></a><!--MD5=[770bfa6cc280aeef7b2c13c2c9df6925]
reverse link java.lang.Comparable to elki.itemsetmining.Itemset--><g id="link_java.lang.Comparable_elki.itemsetmining.Itemset"><path codeLine="183" d="M1011,133.77 C1011,154.74 1011,180.11 1011,205.84 " fill="none" id="java.lang.Comparable-backto-elki.itemsetmining.Itemset" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1004,133.66,1011,113.66,1018,133.66,1004,133.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[96ed69c62345f0719850b509ec6fac68]
reverse link elki.itemsetmining.AbstractFrequentItemsetAlgorithm to elki.itemsetmining.FPGrowth--><g id="link_elki.itemsetmining.AbstractFrequentItemsetAlgorithm_elki.itemsetmining.FPGrowth"><path codeLine="184" d="M3034,445.42 C3034,494.39 3034,552.75 3034,599.96 " fill="none" id="elki.itemsetmining.AbstractFrequentItemsetAlgorithm-backto-elki.itemsetmining.FPGrowth" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3027,445.42,3034,425.42,3041,445.42,3027,445.42" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[81eb4f270f22c2be0b6fef96192bd7ad]
reverse link elki.itemsetmining.FPGrowth.FPNode to elki.itemsetmining.FPGrowth.FPTree--><g id="link_elki.itemsetmining.FPGrowth.FPNode_elki.itemsetmining.FPGrowth.FPTree"><path codeLine="185" d="M2962.06,1135.58 C2943.73,1114.81 2925.11,1093.72 2907.86,1074.18 " fill="none" id="elki.itemsetmining.FPGrowth.FPNode-backto-elki.itemsetmining.FPGrowth.FPTree" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2967.34,1130.98,2975.33,1150.61,2956.85,1140.25,2967.34,1130.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c595923ab7c78c53b0a16b44b96ed438]
link elki.itemsetmining.FPGrowth.FPTree to elki.itemsetmining.FPGrowth.FPNode--><g id="link_elki.itemsetmining.FPGrowth.FPTree_elki.itemsetmining.FPGrowth.FPNode"><path codeLine="187" d="M2855.58,1074.09 C2862.63,1090.59 2871.34,1107.02 2882,1121 C2888.73,1129.83 2896.14,1138.36 2904.03,1146.56 " fill="none" id="elki.itemsetmining.FPGrowth.FPTree-to-elki.itemsetmining.FPGrowth.FPNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2907.94,1150.56,2904.4975,1141.3324,2904.4404,1146.9889,2898.7838,1146.9318,2907.94,1150.56" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="45" x="2883" y="1117.0669">header</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2890.0135" y="1139.8429">*</text></g><!--MD5=[9fc3f6b32f7ffecd7d03b7991c625a84]
reverse link elki.itemsetmining.FPGrowth to elki.itemsetmining.FPGrowth.FPTree--><g id="link_elki.itemsetmining.FPGrowth_elki.itemsetmining.FPGrowth.FPTree"><path codeLine="186" d="M2964.18,790.62 C2940.46,824.8 2914.16,862.72 2891.16,895.85 " fill="none" id="elki.itemsetmining.FPGrowth-backto-elki.itemsetmining.FPGrowth.FPTree" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2968.2284" cy="784.782" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2963.6668" x2="2972.79" y1="791.3541" y2="778.21"/><line style="stroke:#181818;stroke-width:1.0;" x1="2961.6564" x2="2974.8005" y1="780.2205" y2="789.3436"/></g><!--MD5=[4ce68ab9b28c4f0e6a5baf975b96d5a0]
reverse link elki.itemsetmining.FPGrowth.FPTree to elki.itemsetmining.FPGrowth.FPTree.Collector--><g id="link_elki.itemsetmining.FPGrowth.FPTree_elki.itemsetmining.FPGrowth.FPTree.Collector"><path codeLine="188" d="M2792.74,1088.37 C2774.15,1139.44 2752.99,1197.58 2740.33,1232.36 " fill="none" id="elki.itemsetmining.FPGrowth.FPTree-backto-elki.itemsetmining.FPGrowth.FPTree.Collector" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="2795.1587" cy="1081.6957" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="2792.4174" x2="2797.9" y1="1089.2114" y2="1074.18"/><line style="stroke:#181818;stroke-width:1.0;" x1="2787.643" x2="2802.6744" y1="1078.9544" y2="1084.437"/></g><!--MD5=[42c3629621bc1f5538a66a11233260f7]
reverse link elki.itemsetmining.FPGrowth to elki.itemsetmining.FPGrowth.FPNode--><g id="link_elki.itemsetmining.FPGrowth_elki.itemsetmining.FPGrowth.FPNode"><path codeLine="189" d="M3064.65,792.82 C3072.99,825.5 3080.85,861.99 3085,896 C3095.37,981.06 3092.12,1077.97 3086.67,1150.91 " fill="none" id="elki.itemsetmining.FPGrowth-backto-elki.itemsetmining.FPGrowth.FPNode" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3062.8262" cy="785.8392" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3064.8524" x2="3060.8" y1="793.5783" y2="778.1"/><line style="stroke:#181818;stroke-width:1.0;" x1="3055.087" x2="3070.5654" y1="787.8654" y2="783.813"/></g><!--MD5=[618219c94d756cc0265bd4da0a32bbdc]
link elki.itemsetmining.FPGrowth.FPNode to elki.itemsetmining.FPGrowth.FPNode--><g id="link_elki.itemsetmining.FPGrowth.FPNode_elki.itemsetmining.FPGrowth.FPNode"><path codeLine="190" d="M3272.18,1253.23 C3293.37,1255.4 3307,1259.16 3307,1264.5 C3307,1269.38 3295.61,1272.94 3277.47,1275.18 " fill="none" id="elki.itemsetmining.FPGrowth.FPNode-to-elki.itemsetmining.FPGrowth.FPNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3272.18,1275.77,3281.5695,1278.7428,3277.1489,1275.2131,3280.6785,1270.7925,3272.18,1275.77" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="42" x="3313" y="1261.5669">parent</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="3314" y="1276.6997">sibling</text></g><!--MD5=[618219c94d756cc0265bd4da0a32bbdc]
link elki.itemsetmining.FPGrowth.FPNode to elki.itemsetmining.FPGrowth.FPNode--><g id="link_elki.itemsetmining.FPGrowth.FPNode_elki.itemsetmining.FPGrowth.FPNode"><path codeLine="191" d="M3272.08,1237.87 C3322.62,1239.73 3361,1248.61 3361,1264.5 C3361,1279.83 3325.27,1288.63 3277.36,1290.91 " fill="none" id="elki.itemsetmining.FPGrowth.FPNode-to-elki.itemsetmining.FPGrowth.FPNode-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3272.08,1291.13,3281.243,1294.741,3277.0754,1290.9159,3280.9005,1286.7483,3272.08,1291.13" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="50" x="3398.5" y="1261.5669">children</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="113" x="3367" y="1276.6997">EMPTY_CHILDREN</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="3279.9152" y="1288.9416">*</text></g><!--MD5=[09c284514e02dd4587e4971fa67713d0]
reverse link elki.itemsetmining.FPGrowth.FPNode to elki.itemsetmining.FPGrowth.FPNode.Translator--><g id="link_elki.itemsetmining.FPGrowth.FPNode_elki.itemsetmining.FPGrowth.FPNode.Translator"><path codeLine="192" d="M3075,1393.42 C3075,1410.11 3075,1425.83 3075,1438.63 " fill="none" id="elki.itemsetmining.FPGrowth.FPNode-backto-elki.itemsetmining.FPGrowth.FPNode.Translator" style="stroke:#181818;stroke-width:1.0;"/><ellipse cx="3075" cy="1386.22" fill="#FFFFFF" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="3075" x2="3075" y1="1394.22" y2="1378.22"/><line style="stroke:#181818;stroke-width:1.0;" x1="3067" x2="3083" y1="1386.22" y2="1386.22"/></g><!--MD5=[cf38a84e5fc3bef4bdaf6e8b6a3935b1]
reverse link elki.itemsetmining.AbstractFrequentItemsetAlgorithm to elki.itemsetmining.APRIORI--><g id="link_elki.itemsetmining.AbstractFrequentItemsetAlgorithm_elki.itemsetmining.APRIORI"><path codeLine="195" d="M3211.5,434.4 C3277.31,467.55 3353.75,506.05 3426.89,542.88 " fill="none" id="elki.itemsetmining.AbstractFrequentItemsetAlgorithm-backto-elki.itemsetmining.APRIORI" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3207.95,440.45,3193.23,425.2,3214.25,427.95,3207.95,440.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1d483a51c183c88887c4b7ed4284cd76]
reverse link elki.itemsetmining.Itemset to elki.itemsetmining.SparseItemset--><g id="link_elki.itemsetmining.Itemset_elki.itemsetmining.SparseItemset"><path codeLine="198" d="M926.71,499.6 C912.8,525.12 898.61,551.15 885.39,575.39 " fill="none" id="elki.itemsetmining.Itemset-backto-elki.itemsetmining.SparseItemset" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="920.57,496.25,936.29,482.04,932.86,502.95,920.57,496.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cd94a64d2811f2d9cbdd7219fdea6b1b]
reverse link elki.Algorithm to elki.itemsetmining.AbstractFrequentItemsetAlgorithm--><g id="link_elki.Algorithm_elki.itemsetmining.AbstractFrequentItemsetAlgorithm"><path codeLine="199" d="M3034,142.09 C3034,177.88 3034,223.87 3034,262.82 " fill="none" id="elki.Algorithm-backto-elki.itemsetmining.AbstractFrequentItemsetAlgorithm" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="3027,142.06,3034,122.06,3041,142.06,3027,142.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3f09d248b16a6daff36ba8db8ae57c9b]
reverse link elki.itemsetmining.Itemset to elki.itemsetmining.OneItemset--><g id="link_elki.itemsetmining.Itemset_elki.itemsetmining.OneItemset"><path codeLine="202" d="M1147.51,497.03 C1171.17,523.37 1195.38,550.33 1217.88,575.39 " fill="none" id="elki.itemsetmining.Itemset-backto-elki.itemsetmining.OneItemset" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1142.21,501.6,1134.06,482.04,1152.63,492.25,1142.21,501.6" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e14542763cd8c929dd8bf050788df428]
reverse link elki.itemsetmining.Itemset to elki.itemsetmining.SmallDenseItemset--><g id="link_elki.itemsetmining.Itemset_elki.itemsetmining.SmallDenseItemset"><path codeLine="203" d="M1337.01,439.14 C1436.1,469.89 1544.74,505.77 1643,543 C1669.36,552.99 1696.65,564.04 1723.69,575.45 " fill="none" id="elki.itemsetmining.Itemset-backto-elki.itemsetmining.SmallDenseItemset" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1334.69,445.75,1317.65,433.16,1338.83,432.37,1334.69,445.75" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d9c161290ecbfddb5b4060cdeebad14c]
reverse link elki.itemsetmining.AbstractFrequentItemsetAlgorithm to elki.itemsetmining.Eclat--><g id="link_elki.itemsetmining.AbstractFrequentItemsetAlgorithm_elki.itemsetmining.Eclat"><path codeLine="204" d="M2906.46,437.1 C2840.34,484.84 2759.63,543.12 2692.65,591.49 " fill="none" id="elki.itemsetmining.AbstractFrequentItemsetAlgorithm-backto-elki.itemsetmining.Eclat" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2902.62,431.24,2922.93,425.2,2910.82,442.59,2902.62,431.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a07c3eb0b3a9608af12da8eed64d49d3]
reverse link elki.itemsetmining.Itemset to elki.itemsetmining.DenseItemset--><g id="link_elki.itemsetmining.Itemset_elki.itemsetmining.DenseItemset"><path codeLine="207" d="M720.39,491.16 C664.34,519.35 606.43,548.47 552.91,575.39 " fill="none" id="elki.itemsetmining.Itemset-backto-elki.itemsetmining.DenseItemset" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="717.5,484.77,738.52,482.04,723.79,497.28,717.5,484.77" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="11.6406" style="stroke:none;stroke-width:1.0;" width="186" x="1997" y="1525"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="186" x="1997" y="1534.2822">UMLDoclet 2.0.19, PlantUML 1.2022.8</text><!--MD5=[3e18dd3c20010969ef5ff807ea930c0f]
@startuml
    remove .*\.(Instance|Par|Parameterizer|Factory)$
    namespace elki.itemsetmining {

        abstract class Itemset [[Itemset.html]] {
            ~support: int
            +increaseSupport(): int
            +getSupport(): int
            +containedIn(SparseNumberVector): boolean
            {abstract} +length(): int
            {static} +toBitset(Itemset, long[]): long[]
            {abstract} +iter(): int
            {abstract} +iterAdvance(int): int
            {abstract} +iterValid(int): boolean
            {abstract} +iterDim(int): int
            +compareTo(Itemset): int
            {static} #compareLexicographical(Itemset, Itemset): int
            +appendTo(StringBuilder, VectorFieldTypeInformation<BitVector>): StringBuilder
            +appendItemsTo(StringBuilder, VectorFieldTypeInformation<BitVector>): StringBuilder
        }

        class FPGrowth [[FPGrowth.html]] {
            {static} -LOG: Logging
            {static} -STAT: String
            +FPGrowth(double, int, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<BitVector>): FrequentItemsetsResult
            -countItemSupport(Relation<BitVector>, int): int[]
            -buildFPTree(Relation<BitVector>, int[], int): FPTree
            -buildIndex(int[], int[], int): int[]
        }

        class elki.itemsetmining.FPGrowth.FPTree [[FPGrowth.FPTree.html]] {
            ~nodes: int
            +FPTree(int)
            +insert(int[], int, int, int): void
            +newNode(FPNode, int): FPNode
            +extract(int, int, int, boolean, Collector): void
            -extract(int, int, int, int, int[], int, int[], int[], boolean, Collector): void
            -extractLinear(int, int, int, int, int[], int, int[], Collector): void
            +logStatistics(): void
        }

        interface elki.itemsetmining.FPGrowth.FPTree.Collector [[FPGrowth.FPTree.Collector.html]] {
            {abstract} +collect(int, int[], int, int): void
        }

        class elki.itemsetmining.FPGrowth.FPNode [[FPGrowth.FPNode.html]] {
            ~key: int
            ~count: int
            ~numchildren: int
            ~INITIAL_SIZE: int
            {static} -SPACES: char[]
            +FPNode(FPNode, int)
            +insert(FPTree, int[], int, int, int): void
            -ensureSize(): void
            +appendTo(StringBuilder, Translator): StringBuilder
            -appendTo(StringBuilder, Translator, int): StringBuilder
            +reduceMemory(): void
        }

        interface elki.itemsetmining.FPGrowth.FPNode.Translator [[FPGrowth.FPNode.Translator.html]] {
            {abstract} +appendTo(StringBuilder, int): StringBuilder
        }

        class elki.itemsetmining.FPGrowth.Par [[FPGrowth.Par.html]] {
            +make(): FPGrowth
        }

        class APRIORI [[APRIORI.html]] {
            {static} -LOG: Logging
            -STAT: String
            +APRIORI(double, int, int)
            +APRIORI(double)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<BitVector>): FrequentItemsetsResult
            #buildFrequentOneItemsets(Relation<? extends SparseFeatureVector<?>>, int, int): List<OneItemset>
            #buildFrequentTwoItemsets(List<OneItemset>, Relation<BitVector>, int, int, DBIDs, ArrayModifiableDBIDs): List<SparseItemset>
            #aprioriGenerate(List<? extends Itemset>, int, int): List<Itemset>
            #frequentItemsets(List<? extends Itemset>, Relation<BitVector>, int, DBIDs, ArrayModifiableDBIDs, int): List<? extends Itemset>
            #frequentItemsetsSparse(List<SparseItemset>, Relation<BitVector>, int, DBIDs, ArrayModifiableDBIDs, int): List<SparseItemset>
            -initializeSearchItemset(BitVector, int[], int[]): boolean
            -nextSearchItemset(BitVector, int[], int[]): boolean
            -binarySearch(List<SparseItemset>, SparseItemset, int, int): int
            -debugDumpCandidates(StringBuilder, List<? extends Itemset>, VectorFieldTypeInformation<BitVector>): StringBuilder
        }

        class elki.itemsetmining.APRIORI.Par [[APRIORI.Par.html]] {
            +make(): APRIORI
        }

        class SparseItemset [[SparseItemset.html]] {
            ~indices: int[]
            +SparseItemset(int[])
            +SparseItemset(int[], int)
            +SparseItemset(OneItemset, OneItemset)
            +length(): int
            +iter(): int
            +iterValid(int): boolean
            +iterAdvance(int): int
            +iterDim(int): int
            +compareTo(Itemset): int
            +prefixTest(SparseItemset): boolean
        }

        abstract class AbstractFrequentItemsetAlgorithm [[AbstractFrequentItemsetAlgorithm.html]] {
            -minsupp: double
            #minlength: int
            #maxlength: int
            +AbstractFrequentItemsetAlgorithm(double, int, int)
            +AbstractFrequentItemsetAlgorithm(double)
            +autorun(Database): FrequentItemsetsResult
            +getMinimumSupport(int): int
        }

        abstract class elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par [[AbstractFrequentItemsetAlgorithm.Par.html]] {
            {static} +MINSUPP_ID: OptionID
            {static} +MINLENGTH_ID: OptionID
            {static} +MAXLENGTH_ID: OptionID
            #minsupp: double
            #minlength: int
            #maxlength: int
            +configure(Parameterization): void
        }

        class OneItemset [[OneItemset.html]] {
            ~item: int
            +OneItemset(int)
            +OneItemset(int, int)
            +length(): int
            +containedIn(SparseNumberVector): boolean
            +iter(): int
            +iterValid(int): boolean
            +iterAdvance(int): int
            +iterDim(int): int
            +compareTo(Itemset): int
            +appendItemsTo(StringBuilder, VectorFieldTypeInformation<BitVector>): StringBuilder
        }

        class SmallDenseItemset [[SmallDenseItemset.html]] {
            ~items: long
            ~length: int
            +SmallDenseItemset(long, int)
            +length(): int
            +containedIn(SparseNumberVector): boolean
            +iter(): int
            +iterValid(int): boolean
            +iterAdvance(int): int
            +iterDim(int): int
            +compareTo(Itemset): int
            +appendItemsTo(StringBuilder, VectorFieldTypeInformation<BitVector>): StringBuilder
        }

        class Eclat [[Eclat.html]] {
            {static} -LOG: Logging
            {static} -STAT: String
            +Eclat(double, int, int)
            +getInputTypeRestriction(): TypeInformation[]
            +run(Relation<BitVector>): FrequentItemsetsResult
            -extractItemsets(DBIDs[], int, int, List<Itemset>): void
            -extractItemsets(DBIDs, DBIDs[], int[], int, int, int, List<Itemset>): void
            -mergeJoin(DBIDs, DBIDs): DBIDs
            -buildIndex(Relation<BitVector>, int, int): DBIDs[]
        }

        class elki.itemsetmining.Eclat.Par [[Eclat.Par.html]] {
            +make(): Eclat
        }

        class DenseItemset [[DenseItemset.html]] {
            ~items: long[]
            ~length: int
            +DenseItemset(long[], int)
            +length(): int
            +containedIn(SparseNumberVector): boolean
            +iter(): int
            +iterValid(int): boolean
            +iterAdvance(int): int
            +iterDim(int): int
            +compareTo(Itemset): int
            +appendItemsTo(StringBuilder, VectorFieldTypeInformation<BitVector>): StringBuilder
        }

        java.lang.Comparable <|.. Itemset
        AbstractFrequentItemsetAlgorithm <|- - FPGrowth
        elki.itemsetmining.FPGrowth.FPNode <|- - elki.itemsetmining.FPGrowth.FPTree
        FPGrowth +- - elki.itemsetmining.FPGrowth.FPTree
        elki.itemsetmining.FPGrowth.FPTree - -> "*" elki.itemsetmining.FPGrowth.FPNode: header
        elki.itemsetmining.FPGrowth.FPTree +- - elki.itemsetmining.FPGrowth.FPTree.Collector
        FPGrowth +- - elki.itemsetmining.FPGrowth.FPNode
        elki.itemsetmining.FPGrowth.FPNode - -> elki.itemsetmining.FPGrowth.FPNode: parent\nsibling
        elki.itemsetmining.FPGrowth.FPNode - -> "*" elki.itemsetmining.FPGrowth.FPNode: children\nEMPTY_CHILDREN
        elki.itemsetmining.FPGrowth.FPNode +- - elki.itemsetmining.FPGrowth.FPNode.Translator
        elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par <|- - elki.itemsetmining.FPGrowth.Par
        FPGrowth +- - elki.itemsetmining.FPGrowth.Par
        AbstractFrequentItemsetAlgorithm <|- - APRIORI
        elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par <|- - elki.itemsetmining.APRIORI.Par
        APRIORI +- - elki.itemsetmining.APRIORI.Par
        Itemset <|- - SparseItemset
        elki.Algorithm <|.. AbstractFrequentItemsetAlgorithm
        elki.utilities.optionhandling.Parameterizer <|.. elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par
        AbstractFrequentItemsetAlgorithm +- - elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par
        Itemset <|- - OneItemset
        Itemset <|- - SmallDenseItemset
        AbstractFrequentItemsetAlgorithm <|- - Eclat
        elki.itemsetmining.AbstractFrequentItemsetAlgorithm.Par <|- - elki.itemsetmining.Eclat.Par
        Eclat +- - elki.itemsetmining.Eclat.Par
        Itemset <|- - DenseItemset
    }

    namespace java.lang {
        interface Comparable<T> {
            {abstract} +compareTo(T): int
        }
    }

    namespace elki {
        interface Algorithm [[../Algorithm.html]] {
            +autorun(Database): Object
            {abstract} +getInputTypeRestriction(): TypeInformation[]
        }
    }

    namespace elki.utilities.optionhandling {
        interface Parameterizer [[../utilities/optionhandling/Parameterizer.html]] {
            +configure(Parameterization): void
            {abstract} +make(): Object
        }
    }

    center footer UMLDoclet 2.0.19, PlantUML 1.2022.8
@enduml

PlantUML version 1.2022.8(Sun Sep 25 11:00:33 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>