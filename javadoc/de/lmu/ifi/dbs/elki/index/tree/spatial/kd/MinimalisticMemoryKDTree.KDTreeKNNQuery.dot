#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-60-g0e99a6 (http://www.spinellis.gr/umlgraph/)
#

digraph G {
	graph [fontnames="svg"]
	edge [fontname="Roboto",fontsize=7,labelfontname="Roboto",labelfontsize=7,color="black"];
	node [fontname="Roboto",fontcolor="black",fontsize=8,shape=plaintext,margin=0,width=0,height=0];
	nodesep=0.15;
	ranksep=0.25;
	rankdir=LR;
	// de.lmu.ifi.dbs.elki.distance.distancefunction.Norm<O>
	c6964130 [label=<<table title="de.lmu.ifi.dbs.elki.distance.distancefunction.Norm" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="../../../../distance/distancefunction/Norm.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
		<tr><td align="center" balign="center"> <font face="Roboto">Norm</font> </td></tr>
		<tr><td align="center" balign="center"> <font face="Roboto" point-size="7.0">de.lmu.ifi.dbs.elki.distance.distancefunction</font> </td></tr>
		</table></td></tr>
		</table>>, URL="../../../../distance/distancefunction/Norm.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O>
	c6965223 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="../../../../database/query/knn/AbstractDistanceKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto"><i>AbstractDistanceKNNQuery</i></font> </td></tr>
		<tr><td align="center" balign="center"> <font face="Roboto" point-size="7.0">de.lmu.ifi.dbs.elki.database.query.knn</font> </td></tr>
		</table></td></tr>
		</table>>, URL="../../../../database/query/knn/AbstractDistanceKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector>
	c6965647 [label=<<table title="de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="MinimalisticMemoryKDTree.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">MinimalisticMemoryKDTree</font> </td></tr>
		</table></td></tr>
		</table>>, URL="MinimalisticMemoryKDTree.html"];
	// de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector>.KDTreeKNNQuery
	c6965649 [label=<<table title="de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree.KDTreeKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" bgcolor="lemonChiffon" href="MinimalisticMemoryKDTree.KDTreeKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">MinimalisticMemoryKDTree.KDTreeKNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="MinimalisticMemoryKDTree.KDTreeKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector> has de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector>.KDTreeKNNQuery
	c6965647 -> c6965649 [arrowhead=none,arrowtail=ediamond,dir=back,weight=4];
	// de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector>.KDTreeKNNQuery extends de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O>
	c6965223 -> c6965649 [arrowtail=empty,dir=back,weight=10];
	// de.lmu.ifi.dbs.elki.index.tree.spatial.kd.MinimalisticMemoryKDTree<O extends de.lmu.ifi.dbs.elki.data.NumberVector>.KDTreeKNNQuery navassoc de.lmu.ifi.dbs.elki.distance.distancefunction.Norm<O>
	c6965649 -> c6964130 [arrowhead=open,weight=1];
}

