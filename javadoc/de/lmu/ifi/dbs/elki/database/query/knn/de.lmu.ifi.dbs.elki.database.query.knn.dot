#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-60-g0e99a6 (http://www.spinellis.gr/umlgraph/)
#

digraph G {
	graph [fontnames="svg"]
	edge [fontname="Roboto",fontsize=7,labelfontname="Roboto",labelfontsize=7,color="black"];
	node [fontname="Roboto",fontcolor="black",fontsize=8,shape=plaintext,margin=0,width=0,height=0];
	nodesep=0.15;
	ranksep=0.25;
	rankdir=LR;
	// de.lmu.ifi.dbs.elki.database.query.knn.KNNQuery<O>
	c365582 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.KNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" bgcolor="LemonChiffon" href="KNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
		<tr><td align="center" balign="center"> <font face="Roboto">KNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="KNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanPrimitiveDistanceKNNQuery<O>
	c366648 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.LinearScanPrimitiveDistanceKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="LinearScanPrimitiveDistanceKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">LinearScanPrimitiveDistanceKNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="LinearScanPrimitiveDistanceKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanDistanceKNNQuery<O>
	c366649 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.LinearScanDistanceKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="LinearScanDistanceKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">LinearScanDistanceKNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="LinearScanDistanceKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanEuclideanDistanceKNNQuery<O extends de.lmu.ifi.dbs.elki.data.NumberVector>
	c366650 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.LinearScanEuclideanDistanceKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="LinearScanEuclideanDistanceKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">LinearScanEuclideanDistanceKNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="LinearScanEuclideanDistanceKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O>
	c366651 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="AbstractDistanceKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto"><i>AbstractDistanceKNNQuery</i></font> </td></tr>
		</table></td></tr>
		</table>>, URL="AbstractDistanceKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.PreprocessorKNNQuery<O>
	c366955 [label=<<table title="de.lmu.ifi.dbs.elki.database.query.knn.PreprocessorKNNQuery" border="0" cellborder="1" cellspacing="0" cellpadding="2" href="PreprocessorKNNQuery.html" target="_parent">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
		<tr><td align="center" balign="center"> <font face="Roboto">PreprocessorKNNQuery</font> </td></tr>
		</table></td></tr>
		</table>>, URL="PreprocessorKNNQuery.html"];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanPrimitiveDistanceKNNQuery<O> extends de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O>
	c366651 -> c366648 [arrowtail=empty,dir=back,weight=10];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanDistanceKNNQuery<O> extends de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O>
	c366651 -> c366649 [arrowtail=empty,dir=back,weight=10];
	// de.lmu.ifi.dbs.elki.database.query.knn.LinearScanEuclideanDistanceKNNQuery<O extends de.lmu.ifi.dbs.elki.data.NumberVector> extends de.lmu.ifi.dbs.elki.database.query.knn.LinearScanPrimitiveDistanceKNNQuery<O>
	c366648 -> c366650 [arrowtail=empty,dir=back,weight=10];
	// de.lmu.ifi.dbs.elki.database.query.knn.AbstractDistanceKNNQuery<O> implements de.lmu.ifi.dbs.elki.database.query.knn.KNNQuery<O>
	c365582 -> c366651 [arrowtail=empty,style=dashed,dir=back,weight=9];
	// de.lmu.ifi.dbs.elki.database.query.knn.PreprocessorKNNQuery<O> implements de.lmu.ifi.dbs.elki.database.query.knn.KNNQuery<O>
	c365582 -> c366955 [arrowtail=empty,style=dashed,dir=back,weight=9];
}

